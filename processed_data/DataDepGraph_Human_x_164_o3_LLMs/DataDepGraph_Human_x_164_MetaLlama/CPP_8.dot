digraph "DDG for '_Z11sum_productSt6vectorIiSaIiEE' function" {
 Node0x7f6a5a8d9000[shape=record, label="  %3 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x7f6a5a8d9100[shape=record, label="  %4 = load i32*, i32** %3, align 8, !tbaa !3"];
 Node0x7f6a5a8d9200[shape=record, label="  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x7f6a5a8d9300[shape=record, label="  %6 = load i32*, i32** %5, align 8, !tbaa !8"];
 Node0x7f6a5a8d9400[shape=record, label="  %7 = ptrtoint i32* %4 to i64"];
 Node0x7f6a5a8d9500[shape=record, label="  %8 = ptrtoint i32* %6 to i64"];
 Node0x7f6a5a8d9600[shape=record, label="  %9 = sub i64 %7, %8"];
 Node0x7f6a5a8d9700[shape=record, label="  %10 = icmp eq i64 %9, 0"];
 Node0x7f6a5a8d9800[shape=record, label="  br i1 %10, label %91, label %11"];
 Node0x7f6a5a8d9900[shape=record, label="  %12 = ashr exact i64 %9, 2"];
 Node0x7f6a5a8d9a00[shape=record, label="  %13 = call i64 @llvm.umax.i64(i64 %12, i64 1)"];
 Node0x7f6a5a8d9b00[shape=record, label="  %14 = icmp ult i64 %13, 8"];
 Node0x7f6a5a8d9c00[shape=record, label="  br i1 %14, label %87, label %15"];
 Node0x7f6a5a8d9d00[shape=record, label="  %16 = and i64 %13, -8"];
 Node0x7f6a5a8d9e00[shape=record, label="  %17 = add i64 %16, -8"];
 Node0x7f6a5a8d9f00[shape=record, label="  %18 = lshr exact i64 %17, 3"];
 Node0x7f6a5a8da000[shape=record, label="  %19 = add nuw nsw i64 %18, 1"];
 Node0x7f6a5a8da100[shape=record, label="  %20 = and i64 %19, 1"];
 Node0x7f6a5a8da200[shape=record, label="  %21 = icmp eq i64 %17, 0"];
 Node0x7f6a5a8da300[shape=record, label="  br i1 %21, label %55, label %22"];
 Node0x7f6a5a8da400[shape=record, label="  %23 = and i64 %19, 4611686018427387902"];
 Node0x7f6a5a8da500[shape=record, label="  br label %24"];
 Node0x7f6a5a8da600[shape=record, label="  %25 = phi i64 [ 0, %22 ], [ %52, %24 ]"];
 Node0x7f6a5a8da700[shape=record, label="  %26 = phi <4 x i32> [ zeroinitializer, %22 ], [ %48, %24 ]"];
 Node0x7f6a5a8da800[shape=record, label="  %27 = phi <4 x i32> [ zeroinitializer, %22 ], [ %49, %24 ]"];
 Node0x7f6a5a8da900[shape=record, label="  %28 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %50, %24 ]"];
 Node0x7f6a5a8daa00[shape=record, label="  %29 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %51, %24 ]"];
 Node0x7f6a5a8dab00[shape=record, label="  %30 = phi i64 [ %23, %22 ], [ %53, %24 ]"];
 Node0x7f6a5a8dac00[shape=record, label="  %31 = getelementptr inbounds i32, i32* %6, i64 %25"];
 Node0x7f6a5a8dad00[shape=record, label="  %32 = bitcast i32* %31 to <4 x i32>*"];
 Node0x7f6a5a8dae00[shape=record, label="  %33 = load <4 x i32>, <4 x i32>* %32, align 4, !tbaa !9"];
 Node0x7f6a5a8daf00[shape=record, label="  %34 = getelementptr inbounds i32, i32* %31, i64 4"];
 Node0x7f6a5a8db000[shape=record, label="  %35 = bitcast i32* %34 to <4 x i32>*"];
 Node0x7f6a5a8db100[shape=record, label="  %36 = load <4 x i32>, <4 x i32>* %35, align 4, !tbaa !9"];
 Node0x7f6a5a8db200[shape=record, label="  %37 = add <4 x i32> %33, %26"];
 Node0x7f6a5a8db300[shape=record, label="  %38 = add <4 x i32> %36, %27"];
 Node0x7f6a5a8db400[shape=record, label="  %39 = mul <4 x i32> %33, %28"];
 Node0x7f6a5a8db500[shape=record, label="  %40 = mul <4 x i32> %36, %29"];
 Node0x7f6a5a8db600[shape=record, label="  %41 = or i64 %25, 8"];
 Node0x7f6a5a8db700[shape=record, label="  %42 = getelementptr inbounds i32, i32* %6, i64 %41"];
 Node0x7f6a5a8db800[shape=record, label="  %43 = bitcast i32* %42 to <4 x i32>*"];
 Node0x7f6a5a8db900[shape=record, label="  %44 = load <4 x i32>, <4 x i32>* %43, align 4, !tbaa !9"];
 Node0x7f6a5a8dba00[shape=record, label="  %45 = getelementptr inbounds i32, i32* %42, i64 4"];
 Node0x7f6a5a8dbb00[shape=record, label="  %46 = bitcast i32* %45 to <4 x i32>*"];
 Node0x7f6a5a8dbc00[shape=record, label="  %47 = load <4 x i32>, <4 x i32>* %46, align 4, !tbaa !9"];
 Node0x7f6a5a8dbd00[shape=record, label="  %48 = add <4 x i32> %44, %37"];
 Node0x7f6a5a8dbe00[shape=record, label="  %49 = add <4 x i32> %47, %38"];
 Node0x7f6a5a8dbf00[shape=record, label="  %50 = mul <4 x i32> %44, %39"];
 Node0x7f6a5a8dc000[shape=record, label="  %51 = mul <4 x i32> %47, %40"];
 Node0x7f6a5a8dc100[shape=record, label="  %52