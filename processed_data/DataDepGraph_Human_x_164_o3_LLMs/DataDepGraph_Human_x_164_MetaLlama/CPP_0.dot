digraph "DFG for '_Z18has_close_elementsSt6vectorIfSaIfEEf' function" {
 Node0x7f6c6f6c6f70[shape=record, label="  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x7f6c6f6c6fa0[shape=record, label="  %4 = load float*, float** %3, align 8"];
 Node0x7f6c6f6c6fd0[shape=record, label="  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x7f6c6f6c7000[shape=record, label="  %6 = load float*, float** %5, align 8"];
 Node0x7f6c6f6c7030[shape=record, label="  %7 = ptrtoint float* %4 to i64"];
 Node0x7f6c6f6c7060[shape=record, label="  %8 = ptrtoint float* %6 to i64"];
 Node0x7f6c6f6c7090[shape=record, label="  %9 = sub i64 %7, %8"];
 Node0x7f6c6f6c70c0[shape=record, label="  %10 = ashr exact i64 %9, 2"];
 Node0x7f6c6f6c70f0[shape=record, label="  %11 = icmp eq i64 %9, 0"];
 Node0x7f6c6f6c7120[shape=record, label="  br i1 %11, label %36, label %12"];
 Node0x7f6c6f6c7150[shape=record, label="  %13 = call i64 @llvm.umax.i64(i64 %10, i64 1)"];
 Node0x7f6c6f6c7180[shape=record, label="  br label %17"];
 Node0x7f6c6f6c71b0[shape=record, label="  %15 = add i64 %19, 1"];
 Node0x7f6c6f6c71e0[shape=record, label="  %16 = icmp eq i64 %21, %13"];
 Node0x7f6c6f6c7210[shape=record, label="  br i1 %16, label %36, label %17"];
 Node0x7f6c6f6c7240[shape=record, label="  %18 = phi i64 [ 0, %12 ], [ %21, %14 ]"];
 Node0x7f6c6f6c7270[shape=record, label="  %19 = phi i64 [ 1, %12 ], [ %15, %14 ]"];
 Node0x7f6c6f6c72a0[shape=record, label="  %20 = phi i1 [ true, %12 ], [ %22, %14 ]"];
 Node0x7f6c6f6c72d0[shape=record, label="  %21 = add nuw i64 %18, 1"];
 Node0x7f6c6f6c7300[shape=record, label="  %22 = icmp ugt i64 %10, %21"];
 Node0x7f6c6f6c7330[shape=record, label="  br i1 %22, label %23, label %14"];
 Node0x7f6c6f6c7360[shape=record, label="  %24 = getelementptr inbounds float, float* %6, i64 %18"];
 Node0x7f6c6f6c7390[shape=record, label="  %25 = load float, float* %24, align 4"];
 Node0x7f6c6f6c73c0[shape=record, label="  br label %28"];
 Node0x7f6c6f6c73f0[shape=record, label="  %27 = icmp ugt i64 %10, %35"];
 Node0x7f6c6f6c7420[shape=record, label="  br i1 %27, label %28, label %14"];
 Node0x7f6c6f6c7450[shape=record, label="  %29 = phi i64 [ %19, %23 ], [ %35, %26 ]"];
 Node0x7f6c6f6c7480[shape=record, label="  %30 = getelementptr inbounds float, float* %6, i64 %29"];
 Node0x7f6c6f6c74b0[shape=record, label="  %31 = load float, float* %30, align 4"];
 Node0x7f6c6f6c74e0[shape=record, label="  %32 = fsub float %25, %31"];
 Node0x7f6c6f6c7510[shape=record, label="  %33 = tail call float @llvm.fabs.f32(float %32)"];
 Node0x7f6c6f6c7540[shape=record, label="  %34 = fcmp olt float %33, %1"];
 Node0x7f6c6f6c7570[shape=record, label="  %35 = add i64 %29, 1"];
 Node0x7f6c6f6c75a0[shape=record, label="  br i1 %34, label %36, label %26"];
 Node0x7f6c6f6c75d0[shape=record, label="  %37 = phi i1 [ false, %2 ], [ %20, %28 ], [ %22, %14 ]"];
 Node0x7f6c6f6c7600[shape=record, label="  ret i1 %37"];
 Node0x7f6c6f6c6f70 -> Node0x7f6c6f6c6fa0
 Node0x7f6c6f6c6fa0 -> Node0x7f6c6f6c6fd0
 Node0x7f6c6f6c6fd0 -> Node0x7f6c6f6c7000
 Node0x7f6c6f6c7000 -> Node0x7f6c6f6c7030
 Node0x7f6c6f6c7030 -> Node0x7f6c6f6c7060
 Node0x7f6c6f6c7060 -> Node0x7f6c6f6c7090
 Node0x7f6c6f6c7090 -> Node0x7f6c6f6c70c0
 Node0x7f6c6f6c70c0 -> Node0x7f6c6f6c70f0
 Node0x7f6c6f6c70f0 -> Node0x7f6c6f6c7120
 Node0x7f6c6f6c7120 -> Node0x7f6c6f6c7150
 Node0x7f6c6f6c7150 -> Node0x7f6c6f6c7180
 Node0x7f6c6f6c7180 -> Node0x7f6c6f6c71b0
 Node0x7f6c6f6c71b0 -> Node0x7f6c6f6c71e0
 Node0x7f6c6f6c71e0 -> Node0x7f6c6f6c7210
 Node0x7f6c6f6c7210 -> Node0x7f6c6f6c7240
 Node0x7f6c6f6c7240 -> Node0x7f6c6f6c7270
 Node0x7f6c6f6c7270 -> Node0x7f6c6f6c72a0
 Node0x7f6c6f6c72a0 -> Node0x7f6c6f6c72d0
 Node0x7f6c6f6c72d0 -> Node0x7f6c6f6c7300
 Node0x7f6c6f6c7300 -> Node0x7f6c6f6c7330
 Node0x7f6c6f6c7330 -> Node0x7f6c6f6c7360
 Node0x7f6c6f6c7360 -> Node0x7f6c6f6c7390
 Node0x7f6c6f6