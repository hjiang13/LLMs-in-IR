digraph "DFG for '_Z11will_it_flySt6vectorIiSaIiEEi' function" {
 Node0x7f6b8d05a370[shape=record, label="  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x7f6b8d05a4a0[shape=record, label="  %4 = load i32*, i32** %3, align 8, !tbaa !3"];
 Node0x7f6b8d05a5d0[shape=record, label="  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x7f6b8d05a700[shape=record, label="  %6 = load i32*, i32** %5, align 8, !tbaa !8"];
 Node0x7f6b8d05a830[shape=record, label="  %7 = ptrtoint i32* %4 to i64"];
 Node0x7f6b8d05a960[shape=record, label="  %8 = ptrtoint i32* %6 to i64"];
 Node0x7f6b8d05aa90[shape=record, label="  %9 = sub i64 %7, %8"];
 Node0x7f6b8d05ac20[shape=record, label="  %10 = ashr exact i64 %9, 2"];
 Node0x7f6b8d05ae50[shape=record, label="  %11 = icmp eq i64 %9, 0"];
 Node0x7f6b8d05b080[shape=record, label="  br i1 %11, label %28, label %12"];
 Node0x7f6b8d05b2b0[shape=record, label="  %13 = call i64 @llvm.umax.i64(i64 %10, i64 1)"];
 Node0x7f6b8d05b4e0[shape=record, label="  br label %14"];
 Node0x7f6b8d05b710[shape=record, label="  %15 = phi i64 [ 0, %12 ], [ %26, %24 ]"];
 Node0x7f6b8d05b940[shape=record, label="  %16 = phi i32 [ 0, %12 ], [ %25, %24 ]"];
 Node0x7f6b8d05bb70[shape=record, label="  %17 = getelementptr inbounds i32, i32* %6, i64 %15"];
 Node0x7f6b8d05bda0[shape=record, label="  %18 = load i32, i32* %17, align 4, !tbaa !9"];
 Node0x7f6b8d05bfd0[shape=record, label="  %19 = xor i64 %15, -1"];
 Node0x7f6b8d05c200[shape=record, label="  %20 = add nsw i64 %10, %19"];
 Node0x7f6b8d05c430[shape=record, label="  %21 = getelementptr inbounds i32, i32* %6, i64 %20"];
 Node0x7f6b8d05c660[shape=record, label="  %22 = load i32, i32* %21, align 4, !tbaa !9"];
 Node0x7f6b8d05c890[shape=record, label="  %23 = icmp eq i32 %18, %22"];
 Node0x7f6b8d05cb20[shape=record, label="  br i1 %23, label %24, label %31"];
 Node0x7f6b8d05cd50[shape=record, label="  %25 = add nsw i32 %18, %16"];
 Node0x7f6b8d05cf80[shape=record, label="  %26 = add nuw i64 %15, 1"];
 Node0x7f6b8d05d1b0[shape=record, label="  %27 = icmp eq i64 %26, %13"];
 Node0x7f6b8d05d3e0[shape=record, label="  br i1 %27, label %28, label %14, !llvm.loop !11"];
 Node0x7f6b8d05d610[shape=record, label="  %29 = phi i32 [ 0, %2 ], [ %25, %24 ]"];
 Node0x7f6b8d05d840[shape=record, label="  %30 = icmp sle i32 %29, %1"];
 Node0x7f6b8d05da70[shape=record, label="  br label %31"];
 Node0x7f6b8d05dca0[shape=record, label="  %32 = phi i1 [ %30, %28 ], [ false, %14 ]"];
 Node0x7f6b8d05ded0[shape=record, label="  ret i1 %32"];
 Node0x7f6b8d05a370 -> Node0x7f6b8d05a4a0
 Node0x7f6b8d05a4a0 -> Node0x7f6b8d05a5d0
 Node0x7f6b8d05a5d0 -> Node0x7f6b8d05a700
 Node0x7f6b8d05a700 -> Node0x7f6b8d05a830
 Node0x7f6b8d05a830 -> Node0x7f6b8d05a960
 Node0x7f6b8d05a960 -> Node0x7f6b8d05aa90
 Node0x7f6b8d05aa90 -> Node0x7f6b8d05ac20
 Node0x7f6b8d05ac20 -> Node0x7f6b8d05ae50
 Node0x7f6b8d05ae50 -> Node0x7f6b8d05b080
 Node0x7f6b8d05b080 -> Node0x7f6b8d05b2b0
 Node0x7f6b8d05b2b0 -> Node0x7f6b8d05b4e0
 Node0x7f6b8d05b4e0 -> Node0x7f6b8d05b710
 Node0x7f6b8d05b710 -> Node0x7f6b8d05b940
 Node0x7f6b8d05b940 -> Node0x7f6b8d05bb70
 Node0x7f6b8d05bb70 -> Node0x7f6b8d05bda0
 Node0x7f6b8d05bda0 -> Node0x7f6b8d05bfd0
 Node0x7f6b8d05bfd0 -> Node0x7f6b8d05c200
 Node0x7f6b8d05c200 -> Node0x7f6b8d05c430
 Node0x7f6b8d05c430 -> Node0x7f6b8d05c660
 Node0x7f6b8d05c660 -> Node0x7f6b8d05c890
 Node0x7f6b8d05c890 -> Node0x7f6b8d05cb20
 Node0x7f6b8d05cb20 -> Node0x7f6b8d05cd50
 Node0x7f6b8d05cd50 -> Node0x7f6b8d05cf80
 Node0x7f6b8d05cf80 -> Node0x7f6b8d05d1b0
 Node0x7f6b8d05d1b0 -> Node0x7f6b8d05d3e0
 Node0x7f6b8d05d3e0 -> Node0x7f6b8d05d610
 Node0x7f6b8d05d610 -> Node0x7f6b8d05d840
 Node0x7f6b8d05d840 -> Node0x7f6b8d05da70
 Node0x7f6b8d05da70 -> Node0x7f6b8d05dca0
 Node0x7f6b8d05dca0 -> Node0x7f6b8d05ded0
edge [color=red