digraph "DFG for '_Z8max_fillSt6vectorIS_IiSaIiEESaIS1_EEi' function" {
 Node0x7f6c8f8d9000[shape=record, label="  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x7f6c8f8d9100[shape=record, label="  %4 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** %3, align 8, !tbaa !3"];
 Node0x7f6c8f8d9200[shape=record, label="  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x7f6c8f8d9300[shape=record, label="  %6 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** %5, align 8, !tbaa !8"];
 Node0x7f6c8f8d9400[shape=record, label="  %7 = ptrtoint %\"class.std::vector.0\"* %4 to i64"];
 Node0x7f6c8f8d9500[shape=record, label="  %8 = ptrtoint %\"class.std::vector.0\"* %6 to i64"];
 Node0x7f6c8f8d9600[shape=record, label="  %9 = sub i64 %7, %8"];
 Node0x7f6c8f8d9700[shape=record, label="  %10 = icmp eq i64 %9, 0"];
 Node0x7f6c8f8d9800[shape=record, label="  br i1 %10, label %114, label %11"];
 Node0x7f6c8f8d9900[shape=record, label="  %12 = sdiv exact i64 %9, 24"];
 Node0x7f6c8f8d9a00[shape=record, label="  %13 = call i64 @llvm.umax.i64(i64 %12, i64 1)"];
 Node0x7f6c8f8d9b00[shape=record, label="  br label %14"];
 Node0x7f6c8f8d9c00[shape=record, label="  %15 = phi i64 [ 0, %11 ], [ %134, %132 ]"];
 Node0x7f6c8f8d9d00[shape=record, label="  %16 = phi i32 [ 0, %11 ], [ %133, %132 ]"];
 Node0x7f6c8f8d9e00[shape=record, label="  %17 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"* %6, i64 %15, i32 0, i32 0, i32 0, i32 1"];
 Node0x7f6c8f8d9f00[shape=record, label="  %18 = load i32*, i32** %17, align 8, !tbaa !9"];
 Node0x7f6c8f8da000[shape=record, label="  %19 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"* %6, i64 %15, i32 0, i32 0, i32 0, i32 0"];
 Node0x7f6c8f8da100[shape=record, label="  %20 = load i32*, i32** %19, align 8, !tbaa !11"];
 Node0x7f6c8f8da200[shape=record, label="  %21 = ptrtoint i32* %18 to i64"];
 Node0x7f6c8f8da300[shape=record, label="  %22 = ptrtoint i32* %20 to i64"];
 Node0x7f6c8f8da400[shape=record, label="  %23 = sub i64 %21, %22"];
 Node0x7f6c8f8da500[shape=record, label="  %24 = icmp eq i64 %23, 0"];
 Node0x7f6c8f8da600[shape=record, label="  br i1 %24, label %132, label %25"];
 Node0x7f6c8f8da700[shape=record, label="  %26 = ashr exact i64 %23, 2"];
 Node0x7f6c8f8da800[shape=record, label="  %27 = call i64 @llvm.umax.i64(i64 %26, i64 1)"];
 Node0x7f6c8f8da900[shape=record, label="  %28 = call i64 @llvm.umax.i64(i64 %26, i64 1)"];
 Node0x7f6c8f8daa00[shape=record, label="  %29 = icmp ult i64 %28, 8"];
 Node0x7f6c8f8dab00[shape=record, label="  br i1 %29, label %111, label %30"];
 Node0x7f6c8f8dac00[shape=record, label="  %31 = and i64 %28, -8"];
 Node0x7f6c8f8dad00[shape=record, label="  %32 = add i64 %31, -8"];
 Node0x7f6c8f8dae00[shape=record, label="  %33 = lshr exact i64 %32, 3"];
 Node0x7f6c8f8daf00[shape=record, label="  %34 = add nuw nsw i64 %33, 1"];
 Node0x7f6c8f8db000[shape=record, label="  %35 = and i64 %34, 3"];
 Node0x7f6c8f8db100[shape=record, label="  %36 = icmp ult i64 %32, 24"];
 Node0x7f6c8f8db200[shape=record, label="  br i1 %36, label %82, label %37"];
 Node0x7f6c8f8db300[shape=record, label="  %38 = and i64 %34, 4611686018427387900"];
 Node0x7f6c8f8db400[shape=record, label="  br label %39"];
 Node0x7f6c8f8db500[shape=record, label="  %40 = phi i64 [ 0, %37 ], [ %79, %39 ]"];
 Node0x7f6c8f8db600[shape=record, label="  %41 = phi <4 x i32> [ zeroinitializer, %37 ], [ %77, %39 ]"];
 Node0x7f6c8f8db700[shape=record, label="  %42 = phi <4 x i32> [ zeroinitializer, %37 ], [ %78, %39 ]"];
 Node0x7f6c8f8db800[shape=record, label="  %43 = phi i64 [ %38, %37 ], [ %80, %39 ]"];
 Node0x7f6c8f8db900[shape=record, label="  %44 = getelementptr inbounds i32, i32* %20, i64 %40"];
 Node0x7f6c8f8dba00[shape=record, label="  %45 = bitcast i32* %44 to <4 x i32>*"];
 Node0x7f6c8f8dbb00[shape=record, label="  %46 = load <4 x i32>, <4 x i32>* %45, align 4, !tbaa !12"];
 Node0x7f6c8f8dbc00[shape=record, label="  %47 = getelementptr inbounds i32, i32* %44, i64 4"];
 Node0x7f6c8f8dbd00[shape=record, label="  %48 = bitcast i32* %47 to <4 x i32>*"];
 Node0x7f6c8f8dbe00[shape=record, label="  %49 = load <4 x i32>, <4 x i32>* %48, align 4, !tbaa !12"];
 Node0x7f6c8f8dbf00[shape=record, label="  %50 = add <4 x i32> %46, %41"];
 Node0