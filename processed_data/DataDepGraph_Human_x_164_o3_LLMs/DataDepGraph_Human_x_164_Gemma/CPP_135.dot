digraph "DFG for'_Z11can_arrangeSt6vectorIiSaIiEE' function" {
Node0x55ad3df2a950[shape=record, label="  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
Node0x55ad3df2aa30[shape=record, label="  %3 = load i32*, i32** %2, align 8, !tbaa !3"];
Node0x55ad3df2ab50[shape=record, label="  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
Node0x55ad3df2ac50[shape=record, label="  %5 = load i32*, i32** %4, align 8, !tbaa !8"];
Node0x55ad3df2ad20[shape=record, label="  %6 = ptrtoint i32* %3 to i64"];
Node0x55ad3df2ae00[shape=record, label="  %7 = ptrtoint i32* %5 to i64"];
Node0x55ad3df2aee0[shape=record, label="  %8 = sub i64 %6, %7"];
Node0x55ad3df2afb0[shape=record, label="  %9 = icmp eq i64 %8, 0"];
Node0x55ad3df2b080[shape=record, label="  br i1 %9, label %36, label %10"];
Node0x55ad3df2b160[shape=record, label="  %11 = ashr exact i64 %8, 2"];
Node0x55ad3df2b240[shape=record, label="  %12 = call i64 @llvm.umax.i64(i64 %11, i64 1)"];
Node0x55ad3df2b320[shape=record, label="  %13 = add i64 %12, -1"];
Node0x55ad3df2b400[shape=record, label="  %14 = and i64 %12, 3"];
Node0x55ad3df2b4e0[shape=record, label="  %15 = icmp ult i64 %13, 3"];
Node0x55ad3df2b5c0[shape=record, label="  br i1 %15, label %18, label %16"];
Node0x55ad3df2b6a0[shape=record, label="  %17 = and i64 %12, -4"];
Node0x55ad3df2b780[shape=record, label="  br label %38"];
Node0x55ad3df2b860[shape=record, label="  %19 = phi i32 [ undef, %10 ], [ %68, %38 ]"];
Node0x55ad3df2b940[shape=record, label="  %20 = phi i64 [ 0, %10 ], [ %69, %38 ]"];
Node0x55ad3df2ba20[shape=record, label="  %21 = phi i32 [ -1, %10 ], [ %68, %38 ]"];
Node0x55ad3df2bb00[shape=record, label="  %22 = icmp eq i64 %14, 0"];
Node0x55ad3df2bbe0[shape=record, label="  br i1 %22, label %36, label %23"];
Node0x55ad3df2bcc0[shape=record, label="  %24 = phi i64 [ %33, %23 ], [ %20, %18 ]"];
Node0x55ad3df2bda0[shape=record, label="  %25 = phi i32 [ %32, %23 ], [ %21, %18 ]"];
Node0x55ad3df2be80[shape=record, label="  %26 = phi i64 [ %34, %23 ], [ %14, %18 ]"];
Node0x55ad3df2bf60[shape=record, label="  %27 = getelementptr inbounds i32, i32* %5, i64 %24"];
Node0x55ad3df2c040[shape=record, label="  %28 = load i32, i32* %27, align 4, !tbaa !9"];
Node0x55ad3df2c120[shape=record, label="  %29 = sext i32 %28 to i64"];
Node0x55ad3df2c200[shape=record, label="  %30 = icmp slt i64 %24, %29"];
Node0x55ad3df2c2e0[shape=record, label="  %31 = trunc i64 %24 to i32"];
Node0x55ad3df2c3c0[shape=record, label="  %32 = select i1 %30, i32 %25, i32 %31"];
Node0x55ad3df2c4a0[shape=record, label="  %33 = add nuw nsw i64 %24, 1"];
Node0x55ad3df2c580[shape=record, label="  %34 = add i64 %26, -1"];
Node0x55ad3df2c660[shape=record, label="  %35 = icmp eq i64 %34, 0"];
Node0x55ad3df2c740[shape=record, label="  br i1 %35, label %36, label %23, !llvm.loop !11"];
Node0x55ad3df2c820[shape=record, label="  %37 = phi i32 [ -1, %1 ], [ %19, %18 ], [ %32, %23 ]"];
Node0x55ad3df2c900[shape=record, label="  ret i32 %37"];
Node0x55ad3df2c9e0[shape=record, label="  %39 = phi i64 [ 0, %16 ], [ %69, %38 ]"];
Node0x55ad3df2cac0[shape=record, label="  %40 = phi i32 [ -1, %16 ], [ %68, %38 ]"];
Node0x55ad3df2cba0[shape=record, label="  %41 = phi i64 [ %17, %16 ], [ %70, %38 ]"];
Node0x55ad3df2cc80[shape=record, label="  %42 = getelementptr inbounds i32, i32* %5, i64 %39"];
Node0x55ad3df2cd60[shape=record, label="  %43 = load i32, i32* %42, align 4, !tbaa !9"];
Node0x55ad3df2ce40[shape=record, label="  %44 = sext i32 %43 to i64"];
Node0x55ad3df2cf20[shape=record, label="  %45 = icmp slt i64 %39, %44"];
Node0x55ad3df2d000[shape=record, label="  %46 = trunc i64 %39 to i32"];
Node0x55ad3df2d0e0[shape=record, label="  %47 = select i1 %45, i32 %40, i32 %46"];
Node0x55ad3df2d1c0[shape=record, label="  %48 = or i64 %39, 1"];
Node0x55ad3df2d2a0[shape=record, label="  %49 = getelementptr inbounds i32, i32* %5, i64 %48"];
Node0x55ad3df2d380[shape=record, label="  %50 = load i32, i32* %49, align 4, !tbaa !9"];
Node0x55ad3df2d460[shape=record, label="  %51 = sext i32 %50 to i64"];
Node0x55ad3df2d540[shape=record, label="  %52 = icmp slt i64 %48, %51"];
Node0x55ad3df2d620[shape=record, label="  %53 = trunc i64 %48 to i32"];
Node0x55ad3df2d700[shape=record, label="  %54 = select i1 %52, i32 %47, i32 %53"];
Node0x55ad3df2d7e0[shape=record, label="  %55 = or i64 %39, 2"];
Node0x55ad3df2d8c0[shape=record, label="  %56 = getelementptr inbounds i32, i32* %5, i64 %55"];
Node0x55ad3df2d9a0[shape=record, label="  %57 = load i32, i32* %56, align 4, !tbaa !9"];
Node0x55ad3df2da80[shape=record, label="  %58 = sext i32 %57 to i64"];
Node0x55ad3df2db60[shape=record, label="  %59 = icmp slt i64 %55, %58"];
Node0x55ad3df2dc40[shape=record, label="  %60 = trunc i64 %55 to i32"];
Node0x55ad3df2dd20[shape=record, label="  %61 = select i1 %59, i32 %54, i32 %60"];
Node0x55ad3df2de00[shape=record, label="  %62 = or i64 %39, 3"];
Node0x55ad3df2dee0[shape=record, label="  %63 = getelementptr inbounds i32, i32* %5, i64 %62"];
Node0x55ad3df2dfc0[shape=record, label="  %64 = load i32, i32* %63, align 4, !tbaa !9"];
Node0x55ad3df2e0a0[shape=record, label="  %65 = sext i32 %64 to i64"];
Node0x55ad3df2e180[shape=record, label="  %66 = icmp slt i64 %62, %65"];
Node0x55ad3df2e260[shape=record, label="  %67 = trunc i64 %62 to i32"];
Node0x55ad3df2e340[shape=record, label="  %68 = select i1 %66, i32 %61, i32 %67"];
Node0x55ad3df2e420[shape=record, label="  %69 = add nuw nsw i64 %39, 4"];
Node0x55ad3df2e500[shape=record, label="  %70 = add i64 %41, -4"];
Node0x55ad3df2e5e0[shape=record, label="  %71 = icmp eq i64 %70, 0"];
Node0x55ad3df2e6c0[shape=record, label="  br i1 %71, label %18, label %38, !llvm.loop !13"];
Node0x55ad3df2e7a0[shape=record, label="  br i1 %9, label %36, label %10"];
Node0x55ad3df2e880 -> Node0x55ad3df2b080
Node0x55ad3df2b080 -> Node0x55ad3df2b160
Node0x55ad3df2b080 -> Node0x55ad3df2b5c0
Node0x55ad3df2b160 -> Node0x55ad3df2b240
Node0x55ad3df2b240 -> Node0x55ad3df2b320
Node0x55ad3df2b320 -> Node0x55ad3df2b400
Node0x55ad3df2b400 -> Node0x55ad3df2b4e0
Node0x55ad3df2b4e0 -> Node0x55ad3df2b5c0
Node0x55ad3df2b5c0 -> Node0x55ad3df2b6a0
Node0x55ad3df2b5c0 -> Node0x55ad3df2b780
Node0x55ad3df2b6a0 -> Node0x55ad3df2b780
Node0x55ad3df2b780 -> Node0x55ad3df2b860
Node0x55ad3df2b780 -> Node0x55ad3df2ba20
Node0x55ad3df2b780 -> Node0x55ad3df2bb00
Node0x55ad3df2b860 -> Node0x55ad3df2bcc0
Node0x55ad3df2b860 -> Node0x55ad3df2bda0
Node0x55ad3df2b860 -> Node0x55ad3df2be80
Node0x55ad3df2bb00 -> Node0x55ad3df2bcc0
Node0x55ad3df2bcc0 -> Node0x55ad3df2bf60
Node0x55ad3df2bcc0 -> Node0x55ad3df2c200
Node0x55ad3df2bcc0 -> Node0x55ad3df2c2e0
Node0x55ad3df2bcc0 -> Node0x55ad3df2c3c0
Node0x55ad3df2bf60 -> Node0x55ad3df2c040
Node0x55ad3df2c040 -> Node0x55ad3df2c120
Node0x55ad3df2c120 -> Node0x55ad3df2c200
Node0x55ad3df2c200 -> Node0x55ad3df2c3c0
Node0x55ad3df2