digraph "DFG for'prod_signs' function" {
 Node0x55ad3df2a950[shape=record, label="  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2aa30[shape=record, label="  %3 = load i32*, i32** %2, align 8, !tbaa !3"];
 Node0x55ad3df2ab50[shape=record, label="  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2ac50[shape=record, label="  %5 = load i32*, i32** %4, align 8, !tbaa !8"];
 Node0x55ad3df2ad20[shape=record, label="  %6 = ptrtoint i32* %3 to i64"];
 Node0x55ad3df2ae10[shape=record, label="  %7 = ptrtoint i32* %5 to i64"];
 Node0x55ad3df2af00[shape=record, label="  %8 = sub i64 %6, %7"];
 Node0x55ad3df2b000[shape=record, label="  %9 = icmp eq i64 %8, 0"];
 Node0x55ad3df2b100[shape=record, label="  %11 = ashr exact i64 %8, 2"];
 Node0x55ad3df2b200[shape=record, label="  %12 = call i64 @llvm.umax.i64(i64 %11, i64 1)"];
 Node0x55ad3df2b300[shape=record, label="  %13 = and i64 %12, 1"];
 Node0x55ad3df2b400[shape=record, label="  %14 = icmp ult i64 %11, 2"];
 Node0x55ad3df2b500[shape=record, label="  %16 = and i64 %12, -2"];
 Node0x55ad3df2b600[shape=record, label="  %18 = phi i64 [ 0, %15 ], [ %41, %17 ]"];
 Node0x55ad3df2b700[shape=record, label="  %19 = phi i32 [ 1, %15 ], [ %40, %17 ]"];
 Node0x55ad3df2b800[shape=record, label="  %20 = phi i32 [ 0, %15 ], [ %35, %17 ]"];
 Node0x55ad3df2b900[shape=record, label="  %21 = phi i64 [ %16, %15 ], [ %42, %17 ]"];
 Node0x55ad3df2ba00[shape=record, label="  %22 = getelementptr inbounds i32, i32* %5, i64 %18"];
 Node0x55ad3df2bb00[shape=record, label="  %23 = load i32, i32* %22, align 4, !tbaa !9"];
 Node0x55ad3df2bc00[shape=record, label="  %24 = tail call i32 @llvm.abs.i32(i32 %23, i1 true)"];
 Node0x55ad3df2bd00[shape=record, label="  %25 = add nuw nsw i32 %24, %20"];
 Node0x55ad3df2be00[shape=record, label="  %26 = icmp eq i32 %23, 0"];
 Node0x55ad3df2bf00[shape=record, label="  %27 = select i1 %26, i32 0, i32 %19"];
 Node0x55ad3df2c000[shape=record, label="  %28 = icmp slt i32 %23, 0"];
 Node0x55ad3df2c100[shape=record, label="  %29 = sub nsw i32 0, %27"];
 Node0x55ad3df2c200[shape=record, label="  %30 = select i1 %28, i32 %29, i32 %27"];
 Node0x55ad3df2c300[shape=record, label="  %31 = or i64 %18, 1"];
 Node0x55ad3df2c400[shape=record, label="  %32 = getelementptr inbounds i32, i32* %5, i64 %31"];
 Node0x55ad3df2c500[shape=record, label="  %33 = load i32, i32* %32, align 4, !tbaa !9"];
 Node0x55ad3df2c600[shape=record, label="  %34 = tail call i32 @llvm.abs.i32(i32 %33, i1 true)"];
 Node0x55ad3df2c700[shape=record, label="  %35 = add nuw nsw i32 %34, %25"];
 Node0x55ad3df2c800[shape=record, label="  %36 = icmp eq i32 %33, 0"];
 Node0x55ad3df2c900[shape=record, label="  %37 = select i1 %36, i32 0, i32 %30"];
 Node0x55ad3df2ca00[shape=record, label="  %38 = icmp slt i32 %33, 0"];
 Node0x55ad3df2cb00[shape=record, label="  %39 = sub nsw i32 0, %37"];
 Node0x55ad3df2cc00[shape=record, label="  %40 = select i1 %38, i32 %39, i32 %37"];
 Node0x55ad3df2cd00[shape=record, label="  %41 = add nuw nsw i64 %18, 2"];
 Node0x55ad3df2ce00[shape=record, label="  %42 = add i64 %21, -2"];
 Node0x55ad3df2cf00[shape=record, label="  %43 = icmp eq i64 %42, 0"];
 Node0x55ad3df2d000[shape=record, label="  %45 = phi i32 [ undef, %10 ], [ %35, %17 ]"];
 Node0x55ad3df2d100[shape=record, label="  %46 = phi i32 [ undef, %10 ], [ %40, %17 ]"];
 Node0x55ad3df2d200[shape=record, label="  %47 = phi i64 [ 0, %10 ], [ %41, %17 ]"];
 Node0x55ad3df2d300[shape=record, label="  %48 = phi i32 [ 1, %10 ], [ %40, %17 ]"];
 Node0x55ad3df2d400[shape=record, label="  %49 = phi i32 [ 0, %10 ], [ %35, %17 ]"];
 Node0x55ad3df2d500[shape=record, label="  %50 = icmp eq i64 %13, 0"];
 Node0x55ad3df2d600[shape=record, label="  %52 = getelementptr inbounds i32, i32* %5, i64 %47"];
 Node0x55ad3df2d700[shape=record, label="  %53 = load i32, i32* %52, align 4, !tbaa !9"];
 Node0x55ad3df2d800[shape=record, label="  %54 = icmp eq i32 %53, 0"];
 Node0x55ad3df2d900[shape=record, label="  %55 = select i1 %54, i32 0, i32 %48"];
 Node0x55ad3df2da00[shape=record, label="  %56 = icmp slt i32 %53, 0"];
 Node0x55ad3df2db00[shape=record, label="  %57 = sub nsw i32 0, %55"];
 Node0x55ad3df2dc00[shape=record, label="  %58 = select i1 %56, i32 %57, i32 %55"];
 Node0x55ad3df2dd00[shape=record, label="  %59 = tail call i32 @llvm.abs.i32(i32 %53, i1 true)"];
 Node0x55ad3df2de00[shape=record, label="  %60 = add nuw nsw i32 %59, %49"];
 Node0x55ad3df2df00[shape=record, label="  %62 = phi i32 [ %45, %44 ], [ %60, %51 ]"];
 Node0x55ad3df2e000[shape=record, label="  %63 = phi i32 [ %46, %44 ], [ %58, %51 ]"];
 Node0x55ad3df2e100[shape=record, label="  %64 = mul nsw i32 %63, %62"];
 Node0x55ad3df2e200[shape=record, label="  %66 = phi i32 [ %64, %61 ], [ -32768, %1 ]"];
 Node0x55ad3df2e300[shape=record, label="  ret i32 %66"];
 Node0x55ad3df2a950 -> Node0x55ad3df2aa30
 Node0x55ad3df2aa30 -> Node0x55ad3df2ab50
 Node0x55ad3df2ab50 -> Node0x55ad3df2ac50
 Node0x55ad3df2ac50 -> Node0x55ad3df2ad20
 Node0x55ad3df2ad20 -> Node0x55ad3df2ae10
 Node0x55ad3df2ae10 -> Node0x55ad3df2af00
 Node0x55ad3df2af00 -> Node0x55ad3df2b000
 Node0x55ad3df2b000 -> Node0x55ad3df2b100
 Node0x55ad3df2b100 -> Node0x55ad3df2b200
 Node0x55ad3df2b200 -> Node0x55ad3df2b300
 Node0x55ad3df2b300 -> Node0x55ad3df2b400
 Node0x55ad3df2b400 -> Node0x55ad3df2b500
 Node0x55ad3df2b500 -> Node0x55ad3df2b600
 Node0x55ad3df2b600 -> Node0x55ad3df2b700
 Node0x55ad3df2b700 -> Node0x55ad3df2b800
 Node0x55ad3df2b800 -> Node0x55ad3df2b900
 Node0x55ad3df2b900 -> Node0x55ad3df2ba00
 Node0x55ad3df2ba00 -> Node0x55ad3df2bb00
 Node0x55ad3df2bb00 -> Node0x55ad3df2bc00
 Node0x55ad3df2bc00 -> Node0x55ad3df2bd00
 Node0x55ad3df2bd00 -> Node0x55ad3df2be00
 Node0x55ad3df2be00 -> Node0x55ad3df2bf00
 Node0x55ad3df2bf00 -> Node0x55ad3df2c000
 Node0x55ad3df2c000 -> Node0x55ad3df2c100
 Node0x55ad3df2c100 -> Node0x55ad3df2c200
 Node0x55ad3df2c200 -> Node0x55ad3df2c300
 Node0x55ad3df2c300 -> Node0x55ad3df2c400
 Node0x55ad3df2c400 -> Node0x55ad3df2c500
 Node0x55ad3df2c500 -> Node0x55ad3df2c600
 Node0x55ad3df2c600 -> Node0x55ad3df2c700
 Node0x55ad3df2c700 -> Node0x55ad3df2c800
 Node0x55ad3df2c800 -> Node0x55ad3df2c900
 Node0x55ad3df2c900 -> Node0x55ad3df2ca00
 Node0x55ad3df2ca00 -> Node0x55ad3df2cb00
 Node0x55ad3df2cb00 -> Node0x55ad3df2cc00
 Node0x55ad3df2cc00 -> Node0x55ad3df2cd00
 Node0x55ad3df2cd00 -> Node0x55ad3df2ce00
 Node0x55ad3df2ce00 -> Node0x55ad3df2cf00
 Node0x55ad3df2cf00 -> Node0x55ad3df2d000
 Node0x55ad3df2d000 -> Node0x55ad3df2d100
 Node0x55ad3df2d100 -> Node0x55ad3df2d200
 Node0x55ad3df2d200 -> Node0x55ad3df2d300
 Node0x55ad3df2d300 -> Node0x55ad3df2d400
 Node0x55ad3df2d400 -> Node0x55ad3df2d500
 Node0x55ad3df2d500 -> Node0x55ad3df2d600
 Node0x55ad3df2d600 -> Node0x55ad3df2d700
 Node0x55ad3df2d700 -> Node0x55ad3df2d800
 Node0x55ad3df2d800 -> Node0x55ad3df2d900
 Node0x55ad3df2d900 -> Node0x55ad3df2da00
 Node0x55ad3df2da00 -> Node0x55ad3df2db00
 Node0x55ad3df2db00 -> Node0x55ad3df2dc00
 Node0x55ad3df2dc00 -> Node0x55ad3df2dd00
 Node0x55ad3df2dd00 -> Node0x55ad3df2de00
 Node0x55ad3df2de00 -> Node0x55ad3df2df00
 Node0x55ad3df2df00 -> Node0x55ad3df2e000
 Node0x55ad3df2e000 -> Node0x55ad3df2e100
 Node0x55ad3df2e100 -> Node0x55ad3df2e200
 Node0x55ad3df2e200 -> Node0x55ad3df2e300
}