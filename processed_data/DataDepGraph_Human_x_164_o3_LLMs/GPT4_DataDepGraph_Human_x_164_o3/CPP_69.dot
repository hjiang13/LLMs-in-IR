digraph "DFG for'_Z6searchSt6vectorIiSaIiEE' function" {
 Node0x55ad3df2a950[shape=record, label="  %2 = alloca %"class.std::vector.0", align 8"];
 Node0x55ad3df2aa30[shape=record, label="  %3 = alloca %"class.std::vector", align 8"];
 Node0x55ad3df2ab50[shape=record, label="  %4 = bitcast %"class.std::vector.0"* %2 to i8*"];
 Node0x55ad3df2ac50[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)"];
 Node0x55ad3df2ad20[shape=record, label="  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2ae10[shape=record, label="  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2af00[shape=record, label="  %7 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2b000[shape=record, label="  %8 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2b100[shape=record, label="  %9 = bitcast %"class.std::vector"* %3 to i8*"];
 Node0x55ad3df2b200[shape=record, label="  %10 = bitcast %"class.std::vector"* %3 to i8**"];
 Node0x55ad3df2b300[shape=record, label="  %11 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55ad3df2b400[shape=record, label="  %12 = bitcast i32** %11 to i8**"];
 Node0x55ad3df2b500[shape=record, label="  %13 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2b600[shape=record, label="  %14 = bitcast i32** %13 to i8**"];
 Node0x55ad3df2b700[shape=record, label="  %15 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55ad3df2b800[shape=record, label="  %16 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2b900[shape=record, label="  %17 = bitcast %"class.std::vector.0"* %2 to i8*"];
 Node0x55ad3df2ba00[shape=record, label="  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %17, i8 0, i64 24, i1 false)"];
 Node0x55ad3df2bb00[shape=record, label="  %18 = load i32*, i32** %5, align 8, !tbaa !3"];
 Node0x55ad3df2bc00[shape=record, label="  %19 = load i32*, i32** %6, align 8, !tbaa !8"];
 Node0x55ad3df2bd00[shape=record, label="  %20 = icmp eq i32* %18, %19"];
 Node0x55ad3df2be00[shape=record, label="  br i1 %20, label %56, label %21"];
 Node0x55ad3df2bf00[shape=record, label="  %22 = phi i32* [ %131, %140 ], [ %19, %1 ]"];
 Node0x55ad3df2c000[shape=record, label="  %23 = phi %"class.std::vector"* [ %142, %140 ], [ null, %1 ]"];
 Node0x55ad3df2c100[shape=record, label="  %24 = phi %"class.std::vector"* [ %141, %140 ], [ null, %1 ]"];
 Node0x55ad3df2c200[shape=record, label="  %25 = phi i64 [ %133, %140 ], [ 0, %1 ]"];
 Node0x55ad3df2c300[shape=record, label="  %26 = phi i32 [ %132, %140 ], [ -1, %1 ]"];
 Node0x55ad3df2c400[shape=record, label="  %27 = ptrtoint %"class.std::vector"* %24 to i64"];
 Node0x55ad3df2c500[shape=record, label="  %28 = ptrtoint %"class.std::vector"* %23 to i64"];
 Node0x55ad3df2c600[shape=record, label="  %29 = sub i64 %27, %28"];
 Node0x55ad3df2c700[shape=record, label="  %30 = getelementptr inbounds i32, i32* %22, i64 %25"];
 Node0x55ad3df2c800[shape=record, label="  %31 = icmp eq i64 %29, 0"];
 Node0x55ad3df2c900[shape=record, label="  br i1 %31, label %83, label %32"];
 Node0x55ad3df2ca00[shape=record, label="  %33 = sdiv exact i64 %29, 24"];
 Node0x55ad3df2cb00[shape=record, label="  %34 = call i64 @llvm.umax.i64(i64 %33, i64 1)"];
 Node0x55ad3df2cc00[shape=record, label="  br label %61"];
 Node0x55ad3df2cd00[shape=record, label="  %36 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8, !tbaa !9"];
 Node0x55ad3df2ce00[shape=record, label="  %37 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8, !tbaa !11"];
 Node0x55ad3df2cf00[shape=record, label="  %38 = icmp eq %"class.std::vector"* %36, %37"];
 Node0x55ad3df2d000[shape=record, label="  br i1 %38, label %51, label %39"];
 Node0x55ad3df2d100[shape=record, label="  %40 = phi %"class.std::vector"* [ %47, %46 ], [ %36, %35 ]"];
 Node0x55ad3df2d200[shape=record, label="  %41 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %40, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2d300[shape=record, label="  %42 = load i32*, i32** %41, align 8, !tbaa !8"];
 Node0x55ad3df2d400[shape=record, label="  %43 = icmp eq i32* %42, null"];
 Node0x55ad3df2d500[shape=record, label="  br i1 %43, label %46, label %44"];
 Node0x55ad3df2d600[shape=record, label="  %45 = bitcast i32* %42 to i8*"];
 Node0x55ad3df2d700[shape=record, label="  call void @_ZdlPv(i8* nonnull %45)"];
 Node0x55ad3df2d800[shape=record, label="  br label %46"];
 Node0x55ad3df2d900[shape=record, label="  %47 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %40, i64 1"];
 Node0x55ad3df2da00[shape=record, label="  %48 = icmp eq %"class.std::vector"* %47, %37"];
 Node0x55ad3df2db00[shape=record, label="  br i1 %48, label %49, label %39, !llvm.loop !12"];
 Node0x55ad3df2dc00[shape=record, label="  %50 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8, !tbaa !9"];
 Node0x55ad3df2dd00[shape=record, label="  br label %51"];
 Node0x55ad3df2de00[shape=record, label="  %52 = phi %"class.std::vector"* [ %50, %49 ], [ %37, %35 ]"];
 Node0x55ad3df2df00[shape=record, label="  %53 = icmp eq %"class.std::vector"* %52, null"];
 Node0x55ad3df2e000[shape=record, label="  br i1 %53, label %56, label %54"];
 Node0x55ad3df2e100[shape=record, label="  %55 = bitcast %"class.std::vector"* %52 to i8*"];
 Node0x55ad3df2e200[shape=record, label="  call void @_ZdlPv(i8* nonnull %55)"];
 Node0x55ad3df2e300[shape=record, label="  br label %56"];
 Node0x55ad3df2e400[shape=record, label="  %57 = phi i32 [ %132, %51 ], [ %132, %54 ], [ -1, %1 ]"];
 Node0x55ad3df2e500[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)"];
 Node0x55ad3df2e600[shape=record, label="  ret i32 %57"];
 Node0x55ad3df2e700[shape=record, label="  %59 = and i8 %79, 1"];
 Node0x55ad3df2e800[shape=record, label="  %60 = icmp eq i8 %59, 0"];
 Node0x55ad3df2e900[shape=record, label="  br i1 %60, label %83, label %130"];
 Node0x55ad3df2ea00[shape=record, label="  %62 = phi i64 [ 0, %32 ], [ %81, %78 ]"];
 Node0x55ad3df2eb00[shape=record, label="  %63 = phi i32 [ %26, %32 ], [ %80, %78 ]"];
 Node0x55ad3df2ec00[shape=record, label="  %64 = phi i8 [ 0, %32 ], [ %79, %78 ]"];
 Node0x55ad3df2ed00[shape=record, label="  %65 = load i32, i32* %30, align 4, !tbaa !14"];
 Node0x55ad3df2ee00[shape=record, label="  %66 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %23, i64 %62, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2ef00[shape=record, label="  %67 = load i32*, i32** %66, align 8, !tbaa !8"];
 Node0x55ad3df2f000[shape=record, label="  %68 = load i32, i32* %67, align 4, !tbaa !14"];
 Node0x55ad3df2f100[shape=record, label="  %69 = icmp eq i32 %65, %68"];
 Node0x55ad3df2f200[shape=record, label="  br i1 %69, label %70, label %78"];
 Node0x55ad3df2f300[shape=record, label="  %71 = getelementptr inbounds i32, i32* %67, i64 1"];
 Node0x55ad3df2f400[shape=record, label="  %72 = load i32, i32* %71, align 4, !tbaa !14"];
 Node0x55ad3df2f500[shape=record, label="  %73 = add nsw i32 %72, 1"];
 Node0x55ad3df2f600[shape=record, label="  store i32 %73, i32* %71, align 4, !tbaa !14"];
 Node0x55ad3df2f700[shape=record, label="  %74 = icmp sge i32 %73, %65"];
 Node0x55ad3df2f800[shape=record, label="  %75 = icmp sgt i32 %65, %63"];
 Node0x55ad3df2f900[shape=record, label="  %76 = select i1 %74, i1 %75, i1 false"];
 Node0x55ad3df2fa00[shape=record, label="  %77 = select i1 %76, i32 %65, i32 %63"];
 Node0x55ad3df2fb00[shape=record, label="  br label %78"];
 Node0x55ad3df2fc00[shape=record, label="  %79 = phi i8 [ %64, %61 ], [ 1, %70 ]"];
 Node0x55ad3df2fd00[shape=record, label="  %80 = phi i32 [ %63, %61 ], [ %77, %70 ]"];
 Node0x55ad3df2fe00[shape=record, label="  %81 = add nuw nsw i64 %62, 1"];
 Node0x55ad3df2ff00[shape=record, label="  %82 = icmp eq i64 %81, %34"];
 Node0x55ad3df30000[shape=record, label="  br i1 %82, label %58, label %61, !llvm.loop !16"];
 Node0x55ad3df30100[shape=record, label="  %84 = phi i32 [ %80, %58 ], [ %26, %21 ]"];
 Node0x55ad3df30200[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9)"];
 Node0x55ad3df30300[shape=record, label="  %85 = load i32, i32* %30, align 4, !tbaa !14"];
 Node0x55ad3df30400[shape=record, label="  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)"];
 Node0x55ad3df30500[shape=record, label="  %86 = invoke noalias nonnull i8* @_Znwm(i64 8)"];
 Node0x55ad3df30600[shape=record, label="  to label %91 unwind label %87"];
 Node0x55ad3df30700[shape=record, label="  %88 = landingpad { i8*, i32 }"];
 Node0x55ad3df30800[shape=record, label="  cleanup"];
 Node0x55ad3df30900[shape=record, label="  %89 = load i32*, i32** %16, align 8, !tbaa !8"];
 Node0x55ad3df30a00[shape=record, label="  %90 = icmp eq i32* %89, null"];
 Node0x55ad3df30b00[shape=record, label="  br i1 %90, label %128, label %124"];
 Node0x55ad3df30c00[shape=record, label="  %92 = bitcast i8* %86 to i32*"];
 Node0x55ad3df30d00[shape=record, label="  store i8* %86, i8** %10, align 8, !tbaa !8"];
 Node0x55ad3df30e00[shape=record, label="  %93 = getelementptr inbounds i8, i8* %86, i64 8"];
 Node0x55ad3df30f00[shape=record, label="  store i8* %93, i8** %12, align 8, !tbaa !17"];
 Node0x55ad3df31000[shape=record, label="  store i32 %85, i32* %92, align 4"];
 Node0x55ad3df31100[shape=record, label="  %94 = getelementptr inbounds i8, i8* %86, i64 4"];
 Node0x55ad3df31200[shape=record, label="  %95 = bitcast i8* %94 to i32*"];
 Node0x55ad3df31300[shape=record, label="  store i32 1, i32* %95, align 4"];
 Node0x55ad3df31400[shape=record, label="  store i8* %93, i8** %14, align 8, !tbaa !3"];
 Node0x55ad3df31500[shape=record, label="  %96 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8, !tbaa !11"];
 Node0x55ad3df31600[shape=record, label="  %97 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8, !tbaa !18"];
 Node0x55ad3df31700[shape=record, label="  %98 = icmp eq %"class.std::vector"* %96, %97"];
 Node0x55ad3df31800[shape=record, label="  br i1 %98, label %106, label %99"];
 Node0x55ad3df31900[shape=record, label="  %100 = bitcast %"class.std::vector"* %96 to i8**"];
 Node0x55ad3df31a00[shape=record, label="  store i8* %86, i8** %100, align 8, !tbaa !8"];
 Node0x55ad3df31b00[shape=record, label="  %101 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %96, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df31c00[shape=record, label="  %102 = bitcast i32** %101 to i8**"];
 Node0x55ad3df31d00[shape=record, label="  store i8* %93, i8** %102, align 8, !tbaa !3"];
 Node0x55ad3df31e00[shape=record, label="  %103 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %96, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55ad3df31f00[shape=record, label="  %104 = bitcast i32** %103 to i8**"];
 Node0x55ad3df32000[shape=record, label="  store i8* %93, i8** %104, align 8, !tbaa !17"];
 Node0x55ad3df32100[shape=record, label="  %105 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %96, i64 1"];
 Node0x55ad3df32200[shape=record, label="  store %"class.std::vector"* %105, %"class.std::vector"** %7, align 8, !tbaa !11"];
 Node0x55ad3df32300[shape=record, label="  br label %112"];
 Node0x55ad3df32400[shape=record, label="  %108 = load i32*, i32** %16, align 8, !tbaa !8"];
 Node0x55ad3df32500[shape=record, label="  %109 = icmp eq i32* %108, null"];
 Node0x55ad3df32600[shape=record, label="  br i1 %109, label %112, label %110"];
 Node0x55ad3df32700[shape=record, label="  %111 = bitcast i32* %108 to i8*"];
 Node0x55ad3df32800[shape=record, label="  call void @_ZdlPv(i8* nonnull %111)"];
 Node0x55ad3df32900[shape=record, label="  br label %112"];
 Node0x55ad3df32a00[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9)"];
 Node0x55ad3df32b00[shape=record, label="  %113 = icmp eq i32 %84, -1"];
 Node0x55ad3df32c00[shape=record, label="  %114 = load i32*, i32** %6, align 8, !tbaa !8"];
 Node0x55ad3df32d00[shape=record, label="  br i1 %113, label %115, label %130"];
 Node0x55ad3df32e00[shape=record, label="  %116 = getelementptr inbounds i32, i32* %114, i64 %25"];
 Node0x55ad3df32f00[shape=record, label="  %117 = load i32, i32* %116, align 4, !tbaa !14"];
 Node0x55ad3df33000[shape=record, label="  %118 = icmp eq i32 %117, 1"];
 Node0x55ad3df33100[shape=record, label="  %119 = select i1 %118, i32 1, i32 -1"];
 Node0x55ad3df33200[shape=record, label="  br label %130"];
 Node0x55ad3df33300[shape=record, label="  %121 = landingpad { i8*, i32 }"];
 Node0x55ad3df33400[shape=record, label="  cleanup"];
 Node0x55ad3df33500[shape=record, label="  %122 = load i32*, i32** %16, align 8, !tbaa !8"];
 Node0x55ad3df33600[shape=record, label="  %123 = icmp eq i32* %122, null"];
 Node0x55ad3df33700[shape=record, label="  br i1 %123, label %128, label %124"];
 Node0x55ad3df33800[shape=record, label="  %125 = phi i32* [ %89, %87 ], [ %122, %120 ]"];
 Node0x55ad3df33900[shape=record, label="  %126 = phi { i8*, i32 } [ %88, %87 ], [ %121, %120 ]"];
 Node0x55ad3df33a00[shape=record, label="  %127 = bitcast i32* %125 to i8*"];
 Node0x55ad3df33b00[shape=record, label="  call void @_ZdlPv(i8* nonnull %127)"];
 Node0x55ad3df33c00[shape=record, label="  br label %128"];
 Node0x55ad3df33d00[shape=record, label="  %129 = phi { i8*, i32 } [ %88, %87 ], [ %121, %120 ], [ %126, %124 ]"];
 Node0x55ad3df33e00[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9)"];
 Node0x55ad3df33f00[shape=record, label="  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* nonnull align 8 dereferenceable(24) %2)"];
 Node0x55ad3df34000[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)"];
 Node0x55ad3df34100[shape=record, label="  resume { i8*, i32 } %129"];
 Node0x55ad3df34200[shape=record, label="  %131 = phi i32* [ %22, %58 ], [ %114, %115 ], [ %114, %112 ]"];
 Node0x55ad3df34300[shape=record, label="  %132 = phi i32 [ %80, %58 ], [ %119, %115 ], [ %84, %112 ]"];
 Node0x55ad3df34400[shape=record, label="  %133 = add nuw i64 %25, 1"];
 Node0x55ad3df34500[shape=record, label="  %134 = load i32*, i32** %5, align 8, !tbaa !3"];
 Node0x55ad3df34600[shape=record, label="  %135 = ptrtoint i32* %134 to i64"];
 Node0x55ad3df34700[shape=record, label="  %136 = ptrtoint i32* %131 to i64"];
 Node0x55ad3df34800[shape=record, label="  %137 = sub i64 %135, %136"];
 Node0x55ad3df34900[shape=record, label="  %138 = ashr exact i64 %137, 2"];
 Node0x55ad3df34a00[shape=record, label="  %139 = icmp ugt i64 %138, %133"];
 Node0x55ad3df34b00[shape=record, label="  br i1 %139, label %140, label %35, !llvm.loop !19"];
 Node0x55ad3df34c00[shape=record, label="  %141 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8, !tbaa !11"];
 Node0x55ad3df34d00[shape=record, label="  %142 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8, !tbaa !9"];
 Node0x55ad3df34e00[shape=record, label="  br label %21"];
 Node0x55ad3df34f00[shape=record, label="  %20 -> %56"];
 Node0x55ad3df35000[shape=record, label="  %20 -> %21"];
 Node0x55ad3df35100[shape=record, label="  %22 -> %30"];
 Node0x55ad3df35200[shape=record, label="  %23 -> %28"];
 Node0x55ad3df35300[shape=record, label="  %24 -> %29"];
 Node0x55ad3df35400[shape=record, label="  %25 -> %30"];
 Node0x55ad3df35500[shape=record, label="  %26 -> %31"];
 Node0x55ad3df35600[shape=record, label="  %18 -> %20"];
 Node0x55ad3df35700[shape=record, label="  %19 -> %20"];
 Node0x55ad3df35800[shape=record, label="  %33 -> %34"];
 Node0x55ad3df35900[shape=record, label="  %36 -> %38"];
 Node0x55ad3df35a00[shape=record, label="  %40 -> %41"];
 Node0x55ad3df35b00[shape=record, label="  %42 -> %43"];
 Node0x55ad3df35c00[shape=record, label="  %43 -> %44"];
 Node0x55ad3df35d00[shape=record, label="  %47 -> %48"];
 Node0x55ad3df35e00[shape=record, label="  %50 -> %52"];
 Node0x55ad3df35f00[shape=record, label="  %52 -> %53"];
 Node0x55ad3df36000[shape=record, label="  %54 -> %56"];
 Node0x55ad3df36100[shape=record, label="  %57 -> %60"];
 Node0x55ad3df36200[shape=record, label="  %58 -> %59"];
 Node0x55ad3df36300[shape=record, label="  %61 -> %62"];
 Node0x55ad3df36400[shape=record, label="  %62 -> %63"];
 Node0x55ad3df36500[shape=record, label="  %63 -> %65"];
 Node0x55ad3df36600[shape=record, label="  %65 -> %66"];
 Node0x55ad3df36700[shape=record, label="  %66 -> %67"];
 Node0x55ad3df36800[shape=record, label="  %67 -> %68"];
 Node0x55ad3df36900[shape=record, label="  %68 -> %69"];
 Node0x55ad3df36a00[shape=record, label="  %69 -> %70"];
 Node0x55ad3df36b00[shape=record, label="  %70 -> %78"];
 Node0x55ad3df36c00[shape=record, label="  %73 -> %74"];
 Node0x55ad3df36d00[shape=record, label="  %76 -> %77"];
 Node0x55ad3df36e00[shape=record, label="  %80 -> %81"];
 Node0x55ad3df36f00[shape=record, label="  %82 -> %83"];
 Node0x55ad3df37000[shape=record, label="  %84 -> %115"];
 Node0x55ad3df37100[shape=record, label="  %117 -> %119"];
 Node0x55ad3df37200[shape=record, label="  %121 -> %123"];
 Node0x55ad3df37300[shape=record, label="  %125 -> %127"];
 Node0x55ad3df37400[shape=record, label="  %129 -> %130"];
 Node0x55ad3df37500[shape=record, label="  %132 -> %134"];
 Node0x55ad3df37600[shape=record, label="  %136 -> %137"];
 Node0x55ad3df37700[shape=record, label="  %138 -> %139"];
 Node0x55ad3df37800[shape=record, label="  %141 -> %21"];
 Node0x55ad3df37900[shape=record, label="  %142 -> %21"];
}