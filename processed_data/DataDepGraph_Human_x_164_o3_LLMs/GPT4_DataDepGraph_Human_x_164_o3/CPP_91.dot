digraph "DFG for'is_bored' function" {
 Node0x55ad3df2a950[shape=record, label="  %2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1"];
 Node0x55ad3df2aa30[shape=record, label="  %3 = load i64, i64* %2, align 8, !tbaa !3"];
 Node0x55ad3df2ab50[shape=record, label="  %4 = icmp eq i64 %3, 0"];
 Node0x55ad3df2ac50[shape=record, label="  br i1 %4, label %24, label %5"];
 Node0x55ad3df2ad20[shape=record, label="  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0"];
 Node0x55ad3df2ae10[shape=record, label="  %7 = load i8*, i8** %6, align 8, !tbaa !10"];
 Node0x55ad3df2af00[shape=record, label="  %8 = and i64 %3, 1"];
 Node0x55ad3df2b000[shape=record, label="  %9 = icmp eq i64 %3, 1"];
 Node0x55ad3df2b100[shape=record, label="  br i1 %9, label %12, label %10"];
 Node0x55ad3df2b200[shape=record, label="  %11 = and i64 %3, -2"];
 Node0x55ad3df2b300[shape=record, label="  br label %26"];
 Node0x55ad3df2b400[shape=record, label="  %13 = phi i32 [ undef, %5 ], [ %51, %59 ]"];
 Node0x55ad3df2b500[shape=record, label="  %14 = phi i64 [ 0, %5 ], [ %61, %59 ]"];
 Node0x55ad3df2b600[shape=record, label="  %15 = phi i32 [ 0, %5 ], [ %51, %59 ]"];
 Node0x55ad3df2b700[shape=record, label="  %16 = phi i32 [ 0, %5 ], [ %56, %59 ]"];
 Node0x55ad3df2b800[shape=record, label="  %17 = icmp eq i64 %8, 0"];
 Node0x55ad3df2b900[shape=record, label="  br i1 %17, label %24, label %18"];
 Node0x55ad3df2ba00[shape=record, label="  %19 = getelementptr inbounds i8, i8* %7, i64 %14"];
 Node0x55ad3df2bb00[shape=record, label="  %20 = load i8, i8* %19, align 1, !tbaa !11"];
 Node0x55ad3df2bc00[shape=record, label="  %21 = icmp eq i8 %20, 32"];
 Node0x55ad3df2bd00[shape=record, label="  %22 = select i1 %21, i32 %16, i32 0"];
 Node0x55ad3df2be00[shape=record, label="  %23 = add nuw nsw i32 %22, %15"];
 Node0x55ad3df2bf00[shape=record, label="  br label %24"];
 Node0x55ad3df2c000[shape=record, label="  %25 = phi i32 [ 0, %1 ], [ %13, %12 ], [ %23, %18 ]"];
 Node0x55ad3df2c100[shape=record, label="  ret i32 %25"];
 Node0x55ad3df2c200[shape=record, label="  %27 = phi i64 [ 0, %10 ], [ %61, %59 ]"];
 Node0x55ad3df2c300[shape=record, label="  %28 = phi i32 [ 0, %10 ], [ %51, %59 ]"];
 Node0x55ad3df2c400[shape=record, label="  %29 = phi i32 [ 0, %10 ], [ %56, %59 ]"];
 Node0x55ad3df2c500[shape=record, label="  %30 = phi i8 [ 1, %10 ], [ %60, %59 ]"];
 Node0x55ad3df2c600[shape=record, label="  %31 = phi i64 [ %11, %10 ], [ %62, %59 ]"];
 Node0x55ad3df2c700[shape=record, label="  %32 = getelementptr inbounds i8, i8* %7, i64 %27"];
 Node0x55ad3df2c800[shape=record, label="  %33 = load i8, i8* %32, align 1, !tbaa !11"];
 Node0x55ad3df2c900[shape=record, label="  %34 = icmp eq i8 %33, 32"];
 Node0x55ad3df2ca00[shape=record, label="  %35 = select i1 %34, i32 %29, i32 0"];
 Node0x55ad3df2cb00[shape=record, label="  %36 = add nuw nsw i32 %35, %28"];
 Node0x55ad3df2cc00[shape=record, label="  %37 = icmp eq i8 %33, 73"];
 Node0x55ad3df2cd00[shape=record, label="  %38 = and i8 %30, 1"];
 Node0x55ad3df2ce00[shape=record, label="  %39 = icmp ne i8 %38, 0"];
 Node0x55ad3df2cf00[shape=record, label="  %40 = select i1 %34, i8 %30, i8 0"];
 Node0x55ad3df2d000[shape=record, label="  switch i8 %33, label %42 [ i8 46, label %41 i8 63, label %41 i8 33, label %41 ]"];
 Node0x55ad3df2d100[shape=record, label="  br label %42"];
 Node0x55ad3df2d200[shape=record, label="  %43 = phi i8 [ 1, %41 ], [ %40, %26 ]"];
 Node0x55ad3df2d300[shape=record, label="  %44 = or i64 %27, 1"];
 Node0x55ad3df2d400[shape=record, label="  %45 = getelementptr inbounds i8, i8* %7, i64 %44"];
 Node0x55ad3df2d500[shape=record, label="  %46 = load i8, i8* %45, align 1, !tbaa !11"];
 Node0x55ad3df2d600[shape=record, label="  %47 = icmp eq i8 %46, 32"];
 Node0x55ad3df2d700[shape=record, label="  %48 = select i1 %47, i1 %37, i1 false"];
 Node0x55ad3df2d800[shape=record, label="  %49 = select i1 %48, i1 %39, i1 false"];
 Node0x55ad3df2d900[shape=record, label="  %50 = zext i1 %49 to i32"];
 Node0x55ad3df2da00[shape=record, label="  %51 = add nuw nsw i32 %36, %50"];
 Node0x55ad3df2db00[shape=record, label="  %52 = icmp eq i8 %46, 73"];
 Node0x55ad3df2dc00[shape=record, label="  %53 = and i8 %43, 1"];
 Node0x55ad3df2dd00[shape=record, label="  %54 = icmp ne i8 %53, 0"];
 Node0x55ad3df2de00[shape=record, label="  %55 = select i1 %52, i1 %54, i1 false"];
 Node0x55ad3df2df00[shape=record, label="  %56 = zext i1 %55 to i32"];
 Node0x55ad3df2e000[shape=record, label="  %57 = select i1 %47, i8 %43, i8 0"];
 Node0x55ad3df2e100[shape=record, label="  switch i8 %46, label %59 [ i8 46, label %58 i8 63, label %58 i8 33, label %58 ]"];
 Node0x55ad3df2e200[shape=record, label="  br label %59"];
 Node0x55ad3df2e300[shape=record, label="  %60 = phi i8 [ 1, %58 ], [ %57, %42 ]"];
 Node0x55ad3df2e400[shape=record, label="  %61 = add nuw nsw i64 %27, 2"];
 Node0x55ad3df2e500[shape=record, label="  %62 = add i64 %31, -2"];
 Node0x55ad3df2e600[shape=record, label="  %63 = icmp eq i64 %62, 0"];
 Node0x55ad3df2e700[shape=record, label="  br i1 %63, label %12, label %26, !llvm.loop !12"];
 Node0x55ad3df2a950 -> Node0x55ad3df2aa30
 Node0x55ad3df2aa30 -> Node0x55ad3df2ab50
 Node0x55ad3df2ab50 -> Node0x55ad3df2ac50
 Node0x55ad3df2ac50 -> Node0x55ad3df2ad20
 Node0x55ad3df2ad20 -> Node0x55ad3df2b100
 Node0x55ad3df2b100 -> Node0x55ad3df2b200
 Node0x55ad3df2b200 -> Node0x55ad3df2b300
 Node0x55ad3df2b300 -> Node0x55ad3df2b400
 Node0x55ad3df2b400 -> Node0x55ad3df2b500
 Node0x55ad3df2b500 -> Node0x55ad3df2b600
 Node0x55ad3df2b600 -> Node0x55ad3df2b700
 Node0x55ad3df2b700 -> Node0x55ad3df2b800
 Node0x55ad3df2b800 -> Node0x55ad3df2b900
 Node0x55ad3df2b900 -> Node0x55ad3df2ba00
 Node0x55ad3df2ba00 -> Node0x55ad3df2bb00
 Node0x55ad3df2bb00 -> Node0x55ad3df2bc00
 Node0x55ad3df2bc00 -> Node0x55ad3df2bd00
 Node0x55ad3df2bd00 -> Node0x55ad3df2be00
 Node0x55ad3df2be00 -> Node0x55ad3df2bf00
 Node0x55ad3df2bf00 -> Node0x55ad3df2c000
 Node0x55ad3df2c000 -> Node0x55ad3df2c100
 Node0x55ad3df2c100 -> Node0x55ad3df2c200
 Node0x55ad3df2c200 -> Node0x55ad3df2c300
 Node0x55ad3df2c300 -> Node0x55ad3df2c400
 Node0x55ad3df2c400 -> Node0x55ad3df2c500
 Node0x55ad3df2c500 -> Node0x55ad3df2c600
 Node0x55ad3df2c600 -> Node0x55ad3df2c700
 Node0x55ad3df2c700 -> Node0x55ad3df2c800
 Node0x55ad3df2c800 -> Node0x55ad3df2c900
 Node0x55ad3df2c900 -> Node0x55ad3df2ca00
 Node0x55ad3df2ca00 -> Node0x55ad3df2cb00
 Node0x55ad3df2cb00 -> Node0x55ad3df2cc00
 Node0x55ad3df2cc00 -> Node0x55ad3df2cd00
 Node0x55ad3df2cd00 -> Node0x55ad3df2ce00
 Node0x55ad3df2ce00 -> Node0x55ad3df2cf00
 Node0x55ad3df2cf00 -> Node0x55ad3df2d000
 Node0x55ad3df2d000 -> Node0x55ad3df2d100
 Node0x55ad3df2d100 -> Node0x55ad3df2d200
 Node0x55ad3df2d200 -> Node0x55ad3df2d300
 Node0x55ad3df2d300 -> Node0x55ad3df2d400
 Node0x55ad3df2d400 -> Node0x55ad3df2d500
 Node0x55ad3df2d500 -> Node0x55ad3df2d600
 Node0x55ad3df2d600 -> Node0x55ad3df2d700
 Node0x55ad3df2d700 -> Node0x55ad3df2d800
 Node0x55ad3df2d800 -> Node0x55ad3df2d900
 Node0x55ad3df2d900 -> Node0x55ad3df2da00
 Node0x55ad3df2da00 -> Node0x55ad3df2db00
 Node0x55ad3df2db00 -> Node0x55ad3df2dc00
 Node0x55ad3df2dc00 -> Node0x55ad3df2dd00
 Node0x55ad3df2dd00 -> Node0x55ad3df2de00
 Node0x55ad3df2de00 -> Node0x55ad3df2df00
 Node0x55ad3df2df00 -> Node0x55ad3df2e000
 Node0x55ad3df2e000 -> Node0x55ad3df2e100
 Node0x55ad3df2e100 -> Node0x55ad3df2e200
 Node0x55ad3df2e200 -> Node0x55ad3df2e300
 Node0x55ad3df2e300 -> Node0x55ad3df2e400
 Node0x55ad3df2e400 -> Node0x55ad3df2e500
 Node0x55ad3df2e500 -> Node0x55ad3df2e600
 Node0x55ad3df2e600 -> Node0x55ad3df2e700
}