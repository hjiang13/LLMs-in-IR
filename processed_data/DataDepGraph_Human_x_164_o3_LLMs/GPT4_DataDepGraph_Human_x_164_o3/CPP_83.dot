digraph "DFG for'starts_one_endsi' function" {
 Node0x55ad3df2a950[shape=record, label="  %2 = icmp slt i32 %0, 1"];
 Node0x55ad3df2aa30[shape=record, label="  %4 = icmp eq i32 %0, 1"];
 Node0x55ad3df2ab50[shape=record, label="  %6 = icmp sgt i32 %0, 2"];
 Node0x55ad3df2ac50[shape=record, label="  %8 = add i32 %0, -2"];
 Node0x55ad3df2ad20[shape=record, label="  %9 = icmp ult i32 %8, 8"];
 Node0x55ad3df2ae10[shape=record, label="  %11 = and i32 %8, -8"];
 Node0x55ad3df2af00[shape=record, label="  %12 = or i32 %11, 2"];
 Node0x55ad3df2b000[shape=record, label="  %13 = add i32 %11, -8"];
 Node0x55ad3df2b0f0[shape=record, label="  %14 = lshr exact i32 %13, 3"];
 Node0x55ad3df2b1e0[shape=record, label="  %15 = add nuw nsw i32 %14, 1"];
 Node0x55ad3df2b2d0[shape=record, label="  %16 = and i32 %15, 7"];
 Node0x55ad3df2b3c0[shape=record, label="  %17 = icmp ult i32 %13, 56"];
 Node0x55ad3df2b4b0[shape=record, label="  %19 = and i32 %15, 1073741816"];
 Node0x55ad3df2b5a0[shape=record, label="  %21 = phi <4 x i32> [ <i32 18, i32 1, i32 1, i32 1>, %18 ], [ %24, %20 ]"];
 Node0x55ad3df2b690[shape=record, label="  %22 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %18 ], [ %25, %20 ]"];
 Node0x55ad3df2b780[shape=record, label="  %23 = phi i32 [ %19, %18 ], [ %26, %20 ]"];
 Node0x55ad3df2b870[shape=record, label="  %24 = mul <4 x i32> %21, <i32 100000000, i32 100000000, i32 100000000, i32 100000000>"];
 Node0x55ad3df2b960[shape=record, label="  %25 = mul <4 x i32> %22, <i32 100000000, i32 100000000, i32 100000000, i32 100000000>"];
 Node0x55ad3df2ba50[shape=record, label="  %26 = add i32 %23, -8"];
 Node0x55ad3df2bb40[shape=record, label="  %27 = icmp eq i32 %26, 0"];
 Node0x55ad3df2bc30[shape=record, label="  %29 = phi <4 x i32> [ undef, %10 ], [ %24, %20 ]"];
 Node0x55ad3df2bd20[shape=record, label="  %30 = phi <4 x i32> [ undef, %10 ], [ %25, %20 ]"];
 Node0x55ad3df2be10[shape=record, label="  %31 = phi <4 x i32> [ <i32 18, i32 1, i32 1, i32 1>, %10 ], [ %24, %20 ]"];
 Node0x55ad3df2bf00[shape=record, label="  %32 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %10 ], [ %25, %20 ]"];
 Node0x55ad3df2c0f0[shape=record, label="  %33 = icmp eq i32 %16, 0"];
 Node0x55ad3df2c1e0[shape=record, label="  %35 = phi <4 x i32> [ %38, %34 ], [ %31, %28 ]"];
 Node0x55ad3df2c2d0[shape=record, label="  %36 = phi <4 x i32> [ %39, %34 ], [ %32, %28 ]"];
 Node0x55ad3df2c3c0[shape=record, label="  %37 = phi i32 [ %40, %34 ], [ %16, %28 ]"];
 Node0x55ad3df2c4b0[shape=record, label="  %38 = mul <4 x i32> %35, <i32 10, i32 10, i32 10, i32 10>"];
 Node0x55ad3df2c5a0[shape=record, label="  %39 = mul <4 x i32> %36, <i32 10, i32 10, i32 10, i32 10>"];
 Node0x55ad3df2c690[shape=record, label="  %40 = add i32 %37, -1"];
 Node0x55ad3df2c780[shape=record, label="  %41 = icmp eq i32 %40, 0"];
 Node0x55ad3df2c870[shape=record, label="  %43 = phi <4 x i32> [ %29, %28 ], [ %38, %34 ]"];
 Node0x55ad3df2c960[shape=record, label="  %44 = phi <4 x i32> [ %30, %28 ], [ %39, %34 ]"];
 Node0x55ad3df2ca50[shape=record, label="  %45 = mul <4 x i32> %44, %43"];
 Node0x55ad3df2cb40[shape=record, label="  %46 = call i32 @llvm.vector.reduce.mul.v4i32(<4 x i32> %45)"];
 Node0x55ad3df2cc30[shape=record, label="  %47 = icmp eq i32 %8, %11"];
 Node0x55ad3df2cd20[shape=record, label="  %49 = phi i32 [ 2, %7 ], [ %12, %42 ]"];
 Node0x55ad3df2ce10[shape=record, label="  %50 = phi i32 [ 18, %7 ], [ %46, %42 ]"];
 Node0x55ad3df2cf00[shape=record, label="  %52 = phi i32 [ %55, %51 ], [ %49, %48 ]"];
 Node0x55ad3df2c0f0 -> Node0x55ad3df2aa30
 Node0x55ad3df2aa30 -> Node0x55ad3df2ab50
 Node0x55ad3df2ab50 -> Node0x55ad3df2ac50
 Node0x55ad3df2ac50 -> Node0x55ad3df2ad20
 Node0x55ad3df2ad20 -> Node0x55ad3df2b000
 Node0x55ad3df2b000 -> Node0x55ad3df2b1e0
 Node0x55ad3df2b1e0 -> Node0x55ad3df2b2d0
 Node0x55ad3df2b2d0 -> Node0x55ad3df2b3c0
 Node0x55ad3df2b3c0 -> Node0x55ad3df2b4b0
 Node0x55ad3df2b4b0 -> Node0x55ad3df2b5a0
 Node0x55ad3df2b5a0 -> Node0x55ad3df2b690
 Node0x55ad3df2b690 -> Node0x55ad3df2b780
 Node0x55ad3df2b780 -> Node0x55ad3df2b870
 Node0x55ad3df2b870 -> Node0x55ad3df2b960
 Node0x55ad3df2b960 -> Node0x55ad3df2ba50
 Node0x55ad3df2ba50 -> Node0x55ad3df2bb40
 Node0x55ad3df2bb40 -> Node0x55ad3df2bc30
 Node0x55ad3df2bc30 -> Node0x55ad3df2bd20
 Node0x55ad3df2bd20 -> Node0x55ad3df2be10
 Node0x55ad3df2be10 -> Node0x55ad3df2bf00
 Node0x55ad3df2bf00 -> Node0x55ad3df2c0f0
 Node0x55ad3df2c0f0 -> Node0x55ad3df2c1e0
 Node0x55ad3df2c1e0 -> Node0x55ad3df2c2d0
 Node0x55ad3df2c2d0 -> Node0x55ad3df2c3c0
 Node0x55ad3df2c3c0 -> Node0x55ad3df2c4b0
 Node0x55ad3df2c4b0 -> Node0x55ad3df2c5a0
 Node0x55ad3df2c5a0 -> Node0x55ad3df2c690
 Node0x55ad3df2c690 -> Node0x55ad3df2c780
 Node0x55ad3df2c780 -> Node0x55ad3df2c870
 Node0x55ad3df2c870 -> Node0x55ad3df2c960
}