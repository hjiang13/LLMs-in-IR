digraph "DFG for'even_odd_count' function" {
 Node0x55ad3df2a950[shape=record, label="  %3 = alloca %"class.std::__cxx11::basic_string", align 8"];
 Node0x55ad3df2aa30[shape=record, label="  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*"];
 Node0x55ad3df2ab50[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4)"];
 Node0x55ad3df2ac50[shape=record, label="  %5 = tail call i32 @llvm.abs.i32(i32 %1, i1 true)"];
 Node0x55ad3df2ad20[shape=record, label="  call void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %3, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* nonnull @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %5)"];
 Node0x55ad3df2ae10[shape=record, label="  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1"];
 Node0x55ad3df2af00[shape=record, label="  %7 = load i64, i64* %6, align 8, !tbaa !3"];
 Node0x55ad3df2af90[shape=record, label="  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0"];
 Node0x55ad3df2b080[shape=record, label="  %9 = load i8*, i8** %8, align 8"];
 Node0x55ad3df2b170[shape=record, label="  %10 = icmp eq i64 %7, 0"];
 Node0x55ad3df2b260[shape=record, label="  br i1 %10, label %53, label %11"];
 Node0x55ad3df2b350[shape=record, label="  %12 = icmp ult i64 %7, 8"];
 Node0x55ad3df2b440[shape=record, label="  br i1 %12, label %49, label %13"];
 Node0x55ad3df2b530[shape=record, label="  %14 = and i64 %7, -8"];
 Node0x55ad3df2b620[shape=record, label="  br label %15"];
 Node0x55ad3df2b710[shape=record, label="  %16 = phi i64 [ 0, %13 ], [ %41, %15 ]"];
 Node0x55ad3df2b800[shape=record, label="  %17 = phi <4 x i32> [ zeroinitializer, %13 ], [ %39, %15 ]"];
 Node0x55ad3df2b8f0[shape=record, label="  %18 = phi <4 x i32> [ zeroinitializer, %13 ], [ %40, %15 ]"];
 Node0x55ad3df2b9e0[shape=record, label="  %19 = phi <4 x i32> [ zeroinitializer, %13 ], [ %35, %15 ]"];
 Node0x55ad3df2ba50[shape=record, label="  %20 = phi <4 x i32> [ zeroinitializer, %13 ], [ %36, %15 ]"];
 Node0x55ad3df2bb40[shape=record, label="  %21 = getelementptr inbounds i8, i8* %9, i64 %16"];
 Node0x55ad3df2bc30[shape=record, label="  %22 = bitcast i8* %21 to <4 x i8>*"];
 Node0x55ad3df2bd20[shape=record, label="  %23 = load <4 x i8>, <4 x i8>* %22, align 1, !tbaa !10"];
 Node0x55ad3df2be10[shape=record, label="  %24 = getelementptr inbounds i8, i8* %21, i64 4"];
 Node0x55ad3df2bf00[shape=record, label="  %25 = bitcast i8* %24 to <4 x i8>*"];
 Node0x55ad3df2bfe0[shape=record, label="  %26 = load <4 x i8>, <4 x i8>* %25, align 1, !tbaa !10"];
 Node0x55ad3df2c0d0[shape=record, label="  %27 = srem <4 x i8> %23, <i8 2, i8 2, i8 2, i8 2>"];
 Node0x55ad3df2c1c0[shape=record, label="  %28 = srem <4 x i8> %26, <i8 2, i8 2, i8 2, i8 2>"];
 Node0x55ad3df2c2b0[shape=record, label="  %29 = icmp eq <4 x i8> %27, <i8 1, i8 1, i8 1, i8 1>"];
 Node0x55ad3df2c3a0[shape=record, label="  %30 = icmp eq <4 x i8> %28, <i8 1, i8 1, i8 1, i8 1>"];
 Node0x55ad3df2c490[shape=record, label="  %31 = xor <4 x i1> %29, <i1 true, i1 true, i1 true, i1 true>"];
 Node0x55ad3df2c580[shape=record, label="  %32 = xor <4 x i1> %30, <i1 true, i1 true, i1 true, i1 true>"];
 Node0x55ad3df2c670[shape=record, label="  %33 = zext <4 x i1> %31 to <4 x i32>"];
 Node0x55ad3df2c760[shape=record, label="  %34 = zext <4 x i1> %32 to <4 x i32>"];
 Node0x55ad3df2c850[shape=record, label="  %35 = add <4 x i32> %19, %33"];
 Node0x55ad3df2c940[shape=record, label="  %36 = add <4 x i32> %20, %34"];
 Node0x55ad3df2ca30[shape=record, label="  %37 = zext <4 x i1> %29 to <4 x i32>"];
 Node0x55ad3df2cb20[shape=record, label="  %38 = zext <4 x i1> %30 to <4 x i32>"];
 Node0x55ad3df2cc10[shape=record, label="  %39 = add <4 x i32> %17, %37"];
 Node0x55ad3df2cd00[shape=record, label="  %40 = add <4 x i32> %18, %38"];
 Node0x55ad3df2cdf0[shape=record, label="  %41 = add nuw i64 %16, 8"];
 Node0x55ad3df2ce80[shape=record, label="  %42 = icmp eq i64 %41, %14"];
 Node0x55ad3df2cf70[shape=record, label="  br i1 %42, label %43, label %15, !llvm.loop !11"];
 Node0x55ad3df2d060[shape=record, label="  %44 = add <4 x i32> %36, %35"];
 Node0x55ad3df2d150[shape=record, label="  %45 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %44)"];
 Node0x55ad3df2d240[shape=record, label="  %46 = add <4 x i32> %40, %39"];
 Node0x55ad3df2d330[shape=record, label="  %47 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %46)"];
 Node0x55ad3df2d420[shape=record, label="  %48 = icmp eq i64 %7, %14"];
 Node0x55ad3df2d510[shape=record, label="  br i1 %48, label %53, label %49"];
 Node0x55ad3df2d600[shape=record, label="  %50 = phi i64 [ 0, %11 ], [ %14, %43 ]"];
 Node0x55ad3df2d6f0[shape=record, label="  %51 = phi i32 [ 0, %11 ], [ %47, %43 ]"];
 Node0x55ad3df2d7e0[shape=record, label="  %52 = phi i32 [ 0, %11 ], [ %45, %43 ]"];
 Node0x55ad3df2d8d0[shape=record, label="  br label %58"];
 Node0x55ad3df2d9c0[shape=record, label="  %54 = phi i32 [ 0, %2 ], [ %45, %43 ], [ %68, %58 ]"];
 Node0x55ad3df2da50[shape=record, label="  %55 = phi i32 [ 0, %2 ], [ %47, %43 ], [ %70, %58 ]"];
 Node0x55ad3df2db40[shape=record, label="  %56 = bitcast %"class.std::vector"* %0 to i8*"];
 Node0x55ad3df2dc30[shape=record, label="  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %56, i8 0, i64 24, i1 false)"];
 Node0x55ad3df2dd20[shape=record, label="  %57 = invoke noalias nonnull i8* @_Znwm(i64 8) #12"];
 Node0x55ad3df2de10[shape=record, label="  to label %73 unwind label %89"];
 Node0x55ad3df2df00[shape=record, label="  %58 = phi i64 [ %71, %58 ], [ %50, %49 ]"];
 Node0x55ad3df2df90[shape=record, label="  %59 = phi i32 [ %70, %58 ], [ %51, %49 ]"];
 Node0x55ad3df2e080[shape=record, label="  %60 = phi i32 [ %68, %58 ], [ %52, %49 ]"];
 Node0x55ad3df2e170[shape=record, label="  %62 = getelementptr inbounds i8, i8* %9, i64 %59"];
 Node0x55ad3df2e260[shape=record, label="  %63 = load i8, i8* %62, align 1, !tbaa !10"];
 Node0x55ad3df2e350[shape=record, label="  %64 = srem i8 %63, 2"];
 Node0x55ad3df2e440[shape=record, label="  %65 = icmp eq i8 %64, 1"];
 Node0x55ad3df2e530[shape=record, label="  %66 = xor i1 %65, true"];
 Node0x55ad3df2e620[shape=record, label="  %67 = zext i1 %66 to i32"];
 Node0x55ad3df2e710[shape=record, label="  %68 = add nuw nsw i32 %61, %67"];
 Node0x55ad3df2e800[shape=record, label="  %69 = zext i1 %65 to i32"];
 Node0x55ad3df2e8f0[shape=record, label="  %70 = add nuw nsw i32 %60, %69"];
 Node0x55ad3df2e9e0[shape=record, label="  %71 = add nuw nsw i64 %59, 1"];
 Node0x55ad3df2eae0[shape=record, label="  %72 = icmp eq i64 %71, %7"];
 Node0x55ad3df2ebd0[shape=record, label="  br i1 %72, label %53, label %58, !llvm.loop !14"];
 Node0x55ad3df2ecc0[shape=record, label="  %74 = bitcast i8* %57 to i32*"];
 Node0x55ad3df2edb0[shape=record, label="  %75 = bitcast %"class.std::vector"* %0 to i8**"];
 Node0x55ad3df2eea0[shape=record, label="  store i8* %57, i8** %75, align 8, !tbaa !16"];
 Node0x55ad3df2ef90[shape=record, label="  %76 = getelementptr inbounds i8, i8* %57, i64 8"];
 Node0x55ad3df2f080[shape=record, label="  %77 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55ad3df2f170[shape=record, label="  %78 = bitcast i32** %77 to i8**"];
 Node0x55ad3df2f260[shape=record, label="  store i8* %76, i8** %78, align 8, !tbaa !18"];
 Node0x55ad3df2f350[shape=record, label="  store i32 %54, i32* %74, align 4"];
 Node0x55ad3df2f440[shape=record, label="  %79 = getelementptr inbounds i8, i8* %57, i64 4"];
 Node0x55ad3df2f530[shape=record, label="  %80 = bitcast i8* %79 to i32*"];
 Node0x55ad3df2f620[shape=record, label="  store i32 %55, i32* %80, align 4"];
 Node0x55ad3df2f710[shape=record, label="  %81 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2f800[shape=record, label="  %82 = bitcast i32** %81 to i8**"];
 Node0x55ad3df2f8f0[shape=record, label="  store i8* %76, i8** %82, align 8, !tbaa !19"];
 Node0x55ad3df2f9e0[shape=record, label="  %83 = load i8*, i8** %8, align 8, !tbaa !20"];
 Node0x55ad3df2fa70[shape=record, label="  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2"];
 Node0x55ad3df2fb60[shape=record, label="  %85 = bitcast %union.anon* %84 to i8*"];
 Node0x55ad3df2fc50[shape=record, label="  %86 = icmp eq i8* %83, %85"];
 Node0x55ad3df2fd40[shape=record, label="  br i1 %86, label %88, label %87"];
 Node0x55ad3df2fe30[shape=record, label="  call void @_ZdlPv(i8* %83)"];
 Node0x55ad3df2ff20[shape=record, label="  br label %88"];
 Node0x55ad3df30010[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4)"];
 Node0x55ad3df30100[shape=record, label="  ret void"];
 Node0x55ad3df30200[shape=record, label="  %90 = landingpad { i8*, i32 }"];
 Node0x55ad3df30300[shape=record, label="  %91 = load i8*, i8** %8, align 8, !tbaa !20"];
 Node0x55ad3df30400[shape=record, label="  %92 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2"];
 Node0x55ad3df30500[shape=record, label="  %93 = bitcast %union.anon* %92 to i8*"];
 Node0x55ad3df30600[shape=record, label="  %94 = icmp eq i8* %91, %93"];
 Node0x55ad3df30700[shape=record, label="  br i1 %94, label %96, label %95"];
 Node0x55ad3df30800[shape=record, label="  call void @_ZdlPv(i8* %91)"];
 Node0x55ad3df30900[shape=record, label="  br label %96"];
 Node0x55ad3df30a00[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4)"];
 Node0x55ad3df30b00[shape=record, label="  resume { i8*, i32 } %90"];
 Node0x55ad3df2a950 -> Node0x55ad3df2aa30
 Node0x55ad3df2aa30 -> Node0x55ad3df2ab50
 Node0x55ad3df2ab50 -> Node0x55ad3df2ac50
 Node0x55ad3df2ac50 -> Node0x55ad3df2ad20
 Node0x55ad3df2ad20 -> Node0x55ad3df2ae10
 Node0x55ad3df2ae10 -> Node0x55ad3df2af00
 Node0x55ad3df2af00 -> Node0x55ad3df2af90
 Node0x55ad3df2af90 -> Node0x55ad3df2b080
 Node0x55ad3df2b080 -> Node0x55ad3df2b170
 Node0x55ad3df2b170 -> Node0x55ad3df2b260
 Node0x55ad3df2b260 -> Node0x55ad3df2b350
 Node0x55ad3df2b350 -> Node0x55ad3df2b440
 Node0x55ad3df2b440 -> Node0x55ad3df2b530
 Node0x55ad3df2b530 -> Node0x55ad3df2b620
 Node0x55ad3df2b620 -> Node0x55ad3df2b710
 Node0x55ad3df2b710 -> Node0x55ad3df2b800
 Node0x55ad3df2b800 -> Node0x55ad3df2b8f0
 Node0x55ad3df2b8f0 -> Node0x55ad3df2b9e0
 Node0x55ad3df2b9e0 -> Node0x55ad3df2ba50
 Node0x55ad3df2ba50 -> Node0x55ad3df2bb40
 Node0x55ad3df2bb40 -> Node0x55ad3df2bc30
 Node0x55ad3df2bc30 -> Node0x55ad3df2bd20
 Node0x55ad3df2bd20 -> Node0x55ad3df2be10
 Node0x55ad3df2be10 -> Node0x55ad3df2bf00
 Node0x55ad3df2bf00 -> Node0x55ad3df2c0d0
 Node0x55ad3df2c0d0 -> Node0x55ad3df2c1c0
 Node0x55ad3df2c1c0 -> Node0x55ad3df2c2b0
 Node0x55ad3df2c2b0 -> Node0x55ad3df2c3a0
 Node0x55ad3df2c3a0 -> Node0x55ad3df2c490
 Node0x55ad3df2c490 -> Node0x55ad3df2c580
 Node0x55ad3df2c580 -> Node0x55ad3df2c670
 Node0x55ad3df2c670 -> Node0x55ad3df2c760
 Node0x55ad3df2c760 -> Node0x55ad3df2c850
 Node0x55ad3df2c850 -> Node0x55ad3df2c940
 Node0x55ad3df2c940 -> Node0x55ad3df2ca30
 Node0x55ad3df2ca30 -> Node0x55ad3df2cb20
 Node0x55ad3df2cb20 -> Node0x55ad3df2cc10
 Node0x55ad3df2cc10 -> Node0x55ad3df2cd00
 Node0x55ad3df2cd00 -> Node0x55ad3df2ce80
 Node0x55ad3df2ce80 -> Node0x55ad3df2cf70
 Node0x55ad3df2cf70 -> Node0x55ad3df2d060
 Node0x55ad3df2d060 -> Node0x55ad3df2d150
 Node0x55ad3df2d150 -> Node0x55ad3df2d240
 Node0x55ad3df2d240 -> Node0x55ad3df2d330
 Node0x55ad3df2d330 -> Node0x55ad3df2d420
 Node0x55ad3df2d420 -> Node0x55ad3df2d510
 Node0x55ad3df2d510 -> Node0x55ad3df2d600
 Node0x55ad3df2d600 -> Node0x55ad3df2d6f0
 Node0x55ad3df2d6f0 -> Node0x55ad3df2d7e0
 Node0x55ad3df2d7e0 -> Node0x55ad3df2d8d0
 Node0x55ad3df2d8d0 -> Node0x55ad3df2d9c0
 Node0x55ad3df2d9c0 -> Node0x55ad3df2da50
 Node0x55ad3df2da50 -> Node0x55ad3df2db40
 Node0x55ad3df2db40 -> Node0x55ad3df2dc30
 Node0x55ad3df2dc30 -> Node0x55ad3df2dd20
 Node0x55ad3df2dd20 -> Node0x55ad3df2de10
 Node0x55ad3df2de10 -> Node0x55ad3df2df00
 Node0x55ad3df2df00 -> Node0x55ad3df2e080
 Node0x55ad3df2e080 -> Node0x55ad3df2e170
 Node0x55ad3df2e170 -> Node0x55ad3df2e260
 Node0x55ad3df2e260 -> Node0x55ad3df2e350
 Node0x55ad3df2e350 -> Node0x55ad3df2e440
 Node0x55ad3df2e440 -> Node0x55ad3df2e530
 Node0x55ad3df2e530 -> Node0x55ad3df2e620
 Node0x55ad3df2e620 -> Node0x55ad3df2e710
 Node0x55ad3df2e710 -> Node0x55ad3df2e800
 Node0x55ad3df2e800 -> Node0x55ad3df2e8f0
 Node0x55ad3df2e8f0 -> Node0x55ad3df2e9e0
 Node0x55ad3df2e9e0 -> Node0x55ad3df2eae0
 Node0x55ad3df2eae0 -> Node0x55ad3df2ebd0
 Node0x55ad3df2ebd0 -> Node0x55ad3df2ecc0
 Node0x55ad3df2ecc0 -> Node0x55ad3df2edb0
 Node0x55ad3df2edb0 -> Node0x55ad3df2eea0
 Node0x55ad3df2eea0 -> Node0x55ad3df2ef90
 Node0x55ad3df2ef90 -> Node0x55ad3df2f080
 Node0x55ad3df2f080 -> Node0x55ad3df2f170
 Node0x55ad3df2f170 -> Node0x55ad3df2f260
 Node0x55ad3df2f260 -> Node0x55ad3df2f350
 Node0x55ad3df2f350 -> Node0x55ad3df2f440
 Node0x55ad3df2f440 -> Node0x55ad3df2f530
 Node0x55ad3df2f530 -> Node0x55ad3df2f620
 Node0x55ad3df2f620 -> Node0x55ad3df2f710
 Node0x55ad3df2f710 -> Node0x55ad3df2f800
 Node0x55ad3df2f800 -> Node0x55ad3df2f8f0
 Node0x55ad3df2f8f0 -> Node0x55ad3df2f9e0
 Node0x55ad3df2f9e0 -> Node0x55ad3df2fa70
 Node0x55ad3df2fa70 -> Node0x55ad3df2fb60
 Node0x55ad3df2fb60 -> Node0x55ad3df2fc50
 Node0x55ad3df2fc50 -> Node0x55ad3df2fd40
 Node0x55ad3df2fd40 -> Node0x55ad3df2fe30
 Node0x55ad3df2fe30 -> Node0x55ad3df30010
 Node0x55ad3df30010 -> Node0x55ad3df30100
 Node0x55ad3df30100 -> Node0x55ad3df30200
 Node0x55ad3df30200 -> Node0x55ad3df30300
 Node0x55ad3df30300 -> Node0x55ad3df30400
 Node0x55ad3df30400 -> Node0x55ad3df30500
 Node0x55ad3df30500 -> Node0x55ad3df30600
 Node0x55ad3df30600 -> Node0x55ad3df30700
 Node0x55ad3df30700 -> Node0x55ad3df30800
 Node0x55ad3df30800 -> Node0x55ad3df30900
 Node0x55ad3df30900 -> Node0x55ad3df30a00
 Node0x55ad3df30a00 -> Node0x55ad3df30b00
 Node0x55ad3df30b00 -> Node0x55ad3df30c00
}