digraph "DFG for'total_match' function" {
 Node0x55ad3df2a950[shape=record, label="  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2aa30[shape=record, label="  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8, !tbaa !3"];
 Node0x55ad3df2ab50[shape=record, label="  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2ac50[shape=record, label="  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8, !tbaa !8"];
 Node0x55ad3df2ad20[shape=record, label="  %8 = ptrtoint %"class.std::__cxx11::basic_string"* %5 to i64"];
 Node0x55ad3df2ae00[shape=record, label="  %9 = ptrtoint %"class.std::__cxx11::basic_string"* %7 to i64"];
 Node0x55ad3df2aec0[shape=record, label="  %10 = sub i64 %8, %9"];
 Node0x55ad3df2af80[shape=record, label="  %11 = icmp eq i64 %10, 0"];
 Node0x55ad3df2b040[shape=record, label="  br i1 %11, label %36, label %12"];
 Node0x55ad3df2b120[shape=record, label="  %13 = ashr exact i64 %10, 5"];
 Node0x55ad3df2b200[shape=record, label="  %14 = call i64 @llvm.umax.i64(i64 %13, i64 1)"];
 Node0x55ad3df2b2e0[shape=record, label="  %15 = add i64 %14, -1"];
 Node0x55ad3df2b3a0[shape=record, label="  %16 = and i64 %14, 3"];
 Node0x55ad3df2b460[shape=record, label="  %17 = icmp ult i64 %15, 3"];
 Node0x55ad3df2b520[shape=record, label="  br i1 %17, label %20, label %18"];
 Node0x55ad3df2b600[shape=record, label="  %19 = and i64 %14, -4"];
 Node0x55ad3df2b6c0[shape=record, label="  br label %54"];
 Node0x55ad3df2b780[shape=record, label="  %21 = phi i32 [ undef, %12 ], [ %76, %54 ]"];
 Node0x55ad3df2b840[shape=record, label="  %22 = phi i64 [ 0, %12 ], [ %77, %54 ]"];
 Node0x55ad3df2b900[shape=record, label="  %23 = phi i32 [ 0, %12 ], [ %76, %54 ]"];
 Node0x55ad3df2b9c0[shape=record, label="  %24 = icmp eq i64 %16, 0"];
 Node0x55ad3df2ba80[shape=record, label="  br i1 %24, label %36, label %25"];
 Node0x55ad3df2bb40[shape=record, label="  %26 = phi i64 [ %33, %25 ], [ %22, %20 ]"];
 Node0x55ad3df2bc00[shape=record, label="  %27 = phi i32 [ %32, %25 ], [ %23, %20 ]"];
 Node0x55ad3df2bcd0[shape=record, label="  %28 = phi i64 [ %34, %25 ], [ %16, %20 ]"];
 Node0x55ad3df2bd90[shape=record, label="  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 %26, i32 1"];
 Node0x55ad3df2be50[shape=record, label="  %30 = load i64, i64* %29, align 8, !tbaa !9"];
 Node0x55ad3df2bf10[shape=record, label="  %31 = trunc i64 %30 to i32"];
 Node0x55ad3df2bfc0[shape=record, label="  %32 = add i32 %27, %31"];
 Node0x55ad3df2c080[shape=record, label="  %33 = add nuw nsw i64 %26, 1"];
 Node0x55ad3df2c140[shape=record, label="  %34 = add i64 %28, -1"];
 Node0x55ad3df2c200[shape=record, label="  %35 = icmp eq i64 %34, 0"];
 Node0x55ad3df2c2c0[shape=record, label="  br i1 %35, label %36, label %25, !llvm.loop !13"];
 Node0x55ad3df2c380[shape=record, label="  %37 = phi i32 [ 0, %3 ], [ %21, %20 ], [ %32, %25 ]"];
 Node0x55ad3df2c440[shape=record, label="  %38 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2c500[shape=record, label="  %39 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %38, align 8, !tbaa !3"];
 Node0x55ad3df2c5c0[shape=record, label="  %40 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2c680[shape=record, label="  %41 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %40, align 8, !tbaa !8"];
 Node0x55ad3df2c740[shape=record, label="  %42 = ptrtoint %"class.std::__cxx11::basic_string"* %39 to i64"];
 Node0x55ad3df2c800[shape=record, label="  %43 = ptrtoint %"class.std::__cxx11::basic_string"* %41 to i64"];
 Node0x55ad3df2c8c0[shape=record, label="  %44 = sub i64 %42, %43"];
 Node0x55ad3df2c980[shape=record, label="  %45 = icmp eq i64 %44, 0"];
 Node0x55ad3df2ca40[shape=record, label="  br i1 %45, label %122, label %46"];
 Node0x55ad3df2cb00[shape=record, label="  %47 = ashr exact i64 %44, 5"];
 Node0x55ad3df2cbc0[shape=record, label="  %48 = call i64 @llvm.umax.i64(i64 %47, i64 1)"];
 Node0x55ad3df2cc80[shape=record, label="  %49 = add i64 %48, -1"];
 Node0x55ad3df2cd40[shape=record, label="  %50 = and i64 %48, 3"];
 Node0x55ad3df2ce00[shape=record, label="  %51 = icmp ult i64 %49, 3"];
 Node0x55ad3df2cec0[shape=record, label="  br i1 %51, label %106, label %52"];
 Node0x55ad3df2cf80[shape=record, label="  %53 = and i64 %48, -4"];
 Node0x55ad3df2d040[shape=record, label="  br label %80"];
 Node0x55ad3df2d100[shape=record, label="  %55 = phi i64 [ 0, %18 ], [ %77, %54 ]"];
 Node0x55ad3df2d1c0[shape=record, label="  %56 = phi i32 [ 0, %18 ], [ %76, %54 ]"];
 Node0x55ad3df2d280[shape=record, label="  %57 = phi i64 [ %19, %18 ], [ %78, %54 ]"];
 Node0x55ad3df2d340[shape=record, label="  %58 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 %55, i32 1"];
 Node0x55ad3df2d400[shape=record, label="  %59 = load i64, i64* %58, align 8, !tbaa !9"];
 Node0x55ad3df2d4c0[shape=record, label="  %60 = trunc i64 %59 to i32"];
 Node0x55ad3df2d580[shape=record, label="  %61 = add i32 %56, %60"];
 Node0x55ad3df2d640[shape=record, label="  %62 = or i64 %55, 1"];
 Node0x55ad3df2d700[shape=record, label="  %63 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 %62, i32 1"];
 Node0x55ad3df2d7c0[shape=record, label="  %64 = load i64, i64* %63, align 8, !tbaa !9"];
 Node0x55ad3df2d880[shape=record, label="  %65 = trunc i64 %64 to i32"];
 Node0x55ad3df2d940[shape=record, label="  %66 = add i32 %61, %65"];
 Node0x55ad3df2da00[shape=record, label="  %67 = or i64 %55, 2"];
 Node0x55ad3df2dac0[shape=record, label="  %68 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 %67, i32 1"];
 Node0x55ad3df2db80[shape=record, label="  %69 = load i64, i64* %68, align 8, !tbaa !9"];
 Node0x55ad3df2dc40[shape=record, label="  %70 = trunc i64 %69 to i32"];
 Node0x55ad3df2dd00[shape=record, label="  %71 = add i32 %66, %70"];
 Node0x55ad3df2ddc0[shape=record, label="  %72 = or i64 %55, 3"];
 Node0x55ad3df2de80[shape=record, label="  %73 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 %73, i32 1"];
 Node0x55ad3df2df40[shape=record, label="  %74 = load i64, i64* %73, align 8, !tbaa !9"];
 Node0x55ad3df2e000[shape=record, label="  %75 = trunc i64 %74 to i32"];
 Node0x55ad3df2e0c0[shape=record, label="  %76 = add i32 %71, %75"];
 Node0x55ad3df2e180[shape=record, label="  %77 = add nuw nsw i64 %55, 4"];
 Node0x55ad3df2e240[shape=record, label="  %78 = add i64 %57, -4"];
 Node0x55ad3df2e300[shape=record, label="  %79 = icmp eq i64 %78, 0"];
 Node0x55ad3df2e3c0[shape=record, label="  br i1 %79, label %20, label %54, !llvm.loop !15"];
 Node0x55ad3df2e480[shape=record, label="  %81 = phi i64 [ 0, %52 ], [ %103, %80 ]"];
 Node0x55ad3df2e540[shape=record, label="  %82 = phi i32 [ 0, %52 ], [ %102, %80 ]"];
 Node0x55ad3df2e600[shape=record, label="  %83 = phi i64 [ %53, %52 ], [ %104, %80 ]"];
 Node0x55ad3df2e6c0[shape=record, label="  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %41, i64 %81, i32 1"];
 Node0x55ad3df2e780[shape=record, label="  %85 = load i64, i64* %84, align 8, !tbaa !9"];
 Node0x55ad3df2e840[shape=record, label="  %86 = trunc i64 %85 to i32"];
 Node0x55ad3df2e900[shape=record, label="  %87 = add i32 %82, %86"];
 Node0x55ad3df2e9c0[shape=record, label="  %88 = or i64 %81, 1"];
 Node0x55ad3df2ea80[shape=record, label="  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %41, i64 %88, i32 1"];
 Node0x55ad3df2eb40[shape=record, label="  %90 = load i64, i64* %89, align 8, !tbaa !9"];
 Node0x55ad3df2ec00[shape=record, label="  %91 = trunc i64 %90 to i32"];
 Node0x55ad3df2ecc0[shape=record, label="  %92 = add i32 %87, %91"];
 Node0x55ad3df2ed80[shape=record, label="  %93 = or i64 %81, 2"];
 Node0x55ad3df2ee40[shape=record, label="  %94 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %41, i64 %93, i32 1"];
 Node0x55ad3df2ef00[shape=record, label="  %95 = load i64, i64* %94, align 8, !tbaa !9"];
 Node0x55ad3df2efc0[shape=record, label="  %96 = trunc i64 %95 to i32"];
 Node0x55ad3df2f080[shape=record, label="  %97 = add i32 %92, %96"];
 Node0x55ad3df2f140[shape=record, label="  %98 = or i64 %81, 3"];
 Node0x55ad3df2f200[shape=record, label="  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %41, i64 %98, i32 1"];
 Node0x55ad3df2f2c0[shape=record, label="  %100 = load i64, i64* %99, align 8, !tbaa !9"];
 Node0x55ad3df2f380[shape=record, label="  %101 = trunc i64 %100 to i32"];
 Node0x55ad3df2f440[shape=record, label="  %102 = add i32 %97, %101"];
 Node0x55ad3df2f500[shape=record, label="  %103 = add nuw nsw i64 %81, 4"];
 Node0x55ad3df2f5c0[shape=record, label="  %104 = add i64 %83, -4"];
 Node0x55ad3df2f680[shape=record, label="  %105 = icmp eq i64 %104, 0"];
 Node0x55ad3df2f740[shape=record, label="  br i1 %105, label %106, label %80, !llvm.loop !17"];
 Node0x55ad3df2f800[shape=record, label="  %107 = phi i32 [ undef, %46 ], [ %102, %80 ]"];
 Node0x55ad3df2f8c0[shape=record, label="  %108 = phi i64 [ 0, %46 ], [ %103, %80 ]"];
 Node0x55ad3df2f980[shape=record, label="  %109 = phi i32 [ 0, %46 ], [ %102, %80 ]"];
 Node0x55ad3df2fa40[shape=record, label="  %110 = icmp eq i64 %50, 0"];
 Node0x55ad3df2fb00[shape=record, label="  br i1 %110, label %122, label %111"];
 Node0x55ad3df2fb60[shape=record, label="  %112 = phi i64 [ %119, %111 ], [ %108, %106 ]"];
 Node0x55ad3df2fc20[shape=record, label="  %113 = phi i32 [ %118, %111 ], [ %109, %106 ]"];
 Node0x55ad3df2fce0[shape=record, label="  %114 = phi i64 [ %120, %111 ], [ %50, %106 ]"];
 Node0x55ad3df2fd80[shape=record, label="  %115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %41, i64 %112, i32 1"];
 Node0x55ad3df2fe40[shape=record, label="  %116 = load i64, i64* %115, align 8, !tbaa !9"];
 Node0x55ad3df2ff00[shape=record, label="  %117 = trunc i64 %116 to i32"];
 Node0x55ad3df300c0[shape=record, label="  %118 = add i32 %113, %117"];
 Node0x55ad3df30180[shape=record, label="  %119 = add nuw nsw i64 %112, 1"];
 Node0x55ad3df30240[shape=record, label="  %120 = add i64 %114, -1"];
 Node0x55ad3df30300[shape=record, label="  %121 = icmp eq i64 %120, 0"];
 Node0x55ad3df303c0[shape=record, label="  br i1 %121, label %122, label %111, !llvm.loop !18"];
 Node0x55ad3df30480[shape=record, label="  %123 = phi i32 [ 0, %36 ], [ %107, %106 ], [ %118, %111 ]"];
 Node0x55ad3df30540[shape=record, label="  %124 = icmp sgt i32 %37, %123"];
 Node0x55ad3df30600[shape=record, label="  %125 = select i1 %124, %"class.std::vector"* %2, %"class.std::vector"* %1"];
 Node0x55ad3df306c0[shape=record, label="  %126 = select i1 %124, %"class.std::__cxx11::basic_string"* %41, %"class.std::__cxx11::basic_string"* %7"];
 Node0x55ad3df30780[shape=record, label="  %127 = select i1 %124, %"class.std::__cxx11::basic_string"* %39, %"class.std::__cxx11::basic_string"* %5"];
 Node0x55ad3df30840[shape=record, label="  %128 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %125, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55ad3df30900[shape=record, label="  %129 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %128, align 8, !tbaa !19"];
 Node0x55ad3df309c0[shape=record, label="  %130 = bitcast %"class.std::vector"* %125 to i8*"];
 Node0x55ad3df30a80[shape=record, label="  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %130, i8 0, i64 24, i1 false) #3"];
 Node0x55ad3df30b40[shape=record, label="  %131 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df30c00[shape=record, label="  store %"class.std::__cxx11::basic_string"* %126, %"class.std::__cxx11::basic_string"** %131, align 8"];
 Node0x55ad3df30cc0[shape=record, label="  %132 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df30d80[shape=record, label="  store %"class.std::__cxx11::basic_string"* %127, %"class.std::__cxx11::basic_string"** %132, align 8"];
 Node0x55ad3df30e40[shape=record, label="  %133 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55ad3df30f00[shape=record, label="  store %"class.std::__cxx11::basic_string"* %129, %"class.std::__cxx11::basic_string"** %133, align 8"];
 Node0x55ad3df30fc0[shape=record, label="  ret void"];
 Node0x55ad3df2a950 -> Node0x55ad3df2aa30
 Node0x55ad3df2aa30 -> Node0x55ad3df2ab50
 Node0x55ad3df2ab50 -> Node0x55ad3df2ac50
 Node0x55ad3df2ac50 -> Node0x55ad3df2ad20
 Node0x55ad3df2ad20 -> Node0x55ad3df2aec0
 Node0x55ad3df2aec0 -> Node0x55ad3df2af80
 Node0x55ad3df2af80 -> Node0x55ad3df2b040
 Node0x55ad3df2b040 -> Node0x55ad3df2b120
 Node0x55ad3df2b120 -> Node0x55ad3df2b200
 Node0x55ad3df2b200 -> Node0x55ad3df2b2e0
 Node0x55ad3df2b2e0 -> Node0x55ad3df2b3a0
 Node0x55ad3df2b3a0 -> Node0x55ad3df2b460
 Node0x55ad3df2b460 -> Node0x55ad3df2b520
 Node0x55ad3df2b520 -> Node0x55ad3df2b600
 Node0x55ad3df2b600 -> Node0x55ad3df2b780
 Node0x55ad3df2b780 -> Node0x55ad3df2b840
 Node0x55ad3df2b840 -> Node0x55ad3df2b900
 Node0x55ad3df2b900 -> Node0x55ad3df2b9c0
 Node0x55ad3df2b9c0 -> Node0x55ad3df2ba80
 Node0x55ad3df2ba80 -> Node0x55ad3df2bb40
 Node0x55ad3df2bb40 -> Node0x55ad3df2bc00
 Node0x55ad3df2bc00 -> Node0x55ad3df2bcd0
 Node0x55ad3df2bcd0 -> Node0x55ad3df2be50
 Node0x55ad3df2be50 -> Node0x55ad3df2bf10
 Node0x55ad3df2bf10 -> Node0x55ad3df2bfc0
 Node0x55ad3df2bfc0 -> Node0x55ad3df2c080
 Node0x55ad3df2c080 -> Node0x55ad3df2c140
 Node0x55ad3df2c140 -> Node0x55ad3df2c200
 Node0x55ad3df2c200 -> Node0x55ad3df2c2c0
 Node0x55ad3df2c2c0 -> Node0x55ad3df2c380
 Node0x55ad3df2c380 -> Node0x55ad3df2c440
 Node0x55ad3df2c440 -> Node0x55ad3df2c500
 Node0x55ad3df2c500 -> Node0x55ad3df2c5c0
 Node0x55ad3df2c5c0 -> Node0x55ad3df2c680
 Node0x55ad3df2c680 -> Node0x55ad3df2c740
 Node0x55ad3df2c740 -> Node0x55ad3df2c800
 Node0x55ad3df2c800 -> Node0x55ad3df2c8c0
 Node0x55ad3df2c8c0 -> Node0x55ad3df2c980
 Node0x55ad3df2c980 -> Node0x55ad3df2ca40
 Node0x55ad3df2ca40 -> Node0x55ad3df2cb00
 Node0x55ad3df2cb00 -> Node0x55ad3df2cb60
 Node0x55ad3df2cb60 -> Node0x55ad3df2cc80
 Node0x55ad3df2cc80 -> Node0x55ad3df2cd40
 Node0x55ad3df2cd40 -> Node0x55ad3df2ce00
 Node0x55ad3df2ce00 -> Node0x55ad3df2cec0
 Node0x55ad3df2cec0 -> Node0x55ad3df2cf80
 Node0x55ad3df2cf80 -> Node0x55ad3df2d040
 Node0x55ad3df2d040 -> Node0x55ad3df2d100
 Node0x55ad3df2d100 -> Node0x55ad3df2d280
 Node0x55ad3df2d280 -> Node0x55ad3df2d340
 Node0x55ad3df2d340 -> Node0x55ad3df2d400
 Node0x55ad3df2d400 -> Node0x55ad3df2d4c0
 Node0x55ad3df2d4c0 -> Node0x55ad3df2d580
 Node0x55ad3df2d580 -> Node0x55ad3df2d640
 Node0x55ad3df2d640 -> Node0x55ad3df2d700
 Node0x55ad3df2d700 -> Node0x55ad3df2d7c0
 Node0x55ad3df2d7c0 -> Node0x55ad3df2d880
 Node0x55ad3df2d880 -> Node0x55ad3df2d940
 Node0x55ad3df2d940 -> Node0x55ad3df2da00
 Node0x55ad3df2da00 -> Node0x55ad3df2dac0
 Node0x55ad3df2dac0 -> Node0x55ad3df2db80
 Node0x55ad3df2db80 -> Node0x55ad3df2dc40
 Node0x55ad3df2dc40 -> Node0x55ad3df2dd00
 Node0x55ad3df2dd00 -> Node0x55ad3df2ddc0
 Node0x55ad3df2ddc0 -> Node0x55ad3df2de80
 Node0x55ad3df2de80 -> Node0x55ad3df2df40
 Node0x55ad3df2df40 -> Node0x55ad3df2e000
 Node0x55ad3df2e000 -> Node0x55ad3df2e0c0
 Node0x55ad3df2e0c0 -> Node0x55ad3df2e180
 Node0x55ad3df2e180 -> Node0x55ad3df2e240
 Node0x55ad3df2e240 -> Node0x55ad3df2e300
 Node0x55ad3df2e300 -> Node0x55ad3df2e3c0
 Node0x55ad3df2e3c0 -> Node0x55ad3df2e480
 Node0x55ad3df2e480 -> Node0x55ad3df2e540
 Node0x55ad3df2e540 -> Node0x55ad3df2e600
 Node0x55ad3df2e600 -> Node0x55ad3df2e6c0
 Node0x55ad3df2e6c0 -> Node0x55ad3df2e780
 Node0x55ad3df2e780 -> Node0x55ad3df2e840
 Node0x55ad3df2e840 -> Node0x55ad3df2e900
 Node0x55ad3df2e900 -> Node0x55ad3df2e9c0
 Node0x55ad3df2e9c0 -> Node0x55ad3df2ea80
 Node0x55ad3df2ea80 -> Node0x55ad3df2eb40
 Node0x55ad3df2eb40 -> Node0x55ad3df2ec00
 Node0x55ad3df2ec00 -> Node0x55ad3df2ecc0
 Node0x55ad3df2ecc0 -> Node0x55ad3df2ed80
 Node0x55ad3df2ed80 -> Node0x55ad3df2ee40
 Node0x55ad3df2ee40 -> Node0x55ad3df2ef00
 Node0x55ad3df2ef00 -> Node0x55ad3df2efc0
 Node0x55ad3df2efc0 -> Node0x55ad3df2f080
 Node0x55ad3df2f080 -> Node0x55ad3df2f140
 Node0x55ad3df2f140 -> Node0x55ad3df2f200
 Node0x55ad3df2f200 -> Node0x55ad3df2f2c0
 Node0x55ad3df2f2c0 -> Node0x55ad3df2f380
 Node0x55ad3df2f380 -> Node0x55ad3df2f440
 Node0x55ad3df2f440 -> Node0x55ad3df2f500
 Node0x55ad3df2f500 -> Node0x55ad3df2f680
 Node0x55ad3df2f680 -> Node0x55ad3df2f740
 Node0x55ad3df2f740 -> Node0x55ad3df2f800
}