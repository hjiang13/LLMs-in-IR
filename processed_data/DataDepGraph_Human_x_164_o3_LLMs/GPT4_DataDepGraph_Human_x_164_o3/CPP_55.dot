digraph "DFG for'_Z3fibi' function" {
 Node0x55ad3df2a950[shape=record, label="  %2 = alloca [1000 x i32], align 16"];
 Node0x55ad3df2aa30[shape=record, label="  %3 = bitcast [1000 x i32]* %2 to i8*"];
 Node0x55ad3df2ab50[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %3)"];
 Node0x55ad3df2ac50[shape=record, label="  %4 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 0"];
 Node0x55ad3df2ad20[shape=record, label="  store i32 0, i32* %4, align 16, !tbaa !3"];
 Node0x55ad3df2ae10[shape=record, label="  %5 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 1"];
 Node0x55ad3df2af00[shape=record, label="  store i32 1, i32* %5, align 4, !tbaa !3"];
 Node0x55ad3df2b000[shape=record, label="  %6 = icmp slt i32 %0, 2"];
 Node0x55ad3df2b100[shape=record, label="  br i1 %6, label %37, label %7"];
 Node0x55ad3df2b200[shape=record, label="  %8 = add nuw i32 %0, 1"];
 Node0x55ad3df2b300[shape=record, label="  %9 = zext i32 %8 to i64"];
 Node0x55ad3df2b400[shape=record, label="  %10 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 2"];
 Node0x55ad3df2b500[shape=record, label="  store i32 1, i32* %10, align 8, !tbaa !3"];
 Node0x55ad3df2b600[shape=record, label="  %11 = icmp eq i32 %8, 3"];
 Node0x55ad3df2b700[shape=record, label="  br i1 %11, label %37, label %12, !llvm.loop !7"];
 Node0x55ad3df2b800[shape=record, label="  %13 = add nsw i64 %9, -3"];
 Node0x55ad3df2b900[shape=record, label="  %14 = add nsw i64 %9, -4"];
 Node0x55ad3df2ba00[shape=record, label="  %15 = and i64 %13, 3"];
 Node0x55ad3df2bb00[shape=record, label="  %16 = icmp ult i64 %14, 3"];
 Node0x55ad3df2bc00[shape=record, label="  br i1 %16, label %19, label %17"];
 Node0x55ad3df2bd00[shape=record, label="  %18 = and i64 %13, -4"];
 Node0x55ad3df2be00[shape=record, label="  br label %41"];
 Node0x55ad3df2bf00[shape=record, label="  %20 = phi i64 [ 3, %12 ], [ %67, %41 ]"];
 Node0x55ad3df2c000[shape=record, label="  %21 = phi i32 [ 1, %12 ], [ %65, %41 ]"];
 Node0x55ad3df2c100[shape=record, label="  %22 = phi i64 [ 2, %12 ], [ %62, %41 ]"];
 Node0x55ad3df2c200[shape=record, label="  %23 = icmp eq i64 %15, 0"];
 Node0x55ad3df2c300[shape=record, label="  br i1 %23, label %37, label %24"];
 Node0x55ad3df2c400[shape=record, label="  %25 = phi i64 [ %34, %24 ], [ %20, %19 ]"];
 Node0x55ad3df2c500[shape=record, label="  %26 = phi i32 [ %32, %24 ], [ %21, %19 ]"];
 Node0x55ad3df2c600[shape=record, label="  %27 = phi i64 [ %25, %24 ], [ %22, %19 ]"];
 Node0x55ad3df2c700[shape=record, label="  %28 = phi i64 [ %35, %24 ], [ %15, %19 ]"];
 Node0x55ad3df2c800[shape=record, label="  %29 = add nsw i64 %27, -1"];
 Node0x55ad3df2c900[shape=record, label="  %30 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %29"];
 Node0x55ad3df2ca00[shape=record, label="  %31 = load i32, i32* %30, align 4, !tbaa !3"];
 Node0x55ad3df2cb00[shape=record, label="  %32 = add nsw i32 %31, %26"];
 Node0x55ad3df2cc00[shape=record, label="  %33 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %25"];
 Node0x55ad3df2cd00[shape=record, label="  store i32 %32, i32* %33, align 4, !tbaa !3"];
 Node0x55ad3df2ce00[shape=record, label="  %34 = add nuw nsw i64 %25, 1"];
 Node0x55ad3df2cf00[shape=record, label="  %35 = add i64 %28, -1"];
 Node0x55ad3df2d000[shape=record, label="  %36 = icmp eq i64 %35, 0"];
 Node0x55ad3df2d100[shape=record, label="  br i1 %36, label %37, label %24, !llvm.loop !9"];
 Node0x55ad3df2d200[shape=record, label="  %38 = sext i32 %0 to i64"];
 Node0x55ad3df2d300[shape=record, label="  %39 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %38"];
 Node0x55ad3df2d400[shape=record, label="  %40 = load i32, i32* %39, align 4, !tbaa !3"];
 Node0x55ad3df2d500[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %3)"];
 Node0x55ad3df2d600[shape=record, label="  ret i32 %40"];
 Node0x55ad3df2d700[shape=record, label="  %42 = phi i64 [ 3, %17 ], [ %67, %41 ]"];
 Node0x55ad3df2d800[shape=record, label="  %43 = phi i32 [ 1, %17 ], [ %65, %41 ]"];
 Node0x55ad3df2d900[shape=record, label="  %44 = phi i64 [ 2, %17 ], [ %62, %41 ]"];
 Node0x55ad3df2da00[shape=record, label="  %45 = phi i64 [ %18, %17 ], [ %68, %41 ]"];
 Node0x55ad3df2db00[shape=record, label="  %46 = add nsw i64 %44, -1"];
 Node0x55ad3df2dc00[shape=record, label="  %47 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %46"];
 Node0x55ad3df2dd00[shape=record, label="  %48 = load i32, i32* %47, align 4, !tbaa !3"];
 Node0x55ad3df2de00[shape=record, label="  %49 = add nsw i32 %48, %43"];
 Node0x55ad3df2df00[shape=record, label="  %50 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %42"];
 Node0x55ad3df2e000[shape=record, label="  store i32 %49, i32* %50, align 4, !tbaa !3"];
 Node0x55ad3df2e100[shape=record, label="  %51 = add nuw nsw i64 %42, 1"];
 Node0x55ad3df2e200[shape=record, label="  %52 = add nsw i64 %42, -1"];
 Node0x55ad3df2e300[shape=record, label="  %53 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %52"];
 Node0x55ad3df2e400[shape=record, label="  %54 = load i32, i32* %53, align 4, !tbaa !3"];
 Node0x55ad3df2e500[shape=record, label="  %55 = add nsw i32 %54, %49"];
 Node0x55ad3df2e600[shape=record, label="  %56 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %51"];
 Node0x55ad3df2e700[shape=record, label="  store i32 %55, i32* %56, align 4, !tbaa !3"];
 Node0x55ad3df2e800[shape=record, label="  %57 = add nuw nsw i64 %42, 2"];
 Node0x55ad3df2e900[shape=record, label="  %58 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %42"];
 Node0x55ad3df2ea00[shape=record, label="  %59 = load i32, i32* %58, align 4, !tbaa !3"];
 Node0x55ad3df2eb00[shape=record, label="  %60 = add nsw i32 %59, %55"];
 Node0x55ad3df2ec00[shape=record, label="  %61 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %57"];
 Node0x55ad3df2ed00[shape=record, label="  store i32 %60, i32* %61, align 4, !tbaa !3"];
 Node0x55ad3df2ee00[shape=record, label="  %62 = add nuw nsw i64 %42, 3"];
 Node0x55ad3df2ef00[shape=record, label="  %63 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %51"];
 Node0x55ad3df2f000[shape=record, label="  %64 = load i32, i32* %63, align 4, !tbaa !3"];
 Node0x55ad3df2f100[shape=record, label="  %65 = add nsw i32 %64, %60"];
 Node0x55ad3df2f200[shape=record, label="  %66 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %62"];
 Node0x55ad3df2f300[shape=record, label="  store i32 %65, i32* %66, align 4, !tbaa !3"];
 Node0x55ad3df2f400[shape=record, label="  %67 = add nuw nsw i64 %42, 4"];
 Node0x55ad3df2f500[shape=record, label="  %68 = add i64 %45, -4"];
 Node0x55ad3df2f600[shape=record, label="  %69 = icmp eq i64 %68, 0"];
 Node0x55ad3df2f700[shape=record, label="  br i1 %69, label %19, label %41, !llvm.loop !7"];
 Node0x55ad3df2f800[shape=record, label="  Node0x55ad3df2b100"];
 Node0x55ad3df2b100 -> Node0x55ad3df2b200;
 Node0x55ad3df2b200 -> Node0x55ad3df2b300;
 Node0x55ad3df2b300 -> Node0x55ad3df2b400;
 Node0x55ad3df2b400 -> Node0x55ad3df2b500;
 Node0x55ad3df2b500 -> Node0x55ad3df2b600;
 Node0x55ad3df2b600 -> Node0x55ad3df2b700;
 Node0x55ad3df2b700 -> Node0x55ad3df2b800;
 Node0x55ad3df2b800 -> Node0x55ad3df2b900;
 Node0x55ad3df2b900 -> Node0x55ad3df2ba00;
 Node0x55ad3df2ba00 -> Node0x55ad3df2bb00;
 Node0x55ad3df2bb00 -> Node0x55ad3df2bc00;
 Node0x55ad3df2bc00 -> Node0x55ad3df2bd00;
 Node0x55ad3df2bd00 -> Node0x55ad3df2be00;
 Node0x55ad3df2be00 -> Node0x55ad3df2bf00;
 Node0x55ad3df2bf00 -> Node0x55ad3df2c000;
 Node0x55ad3df2c000 -> Node0x55ad3df2c100;
 Node0x55ad3df2c100 -> Node0x55ad3df2c200;
 Node0x55ad3df2c200 -> Node0x55ad3df2c300;
 Node0x55ad3df2c300 -> Node0x55ad3df2c400;
 Node0x55ad3df2c400 -> Node0x55ad3df2c500;
 Node0x55ad3df2c500 -> Node0x55ad3df2c600;
 Node0x55ad3df2c600 -> Node0x55ad3df2c700;
 Node0x55ad3df2c700 -> Node0x55ad3df2c800;
 Node0x55ad3df2c800 -> Node0x55ad3df2c900;
 Node0x55ad3df2c900 -> Node0x55ad3df2ca00;
 Node0x55ad3df2ca00 -> Node0x55ad3df2cb00;
 Node0x55ad3df2cb00 -> Node0x55ad3df2cc00;
 Node0x55ad3df2cc00 -> Node0x55ad3df2cd00;
 Node0x55ad3df2cd00 -> Node0x55ad3df2ce00;
 Node0x55ad3df2ce00 -> Node0x55ad3df2cf00;
 Node0x55ad3df2cf00 -> Node0x55ad3df2d000;
 Node0x55ad3df2d000 -> Node0x55ad3df2d100;
 Node0x55ad3df2d100 -> Node0x55ad3df2d200;
 Node0x55ad3df2d200 -> Node0x55ad3df2d300;
 Node0x55ad3df2d300 -> Node0x55ad3df2d400;
 Node0x55ad3df2d400 -> Node0x55ad3df2d500;
 Node0x55ad3df2d500 -> Node0x55ad3df2d600;
 Node0x55ad3df2d600 -> Node0x55ad3df2d700;
 Node0x55ad3df2d700 -> Node0x55ad3df2d800;
 Node0x55ad3df2d800 -> Node0x55ad3df2d900;
 Node0x55ad3df2d900 -> Node0x55ad3df2da00;
 Node0x55ad3df2da00 -> Node0x55ad3df2db00;
 Node0x55ad3df2db00 -> Node0x55ad3df2dc00;
 Node0x55ad3df2dc00 -> Node0x55ad3df2dd00;
 Node0x55ad3df2dd00 -> Node0x55ad3df2de00;
 Node0x55ad3df2de00 -> Node0x55ad3df2df00;
 Node0x55ad3df2df00 -> Node0x55ad3df2e000;
 Node0x55ad3df2e000 -> Node0x55ad3df2e100;
 Node0x55ad3df2e100 -> Node0x55ad3df2e200;
 Node0x55ad3df2e200 -> Node0x55ad3df2e300;
 Node0x55ad3df2e300 -> Node0x55ad3df2e400;
 Node0x55ad3df2e400 -> Node0x55ad3df2e500;
 Node0x55ad3df2e500 -> Node0x55ad3df2e600;
 Node0x55ad3df2e600 -> Node0x55ad3df2e700;
 Node0x55ad3df2e700 -> Node0x55ad3df2e800;
 Node0x55ad3df2e800 -> Node0x55ad3df2e900;
 Node0x55ad3df2e900 -> Node0x55ad3df2ea00;
}