digraph "DFG for'sum_squares' function" {
 Node0x55ad3df2a950[shape=record, label="  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2aa30[shape=record, label="  %3 = load i32*, i32** %2, align 8, !tbaa !3"];
 Node0x55ad3df2ab50[shape=record, label="  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2ac50[shape=record, label="  %5 = load i32*, i32** %4, align 8, !tbaa !8"];
 Node0x55ad3df2ad20[shape=record, label="  %6 = ptrtoint i32* %3 to i64"];
 Node0x55ad3df2ae10[shape=record, label="  %7 = ptrtoint i32* %5 to i64"];
 Node0x55ad3df2af00[shape=record, label="  %8 = sub i64 %6, %7"];
 Node0x55ad3df2b000[shape=record, label="  %9 = icmp eq i64 %8, 0"];
 Node0x55ad3df2b100[shape=record, label="  br i1 %9, label %13, label %10"];
 Node0x55ad3df2b200[shape=record, label="10:                                               ; preds = %1"];
 Node0x55ad3df2b300[shape=record, label="  %11 = ashr exact i64 %8, 2"];
 Node0x55ad3df2b400[shape=record, label="  %12 = call i64 @llvm.umax.i64(i64 %11, i64 1)"];
 Node0x55ad3df2b500[shape=record, label="  br label %15"];
 Node0x55ad3df2b600[shape=record, label="13:                                               ; preds = %33, %1"];
 Node0x55ad3df2b700[shape=record, label="  %14 = phi i32 [ 0, %1 ], [ %35, %33 ]"];
 Node0x55ad3df2b800[shape=record, label="  ret i32 %14"];
 Node0x55ad3df2b900[shape=record, label="15:                                               ; preds = %10, %33"];
 Node0x55ad3df2ba00[shape=record, label="  %16 = phi i64 [ 0, %10 ], [ %36, %33 ]"];
 Node0x55ad3df2bb00[shape=record, label="  %17 = phi i32 [ 0, %10 ], [ %35, %33 ]"];
 Node0x55ad3df2bc00[shape=record, label="  %18 = trunc i64 %16 to i32"];
 Node0x55ad3df2bd00[shape=record, label="  %19 = urem i32 %18, 3"];
 Node0x55ad3df2be00[shape=record, label="  %20 = icmp eq i32 %19, 0"];
 Node0x55ad3df2bf00[shape=record, label="  br i1 %20, label %21, label %25"];
 Node0x55ad3df2c000[shape=record, label="21:                                               ; preds = %15"];
 Node0x55ad3df2c100[shape=record, label="  %22 = getelementptr inbounds i32, i32* %5, i64 %16"];
 Node0x55ad3df2c200[shape=record, label="  %23 = load i32, i32* %22, align 4, !tbaa !9"];
 Node0x55ad3df2c300[shape=record, label="  %24 = mul nsw i32 %23, %23"];
 Node0x55ad3df2c400[shape=record, label="  br label %33"];
 Node0x55ad3df2c500[shape=record, label="25:                                               ; preds = %15"];
 Node0x55ad3df2c600[shape=record, label="  %26 = and i32 %18, 3"];
 Node0x55ad3df2c700[shape=record, label="  %27 = icmp eq i32 %26, 0"];
 Node0x55ad3df2c800[shape=record, label="  %28 = getelementptr inbounds i32, i32* %5, i64 %16"];
 Node0x55ad3df2c900[shape=record, label="  %29 = load i32, i32* %28, align 4, !tbaa !9"];
 Node0x55ad3df2ca00[shape=record, label="  br i1 %27, label %30, label %33"];
 Node0x55ad3df2cb00[shape=record, label="30:                                               ; preds = %25"];
 Node0x55ad3df2cc00[shape=record, label="  %31 = mul nsw i32 %29, %29"];
 Node0x55ad3df2cd00[shape=record, label="  %32 = mul nsw i32 %31, %29"];
 Node0x55ad3df2ce00[shape=record, label="  br label %33"];
 Node0x55ad3df2cf00[shape=record, label="33:                                               ; preds = %25, %21, %30"];
 Node0x55ad3df2d000[shape=record, label="  %34 = phi i32 [ %24, %21 ], [ %32, %30 ], [ %29, %25 ]"];
 Node0x55ad3df2d100[shape=record, label="  %35 = add nsw i32 %34, %17"];
 Node0x55ad3df2d200[shape=record, label="  %36 = add nuw nsw i64 %16, 1"];
 Node0x55ad3df2d300[shape=record, label="  %37 = icmp eq i64 %36, %12"];
 Node0x55ad3df2d400[shape=record, label="  br i1 %37, label %13, label %15, !llvm.loop !11"];
 Node0x55ad3df2a950 -> Node0x55ad3df2aa30
 Node0x55ad3df2aa30 -> Node0x55ad3df2ad20
 Node0x55ad3df2ad20 -> Node0x55ad3df2ae10
 Node0x55ad3df2ae10 -> Node0x55ad3df2af00
 Node0x55ad3df2af00 -> Node0x55ad3df2b000
 Node0x55ad3df2b000 -> Node0x55ad3df2b100
 Node0x55ad3df2b100 -> Node0x55ad3df2b200
 Node0x55ad3df2b200 -> Node0x55ad3df2b300
 Node0x55ad3df2b300 -> Node0x55ad3df2b400
 Node0x55ad3df2b400 -> Node0x55ad3df2b500
 Node0x55ad3df2b500 -> Node0x55ad3df2b600
 Node0x55ad3df2b600 -> Node0x55ad3df2b700
 Node0x55ad3df2b700 -> Node0x55ad3df2b800
 Node0x55ad3df2b800 -> Node0x55ad3df2b900
 Node0x55ad3df2b900 -> Node0x55ad3df2ba00
 Node0x55ad3df2ba00 -> Node0x55ad3df2bb00
 Node0x55ad3df2bb00 -> Node0x55ad3df2bc00
 Node0x55ad3df2bc00 -> Node0x55ad3df2bd00
 Node0x55ad3df2bd00 -> Node0x55ad3df2be00
 Node0x55ad3df2be00 -> Node0x55ad3df2bf00
 Node0x55ad3df2bf00 -> Node0x55ad3df2c000
 Node0x55ad3df2c000 -> Node0x55ad3df2c100
 Node0x55ad3df2c100 -> Node0x55ad3df2c200
 Node0x55ad3df2c200 -> Node0x55ad3df2c300
 Node0x55ad3df2c300 -> Node0x55ad3df2c400
 Node0x55ad3df2c400 -> Node0x55ad3df2c500
 Node0x55ad3df2c500 -> Node0x55ad3df2c600
 Node0x55ad3df2c600 -> Node0x55ad3df2c700
 Node0x55ad3df2c700 -> Node0x55ad3df2c800
 Node0x55ad3df2c800 -> Node0x55ad3df2c900
 Node0x55ad3df2c900 -> Node0x55ad3df2ca00
 Node0x55ad3df2ca00 -> Node0x55ad3df2cb00
 Node0x55ad3df2cb00 -> Node0x55ad3df2cc00
 Node0x55ad3df2cc00 -> Node0x55ad3df2cd00
 Node0x55ad3df2cd00 -> Node0x55ad3df2ce00
 Node0x55ad3df2ce00 -> Node0x55ad3df2cf00
}