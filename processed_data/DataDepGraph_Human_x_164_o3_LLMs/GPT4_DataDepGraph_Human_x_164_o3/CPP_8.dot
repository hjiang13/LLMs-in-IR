digraph "DFG for'_Z11sum_productSt6vectorIiSaIiEE' function" {
 Node0x55a1c8f1b950[shape=record, label="  %3 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55a1c8f1ba30[shape=record, label="  %4 = load i32*, i32** %3, align 8, !tbaa !3"];
 Node0x55a1c8f1bb50[shape=record, label="  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55a1c8f1bc50[shape=record, label="  %6 = load i32*, i32** %5, align 8, !tbaa !8"];
 Node0x55a1c8f1bd20[shape=record, label="  %7 = ptrtoint i32* %4 to i64"];
 Node0x55a1c8f1be20[shape=record, label="  %8 = ptrtoint i32* %6 to i64"];
 Node0x55a1c8f1bf20[shape=record, label="  %9 = sub i64 %7, %8"];
 Node0x55a1c8f1c050[shape=record, label="  %10 = icmp eq i64 %9, 0"];
 Node0x55a1c8f1c150[shape=record, label="  br i1 %10, label %91, label %11"];
 Node0x55a1c8f1c250[shape=record, label="11:                                               ; preds = %2"];
 Node0x55a1c8f1c350[shape=record, label="  %12 = ashr exact i64 %9, 2"];
 Node0x55a1c8f1c450[shape=record, label="  %13 = call i64 @llvm.umax.i64(i64 %12, i64 1)"];
 Node0x55a1c8f1c550[shape=record, label="  %14 = icmp ult i64 %13, 8"];
 Node0x55a1c8f1c650[shape=record, label="  br i1 %14, label %87, label %15"];
 Node0x55a1c8f1c750[shape=record, label="15:                                               ; preds = %11"];
 Node0x55a1c8f1c850[shape=record, label="  %16 = and i64 %13, -8"];
 Node0x55a1c8f1c950[shape=record, label="  %17 = add i64 %16, -8"];
 Node0x55a1c8f1ca50[shape=record, label="  %18 = lshr exact i64 %17, 3"];
 Node0x55a1c8f1cb50[shape=record, label="  %19 = add nuw nsw i64 %18, 1"];
 Node0x55a1c8f1cc50[shape=record, label="  %20 = and i64 %19, 1"];
 Node0x55a1c8f1cd50[shape=record, label="  %21 = icmp eq i64 %17, 0"];
 Node0x55a1c8f1ce50[shape=record, label="  br i1 %21, label %55, label %22"];
 Node0x55a1c8f1cf50[shape=record, label="22:                                               ; preds = %15"];
 Node0x55a1c8f1d050[shape=record, label="  %23 = and i64 %19, 4611686018427387902"];
 Node0x55a1c8f1d150[shape=record, label="  br label %24"];
 Node0x55a1c8f1d250[shape=record, label="24:                                               ; preds = %24, %22"];
 Node0x55a1c8f1d350[shape=record, label="  %25 = phi i64 [ 0, %22 ], [ %52, %24 ]"];
 Node0x55a1c8f1d450[shape=record, label="  %26 = phi <4 x i32> [ zeroinitializer, %22 ], [ %48, %24 ]"];
 Node0x55a1c8f1d550[shape=record, label="  %27 = phi <4 x i32> [ zeroinitializer, %22 ], [ %49, %24 ]"];
 Node0x55a1c8f1d650[shape=record, label="  %28 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %50, %24 ]"];
 Node0x55a1c8f1d750[shape=record, label="  %29 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %22 ], [ %51, %24 ]"];
 Node0x55a1c8f1d850[shape=record, label="  %30 = phi i64 [ %23, %22 ], [ %53, %24 ]"];
 Node0x55a1c8f1d950[shape=record, label="  %31 = getelementptr inbounds i32, i32* %6, i64 %25"];
 Node0x55a1c8f1da50[shape=record, label="  %32 = bitcast i32* %31 to <4 x i32>*"];
 Node0x55a1c8f1db50[shape=record, label="  %33 = load <4 x i32>, <4 x i32>* %32, align 4, !tbaa !9"];
 Node0x55a1c8f1dc50[shape=record, label="  %34 = getelementptr inbounds i32, i32* %31, i64 4"];
 Node0x55a1c8f1dd50[shape=record, label="  %35 = bitcast i32* %34 to <4 x i32>*"];
 Node0x55a1c8f1de50[shape=record, label="  %36 = load <4 x i32>, <4 x i32>* %35, align 4, !tbaa !9"];
 Node0x55a1c8f1df50[shape=record, label="  %37 = add <4 x i32> %33, %26"];
 Node0x55a1c8f1e050[shape=record, label="  %38 = add <4 x i32> %36, %27"];
 Node0x55a1c8f1e150[shape=record, label="  %39 = mul <4 x i32> %33, %28"];
 Node0x55a1c8f1e250[shape=record, label="  %40 = mul <4 x i32> %36, %29"];
 Node0x55a1c8f1e350[shape=record, label="  %41 = or i64 %25, 8"];
 Node0x55a1c8f1e450[shape=record, label="  %42 = getelementptr inbounds i32, i32* %6, i64 %41"];
 Node0x55a1c8f1e550[shape=record, label="  %43 = bitcast i32* %42 to <4 x i32>*"];
 Node0x55a1c8f1e650[shape=record, label="  %44 = load <4 x i32>, <4 x i32>* %43, align 4, !tbaa !9"];
 Node0x55a1c8f1e750[shape=record, label="  %45 = getelementptr inbounds i32, i32* %42, i64 4"];
 Node0x55a1c8f1e850[shape=record, label="  %46 = bitcast i32* %45 to <4 x i32>*"];
 Node0x55a1c8f1e950[shape=record, label="  %47 = load <4 x i32>, <4 x i32>* %46, align 4, !tbaa !9"];
 Node0x55a1c8f1ea50[shape=record, label="  %48 = add <4 x i32> %44, %37"];
 Node0x55a1c8f1eb50[shape=record, label="  %49 = add <4 x i32> %47, %38"];
 Node0x55a1c8f1ec50[shape=record, label="  %50 = mul <4 x i32> %44, %39"];
 Node0x55a1c8f1ed50[shape=record, label="  %51 = mul <4 x i32> %47, %40"];
 Node0x55a1c8f1ee50[shape=record, label="  %52 = add nuw i64 %25, 16"];
 Node0x55a1c8f1ef50[shape=record, label="  %53 = add i64 %30, -2"];
 Node0x55a1c8f1f050[shape=record, label="  %54 = icmp eq i64 %53, 0"];
 Node0x55a1c8f1f150[shape=record, label="  br i1 %54, label %55, label %24, !llvm.loop !11"];
 Node0x55a1c8f1f250[shape=record, label="55:                                               ; preds = %24, %15"];
 Node0x55a1c8f1f350[shape=record, label="  %56 = phi <4 x i32> [ undef, %15 ], [ %48, %24 ]"];
 Node0x55a1c8f1f450[shape=record, label="  %57 = phi <4 x i32> [ undef, %15 ], [ %49, %24 ]"];
 Node0x55a1c8f1f550[shape=record, label="  %58 = phi <4 x i32> [ undef, %15 ], [ %50, %24 ]"];
 Node0x55a1c8f1f650[shape=record, label="  %59 = phi <4 x i32> [ undef, %15 ], [ %51, %24 ]"];
 Node0x55a1c8f1f750[shape=record, label="  %60 = phi i64 [ 0, %15 ], [ %52, %24 ]"];
 Node0x55a1c8f1f850[shape=record, label="  %61 = phi <4 x i32> [ zeroinitializer, %15 ], [ %48, %24 ]"];
 Node0x55a1c8f1f950[shape=record, label="  %62 = phi <4 x i32> [ zeroinitializer, %15 ], [ %49, %24 ]"];
 Node0x55a1c8f1fa50[shape=record, label="  %63 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %15 ], [ %50, %24 ]"];
 Node0x55a1c8f1fb50[shape=record, label="  %64 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %15 ], [ %51, %24 ]"];
 Node0x55a1c8f1fc50[shape=record, label="  %65 = icmp eq i64 %20, 0"];
 Node0x55a1c8f1fd50[shape=record, label="  br i1 %65, label %77, label %66"];
 Node0x55a1c8f1fe50[shape=record, label="66:                                               ; preds = %55"];
 Node0x55a1c8f1ff50[shape=record, label="  %67 = getelementptr inbounds i32, i32* %6, i64 %60"];
 Node0x55a1c8f20050[shape=record, label="  %68 = bitcast i32* %67 to <4 x i32>*"];
 Node0x55a1c8f20150[shape=record, label="  %69 = load <4 x i32>, <4 x i32>* %68, align 4, !tbaa !9"];
 Node0x55a1c8f20250[shape=record, label="  %70 = getelementptr inbounds i32, i32* %67, i64 4"];
 Node0x55a1c8f20350[shape=record, label="  %71 = bitcast i32* %70 to <4 x i32>*"];
 Node0x55a1c8f20450[shape=record, label="  %72 = load <4 x i32>, <4 x i32>* %71, align 4, !tbaa !9"];
 Node0x55a1c8f20550[shape=record, label="  %73 = mul <4 x i32> %72, %64"];
 Node0x55a1c8f20650[shape=record, label="  %74 = mul <4 x i32> %69, %63"];
 Node0x55a1c8f20750[shape=record, label="  %75 = add <4 x i32> %72, %62"];
 Node0x55a1c8f20850[shape=record, label="  %76 = add <4 x i32> %69, %61"];
 Node0x55a1c8f20950[shape=record, label="  br label %77"];
 Node0x55a1c8f20a50[shape=record, label="77:                                               ; preds = %55, %66"];
 Node0x55a1c8f20b50[shape=record, label="  %78 = phi <4 x i32> [ %56, %55 ], [ %76, %66 ]"];
 Node0x55a1c8f20c50[shape=record, label="  %79 = phi <4 x i32> [ %57, %55 ], [ %75, %66 ]"];
 Node0x55a1c8f20d50[shape=record, label="  %80 = phi <4 x i32> [ %58, %55 ], [ %74, %66 ]"];
 Node0x55a1c8f20e50[shape=record, label="  %81 = phi <4 x i32> [ %59, %55 ], [ %73, %66 ]"];
 Node0x55a1c8f20f50[shape=record, label="  %82 = mul <4 x i32> %81, %80"];
 Node0x55a1c8f21050[shape=record, label="  %83 = call i32 @llvm.vector.reduce.mul.v4i32(<4 x i32> %82)"];
 Node0x55a1c8f21150[shape=record, label="  %84 = add <4 x i32> %79, %78"];
 Node0x55a1c8f21250[shape=record, label="  %85 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %84)"];
 Node0x55a1c8f21350[shape=record, label="  %86 = icmp eq i64 %13, %16"];
 Node0x55a1c8f21450[shape=record, label="  br i1 %86, label %91, label %87"];
 Node0x55a1c8f21550[shape=record, label="87:                                               ; preds = %11, %77"];
 Node0x55a1c8f21650[shape=record, label="  %88 = phi i64 [ 0, %11 ], [ %16, %77 ]"];
 Node0x55a1c8f21750[shape=record, label="  %89 = phi i32 [ 0, %11 ], [ %85, %77 ]"];
 Node0x55a1c8f21850[shape=record, label="  %90 = phi i32 [ 1, %11 ], [ %83, %77 ]"];
 Node0x55a1c8f21950[shape=record, label="  br label %105"];
 Node0x55a1c8f21a50[shape=record, label="91:                                               ; preds = %105, %77, %2"];
 Node0x55a1c8f21b50[shape=record, label="  %92 = phi i32 [ 1, %2 ], [ %83, %77 ], [ %112, %105 ]"];
 Node0x55a1c8f21c50[shape=record, label="  %93 = phi i32 [ 0, %2 ], [ %85, %77 ], [ %111, %105 ]"];
 Node0x55a1c8f21d50[shape=record, label="  %94 = bitcast %"class.std::vector"* %0 to i8*"];
 Node0x55a1c8f21e50[shape=record, label="  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %94, i8 0, i64 24, i1 false) #5"];
 Node0x55a1c8f21f50[shape=record, label="  %95 = call noalias nonnull i8* @_Znwm(i64 8) #6"];
 Node0x55a1c8f22050[shape=record, label="  %96 = bitcast i8* %95 to i32*"];
 Node0x55a1c8f22150[shape=record, label="  %97 = bitcast %"class.std::vector"* %0 to i8**"];
 Node0x55a1c8f22250[shape=record, label="  store i8* %95, i8** %97, align 8, !tbaa !8"];
 Node0x55a1c8f22350[shape=record, label="  %98 = getelementptr inbounds i8, i8* %95, i64 8"];
 Node0x55a1c8f22450[shape=record, label="  %99 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55a1c8f22550[shape=record, label="  %100 = bitcast i32** %99 to i8**"];
 Node0x55a1c8f22650[shape=record, label="  store i8* %98, i8** %100, align 8, !tbaa !14"];
 Node0x55a1c8f22750[shape=record, label="  store i32 %93, i32* %96, align 4"];
 Node0x55a1c8f22850[shape=record, label="  %101 = getelementptr inbounds i8, i8* %95, i64 4"];
 Node0x55a1c8f22950[shape=record, label="  %102 = bitcast i8* %101 to i32*"];
 Node0x55a1c8f22a50[shape=record, label="  store i32 %92, i32* %102, align 4"];
 Node0x55a1c8f22b50[shape=record, label="  %103 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55a1c8f22c50[shape=record, label="  %104 = bitcast i32** %103 to i8**"];
 Node0x55a1c8f22d50[shape=record, label="  store i8* %98, i8** %104, align 8, !tbaa !3"];
 Node0x55a1c8f22e50[shape=record, label="  ret void"];
 Node0x55a1c8f22f50[shape=record="105:                                              ; preds = %87, %105"];
 Node0x55a1c8f23050[shape=record, label="  %106 = phi i64 [ %113, %105 ], [ %88, %87 ]"];
 Node0x55a1c8f23150[shape=record, label="  %107 = phi i32 [ %111, %105 ], [ %89, %87 ]"];
 Node0x55a1c8f23250[shape=record, label="  %108 = phi i32 [ %112, %105 ], [ %90, %87 ]"];
 Node0x55a1c8f23350[shape=record, label="  %109 = getelementptr inbounds i32, i32* %6, i64 %106"];
 Node0x55a1c8f23450[shape=record, label="  %110 = load i32, i32* %109, align 4, !tbaa !9"];
 Node0x55a1c8f23550[shape=record, label="  %111 = add nsw i32 %110, %107"];
 Node0x55a1c8f23650[shape=record, label="  %112 = mul nsw i32 %110, %108"];
 Node0x55a1c8f23750[shape=record="  %113 = add nuw nsw i64 %106, 1"];
 Node0x55a1c8f23850[shape=record="  %114 = icmp eq i64 %113, %13"];
 Node0x55a1c8f23950[shape=record="  br i1 %114, label %91, label %105, !llvm.loop !15"];
 
 Node0x55a1c8f1c150 -> Node0x55a1c8f1c250
 Node0x55a1c8f1c250 -> Node0x55a1c8f1c350
 Node0x55a1c8f1c350 -> Node0x55a1c8f1c450
 Node0x55a1c8f1c450 -> Node0x55a1c8f1c550
 Node0x55a1c8f1c550 -> Node0x55a1c8f1c650
 Node0x55a1c8f1c650 -> Node0x55a1c8f1c150
 Node0x55a1c8f1c150 -> Node0x55a1c8f1c250
 Node0x55a1c8f1c150 -> Node0x55a1c8f1c750
 Node0x55a1c8f1c750 -> Node0x55a1c8f1c850
 Node0x55a1c8f1c850 -> Node0x55a1c8f1c950
 Node0x55a1c8f1c950 -> Node0x55a1c8f1ca50
 Node0x55a1c8f1ca50 -> Node0x55a1c8f1cb50
 Node0x55a1c8f1cb50 -> Node0x55a1c8f1cc50
 Node0x55a1c8f1cc50 -> Node0x55a1c8f1cd50
 Node0x55a1c8f1cd50 -> Node0x55a1c8f1ce50
 Node0x55a1c8f1ce50 -> Node0x55a1c8f1cf50
 Node0x55a1c8f1cf50 -> Node0x55a1c8f1d050
 Node0x55a1c8f1d050 -> Node0x55a1c8f1d150
 Node0x55a1c8f1d150 -> Node0x55a1c8f1d250
 Node0x55a1c8f1d250 -> Node0x55a1c8f1d350
 Node0x55a1c8f1d350 -> Node0x55a1c8f1d450
 Node0x55a1c8f1d450 -> Node0x55a1c8f1d550
 Node0x55a1c8f1d550 -> Node0x55a1c8f1d650
 Node0x55a1c8f1d650 -> Node0x55a1c8f1d750
 Node0x55a1c8f1d750 -> Node0x55a1c8f1d850
 Node0x55a1c8f1d850 -> Node0x55a1c8f1d950
 Node0x55a1c8f1d950 -> Node0x55a1c8f1da50
 Node0x55a1c8f1da50 -> Node0x55a1c8f1db50
 Node0x55a1c8f1db50 -> Node0x55a1c8f1dc50
 Node0x55a1c8f1dc50 -> Node0x55a1c8f1dd50
 Node0x55a1c8f1dd50 -> Node0x55a1c8f1de50
 Node0x55a1c8f1de50 -> Node0x55a1c8f1df50
 Node0x55a1c8f1df50 -> Node0x55a1c8f1e050
 Node0x55a1c8f1e050 -> Node0x55a1c8f1e150
 Node0x55a1c8f1e150 -> Node0x55a1c8f1e250
 Node0x55a1c8f1e250 -> Node0x55a1c8f1e350
 Node0x55a1c8f1e350 -> Node0x55a1c8f1e450
 Node0x55a1c8f1e450 -> Node0x55a1c8f1e550
 Node0x55a1c8f1e550 -> Node0x55a1c8f1e650
 Node0x55a1c8f1e650 -> Node0x55a1c8f1e750
 Node0x55a1c8f1e750 -> Node0x55a1c8f1e850
 Node0x55a1c8f1e850 -> Node0x55a1c8f1e950
 Node0x55a1c8f1e950 -> Node0x55a1c8f1ea50
 Node0x55a1c8f1ea50 -> Node0x55a1c8f1eb50
 Node0x55a1c8f1eb50 -> Node0x55a1c8f1ec50
 Node0x55a1c8f1ec50 -> Node0x55a1c8f1ed50
 Node0x55a1c8f1ed50 -> Node0x55a1c8f1ee50
 Node0x55a1c8f1ee50 -> Node0x55a1c8f1ef50
 Node0x55a1c8f1ef50 -> Node0x55a1c8f1f050
 Node0x55a1c8f1f050 -> Node0x55a1c8f1f150
 Node0x55a1c8f1f150 -> Node0x55a1c8f1f250
 Node0x55a1c8f1f250 -> Node0x55a1c8f1f350
 Node0x55a1c8f1f350 -> Node0x55a1c8f1f450
 Node0x55a1c8f1f450 -> Node0x55a1c8f1f550
 Node0x55a1c8f1f550 -> Node0x55a1c8f1f650
 Node0x55a1c8f1f650 -> Node0x55a1c8f1f750
 Node0x55a1c8f1f750 -> Node0x55a1c8f1f850
 Node0x55a1c8f1f850 -> Node0x55a1c8f1f950
 Node0x55a1c8f1f950 -> Node0x55a1c8f1fa50
 Node0x55a1c8f1fa50 -> Node0x55a1c8f1fb50
 Node0x55a1c8f1fb50 -> Node0x55a1c8f1fc50
 Node0x55a1c8f1fc50 -> Node0x55a1c8f1fd50
 Node0x55a1c8f1fd50 -> Node0x55a1c8f1fe50
 Node0x55a1c8f1fe50 -> Node0x55a1c8f1ff50
 Node0x55a1c8f1ff50 -> Node0x55a1c8f20050
 Node0x55a1c8f20050 -> Node0x55a1c8f20150
 Node0x55a1c8f20150 -> Node0x55a1c8f20250
 Node0x55a1c8f20250 -> Node0x55a1c8f20350
 Node0x55a1c8f20350 -> Node0x55a1c8f20450
 Node0x55a1c8f20450 -> Node0x55a1c8f20550
 Node0x55a1c8f20550 -> Node0x55a1c8f20650
 Node0x55a1c8f20650 -> Node0x55a1c8f20750
 Node0x55a1c8f20750 -> Node0x55a1c8f20850
 Node0x55a1c8f20850 -> Node0x55a1c8f20950
 Node0x55a1c8f20950 -> Node0x55a1c8f20a50
 Node0x55a1c8f20a50 -> Node0x55a1c8f20b50
 Node0x55a1c8f20b50 -> Node0x55a1c8f20c50
 Node0x55a1c8f20c50 -> Node0x55a1c8f20d50
 Node0x55a1c8f20d50 -> Node0x55a1c8f20e50
 Node0x55a1c8f20e50 -> Node0x55a1c8f20f50
 Node0x55a1c8f20f50 -> Node0x55a1c8f21050
 Node0x55a1c8f21050 -> Node0x55a1c8f21150
 Node0x55a1c8f21150 -> Node0x55a1c8f21250
 Node0x55a1c8f21250 -> Node0x55a1c8f21350
 Node0x55a1c8f21350 -> Node0x55a1c8f21450
 Node0x55a1c8f21450 -> Node0x55a1c8f21550
 Node0x55a1c8f21550 -> Node0x55a1c8f21650
 Node0x55a1c8f21650 -> Node0x55a1c8f21750
 Node0x55a1c8f21750 -> Node0x55a1c8f21850
 Node0x55a1c8f21850 -> Node0x55a1c8f21950
 Node0x55a1c8f21950 -> Node0x55a1c8f21a50
 Node0x55a1c8f21a50 -> Node0x55a1c8f21b50
 Node0x55a1c8f21b50 -> Node0x55a1c8f21c50
 Node0x55a1c8f21c50 -> Node0x55a1c8f21d50
 Node0x55a1c8f21d50 -> Node0x55a1c8f21e50
 Node0x55a1c8f21e50 -> Node0x55a1c8f21f50
 Node0x55a1c8f21f50 -> Node0x55a1c8f22050
 Node0x55a1c8f22050 -> Node0x55a1c8f22150
 Node0x55a1c8f22150 -> Node0x55a1c8f22250
 Node0x55a1c8f22250 -> Node0x55a1c8f22350
 Node0x55a1c8f22350 -> Node0x55a1c8f22450
 Node0x55a1c8f22450 -> Node0x55a1c8f22550
 Node0x55a1c8f22550 -> Node0x55a1c8f22650
 Node0x55a1c8f22650 -> Node0x55a1c8f22750
 Node0x55a1c8f22750 -> Node0x55a1c8f22850
 Node0x55a1c8f22850 -> Node0x55a1c8f22950
 Node0x55a1c8f22950 -> Node0x55a1c8f22a50
 Node0x55a1c8f22a50 -> Node0x55a1c8f22b50
 Node0x55a1c8f22b50 -> Node0x55a1c8f22c50
 Node0x55a1c8f22c50 -> Node0x55a1c8f22d50
 Node0x55a1c8f22d50 -> Node0x55a1c8f22e50
}