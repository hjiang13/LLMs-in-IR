digraph "DFG for'largest_smallest_integers' function" {
 Node0x55ad3df2a950[shape=record, label="  %3 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2aa30[shape=record, label="  %4 = load i32*, i32** %3, align 8, !tbaa !3"];
 Node0x55ad3df2ab50[shape=record, label="  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2ac50[shape=record, label="  %6 = load i32*, i32** %5, align 8, !tbaa !8"];
 Node0x55ad3df2ad20[shape=record, label="  %7 = ptrtoint i32* %4 to i64"];
 Node0x55ad3df2ae10[shape=record, label="  %8 = ptrtoint i32* %6 to i64"];
 Node0x55ad3df2af00[shape=record, label="  %9 = sub i64 %7, %8"];
 Node0x55ad3df2b000[shape=record, label="  %10 = icmp eq i64 %9, 0"];
 Node0x55ad3df2b100[shape=record, label="  br i1 %10, label %14, label %11"];
 Node0x55ad3df2b200[shape=record, label="11:                                               ; preds = %2"];
 Node0x55ad3df2b300[shape=record, label="  %12 = ashr exact i64 %9, 2"];
 Node0x55ad3df2b400[shape=record, label="  %13 = call i64 @llvm.umax.i64(i64 %12, i64 1)"];
 Node0x55ad3df2b500[shape=record, label="  br label %28"];
 Node0x55ad3df2b600[shape=record, label="14:                                               ; preds = %47, %2"];
 Node0x55ad3df2b700[shape=record, label="  %15 = phi i32 [ 0, %2 ], [ %49, %47 ]"];
 Node0x55ad3df2b800[shape=record, label="  %16 = phi i32 [ 0, %2 ], [ %48, %47 ]"];
 Node0x55ad3df2b900[shape=record, label="  %17 = bitcast %"class.std::vector"* %0 to i8*"];
 Node0x55ad3df2ba00[shape=record, label="  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %17, i8 0, i64 24, i1 false) #4"];
 Node0x55ad3df2bb00[shape=record, label="  %18 = call noalias nonnull i8* @_Znwm(i64 8) #5"];
 Node0x55ad3df2bc00[shape=record, label="  %19 = bitcast i8* %18 to i32*"];
 Node0x55ad3df2bd00[shape=record, label="  %20 = bitcast %"class.std::vector"* %0 to i8**"];
 Node0x55ad3df2be00[shape=record, label="  store i8* %18, i8** %20, align 8, !tbaa !8"];
 Node0x55ad3df2bf00[shape=record, label="  %21 = getelementptr inbounds i8, i8* %18, i64 8"];
 Node0x55ad3df2c000[shape=record, label="  %22 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55ad3df2c100[shape=record, label="  %23 = bitcast i32** %22 to i8**"];
 Node0x55ad3df2c200[shape=record, label="  store i8* %21, i8** %23, align 8, !tbaa !9"];
 Node0x55ad3df2c300[shape=record, label="  store i32 %16, i32* %19, align 4"];
 Node0x55ad3df2c400[shape=record, label="  %24 = getelementptr inbounds i8, i8* %18, i64 4"];
 Node0x55ad3df2c500[shape=record, label="  %25 = bitcast i8* %24 to i32*"];
 Node0x55ad3df2c600[shape=record, label="  store i32 %15, i32* %25, align 4"];
 Node0x55ad3df2c700[shape=record, label="  %26 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2c800[shape=record, label="  %27 = bitcast i32** %26 to i8**"];
 Node0x55ad3df2c900[shape=record, label="  store i8* %21, i8** %27, align 8, !tbaa !3"];
 Node0x55ad3df2ca00[shape=record, label="  ret void"];
 Node0x55ad3df2cb00[shape=record, label="28:                                               ; preds = %11, %47"];
 Node0x55ad3df2cc00[shape=record, label="  %29 = phi i64 [ 0, %11 ], [ %50, %47 ]"];
 Node0x55ad3df2cd00[shape=record, label="  %30 = phi i32 [ 0, %11 ], [ %48, %47 ]"];
 Node0x55ad3df2ce00[shape=record, label="  %31 = phi i32 [ 0, %11 ], [ %49, %47 ]"];
 Node0x55ad3df2cf00[shape=record, label="  %32 = getelementptr inbounds i32, i32* %6, i64 %29"];
 Node0x55ad3df2d000[shape=record, label="  %33 = load i32, i32* %32, align 4, !tbaa !10"];
 Node0x55ad3df2d100[shape=record, label="  %34 = icmp slt i32 %33, 0"];
 Node0x55ad3df2d200[shape=record, label="  br i1 %34, label %35, label %40"];
 Node0x55ad3df2d300[shape=record, label="35:                                               ; preds = %28"];
 Node0x55ad3df2d400[shape=record, label="  %36 = icmp eq i32 %30, 0"];
 Node0x55ad3df2d500[shape=record, label="  %37 = icmp sgt i32 %33, %30"];
 Node0x55ad3df2d600[shape=record, label="  %38 = select i1 %36, i1 true, i1 %37"];
 Node0x55ad3df2d700[shape=record, label="  %39 = select i1 %38, i32 %33, i32 %30"];
 Node0x55ad3df2d800[shape=record, label="  br label %47"];
 Node0x55ad3df2d900[shape=record, label="40:                                               ; preds = %28"];
 Node0x55ad3df2da00[shape=record, label="  %41 = icmp eq i32 %33, 0"];
 Node0x55ad3df2db00[shape=record, label="  br i1 %41, label %47, label %42"];
 Node0x55ad3df2dc00[shape=record, label="42:                                               ; preds = %40"];
 Node0x55ad3df2dd00[shape=record, label="  %43 = icmp eq i32 %31, 0"];
 Node0x55ad3df2de00[shape=record, label="  %44 = icmp slt i32 %33, %31"];
 Node0x55ad3df2df00[shape=record, label="  %45 = select i1 %43, i1 true, i1 %44"];
 Node0x55ad3df2e000[shape=record, label="  %46 = select i1 %45, i32 %33, i32 %31"];
 Node0x55ad3df2e100[shape=record, label="  br label %47"];
 Node0x55ad3df2e200[shape=record, label="47:                                               ; preds = %42, %35, %40"];
 Node0x55ad3df2e300[shape=record, label="  %48 = phi i32 [ %30, %40 ], [ %39, %35 ], [ %30, %42 ]"];
 Node0x55ad3df2e400[shape=record, label="  %49 = phi i32 [ %31, %40 ], [ %31, %35 ], [ %46, %42 ]"];
 Node0x55ad3df2e500[shape=record, label="  %50 = add nuw nsw i64 %29, 1"];
 Node0x55ad3df2e600[shape=record, label="  %51 = icmp eq i64 %50, %13"];
 Node0x55ad3df2e700[shape=record, label="  br i1 %51, label %14, label %28, !llvm.loop !12"];
 Node0x55ad3df2a950 -> Node0x55ad3df2aa30
 Node0x55ad3df2aa30 -> Node0x55ad3df2ad20
 Node0x55ad3df2ad20 -> Node0x55ad3df2af00
 Node0x55ad3df2af00 -> Node0x55ad3df2b100
 Node0x55ad3df2b100 -> Node0x55ad3df2b200
 Node0x55ad3df2b200 -> Node0x55ad3df2b300
 Node0x55ad3df2b300 -> Node0x55ad3df2b400
 Node0x55ad3df2b400 -> Node0x55ad3df2b500
 Node0x55ad3df2b500 -> Node0x55ad3df2b600
 Node0x55ad3df2b600 -> Node0x55ad3df2b700
 Node0x55ad3df2b700 -> Node0x55ad3df2b800
 Node0x55ad3df2b800 -> Node0x55ad3df2b900
 Node0x55ad3df2b900 -> Node0x55ad3df2ba00
 Node0x55ad3df2ba00 -> Node0x55ad3df2bb00
 Node0x55ad3df2bb00 -> Node0x55ad3df2bc00
 Node0x55ad3df2bc00 -> Node0x55ad3df2bd00
 Node0x55ad3df2bd00 -> Node0x55ad3df2be00
 Node0x55ad3df2be00 -> Node0x55ad3df2bf00
 Node0x55ad3df2bf00 -> Node0x55ad3df2c000
 Node0x55ad3df2c000 -> Node0x55ad3df2c100
 Node0x55ad3df2c100 -> Node0x55ad3df2c200
 Node0x55ad3df2c200 -> Node0x55ad3df2c300
 Node0x55ad3df2c300 -> Node0x55ad3df2c400
 Node0x55ad3df2c400 -> Node0x55ad3df2c500
 Node0x55ad3df2c500 -> Node0x55ad3df2c600
 Node0x55ad3df2c600 -> Node0x55ad3df2c700
 Node0x55ad3df2c700 -> Node0x55ad3df2ca00
 Node0x55ad3df2ca00 -> Node0x55ad3df2cb00
 Node0x55ad3df2cb00 -> Node0x55ad3df2cc00
 Node0x55ad3df2cc00 -> Node0x55ad3df2cd00
 Node0x55ad3df2cd00 -> Node0x55ad3df2ce00
 Node0x55ad3df2ce00 -> Node0x55ad3df2cf00
 Node0x55ad3df2cf00 -> Node0x55ad3df2d000
 Node0x55ad3df2d000 -> Node0x55ad3df2d100
 Node0x55ad3df2d100 -> Node0x55ad3df2d200
 Node0x55ad3df2d200 -> Node0x55ad3df2d300
 Node0x55ad3df2d300 -> Node0x55ad3df2d400
 Node0x55ad3df2d400 -> Node0x55ad3df2d500
 Node0x55ad3df2d500 -> Node0x55ad3df2d600
 Node0x55ad3df2d600 -> Node0x55ad3df2d700
 Node0x55ad3df2d700 -> Node0x55ad3df2d800
 Node0x55ad3df2d800 -> Node0x55ad3df2d900
 Node0x55ad3df2d900 -> Node0x55ad3df2da00
 Node0x55ad3df2da00 -> Node0x55ad3df2db00
 Node0x55ad3df2db00 -> Node0x55ad3df2dc00
 Node0x55ad3df2dc00 -> Node0x55ad3df2de00
 Node0x55ad3df2de00 -> Node0x55ad3df2df00
 Node0x55ad3df2df00 -> Node0x55ad3df2e000
 Node0x55ad3df2e000 -> Node0x55ad3df2e100
}