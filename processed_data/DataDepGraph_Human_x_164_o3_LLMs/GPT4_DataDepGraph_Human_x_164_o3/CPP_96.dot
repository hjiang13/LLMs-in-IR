digraph "DFG for'count_up_toi' function" {
 Node0x55ad3df2a950[shape=record, label="  %3 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2aa30[shape=record, label="  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55ad3df2ab50[shape=record, label="  %5 = icmp sgt i32 %1, 2"];
 Node0x55ad3df2ac50[shape=record, label="  %6 = bitcast %"class.std::vector"* %0 to i8*"];
 Node0x55ad3df2ad20[shape=record, label="  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)"];
 Node0x55ad3df2ae90[shape=record, label="  br i1 %5, label %7, label %94"];
 Node0x55ad3df2af30[shape=record, label="  %8 = bitcast %"class.std::vector"* %0 to i8**"];
 Node0x55ad3df2b000[shape=record, label="  %9 = bitcast %"class.std::vector"* %0 to i8**"];
 Node0x55ad3df2b0d0[shape=record, label="  br label %10"];
 Node0x55ad3df2b180[shape=record, label="  %11 = phi i32* [ %88, %87 ], [ null, %7 ]"];
 Node0x55ad3df2b250[shape=record, label="  %12 = phi i32* [ %89, %87 ], [ null, %7 ]"];
 Node0x55ad3df2b320[shape=record, label="  %13 = phi i32* [ %90, %87 ], [ null, %7 ]"];
 Node0x55ad3df2b3f0[shape=record, label="  %14 = phi i32* [ %91, %87 ], [ null, %7 ]"];
 Node0x55ad3df2b4c0[shape=record, label="  %15 = phi i32 [ %92, %87 ], [ 2, %7 ]"];
 Node0x55ad3df2b590[shape=record, label="  %16 = ptrtoint i32* %14 to i64"];
 Node0x55ad3df2b660[shape=record, label="  %17 = ptrtoint i32* %13 to i64"];
 Node0x55ad3df2b730[shape=record, label="  %18 = sub i64 %16, %17"];
 Node0x55ad3df2b800[shape=record, label="  %19 = ashr exact i64 %18, 2"];
 Node0x55ad3df2b8d0[shape=record, label="  %20 = icmp eq i64 %18, 0"];
 Node0x55ad3df2b9a0[shape=record, label="  br i1 %20, label %25, label %21"];
 Node0x55ad3df2ba70[shape=record, label="  %22 = load i32, i32* %13, align 4, !tbaa !3"];
 Node0x55ad3df2bb40[shape=record, label="  %23 = mul nsw i32 %22, %22"];
 Node0x55ad3df2bc10[shape=record, label="  %24 = icmp ugt i32 %23, %15"];
 Node0x55ad3df2bce0[shape=record, label="  br i1 %24, label %57, label %42"];
 Node0x55ad3df2bd90[shape=record, label="  %26 = icmp eq i32* %14, %11"];
 Node0x55ad3df2be60[shape=record, label="  br i1 %26, label %29, label %27"];
 Node0x55ad3df2bf30[shape=record, label="  store i32 %15, i32* %14, align 4, !tbaa !3"];
 Node0x55ad3df2c000[shape=record, label="  %28 = getelementptr inbounds i32, i32* %14, i64 1"];
 Node0x55ad3df2c0d0[shape=record, label="  store i32* %28, i32** %3, align 8, !tbaa !7"];
 Node0x55ad3df2c1a0[shape=record, label="  br label %87"];
 Node0x55ad3df2c270[shape=record, label="  %30 = add nuw nsw i64 %19, 1"];
 Node0x55ad3df2c340[shape=record, label="  %31 = shl nuw nsw i64 %30, 2"];
 Node0x55ad3df2c410[shape=record, label="  %32 = invoke noalias nonnull i8* @_Znwm(i64 %31) #6"];
 Node0x55ad3df2c4e0[shape=record, label="  to label %33 unwind label %95"];
 Node0x55ad3df2c5b0[shape=record, label="  %34 = bitcast i8* %32 to i32*"];
 Node0x55ad3df2c680[shape=record, label="  %35 = getelementptr inbounds i32, i32* %34, i64 %19"];
 Node0x55ad3df2c750[shape=record, label="  store i32 %15, i32* %35, align 4, !tbaa !3"];
 Node0x55ad3df2c820[shape=record, label="  %36 = getelementptr inbounds i32, i32* %35, i64 1"];
 Node0x55ad3df2c8f0[shape=record, label="  %37 = icmp eq i32* %13, null"];
 Node0x55ad3df2c9c0[shape=record, label="  br i1 %37, label %40, label %38"];
 Node0x55ad3df2ca90[shape=record, label="  %39 = bitcast i32* %13 to i8*"];
 Node0x55ad3df2cb60[shape=record, label="  tail call void @_ZdlPv(i8* nonnull %39) #7"];
 Node0x55ad3df2cc30[shape=record, label="  br label %40"];
 Node0x55ad3df2cd00[shape=record, label="  store i8* %32, i8** %9, align 8, !tbaa !10"];
 Node0x55ad3df2cde0[shape=record, label="  store i32* %36, i32** %3, align 8, !tbaa !7"];
 Node0x55ad3df2ceb0[shape=record, label="  %41 = getelementptr inbounds i32, i32* %34, i64 %30"];
 Node0x55ad3df2cf80[shape=record, label="  store i32* %41, i32** %4, align 8, !tbaa !11"];
 Node0x55ad3df2d050[shape=record, label="  br label %87"];
 Node0x55ad3df2d120[shape=record, label="  %43 = phi i64 [ %49, %42 ], [ 0, %21 ]"];
 Node0x55ad3df2d1f0[shape=record, label="  %44 = phi i32 [ %51, %42 ], [ %22, %21 ]"];
 Node0x55ad3df2d2c0[shape=record, label="  %45 = phi i8 [ %48, %42 ], [ 1, %21 ]"];
 Node0x55ad3df2d390[shape=record, label="  %46 = srem i32 %15, %44"];
 Node0x55ad3df2d460[shape=record, label="  %47 = icmp eq i32 %46, 0"];
 Node0x55ad3df2d530[shape=record, label="  %48 = select i1 %47, i8 0, i8 %45"];
 Node0x55ad3df2d600[shape=record, label="  %49 = add nuw nsw i64 %43, 1"];
 Node0x55ad3df2d6d0[shape=record, label="  %50 = getelementptr inbounds i32, i32* %13, i64 %49"];
 Node0x55ad3df2d7a0[shape=record, label="  %51 = load i32, i32* %50, align 4, !tbaa !3"];
 Node0x55ad3df2d870[shape=record, label="  %52 = mul nsw i32 %51, %51"];
 Node0x55ad3df2d940[shape=record, label="  %53 = icmp ugt i32 %52, %15"];
 Node0x55ad3df2da10[shape=record, label="  br i1 %53, label %54, label %42, !llvm.loop !12"];
 Node0x55ad3df2db00[shape=record, label="  %55 = and i8 %48, 1"];
 Node0x55ad3df2dbd0[shape=record, label="  %56 = icmp eq i8 %55, 0"];
 Node0x55ad3df2dca0[shape=record, label="  br i1 %56, label %87, label %57"];
 Node0x55ad3df2dd70[shape=record, label="  %58 = icmp eq i32* %14, %12"];
 Node0x55ad3df2de40[shape=record, label="  br i1 %58, label %61, label %59"];
 Node0x55ad3df2df10[shape=record, label="  store i32 %15, i32* %14, align 4, !tbaa !3"];
 Node0x55ad3df2dfe0[shape=record, label="  %60 = getelementptr inbounds i32, i32* %14, i64 1"];
 Node0x55ad3df2e0b0[shape=record, label="  store i32* %60, i32** %3, align 8, !tbaa !7"];
 Node0x55ad3df2e180[shape=record, label="  br label %87"];
 Node0x55ad3df2e250[shape=record, label="  %62 = icmp eq i64 %18, 9223372036854775804"];
 Node0x55ad3df2e320[shape=record, label="  br i1 %62, label %63, label %65"];
 Node0x55ad3df2e3f0[shape=record, label="  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #8"];
 Node0x55ad3df2e4c0[shape=record, label="  to label %64 unwind label %85"];
 Node0x55ad3df2e590[shape=record, label="  unreachable"];
 Node0x55ad3df2e660[shape=record, label="  %66 = ashr exact i64 %18, 1"];
 Node0x55ad3df2e730[shape=record, label="  %67 = icmp ult i64 %66, %19"];
 Node0x55ad3df2e800[shape=record, label="  %68 = icmp ugt i64 %66, 2305843009213693951"];
 Node0x55ad3df2e8d0[shape=record, label="  %69 = or i1 %67, %68"];
 Node0x55ad3df2e9a0[shape=record, label="  %70 = select i1 %69, i64 2305843009213693951, i64 %66"];
 Node0x55ad3df2ea70[shape=record, label="  %71 = shl nuw nsw i64 %70, 2"];
 Node0x55ad3df2eb40[shape=record, label="  invoke noalias nonnull i8* @_Znwm(i64 %71) #6"];
 Node0x55ad3df2ec10[shape=record, label="  to label %73 unwind label %83"];
 Node0x55ad3df2ece0[shape=record, label="  %74 = bitcast i8* %72 to i32*"];
 Node0x55ad3df2edb0[shape=record, label="  %75 = getelementptr inbounds i32, i32* %74, i64 %19"];
 Node0x55ad3df2ee80[shape=record, label="  store i32 %15, i32* %75, align 4, !tbaa !3"];
 Node0x55ad3df2ef50[shape=record, label="  %76 = icmp sgt i64 %18, 0"];
 Node0x55ad3df2f020[shape=record, label="  br i1 %76, label %77, label %79"];
 Node0x55ad3df2f0f0[shape=record, label="  %78 = bitcast i32* %13 to i8*"];
 Node0x55ad3df2f1c0[shape=record, label="  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %78, i64 %18, i1 false) #7"];
 Node0x55ad3df2f290[shape=record, label="  br label %79"];
 Node0x55ad3df2f360[shape=record, label="  %80 = bitcast i32* %13 to i8*"];
 Node0x55ad3df2f430[shape=record, label="  %81 = getelementptr inbounds i32, i32* %75, i64 1"];
 Node0x55ad3df2f500[shape=record, label="  tail call void @_ZdlPv(i8* nonnull %80) #7"];
 Node0x55ad3df2f5d0[shape=record, label="  store i8* %72, i8** %8, align 8, !tbaa !10"];
 Node0x55ad3df2f6a0[shape=record, label="  store i32* %81, i32** %3, align 8, !tbaa !7"];
 Node0x55ad3df2f770[shape=record, label="  %82 = getelementptr inbounds i32, i32* %74, i64 %70"];
 Node0x55ad3df2f840[shape=record, label="  store i32* %82, i32** %4, align 8, !tbaa !11"];
 Node0x55ad3df2f910[shape=record, label="  br label %87"];
 Node0x55ad3df2fa00[shape=record, label="  %84 = landingpad { i8*, i32 }"];
 Node0x55ad3df2fa70[shape=record, label="  cleanup"];
 Node0x55ad3df2fb40[shape=record, label="  br label %98"];
 Node0x55ad3df2fc10[shape=record, label="  %86 = landingpad { i8*, i32 }"];
 Node0x55ad3df2fc80[shape=record, label="  cleanup"];
 Node0x55ad3df2fd50[shape=record, label="  br label %98"];
 Node0x55ad3df2fe20[shape=record, label="  %99 = phi { i8*, i32 } [ %96, %95 ], [ %84, %83 ], [ %86, %85 ]"];
 Node0x55ad3df30010[shape=record, label="  %100 = bitcast i32* %13 to i8*"];
 Node0x55ad3df300e0[shape=record, label="  tail call void @_ZdlPv(i8* nonnull %100) #7"];
 Node0x55ad3df301b0[shape=record, label="  br label %101"];
 Node0x55ad3df30280[shape=record, label="  %102 = phi { i8*, i32 } [ %96, %95 ], [ %99, %98 ]"];
 Node0x55ad3df30350[shape=record, label="  resume { i8*, i32 } %102"];
 Node0x55ad3df2a950 -> Node0x55ad3df2aa30
 Node0x55ad3df2aa30 -> Node0x55ad3df2ab50
 Node0x55ad3df2ab50 -> Node0x55ad3df2ac50
 Node0x55ad3df2ac50 -> Node0x55ad3df2ad20
 Node0x55ad3df2ad20 -> Node0x55ad3df2ae90
 Node0x55ad3df2ae90 -> Node0x55ad3df2af30
 Node0x55ad3df2af30 -> Node0x55ad3df2b000
 Node0x55ad3df2b000 -> Node0x55ad3df2b0d0
 Node0x55ad3df2b0d0 -> Node0x55ad3df2b180
 Node0x55ad3df2b180 -> Node0x55ad3df2b250
 Node0x55ad3df2b250 -> Node0x55ad3df2b320
 Node0x55ad3df2b320 -> Node0x55ad3df2b3f0
 Node0x55ad3df2b3f0 -> Node0x55ad3df2b4c0
 Node0x55ad3df2b4c0 -> Node0x55ad3df2b590
 Node0x55ad3df2b590 -> Node0x55ad3df2b660
 Node0x55ad3df2b660 -> Node0x55ad3df2b730
 Node0x55ad3df2b730 -> Node0x55ad3df2b800
 Node0x55ad3df2b800 -> Node0x55ad3df2b8d0
 Node0x55ad3df2b8d0 -> Node0x55ad3df2b9a0
 Node0x55ad3df2b9a0 -> Node0x55ad3df2ba70
 Node0x55ad3df2ba70 -> Node0x55ad3df2bb40
 Node0x55ad3df2bb40 -> Node0x55ad3df2bc10
 Node0x55ad3df2bc10 -> Node0x55ad3df2bce0
 Node0x55ad3df2bce0 -> Node0x55ad3df2bd90
 Node0x55ad3df2bd90 -> Node0x55ad3df2be60
 Node0x55ad3df2be60 -> Node0x55ad3df2bf30
 Node0x55ad3df2bf30 -> Node0x55ad3df2c000
 Node0x55ad3df2c000 -> Node0x55ad3df2c0d0
 Node0x55ad3df2c0d0 -> Node0x55ad3df2c1a0
 Node0x55ad3df2c1a0 -> Node0x55ad3df2c270
 Node0x55ad3df2c270 -> Node0x55ad3df2c340
 Node0x55ad3df2c340 -> Node0x55ad3df2c410
 Node0x55ad3df2c410 -> Node0x55ad3df2c4e0
 Node0x55ad3df2c4e0 -> Node0x55ad3df2c5b0
 Node0x55ad3df2c5b0 -> Node0x55ad3df2c680
 Node0x55ad3df2c680 -> Node0x55ad3df2c750
 Node0x55ad3df2c750 -> Node0x55ad3df2c820
 Node0x55ad3df2c820 -> Node0x55ad3df2cd00
 Node0x55ad3df2cd00 -> Node0x55ad3df2ce80
 Node0x55ad3df2ce80 -> Node0x55ad3df2cf80
 Node0x55ad3df2cf80 -> Node0x55ad3df2d050
 Node0x55ad3df2d050 -> Node0x55ad3df2d120
 Node0x55ad3df2d120 -> Node0x55ad3df2d1f0
 Node0x55ad3df2d1f0 -> Node0x55ad3df2d2c0
 Node0x55ad3df2d2c0 -> Node0x55ad3df2d390
 Node0x55ad3df2d390 -> Node0x55ad3df2d460
 Node0x55ad3df2d460 -> Node0x55ad3df2d530
 Node0x55ad3df2d530 -> Node0x55ad3df2d600
 Node0x55ad3df2d600 -> Node0x55ad3df2d6d0
 Node0x55ad3df2d6d0 -> Node0x55ad3df2d7a0
 Node0x55ad3df2d7a0 -> Node0x55ad3df2d870
 Node0x55ad3df2d870 -> Node0x55ad3df2da10
 Node0x55ad3df2da10 -> Node0x55ad3df2db00
 Node0x55ad3df2db00 -> Node0x55ad3df2dbd0
 Node0x55ad3df2dbd0 -> Node0x55ad3df2dca0
 Node0x55ad3df2dca0 -> Node0x55ad3df2dd70
 Node0x55ad3df2dd70 -> Node0x55ad3df2de40
 Node0x55ad3df2de40 -> Node0x55ad3df2df10
 Node0x55ad3df2df10 -> Node0x55ad3df2dfe0
 Node0x55ad3df2dfe0 -> Node0x55ad3df2fa00
 Node0x55ad3df2fa00 -> Node0x55ad3df2fa70
 Node0x55ad3df2fa70 -> Node0x55ad3df2fb40
 Node0x55ad3df2fb40 -> Node0x55ad3df2fc10
 Node0x55ad3df2fc10 -> Node0x55ad3df2fc80
 Node0x55ad3df2fc80 -> Node0x55ad3df2fd50
 Node0x55ad3df2fd50 -> Node0x55ad3df2fe20
 Node0x55ad3df2fe20 -> Node0x55ad3df30010
 Node0x55ad3df30010 -> Node0x55ad3df300e0
 Node0x55ad3df300e0 -> Node0x55ad3df301b0
 Node0x55ad3df301b0 -> Node0x55ad3df30280
 Node0x55ad3df30280 -> Node0x55ad3df30350
}