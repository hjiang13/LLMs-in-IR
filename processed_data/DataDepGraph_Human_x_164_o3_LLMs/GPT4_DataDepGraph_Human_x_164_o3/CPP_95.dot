digraph "DFG for'check_dict_case' function" {
 Node0x55ad3df2a950[shape=record, label="  %2 = alloca i64, align 8"];
 Node0x55ad3df2aa30[shape=record, label="  %3 = alloca %"class.std::__cxx11::basic_string", align 8"];
 Node0x55ad3df2ab50[shape=record, label="  %4 = getelementptr inbounds %"class.std::map", %"class.std::map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2ac50[shape=record, label="  %5 = getelementptr inbounds i8, i8* %4, i64 40"];
 Node0x55ad3df2ad20[shape=record, label="  %6 = bitcast i8* %5 to i64*"];
 Node0x55ad3df2ae10[shape=record, label="  %7 = load i64, i64* %6, align 8, !tbaa !3"];
 Node0x55ad3df2af00[shape=record, label="  %8 = icmp eq i64 %7, 0"];
 Node0x55ad3df2b000[shape=record, label="  br i1 %8, label %80, label %9"];
 Node0x55ad3df2b100[shape=record, label="  %10 = getelementptr inbounds i8, i8* %4, i64 24"];
 Node0x55ad3df2b200[shape=record, label="  %11 = bitcast i8* %10 to %"struct.std::_Rb_tree_node_base"**"];
 Node0x55ad3df2b300[shape=record, label="  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8, !tbaa !11"];
 Node0x55ad3df2b400[shape=record, label="  %13 = getelementptr inbounds i8, i8* %4, i64 8"];
 Node0x55ad3df2b500[shape=record, label="  %14 = bitcast i8* %13 to %"struct.std::_Rb_tree_node_base"*"];
 Node0x55ad3df2b600[shape=record, label="  %15 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*"];
 Node0x55ad3df2b700[shape=record, label="  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2"];
 Node0x55ad3df2b800[shape=record, label="  %17 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**"];
 Node0x55ad3df2b900[shape=record, label="  %18 = bitcast i64* %2 to i8*"];
 Node0x55ad3df2ba00[shape=record, label="  %19 = bitcast %union.anon* %16 to i8*"];
 Node0x55ad3df2bb00[shape=record, label="  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0"];
 Node0x55ad3df2bc00[shape=record, label="  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0"];
 Node0x55ad3df2bd00[shape=record, label="  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1"];
 Node0x55ad3df2be00[shape=record, label="  %23 = icmp eq %"struct.std::_Rb_tree_node_base"* %12, %14"];
 Node0x55ad3df2bf00[shape=record, label="  br i1 %23, label %80, label %24"];
 Node0x55ad3df2c000[shape=record, label="  %25 = phi i32 [ %73, %77 ], [ 0, %9 ]"];
 Node0x55ad3df2c100[shape=record, label="  %26 = phi i32 [ %71, %77 ], [ 0, %9 ]"];
 Node0x55ad3df2c200[shape=record, label="  %27 = phi %"struct.std::_Rb_tree_node_base"* [ %78, %77 ], [ %12, %9 ]"];
 Node0x55ad3df2c300[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #6"];
 Node0x55ad3df2c400[shape=record, label="  %28 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %27, i64 1"];
 Node0x55ad3df2c500[shape=record, label="  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !12"];
 Node0x55ad3df2c600[shape=record, label="  %29 = bitcast %"struct.std::_Rb_tree_node_base"* %28 to i8**"];
 Node0x55ad3df2c700[shape=record, label="  %30 = load i8*, i8** %29, align 8, !tbaa !14"];
 Node0x55ad3df2c800[shape=record, label="  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %27, i64 1, i32 1"];
 Node0x55ad3df2c900[shape=record, label="  %32 = bitcast %"struct.std::_Rb_tree_node_base"** %31 to i64*"];
 Node0x55ad3df2ca00[shape=record, label="  %33 = load i64, i64* %32, align 8, !tbaa !16"];
 Node0x55ad3df2cb00[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6"];
 Node0x55ad3df2cc00[shape=record, label="  store i64 %33, i64* %2, align 8, !tbaa !17"];
 Node0x55ad3df2cd00[shape=record, label="  %34 = icmp ugt i64 %33, 15"];
 Node0x55ad3df2ce00[shape=record, label="  br i1 %34, label %35, label %38"];
 Node0x55ad3df2cf00[shape=record, label="  %36 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i64* nonnull align 8 dereferenceable(8) %2, i64 0)"];
 Node0x55ad3df2d000[shape=record, label="  store i8* %36, i8** %20, align 8, !tbaa !14"];
 Node0x55ad3df2d100[shape=record, label="  %37 = load i64, i64* %2, align 8, !tbaa !17"];
 Node0x55ad3df2d200[shape=record, label="  store i64 %37, i64* %21, align 8, !tbaa !18"];
 Node0x55ad3df2d300[shape=record, label="  br label %38"];
 Node0x55ad3df2d400[shape=record, label="  %39 = phi i8* [ %36, %35 ], [ %19, %24 ]"];
 Node0x55ad3df2d500[shape=record, label="  switch i64 %33, label %42 [ i64 1, label %40 i64 0, label %43 ]"];
 Node0x55ad3df2d600[shape=record, label="  %41 = load i8, i8* %30, align 1, !tbaa !18"];
 Node0x55ad3df2d700[shape=record, label="  store i8 %41, i8* %39, align 1, !tbaa !18"];
 Node0x55ad3df2d800[shape=record, label="  br label %43"];
 Node0x55ad3df2d900[shape=record, label="  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %30, i64 %33, i1 false) #6"];
 Node0x55ad3df2da00[shape=record, label="  br label %43"];
 Node0x55ad3df2db00[shape=record, label="  %44 = load i64, i64* %2, align 8, !tbaa !17"];
 Node0x55ad3df2dc00[shape=record, label="  store i64 %44, i64* %22, align 8, !tbaa !16"];
 Node0x55ad3df2dd00[shape=record, label="  %45 = load i8*, i8** %20, align 8, !tbaa !14"];
 Node0x55ad3df2de00[shape=record, label="  %46 = getelementptr inbounds i8, i8* %45, i64 %44"];
 Node0x55ad3df2df00[shape=record, label="  store i8 0, i8* %46, align 1, !tbaa !18"];
 Node0x55ad3df2e000[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6"];
 Node0x55ad3df2e100[shape=record, label="  %47 = load i64, i64* %22, align 8, !tbaa !16"];
 Node0x55ad3df2e200[shape=record, label="  %48 = load i8*, i8** %20, align 8"];
 Node0x55ad3df2e300[shape=record, label="  %49 = icmp eq i64 %47, 0"];
 Node0x55ad3df2e400[shape=record, label="  br i1 %49, label %70, label %52"];
 Node0x55ad3df2e500[shape=record, label="  %51 = icmp eq i64 %69, %47"];
 Node0x55ad3df2e600[shape=record, label="  br i1 %51, label %70, label %52, !llvm.loop !19"];
 Node0x55ad3df2e700[shape=record, label="  %53 = phi i64 [ %69, %50 ], [ 0, %43 ]"];
 Node0x55ad3df2e800[shape=record, label="  %54 = phi i32 [ %66, %50 ], [ %25, %43 ]"];
 Node0x55ad3df2e900[shape=record, label="  %55 = phi i32 [ %65, %50 ], [ %26, %43 ]"];
 Node0x55ad3df2ea00[shape=record, label="  %56 = getelementptr inbounds i8, i8* %48, i64 %53"];
 Node0x55ad3df2eb00[shape=record, label="  %57 = load i8, i8* %56, align 1, !tbaa !18"];
 Node0x55ad3df2ec00[shape=record, label="  %58 = icmp slt i8 %57, 65"];
 Node0x55ad3df2ed00[shape=record, label="  br i1 %58, label %70, label %59"];
 Node0x55ad3df2ee00[shape=record, label="  %60 = icmp sgt i8 %57, 90"];
 Node0x55ad3df2ef00[shape=record, label="  br i1 %60, label %61, label %64"];
 Node0x55ad3df2f000[shape=record, label="  %62 = add nsw i8 %57, -97"];
 Node0x55ad3df2f100[shape=record, label="  %63 = icmp ugt i8 %62, 25"];
 Node0x55ad3df2f200[shape=record, label="  br i1 %63, label %70, label %64"];
 Node0x55ad3df2f300[shape=record, label="  %65 = phi i32 [ 1, %59 ], [ %55, %61 ]"];
 Node0x55ad3df2f400[shape=record, label="  %66 = phi i32 [ %54, %59 ], [ 1, %61 ]"];
 Node0x55ad3df2f500[shape=record, label="  %67 = add nsw i32 %66, %65"];
 Node0x55ad3df2f600[shape=record, label="  %68 = icmp eq i32 %67, 2"];
 Node0x55ad3df2f700[shape=record, label="  %69 = add nuw i64 %53, 1"];
 Node0x55ad3df2f800[shape=record, label="  br i1 %68, label %70, label %50"];
 Node0x55ad3df2f900[shape=record, label="  %71 = phi i32 [ %26, %43 ], [ %65, %64 ], [ %55, %52 ], [ %55, %61 ], [ %65, %50 ]"];
 Node0x55ad3df2fa00[shape=record, label="  %72 = phi i1 [ true, %43 ], [ false, %64 ], [ false, %52 ], [ false, %61 ], [ true, %50 ]"];
 Node0x55ad3df2fb00[shape=record, label="  %73 = phi i32 [ %25, %43 ], [ %66, %64 ], [ %54, %52 ], [ %54, %61 ], [ %66, %50 ]"];
 Node0x55ad3df2fc00[shape=record, label="  %74 = icmp eq i8* %48, %19"];
 Node0x55ad3df2fd00[shape=record, label="  br i1 %74, label %76, label %75"];
 Node0x55ad3df2fe00[shape=record, label="  call void @_ZdlPv(i8* %48) #6"];
 Node0x55ad3df2ff00[shape=record, label="  br label %76"];
 Node0x55ad3df30000[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6"];
 Node0x55ad3df30100[shape=record, label="  br i1 %72, label %77, label %80"];
 Node0x55ad3df30200[shape=record, label="  %78 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %27) #7"];
 Node0x55ad3df30300[shape=record, label="  %79 = icmp eq %"struct.std::_Rb_tree_node_base"* %78, %14"];
 Node0x55ad3df30400[shape=record, label="  br i1 %79, label %80, label %24, !llvm.loop !21"];
 Node0x55ad3df30500[shape=record, label="  %81 = phi i1 [ false, %1 ], [ true, %9 ], [ %72, %77 ], [ %72, %76 ]"];
 Node0x55ad3df30600[shape=record, label="  ret i1 %81"];
 Node0x55ad3df2b000 -> Node0x55ad3df2b100
 Node0x55ad3df2b100 -> Node0x55ad3df2b200
 Node0x55ad3df2b200 -> Node0x55ad3df2b300
 Node0x55ad3df2b300 -> Node0x55ad3df2b400
 Node0x55ad3df2b400 -> Node0x55ad3df2b500
 Node0x55ad3df2b500 -> Node0x55ad3df2b600
 Node0x55ad3df2b600 -> Node0x55ad3df2b700
 Node0x55ad3df2b700 -> Node0x55ad3df2b800
 Node0x55ad3df2b800 -> Node0x55ad3df2b900
 Node0x55ad3df2b900 -> Node0x55ad3df2ba00
 Node0x55ad3df2ba00 -> Node0x55ad3df2bb00
 Node0x55ad3df2bb00 -> Node0x55ad3df2bc00
 Node0x55ad3df2bc00 -> Node0x55ad3df2bd00
 Node0x55ad3df2bd00 -> Node0x55ad3df2be00
 Node0x55ad3df2be00 -> Node0x55ad3df2bf00
 Node0x55ad3df2bf00 -> Node0x55ad3df2c000
 Node0x55ad3df2c000 -> Node0x55ad3df2c100
 Node0x55ad3df2c100 -> Node0x55ad3df2c200
 Node0x55ad3df2c200 -> Node0x55ad3df2c300
 Node0x55ad3df2c300 -> Node0x55ad3df2c400
 Node0x55ad3df2c400 -> Node0x55ad3df2c500
 Node0x55ad3df2c500 -> Node0x55ad3df2c600
 Node0x55ad3df2c600 -> Node0x55ad3df2c700
 Node0x55ad3df2c700 -> Node0x55ad3df2c800
 Node0x55ad3df2c800 -> Node0x55ad3df2c900
 Node0x55ad3df2c900 -> Node0x55ad3df2ca00
 Node0x55ad3df2ca00 -> Node0x55ad3df2cb00
 Node0x55ad3df2cb00 -> Node0x55ad3df2cc00
 Node0x55ad3df2cc00 -> Node0x55ad3df2cd00
 Node0x55ad3df2cd00 -> Node0x55ad3df2ce00
 Node0x55ad3df2ce00 -> Node0x55ad3df2cf00
 Node0x55ad3df2cf00 -> Node0x55ad3df2d000
 Node0x55ad3df2d000 -> Node0x55ad3df2d100
 Node0x55ad3df2d100 -> Node0x55ad3df2d200
 Node0x55ad3df2d200 -> Node0x55ad3df2d300
 Node0x55ad3df2d300 -> Node0x55ad3df2d400
 Node0x55ad3df2d400 -> Node0x55ad3df2d500
 Node0x55ad3df2d500 -> Node0x55ad3df2d600
 Node0x55ad3df2d600 -> Node0x55ad3df2d700
 Node0x55ad3df2d700 -> Node0x55ad3df2d800
 Node0x55ad3df2d800 -> Node0x55ad3df2d900
 Node0x55ad3df2d900 -> Node0x55ad3df2da00
 Node0x55ad3df2da00 -> Node0x55ad3df2db00
 Node0x55ad3df2db00 -> Node0x55ad3df2dc00
 Node0x55ad3df2dc00 -> Node0x55ad3df2dd00
 Node0x55ad3df2dd00 -> Node0x55ad3df2de00
 Node0x55ad3df2de00 -> Node0x55ad3df2df00
 Node0x55ad3df2df00 -> Node0x55ad3df2e000
 Node0x55ad3df2e000 -> Node0x55ad3df2e100
 Node0x55ad3df2e100 -> Node0x55ad3df2e200
 Node0x55ad3df2e200 -> Node0x55ad3df2e300
 Node0x55ad3df2e300 -> Node0x55ad3df2e400
 Node0x55ad3df2e400 -> Node0x55ad3df2e500
 Node0x55ad3df2e500 -> Node0x55ad3df2e600
 Node0x55ad3df2e600 -> Node0x55ad3df2e700
 Node0x55ad3df2e700 -> Node0x55ad3df2e800
 Node0x55ad3df2e800 -> Node0x55ad3df2e900
 Node0x55ad3df2e900 -> Node0x55ad3df2ea00
 Node0x55ad3df2ea00 -> Node0x55ad3df2eb00
 Node0x55ad3df2eb00 -> Node0x55ad3df2ec00
 Node0x55ad3df2ec00 -> Node0x55ad3df2ed00
 Node0x55ad3df2ed00 -> Node0x55ad3df2ee00
 Node0x55ad3df2ee00 -> Node0x55ad3df2ef00
 Node0x55ad3df2ef00 -> Node0x55ad3df2f000
 Node0x55ad3df2f000 -> Node0x55ad3df2f100
 Node0x55ad3df2f100 -> Node0x55ad3df2f200
 Node0x55ad3df2f200 -> Node0x55ad3df2f300
 Node0x55ad3df2f300 -> Node0x55ad3df2f400
 Node0x55ad3df2f400 -> Node0x55ad3df2f500
 Node0x55ad3df2f500 -> Node0x55ad3df2f600
 Node0x55ad3df2f600 -> Node0x55ad3df2f700
 Node0x55ad3df2f700 -> Node0x55ad3df2f800
 Node0x55ad3df2f800 -> Node0x55ad3df2f900
 Node0x55ad3df2f900 -> Node0x55ad3df2fa00
 Node0x55ad3df2fa00 -> Node0x55ad3df2fb00
 Node0x55ad3df2fb00 -> Node0x55ad3df2fc00
 Node0x55ad3df2fc00 -> Node0x55ad3df2fd00
 Node0x55ad3df2fd00 -> Node0x55ad3df2fe00
 Node0x55ad3df2fe00 -> Node0x55ad3df2ff00
 Node0x55ad3df2ff00 -> Node0x55ad3df30000
 Node0x55ad3df30000 -> Node0x55ad3df30100
 Node0x55ad3df30100 -> Node0x55ad3df30200
 Node0x55ad3df30200 -> Node0x55ad3df30300
 Node0x55ad3df30300 -> Node0x55ad3df30400
}