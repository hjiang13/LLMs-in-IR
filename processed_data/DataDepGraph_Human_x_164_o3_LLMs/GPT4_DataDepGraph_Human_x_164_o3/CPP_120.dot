digraph "DFG for'maximum' function" {
 Node0x55f1a1f2a950[shape=record, label="  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55f1a1f2aa30[shape=record, label="  %5 = load i32*, i32** %4, align 8, !tbaa !3"];
 Node0x55f1a1f2ab50[shape=record, label="  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55f1a1f2ac50[shape=record, label="  %7 = load i32*, i32** %6, align 8, !tbaa !3"];
 Node0x55f1a1f2ad20[shape=record, label="  %8 = icmp eq i32* %5, %7"];
 Node0x55f1a1f2ae10[shape=record, label="  br i1 %8, label %18, label %9"];
 Node0x55f1a1f2af00[shape=record, label="  %10 = ptrtoint i32* %7 to i64"];
 Node0x55f1a1f2b0f0[shape=record, label="  %11 = ptrtoint i32* %5 to i64"];
 Node0x55f1a1f2b1e0[shape=record, label="  %12 = sub i64 %10, %11"];
 Node0x55f1a1f2b2d0[shape=record, label="  %13 = ashr exact i64 %12, 2"];
 Node0x55f1a1f2b3c0[shape=record, label="  %14 = tail call i64 @llvm.ctlz.i64(i64 %13, i1 true) #7, !range !7"];
 Node0x55f1a1f2b4b0[shape=record, label="  %15 = shl nuw nsw i64 %14, 1"];
 Node0x55f1a1f2b5a0[shape=record, label="  %16 = xor i64 %15, 126"];
 Node0x55f1a1f2b690[shape=record, label="  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %5, i32* %7, i64 %16)"];
 Node0x55f1a1f2b780[shape=record, label="  tail call void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %5, i32* %7)"];
 Node0x55f1a1f2b870[shape=record, label="  %17 = load i32*, i32** %6, align 8, !tbaa !3"];
 Node0x55f1a1f2b960[shape=record, label="  br label %18"];
 Node0x55f1a1f2ba50[shape=record, label="  %19 = phi i32* [ %5, %3 ], [ %17, %9 ]"];
 Node0x55f1a1f2bb40[shape=record, label="  %20 = sext i32 %2 to i64"];
 Node0x55f1a1f2bc30[shape=record, label="  %21 = sub nsw i64 0, %20"];
 Node0x55f1a1f2bd20[shape=record, label="  %22 = getelementptr inbounds i32, i32* %19, i64 %21"];
 Node0x55f1a1f2be10[shape=record, label="  %23 = bitcast %"class.std::vector"* %0 to i8*"];
 Node0x55f1a1f2bf00[shape=record, label="  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i64 24, i1 false) #7"];
 Node0x55f1a1f2bff0[shape=record, label="  %24 = shl nsw i64 %20, 2"];
 Node0x55f1a1f2c0e0[shape=record, label="  %25 = icmp slt i32 %2, 0"];
 Node0x55f1a1f2c1d0[shape=record, label="  br i1 %25, label %26, label %27"];
 Node0x55f1a1f2c2c0[shape=record, label="  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0)) #8"];
 Node0x55f1a1f2c3b0[shape=record, label="  unreachable"];
 Node0x55f1a1f2c4a0[shape=record, label="  %28 = icmp eq i32 %2, 0"];
 Node0x55f1a1f2c590[shape=record, label="  br i1 %28, label %29, label %33"];
 Node0x55f1a1f2c680[shape=record, label="  %30 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55f1a1f2c770[shape=record, label="  store i32* null, i32** %30, align 8, !tbaa !8"];
 Node0x55f1a1f2c860[shape=record, label="  %31 = getelementptr inbounds i32, i32* null, i64 %20"];
 Node0x55f1a1f2c950[shape=record, label="  %32 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55f1a1f2ca40[shape=record, label="  store i32* %31, i32** %32, align 8, !tbaa !10"];
 Node0x55f1a1f2cb30[shape=record, label="  br label %40"];
 Node0x55f1a1f2cc20[shape=record, label="  %34 = call noalias nonnull i8* @_Znwm(i64 %24) #9"];
 Node0x55f1a1f2cd10[shape=record, label="  %35 = bitcast i8* %34 to i32*"];
 Node0x55f1a1f2ce00[shape=record, label="  %36 = bitcast %"class.std::vector"* %0 to i8**"];
 Node0x55f1a1f2ced0[shape=record, label="  store i8* %34, i8** %36, align 8, !tbaa !8"];
 Node0x55f1a1f2cfc0[shape=record, label="  %37 = getelementptr inbounds i32, i32* %35, i64 %20"];
 Node0x55f1a1f2d0b0[shape=record, label="  %38 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55f1a1f2d1a0[shape=record, label="  store i32* %37, i32** %38, align 8, !tbaa !10"];
 Node0x55f1a1f2d290[shape=record, label="  %39 = bitcast i32* %22 to i8*"];
 Node0x55f1a1f2d380[shape=record, label="  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %39, i64 %24, i1 false) #7"];
 Node0x55f1a1f2d470[shape=record, label="  br label %40"];
 Node0x55f1a1f2d560[shape=record, label="  %41 = phi i32* [ %31, %29 ], [ %37, %33 ]"];
 Node0x55f1a1f2d650[shape=record, label="  %42 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 1"];
 Node0x55f1a1f2d740[shape=record, label="  store i32* %41, i32** %42, align 8, !tbaa !11"];
 Node0x55f1a1f2d830[shape=record, label="  ret void"];
 Node0x55f1a1f2a950 -> Node0x55f1a1f2aa30
 Node0x55f1a1f2aa30 -> Node0x55f1a1f2ab50
 Node0x55f1a1f2ab50 -> Node0x55f1a1f2ad20
 Node0x55f1a1f2ad20 -> Node0x55f1a1f2ae10
 Node0x55f1a1f2ae10 -> Node0x55f1a1f2af00
 Node0x55f1a1f2af00 -> Node0x55f1a1f2b0f0
 Node0x55f1a1f2b0f0 -> Node0x55f1a1f2b1e0
 Node0x55f1a1f2b1e0 -> Node0x55f1a1f2b2d0
 Node0x55f1a1f2b2d0 -> Node0x55f1a1f2b3c0
 Node0x55f1a1f2b3c0 -> Node0x55f1a1f2b4b0
 Node0x55f1a1f2b4b0 -> Node0x55f1a1f2b690
 Node0x55f1a1f2b690 -> Node0x55f1a1f2b780
 Node0x55f1a1f2b780 -> Node0x55f1a1f2b870
 Node0x55f1a1f2b870 -> Node0x55f1a1f2b960
 Node0x55f1a1f2b960 -> Node0x55f1a1f2ba50
 Node0x55f1a1f2ba50 -> Node0x55f1a1f2bb40
 Node0x55f1a1f2bb40 -> Node0x55f1a1f2bc30
 Node0x55f1a1f2bc30 -> Node0x55f1a1f2bd20
 Node0x55f1a1f2bd20 -> Node0x55f1a1f2be10
 Node0x55f1a1f2be10 -> Node0x55f1a1f2bf00
 Node0x55f1a1f2bf00 -> Node0x55f1a1f2c0e0
 Node0x55f1a1f2c0e0 -> Node0x55f1a1f2c1d0
 Node0x55f1a1f2c1d0 -> Node0x55f1a1f2c2c0
 Node0x55f1a1f2c2c0 -> Node0x55f1a1f2c3b0
 Node0x55f1a1f2c3b0 -> Node0x55f1a1f2c4a0
 Node0x55f1a1f2c4a0 -> Node0x55f1a1f2c590
 Node0x55f1a1f2c590 -> Node0x55f1a1f2c680
 Node0x55f1a1f2c680 -> Node0x55f1a1f2c770
 Node0x55f1a1f2c770 -> Node0x55f1a1f2c860
 Node0x55f1a1f2c860 -> Node0x55f1a1f2c950
 Node0x55f1a1f2c950 -> Node0x55f1a1f2ca40
 Node0x55f1a1f2ca40 -> Node0x55f1a1f2cb30
 Node0x55f1a1f2cb30 -> Node0x55f1a1f2cc20
 Node0x55f1a1f2cc20 -> Node0x55f1a1f2cd10
 Node0x55f1a1f2cd10 -> Node0x55f1a1f2ce00
 Node0x55f1a1f2ce00 -> Node0x55f1a1f2ced0
 Node0x55f1a1f2ced0 -> Node0x55f1a1f2cfc0
 Node0x55f1a1f2cfc0 -> Node0x55f1a1f2d0b0
 Node0x55f1a1f2d0b0 -> Node0x55f1a1f2d1a0
 Node0x55f1a1f2d1a0 -> Node0x55f1a1f2d290
 Node0x55f1a1f2d290 -> Node0x55f1a1f2d380
 Node0x55f1a1f2d380 -> Node0x55f1a1f2d470
}