digraph "DFG for'sum_squares' function" {
 Node0x55ad3df2a950[shape=record, label="  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2aa30[shape=record, label="  %3 = load float*, float** %2, align 8, !tbaa !3"];
 Node0x55ad3df2ab50[shape=record, label="  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2ac50[shape=record, label="  %5 = load float*, float** %4, align 8, !tbaa !8"];
 Node0x55ad3df2ad20[shape=record, label="  %6 = ptrtoint float* %3 to i64"];
 Node0x55ad3df2ae10[shape=record, label="  %7 = ptrtoint float* %5 to i64"];
 Node0x55ad3df2af00[shape=record, label="  %8 = sub i64 %6, %7"];
 Node0x55ad3df2b000[shape=record, label="  %9 = icmp eq i64 %8, 0"];
 Node0x55ad3df2b100[shape=record, label="  %11 = ashr exact i64 %8, 2"];
 Node0x55ad3df2b200[shape=record, label="  %12 = call i64 @llvm.umax.i64(i64 %11, i64 1)"];
 Node0x55ad3df2b300[shape=record, label="  %13 = and i64 %12, 1"];
 Node0x55ad3df2b400[shape=record, label="  %14 = icmp ult i64 %11, 2"];
 Node0x55ad3df2b500[shape=record, label="  %16 = and i64 %12, -2"];
 Node0x55ad3df2b600[shape=record, label="  %18 = sitofp i32 %51 to float"];
 Node0x55ad3df2b700[shape=record, label="  %20 = phi i32 [ undef, %10 ], [ %51, %17 ]"];
 Node0x55ad3df2b800[shape=record, label="  %21 = phi i64 [ 0, %10 ], [ %52, %17 ]"];
 Node0x55ad3df2b900[shape=record, label="  %22 = phi float [ 0.000000e+00, %10 ], [ %18, %17 ]"];
 Node0x55ad3df2ba00[shape=record, label="  %23 = icmp eq i64 %13, 0"];
 Node0x55ad3df2bb00[shape=record, label="  %25 = getelementptr inbounds float, float* %5, i64 %21"];
 Node0x55ad3df2bc00[shape=record, label="  %26 = load float, float* %25, align 4, !tbaa !9"];
 Node0x55ad3df2bd00[shape=record, label="  %27 = tail call float @llvm.ceil.f32(float %26) #3"];
 Node0x55ad3df2be00[shape=record, label="  %28 = fmul float %27, %27"];
 Node0x55ad3df2bf00[shape=record, label="  %29 = fadd float %28, %22"];
 Node0x55ad3df2c000[shape=record, label="  %30 = fptosi float %29 to i32"];
 Node0x55ad3df2c100[shape=record, label="  %32 = phi i32 [ 0, %1 ], [ %20, %19 ], [ %30, %24 ]"];
 Node0x55ad3df2c200[shape=record, label="  %34 = phi i64 [ 0, %15 ], [ %52, %33 ]"];
 Node0x55ad3df2c300[shape=record, label="  %35 = phi i32 [ 0, %15 ], [ %51, %33 ]"];
 Node0x55ad3df2c400[shape=record, label="  %36 = phi i64 [ %16, %15 ], [ %53, %33 ]"];
 Node0x55ad3df2c500[shape=record, label="  %37 = getelementptr inbounds float, float* %5, i64 %34"];
 Node0x55ad3df2c600[shape=record, label="  %38 = load float, float* %37, align 4, !tbaa !9"];
 Node0x55ad3df2c700[shape=record, label="  %39 = tail call float @llvm.ceil.f32(float %38) #3"];
 Node0x55ad3df2c800[shape=record, label="  %40 = fmul float %39, %39"];
 Node0x55ad3df2c900[shape=record, label="  %41 = sitofp i32 %35 to float"];
 Node0x55ad3df2ca00[shape=record, label="  %42 = fadd float %40, %41"];
 Node0x55ad3df2cb00[shape=record, label="  %43 = fptosi float %42 to i32"];
 Node0x55ad3df2cc00[shape=record, label="  %44 = or i64 %34, 1"];
 Node0x55ad3df2cd00[shape=record, label="  %45 = getelementptr inbounds float, float* %5, i64 %44"];
 Node0x55ad3df2ce00[shape=record, label="  %46 = load float, float* %45, align 4, !tbaa !9"];
 Node0x55ad3df2cf00[shape=record, label="  %47 = tail call float @llvm.ceil.f32(float %46) #3"];
 Node0x55ad3df2d000[shape=record, label="  %48 = fmul float %47, %47"];
 Node0x55ad3df2d100[shape=record, label="  %49 = sitofp i32 %43 to float"];
 Node0x55ad3df2d200[shape=record, label="  %50 = fadd float %48, %49"];
 Node0x55ad3df2d300[shape=record, label="  %51 = fptosi float %50 to i32"];
 Node0x55ad3df2d400[shape=record, label="  %52 = add nuw nsw i64 %34, 2"];
 Node0x55ad3df2d500[shape=record, label="  %53 = add i64 %36, -2"];
 Node0x55ad3df2d600[shape=record, label="  %54 = icmp eq i64 %53, 0"];
 Node0x55ad3df2d700[shape=record, label="  ret i32 %32"];
 Node0x55ad3df2d800[shape=record, label="  br i1 %9, label %31, label %10"];
 Node0x55ad3df2d900[shape=record, label="  br i1 %14, label %19, label %15"];
 Node0x55ad3df2da00[shape=record, label="  br label %33"];
 Node0x55ad3df2db00[shape=record, label="  br label %31"];
 Node0x55ad3df2dc00[shape=record, label="  br label %19"];
 Node0x55ad3df2dd00[shape=record, label="  br label %31"];
 Node0x55ad3df2de00[shape=record, label="  br label %17"];
 Node0x55ad3df2df00[shape=record, label="  br i1 %54, label %17, label %33, !llvm.loop !11"];
 Node0x55ad3df2d800 -> Node0x55ad3df2d900;
 Node0x55ad3df2d900 -> Node0x55ad3df2da00;
 Node0x55ad3df2da00 -> Node0x55ad3df2db00;
 Node0x55ad3df2db00 -> Node0x55ad3df2dc00;
 Node0x55ad3df2dc00 -> Node0x55ad3df2dd00;
 Node0x55ad3df2dd00 -> Node0x55ad3df2de00;
 Node0x55ad3df2de00 -> Node0x55ad3df2df00;
 Node0x55ad3df2df00 -> Node0x55ad3df2d700;
 Node0x55ad3df2d800 -> Node0x55ad3df2d900;
 Node0x55ad3df2d900 -> Node0x55ad3df2b100;
 Node0x55ad3df2b100 -> Node0x55ad3df2b200;
 Node0x55ad3df2b200 -> Node0x55ad3df2b300;
 Node0x55ad3df2b300 -> Node0x55ad3df2b400;
 Node0x55ad3df2b400 -> Node0x55ad3df2b500;
 Node0x55ad3df2b500 -> Node0x55ad3df2b600;
 Node0x55ad3df2b600 -> Node0x55ad3df2b700;
 Node0x55ad3df2b700 -> Node0x55ad3df2b800;
 Node0x55ad3df2b800 -> Node0x55ad3df2b900;
 Node0x55ad3df2b900 -> Node0x55ad3df2ba00;
 Node0x55ad3df2ba00 -> Node0x55ad3df2bb00;
 Node0x55ad3df2bb00 -> Node0x55ad3df2bc00;
 Node0x55ad3df2bc00 -> Node0x55ad3df2bd00;
 Node0x55ad3df2bd00 -> Node0x55ad3df2be00;
 Node0x55ad3df2be00 -> Node0x55ad3df2bf00;
 Node0x55ad3df2bf00 -> Node0x55ad3df2c000;
 Node0x55ad3df2c000 -> Node0x55ad3df2c100;
 Node0x55ad3df2c100 -> Node0x55ad3df2c200;
 Node0x55ad3df2c200 -> Node0x55ad3df2c300;
 Node0x55ad3df2c300 -> Node0x55ad3df2c400;
 Node0x55ad3df2c400 -> Node0x55ad3df2c500;
 Node0x55ad3df2c500 -> Node0x55ad3df2c600;
 Node0x55ad3df2c600 -> Node0x55ad3df2c700;
 Node0x55ad3df2c700 -> Node0x55ad3df2c800;
 Node0x55ad3df2c800 -> Node0x55ad3df2c900;
 Node0x55ad3df2c900 -> Node0x55ad3df2ca00;
 Node0x55ad3df2ca00 -> Node0x55ad3df2cb00;
 Node0x55ad3df2cb00 -> Node0x55ad3df2cc00;
 Node0x55ad3df2cc00 -> Node0x55ad3df2cd00;
 Node0x55ad3df2cd00 -> Node0x55ad3df2ce00;
 Node0x55ad3df2ce00 -> Node0x55ad3df2cf00;
 Node0x55ad3df2cf00 -> Node0x55ad3df2d000;
 Node0x55ad3df2d000 -> Node0x55ad3df2d100;
 Node0x55ad3df2d100 -> Node0x55ad3df2d200;
 Node0x55ad3df2d200 -> Node0x55ad3df2d300;
 Node0x55ad3df2d300 -> Node0x55ad3df2d400;
 Node0x55ad3df2d400 -> Node0x55ad3df2d500;
 Node0x55ad3df2d500 -> Node0x55ad3df2d600;
 Node0x55ad3df2d600 -> Node0x55ad3df2d700;
}