digraph "DFG for'sort_array' function" {
 Node0x55ad3df2a950[shape=record, label="  %3 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df2aa30[shape=record, label="  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df2ab50[shape=record, label="  %5 = load i32*, i32** %3, align 8, !tbaa !3"];
 Node0x55ad3df2ac50[shape=record, label="  %6 = load i32*, i32** %4, align 8, !tbaa !8"];
 Node0x55ad3df2ad20[shape=record, label="  %7 = icmp eq i32* %5, %6"];
 Node0x55ad3df2ae10[shape=record, label="  %9 = icmp ult i64 %119, 2"];
 Node0x55ad3df2af00[shape=record, label="  %11 = phi i64 [ %46, %45 ], [ 0, %8 ]"];
 Node0x55ad3df2b000[shape=record, label="  %12 = load i32, i32* %111, align 4, !tbaa !9"];
 Node0x55ad3df2b100[shape=record, label="  %14 = phi i32 [ %12, %10 ], [ %42, %41 ]"];
 Node0x55ad3df2b200[shape=record, label="  %15 = phi i64 [ 1, %10 ], [ %43, %41 ]"];
 Node0x55ad3df2b300[shape=record, label="  %16 = getelementptr inbounds i32, i32* %111, i64 %15"];
 Node0x55ad3df2b400[shape=record, label="  %17 = load i32, i32* %16, align 4, !tbaa !9"];
 Node0x55ad3df2b500[shape=record, label="  %18 = add nsw i64 %15, -1"];
 Node0x55ad3df2b600[shape=record, label="  %19 = getelementptr inbounds i32, i32* %111, i64 %18"];
 Node0x55ad3df2b700[shape=record, label="  %20 = icmp slt i32 %17, %14"];
 Node0x55ad3df2b800[shape=record, label="  %22 = getelementptr inbounds i32, i32* %109, i64 %15"];
 Node0x55ad3df2b900[shape=record, label="  %23 = load i32, i32* %22, align 4, !tbaa !9"];
 Node0x55ad3df2ba00[shape=record, label="  %24 = getelementptr inbounds i32, i32* %109, i64 %18"];
 Node0x55ad3df2bb00[shape=record, label="  %25 = load i32, i32* %24, align 4, !tbaa !9"];
 Node0x55ad3df2bc00[shape=record, label="  %27 = icmp eq i32 %17, %14"];
 Node0x55ad3df2bd00[shape=record, label="  %29 = getelementptr inbounds i32, i32* %109, i64 %15"];
 Node0x55ad3df2be00[shape=record, label="  %30 = load i32, i32* %29, align 4, !tbaa !9"];
 Node0x55ad3df2bf00[shape=record, label="  %31 = getelementptr inbounds i32, i32* %109, i64 %18"];
 Node0x55ad3df2c000[shape=record, label="  %32 = load i32, i32* %31, align 4, !tbaa !9"];
 Node0x55ad3df2c100[shape=record, label="  %35 = phi i32 [ %25, %21 ], [ %32, %28 ]"];
 Node0x55ad3df2c200[shape=record, label="  %36 = phi i32 [ %23, %21 ], [ %30, %28 ]"];
 Node0x55ad3df2c300[shape=record, label="  %37 = getelementptr inbounds i32, i32* %109, i64 %15"];
 Node0x55ad3df2c400[shape=record, label="  store i32 %35, i32* %37, align 4, !tbaa !9"];
 Node0x55ad3df2c500[shape=record, label="  store i32 %36, i32* %38, align 4, !tbaa !9"];
 Node0x55ad3df2c600[shape=record, label="  %39 = load i32, i32* %16, align 4, !tbaa !9"];
 Node0x55ad3df2c700[shape=record, label="  %40 = load i32, i32* %19, align 4, !tbaa !9"];
 Node0x55ad3df2c800[shape=record, label="  store i32 %40, i32* %16, align 4, !tbaa !9"];
 Node0x55ad3df2c900[shape=record, label="  store i32 %39, i32* %19, align 4, !tbaa !9"];
 Node0x55ad3df2ca00[shape=record, label="  %42 = phi i32 [ %40, %34 ], [ %14, %28 ], [ %17, %26 ]"];
 Node0x55ad3df2cb00[shape=record, label="  %43 = add nuw nsw i64 %15, 1"];
 Node0x55ad3df2cc00[shape=record, label="  %44 = icmp eq i64 %43, %119"];
 Node0x55ad3df2cd00[shape=record, label="  %46 = add nuw nsw i64 %11, 1"];
 Node0x55ad3df2ce00[shape=record, label="  %47 = icmp eq i64 %46, %119"];
 Node0x55ad3df2cf00[shape=record, label="  %49 = phi i32* [ %109, %108 ], [ %6, %2 ]"];
 Node0x55ad3df2d000[shape=record, label="  %50 = phi i32* [ %110, %108 ], [ %5, %2 ]"];
 Node0x55ad3df2d100[shape=record, label="  %51 = phi i64 [ %115, %108 ], [ 0, %2 ]"];
 Node0x55ad3df2d200[shape=record, label="  %52 = phi i32* [ %113, %108 ], [ null, %2 ]"];
 Node0x55ad3df2d300[shape=record, label="  %53 = phi i32* [ %114, %108 ], [ null, %2 ]"];
 Node0x55ad3df2d400[shape=record, label="  %54 = phi i32* [ %111, %108 ], [ null, %2 ]"];
 Node0x55ad3df2d500[shape=record, label="  %55 = getelementptr inbounds i32, i32* %49, i64 %51"];
 Node0x55ad3df2d600[shape=record, label="  %56 = load i32, i32* %55, align 4, !tbaa !9"];
 Node0x55ad3df2d700[shape=record, label="  %57 = icmp eq i32 %56, 0"];
 Node0x55ad3df2d800[shape=record, label="  %59 = tail call i32 @llvm.abs.i32(i32 %56, i1 true)"];
 Node0x55ad3df2d900[shape=record, label="  %61 = phi i32 [ %65, %60 ], [ %59, %58 ]"];
 Node0x55ad3df2da00[shape=record, label="  %62 = phi i32 [ %64, %60 ], [ 0, %58 ]"];
 Node0x55ad3df2db00[shape=record, label="  %63 = and i32 %61, 1"];
 Node0x55ad3df2dc00[shape=record, label="  %64 = add nuw nsw i32 %63, %62"];
 Node0x55ad3df2dd00[shape=record, label="  %65 = lshr i32 %61, 1"];
 Node0x55ad3df2de00[shape=record, label="  %66 = icmp ult i32 %61, 2"];
 Node0x55ad3df2df00[shape=record, label="  %68 = phi i32 [ 0, %48 ], [ %64, %60 ]"];
 Node0x55ad3df2e000[shape=record, label="  %69 = icmp eq i32* %53, %52"];
 Node0x55ad3df2e100[shape=record, label="  %72 = ptrtoint i32* %52 to i64"];
 Node0x55ad3df2e200[shape=record, label="  %73 = ptrtoint i32* %54 to i64"];
 Node0x55ad3df2e300[shape=record, label="  %74 = sub i64 %72, %73"];
 Node0x55ad3df2e400[shape=record, label="  %75 = ashr exact i64 %74, 2"];
 Node0x55ad3df2e500[shape=record, label="  %76 = icmp eq i64 %74, 9223372036854775804"];
 Node0x55ad3df2e600[shape=record, label="  %80 = icmp eq i64 %74, 0"];
 Node0x55ad3df2e700[shape=record, label="  %81 = select i1 %80, i64 1, i64 %75"];
 Node0x55ad3df2e800[shape=record, label="  %82 = add nsw i64 %81, %75"];
 Node0x55ad3df2e900[shape=record, label="  %83 = icmp ult i64 %82, %75"];
 Node0x55ad3df2ea00[shape=record, label="  %84 = icmp ugt i64 %82, 2305843009213693951"];
 Node0x55ad3df2eb00[shape=record, label="  %85 = or i1 %83, %84"];
 Node0x55ad3df2ec00[shape=record, label="  %86 = select i1 %85, i64 2305843009213693951, i64 %82"];
 Node0x55ad3df2ed00[shape=record, label="  %87 = icmp eq i64 %86, 0"];
 Node0x55ad3df2ee00[shape=record, label="  %89 = shl nuw nsw i64 %86, 2"];
 Node0x55ad3df2ef00[shape=record, label="  %90 = invoke noalias nonnull i8* @_Znwm(i64 %89) #8"];
 Node0x55ad3df2f000[shape=record, label="  %92 = bitcast i8* %90 to i32*"];
 Node0x55ad3df2f100[shape=record, label="  %95 = getelementptr inbounds i32, i32* %94, i64 %75"];
 Node0x55ad3df2f200[shape=record, label="  store i32 %68, i32* %95, align 4, !tbaa !9"];
 Node0x55ad3df2f300[shape=record, label="  %96 = icmp sgt i64 %74, 0"];
 Node0x55ad3df2f400[shape=record, label="  %101 = icmp eq i32* %54, null"];
 Node0x55ad3df2f500[shape=record, label="  %103 = bitcast i32* %54 to i8*"];
 Node0x55ad3df2f600[shape=record, label="  %105 = getelementptr inbounds i32, i32* %94, i64 %86"];
 Node0x55ad3df2f700[shape=record, label="  %106 = load i32*, i32** %3, align 8, !tbaa !3"];
 Node0x55ad3df2f800[shape=record, label="  %107 = load i32*, i32** %4, align 8, !tbaa !8"];
 Node0x55ad3df2f900[shape=record, label="  %109 = phi i32* [ %107, %104 ], [ %49, %70 ]"];
 Node0x55ad3df2fa00[shape=record, label="  %110 = phi i32* [ %106, %104 ], [ %50, %70 ]"];
 Node0x55ad3df2fb00[shape=record, label="  %111 = phi i32* [ %94, %104 ], [ %54, %70 ]"];
 Node0x55ad3df2fc00[shape=record, label="  %112 = phi i32* [ %95, %104 ], [ %53, %70 ]"];
 Node0x55ad3df2fd00[shape=record, label="  %113 = phi i32* [ %105, %104 ], [ %52, %70 ]"];
 Node0x55ad3df2fe00[shape=record, label="  %119 = ashr exact i64 %118, 2"];
 Node0x55ad3df2ff00[shape=record, label="  %120 = icmp ugt i64 %119, %115"];
 Node0x55ad3df30000[shape=record, label="  %132 = phi i32* [ %6, %2 ], [ %109, %8 ], [ %109, %45 ]"];
 Node0x55ad3df30100[shape=record, label="  %133 = phi i32* [ %5, %2 ], [ %110, %8 ], [ %110, %45 ]"];
 Node0x55ad3df30200[shape=record, label="  %134 = phi i32* [ null, %2 ], [ %111, %8 ], [ %111, %45 ]"];
 Node0x55ad3df30300[shape=record, label="  %135 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0"];
 Node0x55ad3df30400[shape=record, label="  store i32* %132, i32** %135, align 8, !tbaa !8"];
 Node0x55ad3df30500[shape=record, label="  %136 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1"];
 Node0x55ad3df30600[shape=record, label="  store i32* %133, i32** %136, align 8, !tbaa !3"];
 Node0x55ad3df30700[shape=record, label="  %137 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55ad3df30800[shape=record, label="  %138 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2"];
 Node0x55ad3df30900[shape=record, label="  %139 = load i32*, i32** %138, align 8, !tbaa !16"];
 Node0x55ad3df30a00[shape=record, label="  store i32* %139, i32** %137, align 8, !tbaa !16"];
 Node0x55ad3df30b00[shape=record, label="  %140 = bitcast %"class.std::vector"* %1 to i8*"];
 Node0x55ad3df30c00[shape=record, label="  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %140, i8 0, i64 24, i1 false) #9"];
 Node0x55ad3df30d00[shape=record, label="  %141 = icmp eq i32* %134, null"];
 Node0x55ad3df30e00[shape=record, label="  %143 = bitcast i32* %134 to i8*"];
 Node0x55ad3df30f00[shape=record, label="  tail call void @_ZdlPv(i8* nonnull %143) #9"];
 Node0x55ad3df31000[shape=record, label="  ret void"];
 Node0x55ad3df2a950 -> Node0x55ad3df2aa30
 Node0x55ad3df2aa30 -> Node0x55ad3df2ab50
 Node0x55ad3df2ab50 -> Node0x55ad3df2ac50
 Node0x55ad3df2ac50 -> Node0x55ad3df2ad20
 Node0x55ad3df2ad20 -> Node0x55ad3df2ae10
 Node0x55ad3df2ae10 -> Node0x55ad3df2af00
 Node0x55ad3df2af00 -> Node0x55ad3df2b000
 Node0x55ad3df2b000 -> Node0x55ad3df2b100
 Node0x55ad3df2b100 -> Node0x55ad3df2b200
 Node0x55ad3df2b200 -> Node0x55ad3df2b300
 Node0x55ad3df2b300 -> Node0x55ad3df2b400
 Node0x55ad3df2b400 -> Node0x55ad3df2b500
 Node0x55ad3df2b500 -> Node0x55ad3df2b600
 Node0x55ad3df2b600 -> Node0x55ad3df2b700
 Node0x55ad3df2b700 -> Node0x55ad3df2b800
 Node0x55ad3df2b800 -> Node0x55ad3df2b900
 Node0x55ad3df2b900 -> Node0x55ad3df2ba00
 Node0x55ad3df2ba00 -> Node0x55ad3df2bb00
 Node0x55ad3df2bb00 -> Node0x55ad3df2bc00
 Node0x55ad3df2bc00 -> Node0x55ad3df2bd00
 Node0x55ad3df2bd00 -> Node0x55ad3df2be00
 Node0x55ad3df2be00 -> Node0x55ad3df2bf00
 Node0x55ad3df2bf00 -> Node0x55ad3df2c000
 Node0x55ad3df2c000 -> Node0x55ad3df2c100
 Node0x55ad3df2c100 -> Node0x55ad3df2c200
 Node0x55ad3df2c200 -> Node0x55ad3df2c300
 Node0x55ad3df2c300 -> Node0x55ad3df2c400
 Node0x55ad3df2c400 -> Node0x55ad3df2c500
 Node0x55ad3df2c500 -> Node0x55ad3df2c600
 Node0x55ad3df2c600 -> Node0x55ad3df2c700
 Node0x55ad3df2c700 -> Node0x55ad3df2c800
 Node0x55ad3df2c800 -> Node0x55ad3df2c900
 Node0x55ad3df2c900 -> Node0x55ad3df2ca00
 Node0x55ad3df2ca00 -> Node0x55ad3df2cb00
 Node0x55ad3df2cb00 -> Node0x55ad3df2cc00
 Node0x55ad3df2cc00 -> Node0x55ad3df2cd00
 Node0x55ad3df2cd00 -> Node0x55ad3df2ce00
 Node0x55ad3df2ce00 -> Node0x55ad3df2cf00
 Node0x55ad3df2cf00 -> Node0x55ad3df2d000
 Node0x55ad3df2d000 -> Node0x55ad3df2d100
 Node0x55ad3df2d100 -> Node0x55ad3df2d200
 Node0x55ad3df2d200 -> Node0x55ad3df2d300
 Node0x55ad3df2d300 -> Node0x55ad3df2d400
 Node0x55ad3df2d400 -> Node0x55ad3df2d500
 Node0x55ad3df2d500 -> Node0x55ad3df2d600
 Node0x55ad3df2d600 -> Node0x55ad3df2d700
 Node0x55ad3df2d700 -> Node0x55ad3df2d800
 Node0x55ad3df2d800 -> Node0x55ad3df2d900
 Node0x55ad3df2d900 -> Node0x55ad3df2da00
 Node0x55ad3df2da00 -> Node0x55ad3df2db00
 Node0x55ad3df2db00 -> Node0x55ad3df2dc00
 Node0x55ad3df2dc00 -> Node0x55ad3df2dd00
 Node0x55ad3df2dd00 -> Node0x55ad3df2de00
 Node0x55ad3df2de00 -> Node0x55ad3df2df00
 Node0x55ad3df2df00 -> Node0x55ad3df2e000
 Node0x55ad3df2e000 -> Node0x55ad3df2e100
 Node0x55ad3df2e100 -> Node0x55ad3df2e200
 Node0x55ad3df2e200 -> Node0x55ad3df2e300
 Node0x55ad3df2e300 -> Node0x55ad3df2e400
 Node0x55ad3df2e400 -> Node0x55ad3df2e500
 Node0x55ad3df2e500 -> Node0x55ad3df2e600
 Node0x55ad3df2e600 -> Node0x55ad3df2e700
 Node0x55ad3df2e700 -> Node0x55ad3df2e800
 Node0x55ad3df2e800 -> Node0x55ad3df2e900
 Node0x55ad3df2e900 -> Node0x55ad3df2ea00
 Node0x55ad3df2ea00 -> Node0x55ad3df2eb00
 Node0x55ad3df2eb00 -> Node0x55ad3df2ec00
 Node0x55ad3df2ec00 -> Node0x55ad3df2ed00
 Node0x55ad3df2ed00 -> Node0x55ad3df2ee00
 Node0x55ad3df2ee00 -> Node0x55ad3df2ef00
 Node0x55ad3df2ef00 -> Node0x55ad3df2f000
 Node0x55ad3df2f000 -> Node0x55ad3df2f100
 Node0x55ad3df2f100 -> Node0x55ad3df2f200
 Node0x55ad3df2f200 -> Node0x55ad3df2f300
 Node0x55ad3df2f300 -> Node0x55ad3df2f400
 Node0x55ad3df2f400 -> Node0x55ad3df2f500
 Node0x55ad3df2f500 -> Node0x55ad3df2f600
 Node0x55ad3df2f600 -> Node0x55ad3df2f700
 Node0x55ad3df2f700 -> Node0x55ad3df2f800
 Node0x55ad3df2f800 -> Node0x55ad3df2f900
 Node0x55ad3df2f900 -> Node0x55ad3df2fa00
 Node0x55ad3df2fa00 -> Node0x55ad3df2fb00
 Node0x55ad3df2fb00 -> Node0x55ad3df2fc00
 Node0x55ad3df2fc00 -> Node0x55ad3df2fd00
 Node0x55ad3df2fd00 -> Node0x55ad3df2fe00
 Node0x55ad3df2fe00 -> Node0x55ad3df2ff00
 Node0x55ad3df2ff00 -> Node0x55ad3df30000
}