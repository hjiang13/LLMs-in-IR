digraph "CFG for '_Z14GetRequiredDelRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z14GetRequiredDelRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x55fe68e49920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %3 = load i64, i64* %2, align 8, !tbaa !3\l  %4 = trunc i64 %3 to i32\l  %5 = icmp slt i32 %4, 2\l  br i1 %5, label %59, label %6\l|{<s0>T|<s1>F}}"];
	Node0x55fe68e49920:s0 -> Node0x55fe68e4b7a0;
	Node0x55fe68e49920:s1 -> Node0x55fe68e4b830;
	Node0x55fe68e4b830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%6:\l6:                                                \l  %7 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %8 = load i8*, i8** %7, align 8, !tbaa !10\l  %9 = load i8, i8* %8, align 1, !tbaa !11\l  %10 = and i64 %3, 4294967295\l  %11 = add nsw i64 %10, -1\l  %12 = icmp ult i64 %11, 8\l  br i1 %12, label %44, label %13\l|{<s0>T|<s1>F}}"];
	Node0x55fe68e4b830:s0 -> Node0x55fe68e4b6c0;
	Node0x55fe68e4b830:s1 -> Node0x55fe68e4bf70;
	Node0x55fe68e4bf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%13:\l13:                                               \l  %14 = and i64 %11, -8\l  %15 = or i64 %14, 1\l  %16 = insertelement \<4 x i8\> poison, i8 %9, i32 3\l  br label %17\l}"];
	Node0x55fe68e4bf70 -> Node0x55fe68e4cd50;
	Node0x55fe68e4cd50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%17:\l17:                                               \l  %18 = phi i64 [ 0, %13 ], [ %37, %17 ]\l  %19 = phi \<4 x i8\> [ %16, %13 ], [ %28, %17 ]\l  %20 = phi \<4 x i32\> [ zeroinitializer, %13 ], [ %35, %17 ]\l  %21 = phi \<4 x i32\> [ zeroinitializer, %13 ], [ %36, %17 ]\l  %22 = or i64 %18, 1\l  %23 = getelementptr inbounds i8, i8* %8, i64 %22\l  %24 = bitcast i8* %23 to \<4 x i8\>*\l  %25 = load \<4 x i8\>, \<4 x i8\>* %24, align 1, !tbaa !11\l  %26 = getelementptr inbounds i8, i8* %23, i64 4\l  %27 = bitcast i8* %26 to \<4 x i8\>*\l  %28 = load \<4 x i8\>, \<4 x i8\>* %27, align 1, !tbaa !11\l  %29 = shufflevector \<4 x i8\> %19, \<4 x i8\> %25, \<4 x i32\> \<i32 3, i32 4, i32\l... 5, i32 6\>\l  %30 = shufflevector \<4 x i8\> %25, \<4 x i8\> %28, \<4 x i32\> \<i32 3, i32 4, i32\l... 5, i32 6\>\l  %31 = icmp eq \<4 x i8\> %29, %25\l  %32 = icmp eq \<4 x i8\> %30, %28\l  %33 = zext \<4 x i1\> %31 to \<4 x i32\>\l  %34 = zext \<4 x i1\> %32 to \<4 x i32\>\l  %35 = add \<4 x i32\> %20, %33\l  %36 = add \<4 x i32\> %21, %34\l  %37 = add nuw i64 %18, 8\l  %38 = icmp eq i64 %37, %14\l  br i1 %38, label %39, label %17, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55fe68e4cd50:s0 -> Node0x55fe68e4e390;
	Node0x55fe68e4cd50:s1 -> Node0x55fe68e4cd50;
	Node0x55fe68e4e390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%39:\l39:                                               \l  %40 = add \<4 x i32\> %36, %35\l  %41 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %40)\l  %42 = icmp eq i64 %11, %14\l  %43 = extractelement \<4 x i8\> %28, i32 3\l  br i1 %42, label %59, label %44\l|{<s0>T|<s1>F}}"];
	Node0x55fe68e4e390:s0 -> Node0x55fe68e4b7a0;
	Node0x55fe68e4e390:s1 -> Node0x55fe68e4b6c0;
	Node0x55fe68e4b6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%44:\l44:                                               \l  %45 = phi i64 [ %15, %39 ], [ 1, %6 ]\l  %46 = phi i8 [ %43, %39 ], [ %9, %6 ]\l  %47 = phi i32 [ %41, %39 ], [ 0, %6 ]\l  br label %48\l}"];
	Node0x55fe68e4b6c0 -> Node0x55fe68e4eba0;
	Node0x55fe68e4eba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i64 [ %57, %48 ], [ %45, %44 ]\l  %50 = phi i8 [ %53, %48 ], [ %46, %44 ]\l  %51 = phi i32 [ %56, %48 ], [ %47, %44 ]\l  %52 = getelementptr inbounds i8, i8* %8, i64 %49\l  %53 = load i8, i8* %52, align 1, !tbaa !11\l  %54 = icmp eq i8 %50, %53\l  %55 = zext i1 %54 to i32\l  %56 = add nuw nsw i32 %51, %55\l  %57 = add nuw nsw i64 %49, 1\l  %58 = icmp eq i64 %57, %10\l  br i1 %58, label %59, label %48, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55fe68e4eba0:s0 -> Node0x55fe68e4b7a0;
	Node0x55fe68e4eba0:s1 -> Node0x55fe68e4eba0;
	Node0x55fe68e4b7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%59:\l59:                                               \l  %60 = phi i32 [ 0, %1 ], [ %41, %39 ], [ %56, %48 ]\l  ret i32 %60\l}"];
}
