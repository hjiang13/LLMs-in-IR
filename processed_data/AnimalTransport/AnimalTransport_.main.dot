digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x564907f372f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%0:\l  %1 = alloca i8, align 1\l  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %3 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([31 x\l... i8], [31 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %2)\l  %4 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3\l... x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull @t)\l  %5 = load i32, i32* @t, align 4, !tbaa !7\l  %6 = add nsw i32 %5, -1\l  store i32 %6, i32* @t, align 4, !tbaa !7\l  %7 = icmp eq i32 %5, 0\l  br i1 %7, label %307, label %8\l|{<s0>T|<s1>F}}"];
	Node0x564907f372f0:s0 -> Node0x564907f38d90;
	Node0x564907f372f0:s1 -> Node0x564907f38de0;
	Node0x564907f38de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%8:\l8:                                                \l  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @.str.4, i64 0, i64 0), i32* nonnull @m, i32* nonnull @n)\l  %10 = load i32, i32* @n, align 4, !tbaa !7\l  %11 = icmp slt i32 %10, 1\l  br i1 %11, label %37, label %14\l|{<s0>T|<s1>F}}"];
	Node0x564907f38de0:s0 -> Node0x564907f39220;
	Node0x564907f38de0:s1 -> Node0x564907f39270;
	Node0x564907f393b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%12:\l12:                                               \l  %13 = icmp slt i32 %24, 1\l  br i1 %13, label %37, label %29\l|{<s0>T|<s1>F}}"];
	Node0x564907f393b0:s0 -> Node0x564907f39220;
	Node0x564907f393b0:s1 -> Node0x564907f39500;
	Node0x564907f39270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%14:\l14:                                               \l  %15 = phi i64 [ %23, %14 ], [ 1, %8 ]\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #16\l  %16 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([4 x\l... i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* nonnull %1)\l  %17 = load i8, i8* %1, align 1, !tbaa !9\l  %18 = icmp ne i8 %17, 68\l  %19 = icmp ne i8 %17, 77\l  %20 = and i1 %18, %19\l  %21 = zext i1 %20 to i32\l  %22 = getelementptr inbounds [50002 x i32], [50002 x i32]* @type, i64 0, i64\l... %15\l  store i32 %21, i32* %22, align 4, !tbaa !7\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #16\l  %23 = add nuw nsw i64 %15, 1\l  %24 = load i32, i32* @n, align 4, !tbaa !7\l  %25 = sext i32 %24 to i64\l  %26 = icmp slt i64 %15, %25\l  br i1 %26, label %14, label %12, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x564907f39270:s0 -> Node0x564907f39270;
	Node0x564907f39270:s1 -> Node0x564907f393b0;
	Node0x564907f31010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%27:\l27:                                               \l  %28 = icmp slt i32 %34, 1\l  br i1 %28, label %37, label %40\l|{<s0>T|<s1>F}}"];
	Node0x564907f31010:s0 -> Node0x564907f39220;
	Node0x564907f31010:s1 -> Node0x564907f31130;
	Node0x564907f39500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%29:\l29:                                               \l  %30 = phi i64 [ %33, %29 ], [ 1, %12 ]\l  %31 = getelementptr inbounds [50002 x i32], [50002 x i32]* @second, i64 0,\l... i64 %30\l  %32 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x\l... i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %31)\l  %33 = add nuw nsw i64 %30, 1\l  %34 = load i32, i32* @n, align 4, !tbaa !7\l  %35 = sext i32 %34 to i64\l  %36 = icmp slt i64 %30, %35\l  br i1 %36, label %29, label %27, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x564907f39500:s0 -> Node0x564907f39500;
	Node0x564907f39500:s1 -> Node0x564907f31010;
	Node0x564907f39220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%37:\l37:                                               \l  %38 = load i32, i32* @m, align 4, !tbaa !7\l  %39 = icmp slt i32 %38, 1\l  br i1 %39, label %143, label %99\l|{<s0>T|<s1>F}}"];
	Node0x564907f39220:s0 -> Node0x564907f2e610;
	Node0x564907f39220:s1 -> Node0x564907f2e660;
	Node0x564907f31130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%40:\l40:                                               \l  %41 = phi i64 [ %93, %92 ], [ 1, %27 ]\l  %42 = getelementptr inbounds [50002 x i32], [50002 x i32]* @d, i64 0, i64 %41\l  %43 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x\l... i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %42)\l  %44 = load i32, i32* %42, align 4, !tbaa !7\l  %45 = sext i32 %44 to i64\l  %46 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** getelementptr\l... inbounds (%\"class.std::vector\", %\"class.std::vector\"* @g, i64 0, i32 0, i32\l... 0, i32 0, i32 0), align 8, !tbaa !13\l  %47 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %46, i64 %45, i32 0, i32 0, i32 0, i32 1\l  %48 = load i32*, i32** %47, align 8, !tbaa !15\l  %49 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %46, i64 %45, i32 0, i32 0, i32 0, i32 2\l  %50 = load i32*, i32** %49, align 8, !tbaa !17\l  %51 = icmp eq i32* %48, %50\l  br i1 %51, label %55, label %52\l|{<s0>T|<s1>F}}"];
	Node0x564907f31130:s0 -> Node0x564907f3c380;
	Node0x564907f31130:s1 -> Node0x564907f3c410;
	Node0x564907f3c410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%52:\l52:                                               \l  %53 = trunc i64 %41 to i32\l  store i32 %53, i32* %48, align 4, !tbaa !7\l  %54 = getelementptr inbounds i32, i32* %48, i64 1\l  store i32* %54, i32** %47, align 8, !tbaa !15\l  br label %92\l}"];
	Node0x564907f3c410 -> Node0x564907f2e7a0;
	Node0x564907f3c380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%55:\l55:                                               \l  %56 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %46, i64 %45, i32 0, i32 0, i32 0, i32 0\l  %57 = load i32*, i32** %56, align 8, !tbaa !18\l  %58 = ptrtoint i32* %48 to i64\l  %59 = ptrtoint i32* %57 to i64\l  %60 = sub i64 %58, %59\l  %61 = ashr exact i64 %60, 2\l  %62 = icmp eq i64 %60, 9223372036854775804\l  br i1 %62, label %63, label %64\l|{<s0>T|<s1>F}}"];
	Node0x564907f3c380:s0 -> Node0x564907f3d850;
	Node0x564907f3c380:s1 -> Node0x564907f3d8a0;
	Node0x564907f3d850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%63:\l63:                                               \l  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str.9, i64 0, i64 0)) #17\l  unreachable\l}"];
	Node0x564907f3d8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%64:\l64:                                               \l  %65 = icmp eq i64 %60, 0\l  %66 = select i1 %65, i64 1, i64 %61\l  %67 = add nsw i64 %66, %61\l  %68 = icmp ult i64 %67, %61\l  %69 = icmp ugt i64 %67, 2305843009213693951\l  %70 = or i1 %68, %69\l  %71 = select i1 %70, i64 2305843009213693951, i64 %67\l  %72 = icmp eq i64 %71, 0\l  br i1 %72, label %77, label %73\l|{<s0>T|<s1>F}}"];
	Node0x564907f3d8a0:s0 -> Node0x564907f3e1a0;
	Node0x564907f3d8a0:s1 -> Node0x564907f3e1f0;
	Node0x564907f3e1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%73:\l73:                                               \l  %74 = shl nuw nsw i64 %71, 2\l  %75 = call noalias nonnull i8* @_Znwm(i64 %74) #18\l  %76 = bitcast i8* %75 to i32*\l  br label %77\l}"];
	Node0x564907f3e1f0 -> Node0x564907f3e1a0;
	Node0x564907f3e1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%77:\l77:                                               \l  %78 = phi i32* [ %76, %73 ], [ null, %64 ]\l  %79 = getelementptr inbounds i32, i32* %78, i64 %61\l  %80 = trunc i64 %41 to i32\l  store i32 %80, i32* %79, align 4, !tbaa !7\l  %81 = icmp sgt i64 %60, 0\l  br i1 %81, label %82, label %85\l|{<s0>T|<s1>F}}"];
	Node0x564907f3e1a0:s0 -> Node0x564907f3e9c0;
	Node0x564907f3e1a0:s1 -> Node0x564907f3ea10;
	Node0x564907f3e9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%82:\l82:                                               \l  %83 = bitcast i32* %78 to i8*\l  %84 = bitcast i32* %57 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64\l... %60, i1 false) #16\l  br label %85\l}"];
	Node0x564907f3e9c0 -> Node0x564907f3ea10;
	Node0x564907f3ea10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%85:\l85:                                               \l  %86 = getelementptr inbounds i32, i32* %79, i64 1\l  %87 = icmp eq i32* %57, null\l  br i1 %87, label %90, label %88\l|{<s0>T|<s1>F}}"];
	Node0x564907f3ea10:s0 -> Node0x564907f3f0d0;
	Node0x564907f3ea10:s1 -> Node0x564907f3f120;
	Node0x564907f3f120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%88:\l88:                                               \l  %89 = bitcast i32* %57 to i8*\l  call void @_ZdlPv(i8* nonnull %89) #16\l  br label %90\l}"];
	Node0x564907f3f120 -> Node0x564907f3f0d0;
	Node0x564907f3f0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%90:\l90:                                               \l  store i32* %78, i32** %56, align 8, !tbaa !18\l  store i32* %86, i32** %47, align 8, !tbaa !15\l  %91 = getelementptr inbounds i32, i32* %78, i64 %71\l  store i32* %91, i32** %49, align 8, !tbaa !17\l  br label %92\l}"];
	Node0x564907f3f0d0 -> Node0x564907f2e7a0;
	Node0x564907f2e7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%92:\l92:                                               \l  %93 = add nuw nsw i64 %41, 1\l  %94 = load i32, i32* @n, align 4, !tbaa !7\l  %95 = sext i32 %94 to i64\l  %96 = icmp slt i64 %41, %95\l  br i1 %96, label %40, label %37, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x564907f2e7a0:s0 -> Node0x564907f31130;
	Node0x564907f2e7a0:s1 -> Node0x564907f39220;
	Node0x564907f3b790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%97:\l97:                                               \l  %98 = icmp slt i32 %123, 1\l  br i1 %98, label %143, label %153\l|{<s0>T|<s1>F}}"];
	Node0x564907f3b790:s0 -> Node0x564907f2e610;
	Node0x564907f3b790:s1 -> Node0x564907f3b870;
	Node0x564907f2e660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%99:\l99:                                               \l  %100 = phi i32 [ %123, %110 ], [ %38, %37 ]\l  %101 = phi i64 [ %122, %110 ], [ 1, %37 ]\l  %102 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** getelementptr\l... inbounds (%\"class.std::vector\", %\"class.std::vector\"* @g, i64 0, i32 0, i32\l... 0, i32 0, i32 0), align 8, !tbaa !13\l  %103 = getelementptr inbounds %\"class.std::vector.0\",\l... %\"class.std::vector.0\"* %102, i64 %101, i32 0, i32 0, i32 0, i32 0\l  %104 = load i32*, i32** %103, align 8, !tbaa !3\l  %105 = getelementptr inbounds %\"class.std::vector.0\",\l... %\"class.std::vector.0\"* %102, i64 %101, i32 0, i32 0, i32 0, i32 1\l  %106 = load i32*, i32** %105, align 8, !tbaa !3\l  %107 = icmp eq i32* %104, %106\l  br i1 %107, label %110, label %126\l|{<s0>T|<s1>F}}"];
	Node0x564907f2e660:s0 -> Node0x564907f3b970;
	Node0x564907f2e660:s1 -> Node0x564907f41480;
	Node0x564907f41580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%108:\l108:                                              \l  %109 = load i32, i32* @m, align 4, !tbaa !7\l  br label %110\l}"];
	Node0x564907f41580 -> Node0x564907f3b970;
	Node0x564907f3b970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%110:\l110:                                              \l  %111 = phi i32 [ %109, %108 ], [ %100, %99 ]\l  %112 = trunc i64 %101 to i32\l  %113 = call i32 @_Z5queryiiiiii(i32 1, i32 1, i32 %111, i32 1, i32 %112, i32\l... 1)\l  %114 = getelementptr inbounds [50002 x [2 x i32]], [50002 x [2 x i32]]* @dp,\l... i64 0, i64 %101, i64 0\l  store i32 %113, i32* %114, align 8, !tbaa !7\l  %115 = load i32, i32* @m, align 4, !tbaa !7\l  %116 = call i32 @_Z5queryiiiiii(i32 1, i32 1, i32 %115, i32 1, i32 %112, i32\l... 0)\l  %117 = getelementptr inbounds [50002 x [2 x i32]], [50002 x [2 x i32]]* @dp,\l... i64 0, i64 %101, i64 1\l  store i32 %116, i32* %117, align 4, !tbaa !7\l  %118 = load i32, i32* @m, align 4, !tbaa !7\l  %119 = load i32, i32* %114, align 8, !tbaa !7\l  call void @_Z6updateiiiiiii(i32 1, i32 1, i32 %118, i32 %112, i32 %112, i32\l... 0, i32 %119)\l  %120 = load i32, i32* @m, align 4, !tbaa !7\l  %121 = load i32, i32* %117, align 4, !tbaa !7\l  call void @_Z6updateiiiiiii(i32 1, i32 1, i32 %120, i32 %112, i32 %112, i32\l... 1, i32 %121)\l  %122 = add nuw nsw i64 %101, 1\l  %123 = load i32, i32* @m, align 4, !tbaa !7\l  %124 = sext i32 %123 to i64\l  %125 = icmp slt i64 %101, %124\l  br i1 %125, label %99, label %97, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x564907f3b970:s0 -> Node0x564907f2e660;
	Node0x564907f3b970:s1 -> Node0x564907f3b790;
	Node0x564907f41480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%126:\l126:                                              \l  %127 = phi i32* [ %141, %140 ], [ %104, %99 ]\l  %128 = load i32, i32* %127, align 4, !tbaa !7\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds [50002 x i32], [50002 x i32]* @second, i64 0,\l... i64 %129\l  %131 = load i32, i32* %130, align 4, !tbaa !7\l  %132 = sext i32 %131 to i64\l  %133 = icmp sgt i64 %101, %132\l  br i1 %133, label %134, label %140\l|{<s0>T|<s1>F}}"];
	Node0x564907f41480:s0 -> Node0x564907f437a0;
	Node0x564907f41480:s1 -> Node0x564907f42b80;
	Node0x564907f437a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%134:\l134:                                              \l  %135 = load i32, i32* @m, align 4, !tbaa !7\l  %136 = getelementptr inbounds [50002 x i32], [50002 x i32]* @type, i64 0,\l... i64 %129\l  %137 = load i32, i32* %136, align 4, !tbaa !7\l  %138 = icmp eq i32 %137, 0\l  %139 = zext i1 %138 to i32\l  call void @_Z6updateiiiiiii(i32 1, i32 1, i32 %135, i32 1, i32 %131, i32\l... %139, i32 1)\l  br label %140\l}"];
	Node0x564907f437a0 -> Node0x564907f42b80;
	Node0x564907f42b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%140:\l140:                                              \l  %141 = getelementptr inbounds i32, i32* %127, i64 1\l  %142 = icmp eq i32* %141, %106\l  br i1 %142, label %108, label %126\l|{<s0>T|<s1>F}}"];
	Node0x564907f42b80:s0 -> Node0x564907f41580;
	Node0x564907f42b80:s1 -> Node0x564907f41480;
	Node0x564907f2e610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%143:\l143:                                              \l  %144 = phi i32* [ null, %97 ], [ null, %37 ], [ %210, %205 ]\l  %145 = phi i32* [ null, %97 ], [ null, %37 ], [ %209, %205 ]\l  %146 = ptrtoint i32* %144 to i64\l  %147 = ptrtoint i32* %145 to i64\l  %148 = sub i64 %146, %147\l  %149 = icmp sgt i64 %148, 0\l  %150 = lshr exact i64 %148, 2\l  %151 = load i32, i32* @n, align 4, !tbaa !7\l  %152 = icmp slt i32 %151, 1\l  br i1 %152, label %218, label %260\l|{<s0>T|<s1>F}}"];
	Node0x564907f2e610:s0 -> Node0x564907f444e0;
	Node0x564907f2e610:s1 -> Node0x564907f44530;
	Node0x564907f3b870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%153:\l153:                                              \l  %154 = phi i32 [ %206, %205 ], [ %123, %97 ]\l  %155 = phi i64 [ %211, %205 ], [ 1, %97 ]\l  %156 = phi i32* [ %209, %205 ], [ null, %97 ]\l  %157 = phi i32* [ %210, %205 ], [ null, %97 ]\l  %158 = phi i32* [ %207, %205 ], [ null, %97 ]\l  %159 = getelementptr inbounds [50002 x [2 x i32]], [50002 x [2 x i32]]* @dp,\l... i64 0, i64 %155, i64 0\l  %160 = getelementptr inbounds [50002 x [2 x i32]], [50002 x [2 x i32]]* @dp,\l... i64 0, i64 %155, i64 1\l  %161 = load i32, i32* %159, align 8, !tbaa !7\l  %162 = load i32, i32* %160, align 4, !tbaa !7\l  %163 = icmp slt i32 %161, %162\l  %164 = select i1 %163, i32* %160, i32* %159\l  %165 = icmp eq i32* %157, %158\l  br i1 %165, label %168, label %166\l|{<s0>T|<s1>F}}"];
	Node0x564907f3b870:s0 -> Node0x564907f44f00;
	Node0x564907f3b870:s1 -> Node0x564907f44f90;
	Node0x564907f44f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%166:\l166:                                              \l  %167 = load i32, i32* %164, align 4, !tbaa !7\l  store i32 %167, i32* %157, align 4, !tbaa !7\l  br label %205\l}"];
	Node0x564907f44f90 -> Node0x564907f43f60;
	Node0x564907f44f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%168:\l168:                                              \l  %169 = ptrtoint i32* %157 to i64\l  %170 = ptrtoint i32* %156 to i64\l  %171 = sub i64 %169, %170\l  %172 = ashr exact i64 %171, 2\l  %173 = icmp eq i64 %171, 9223372036854775804\l  br i1 %173, label %174, label %176\l|{<s0>T|<s1>F}}"];
	Node0x564907f44f00:s0 -> Node0x564907f454d0;
	Node0x564907f44f00:s1 -> Node0x564907f45520;
	Node0x564907f454d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%174:\l174:                                              \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str.9, i64 0, i64 0)) #17\l          to label %175 unwind label %216\l}"];
	Node0x564907f454d0 -> Node0x564907f45650;
	Node0x564907f454d0 -> Node0x564907f456a0;
	Node0x564907f45650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%175:\l175:                                              \l  unreachable\l}"];
	Node0x564907f45520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%176:\l176:                                              \l  %177 = icmp eq i64 %171, 0\l  %178 = select i1 %177, i64 1, i64 %172\l  %179 = add nsw i64 %178, %172\l  %180 = icmp ult i64 %179, %172\l  %181 = icmp ugt i64 %179, 2305843009213693951\l  %182 = or i1 %180, %181\l  %183 = select i1 %182, i64 2305843009213693951, i64 %179\l  %184 = icmp eq i64 %183, 0\l  br i1 %184, label %190, label %185\l|{<s0>T|<s1>F}}"];
	Node0x564907f45520:s0 -> Node0x564907f45da0;
	Node0x564907f45520:s1 -> Node0x564907f45df0;
	Node0x564907f45df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%185:\l185:                                              \l  %186 = shl nuw nsw i64 %183, 2\l  %187 = invoke noalias nonnull i8* @_Znwm(i64 %186) #18\l          to label %188 unwind label %214\l}"];
	Node0x564907f45df0 -> Node0x564907f45f80;
	Node0x564907f45df0 -> Node0x564907f45fd0;
	Node0x564907f45f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%188:\l188:                                              \l  %189 = bitcast i8* %187 to i32*\l  br label %190\l}"];
	Node0x564907f45f80 -> Node0x564907f45da0;
	Node0x564907f45da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%190:\l190:                                              \l  %191 = phi i32* [ %189, %188 ], [ null, %176 ]\l  %192 = getelementptr inbounds i32, i32* %191, i64 %172\l  %193 = load i32, i32* %164, align 4, !tbaa !7\l  store i32 %193, i32* %192, align 4, !tbaa !7\l  %194 = icmp sgt i64 %171, 0\l  br i1 %194, label %195, label %198\l|{<s0>T|<s1>F}}"];
	Node0x564907f45da0:s0 -> Node0x564907f46570;
	Node0x564907f45da0:s1 -> Node0x564907f465c0;
	Node0x564907f46570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%195:\l195:                                              \l  %196 = bitcast i32* %191 to i8*\l  %197 = bitcast i32* %156 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %196, i8* align 4 %197,\l... i64 %171, i1 false) #16\l  br label %198\l}"];
	Node0x564907f46570 -> Node0x564907f465c0;
	Node0x564907f465c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%198:\l198:                                              \l  %199 = icmp eq i32* %156, null\l  br i1 %199, label %202, label %200\l|{<s0>T|<s1>F}}"];
	Node0x564907f465c0:s0 -> Node0x564907f46a30;
	Node0x564907f465c0:s1 -> Node0x564907f46a80;
	Node0x564907f46a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%200:\l200:                                              \l  %201 = bitcast i32* %156 to i8*\l  call void @_ZdlPv(i8* nonnull %201) #16\l  br label %202\l}"];
	Node0x564907f46a80 -> Node0x564907f46a30;
	Node0x564907f46a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%202:\l202:                                              \l  %203 = getelementptr inbounds i32, i32* %191, i64 %183\l  %204 = load i32, i32* @m, align 4, !tbaa !7\l  br label %205\l}"];
	Node0x564907f46a30 -> Node0x564907f43f60;
	Node0x564907f43f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%205:\l205:                                              \l  %206 = phi i32 [ %204, %202 ], [ %154, %166 ]\l  %207 = phi i32* [ %203, %202 ], [ %158, %166 ]\l  %208 = phi i32* [ %192, %202 ], [ %157, %166 ]\l  %209 = phi i32* [ %191, %202 ], [ %156, %166 ]\l  %210 = getelementptr inbounds i32, i32* %208, i64 1\l  %211 = add nuw nsw i64 %155, 1\l  %212 = sext i32 %206 to i64\l  %213 = icmp slt i64 %155, %212\l  br i1 %213, label %153, label %143, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x564907f43f60:s0 -> Node0x564907f3b870;
	Node0x564907f43f60:s1 -> Node0x564907f2e610;
	Node0x564907f45fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%214:\l214:                                              \l  %215 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %300\l}"];
	Node0x564907f45fd0 -> Node0x564907f47560;
	Node0x564907f456a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%216:\l216:                                              \l  %217 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %300\l}"];
	Node0x564907f456a0 -> Node0x564907f47560;
	Node0x564907f444e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%218:\l218:                                              \l  %219 = call i32 @putchar(i32 10)\l  %220 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** getelementptr\l... inbounds (%\"class.std::vector\", %\"class.std::vector\"* @g, i64 0, i32 0, i32\l... 0, i32 0, i32 0), align 8, !tbaa !13\l  %221 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** getelementptr\l... inbounds (%\"class.std::vector\", %\"class.std::vector\"* @g, i64 0, i32 0, i32\l... 0, i32 0, i32 1), align 8, !tbaa !22\l  %222 = icmp eq %\"class.std::vector.0\"* %221, %220\l  br i1 %222, label %235, label %223\l|{<s0>T|<s1>F}}"];
	Node0x564907f444e0:s0 -> Node0x564907f48170;
	Node0x564907f444e0:s1 -> Node0x564907f481c0;
	Node0x564907f481c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%223:\l223:                                              \l  %224 = phi %\"class.std::vector.0\"* [ %231, %230 ], [ %220, %218 ]\l  %225 = getelementptr inbounds %\"class.std::vector.0\",\l... %\"class.std::vector.0\"* %224, i64 0, i32 0, i32 0, i32 0, i32 0\l  %226 = load i32*, i32** %225, align 8, !tbaa !18\l  %227 = icmp eq i32* %226, null\l  br i1 %227, label %230, label %228\l|{<s0>T|<s1>F}}"];
	Node0x564907f481c0:s0 -> Node0x564907f482c0;
	Node0x564907f481c0:s1 -> Node0x564907f485e0;
	Node0x564907f485e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%228:\l228:                                              \l  %229 = bitcast i32* %226 to i8*\l  call void @_ZdlPv(i8* nonnull %229) #16\l  br label %230\l}"];
	Node0x564907f485e0 -> Node0x564907f482c0;
	Node0x564907f482c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%230:\l230:                                              \l  %231 = getelementptr inbounds %\"class.std::vector.0\",\l... %\"class.std::vector.0\"* %224, i64 1\l  %232 = icmp eq %\"class.std::vector.0\"* %231, %221\l  br i1 %232, label %233, label %223, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x564907f482c0:s0 -> Node0x564907f489e0;
	Node0x564907f482c0:s1 -> Node0x564907f481c0;
	Node0x564907f489e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%233:\l233:                                              \l  store %\"class.std::vector.0\"* %220, %\"class.std::vector.0\"** getelementptr\l... inbounds (%\"class.std::vector\", %\"class.std::vector\"* @g, i64 0, i32 0, i32\l... 0, i32 0, i32 1), align 8, !tbaa !22\l  %234 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** getelementptr\l... inbounds (%\"class.std::vector\", %\"class.std::vector\"* @g, i64 0, i32 0, i32\l... 0, i32 0, i32 0), align 8, !tbaa !13\l  br label %235\l}"];
	Node0x564907f489e0 -> Node0x564907f48170;
	Node0x564907f48170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%235:\l235:                                              \l  %236 = phi %\"class.std::vector.0\"* [ %220, %218 ], [ %234, %233 ]\l  %237 = ptrtoint %\"class.std::vector.0\"* %220 to i64\l  %238 = ptrtoint %\"class.std::vector.0\"* %236 to i64\l  %239 = sub i64 %237, %238\l  %240 = sdiv exact i64 %239, 24\l  %241 = icmp ult i64 %240, 50002\l  br i1 %241, label %242, label %244\l|{<s0>T|<s1>F}}"];
	Node0x564907f48170:s0 -> Node0x564907f3a570;
	Node0x564907f48170:s1 -> Node0x564907f3a5c0;
	Node0x564907f3a570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%242:\l242:                                              \l  %243 = sub nuw nsw i64 50002, %240\l  invoke void\l... @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm(%\"class.std::vector\"*\l... nonnull align 8 dereferenceable(24) @g, i64 %243)\l          to label %290 unwind label %298\l}"];
	Node0x564907f3a570 -> Node0x564907f3a750;
	Node0x564907f3a570 -> Node0x564907f3a7a0;
	Node0x564907f3a5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%244:\l244:                                              \l  %245 = icmp eq i64 %239, 1200048\l  br i1 %245, label %290, label %246\l|{<s0>T|<s1>F}}"];
	Node0x564907f3a5c0:s0 -> Node0x564907f3a750;
	Node0x564907f3a5c0:s1 -> Node0x564907f3aac0;
	Node0x564907f3aac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%246:\l246:                                              \l  %247 = getelementptr inbounds %\"class.std::vector.0\",\l... %\"class.std::vector.0\"* %236, i64 50002\l  %248 = icmp eq %\"class.std::vector.0\"* %220, %247\l  br i1 %248, label %290, label %249\l|{<s0>T|<s1>F}}"];
	Node0x564907f3aac0:s0 -> Node0x564907f3a750;
	Node0x564907f3aac0:s1 -> Node0x564907f3acf0;
	Node0x564907f3acf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%249:\l249:                                              \l  %250 = phi %\"class.std::vector.0\"* [ %257, %256 ], [ %247, %246 ]\l  %251 = getelementptr inbounds %\"class.std::vector.0\",\l... %\"class.std::vector.0\"* %250, i64 0, i32 0, i32 0, i32 0, i32 0\l  %252 = load i32*, i32** %251, align 8, !tbaa !18\l  %253 = icmp eq i32* %252, null\l  br i1 %253, label %256, label %254\l|{<s0>T|<s1>F}}"];
	Node0x564907f3acf0:s0 -> Node0x564907f3adf0;
	Node0x564907f3acf0:s1 -> Node0x564907f3b110;
	Node0x564907f3b110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%254:\l254:                                              \l  %255 = bitcast i32* %252 to i8*\l  call void @_ZdlPv(i8* nonnull %255) #16\l  br label %256\l}"];
	Node0x564907f3b110 -> Node0x564907f3adf0;
	Node0x564907f3adf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%256:\l256:                                              \l  %257 = getelementptr inbounds %\"class.std::vector.0\",\l... %\"class.std::vector.0\"* %250, i64 1\l  %258 = icmp eq %\"class.std::vector.0\"* %257, %220\l  br i1 %258, label %259, label %249, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x564907f3adf0:s0 -> Node0x564907f3b510;
	Node0x564907f3adf0:s1 -> Node0x564907f3acf0;
	Node0x564907f3b510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%259:\l259:                                              \l  store %\"class.std::vector.0\"* %247, %\"class.std::vector.0\"** getelementptr\l... inbounds (%\"class.std::vector\", %\"class.std::vector\"* @g, i64 0, i32 0, i32\l... 0, i32 0, i32 1), align 8, !tbaa !22\l  br label %290\l}"];
	Node0x564907f3b510 -> Node0x564907f3a750;
	Node0x564907f44530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%260:\l260:                                              \l  %261 = phi i32 [ %287, %277 ], [ 1, %143 ]\l  br i1 %149, label %262, label %277\l|{<s0>T|<s1>F}}"];
	Node0x564907f44530:s0 -> Node0x564907f42fa0;
	Node0x564907f44530:s1 -> Node0x564907f42ea0;
	Node0x564907f42fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%262:\l262:                                              \l  %263 = phi i64 [ %273, %262 ], [ %150, %260 ]\l  %264 = phi i32* [ %272, %262 ], [ %145, %260 ]\l  %265 = lshr i64 %263, 1\l  %266 = getelementptr inbounds i32, i32* %264, i64 %265\l  %267 = load i32, i32* %266, align 4, !tbaa !7\l  %268 = icmp slt i32 %267, %261\l  %269 = getelementptr inbounds i32, i32* %266, i64 1\l  %270 = xor i64 %265, -1\l  %271 = add i64 %263, %270\l  %272 = select i1 %268, i32* %269, i32* %264\l  %273 = select i1 %268, i64 %271, i64 %265\l  %274 = icmp sgt i64 %273, 0\l  br i1 %274, label %262, label %275, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x564907f42fa0:s0 -> Node0x564907f42fa0;
	Node0x564907f42fa0:s1 -> Node0x564907f4cd50;
	Node0x564907f4cd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%275:\l275:                                              \l  %276 = ptrtoint i32* %272 to i64\l  br label %277\l}"];
	Node0x564907f4cd50 -> Node0x564907f42ea0;
	Node0x564907f42ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%277:\l277:                                              \l  %278 = phi i64 [ %276, %275 ], [ %147, %260 ]\l  %279 = sub i64 %278, %147\l  %280 = lshr exact i64 %279, 2\l  %281 = trunc i64 %280 to i32\l  %282 = add i32 %281, 1\l  %283 = load i32, i32* @m, align 4, !tbaa !7\l  %284 = icmp eq i32 %283, %281\l  %285 = select i1 %284, i32 -1, i32 %282\l  %286 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1)\l... getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i32 %285)\l  %287 = add nuw nsw i32 %261, 1\l  %288 = load i32, i32* @n, align 4, !tbaa !7\l  %289 = icmp slt i32 %261, %288\l  br i1 %289, label %260, label %218, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x564907f42ea0:s0 -> Node0x564907f44530;
	Node0x564907f42ea0:s1 -> Node0x564907f444e0;
	Node0x564907f3a750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%290:\l290:                                              \l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16\l... dereferenceable(1600064) bitcast ([200008 x [2 x i32]]* @tree to i8*), i8 0,\l... i64 1600064, i1 false)\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16\l... dereferenceable(1600064) bitcast ([200008 x [2 x i32]]* @lazy to i8*), i8 0,\l... i64 1600064, i1 false)\l  %291 = icmp eq i32* %145, null\l  br i1 %291, label %294, label %292\l|{<s0>T|<s1>F}}"];
	Node0x564907f3a750:s0 -> Node0x564907f4df20;
	Node0x564907f3a750:s1 -> Node0x564907f4dfb0;
	Node0x564907f4dfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%292:\l292:                                              \l  %293 = bitcast i32* %145 to i8*\l  call void @_ZdlPv(i8* nonnull %293) #16\l  br label %294\l}"];
	Node0x564907f4dfb0 -> Node0x564907f4df20;
	Node0x564907f4df20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%294:\l294:                                              \l  %295 = load i32, i32* @t, align 4, !tbaa !7\l  %296 = add nsw i32 %295, -1\l  store i32 %296, i32* @t, align 4, !tbaa !7\l  %297 = icmp eq i32 %295, 0\l  br i1 %297, label %307, label %8, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x564907f4df20:s0 -> Node0x564907f38d90;
	Node0x564907f4df20:s1 -> Node0x564907f38de0;
	Node0x564907f3a7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%298:\l298:                                              \l  %299 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %300\l}"];
	Node0x564907f3a7a0 -> Node0x564907f47560;
	Node0x564907f47560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%300:\l300:                                              \l  %301 = phi i32* [ %145, %298 ], [ %156, %214 ], [ %156, %216 ]\l  %302 = phi \{ i8*, i32 \} [ %299, %298 ], [ %215, %214 ], [ %217, %216 ]\l  %303 = icmp eq i32* %301, null\l  br i1 %303, label %306, label %304\l|{<s0>T|<s1>F}}"];
	Node0x564907f47560:s0 -> Node0x564907f4e920;
	Node0x564907f47560:s1 -> Node0x564907f4e970;
	Node0x564907f4e970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%304:\l304:                                              \l  %305 = bitcast i32* %301 to i8*\l  call void @_ZdlPv(i8* nonnull %305) #16\l  br label %306\l}"];
	Node0x564907f4e970 -> Node0x564907f4e920;
	Node0x564907f4e920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%306:\l306:                                              \l  resume \{ i8*, i32 \} %302\l}"];
	Node0x564907f38d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%307:\l307:                                              \l  ret i32 0\l}"];
}
