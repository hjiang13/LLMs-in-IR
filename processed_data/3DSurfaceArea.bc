; ModuleID = 'Benchmarks/3DSurfaceArea/3DSurfaceArea.cpp'
source_filename = "Benchmarks/3DSurfaceArea/3DSurfaceArea.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@A = dso_local local_unnamed_addr global [102 x [102 x [102 x i32]]] zeroinitializer, align 16
@.str = private unnamed_addr constant [29 x i8] c"../input_files/3DSurfaceArea\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_3DSurfaceArea.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #3 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3
  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %4)
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  %8 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %9 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %8, i32* nonnull align 4 dereferenceable(4) %2)
  %10 = bitcast i32* %3 to i8*
  %11 = load i32, i32* %1, align 4, !tbaa !7
  %12 = icmp slt i32 %11, 1
  %13 = load i32, i32* %2, align 4
  %14 = icmp slt i32 %13, 1
  %15 = select i1 %12, i1 true, i1 %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %24, %0
  br label %104

17:                                               ; preds = %0, %24
  %18 = phi i32 [ %25, %24 ], [ %11, %0 ]
  %19 = phi i32 [ %26, %24 ], [ %13, %0 ]
  %20 = phi i64 [ %27, %24 ], [ 1, %0 ]
  %21 = icmp slt i32 %19, 1
  br i1 %21, label %24, label %30

22:                                               ; preds = %94
  %23 = load i32, i32* %1, align 4, !tbaa !7
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i32 [ %23, %22 ], [ %18, %17 ]
  %26 = phi i32 [ %96, %22 ], [ %19, %17 ]
  %27 = add nuw nsw i64 %20, 1
  %28 = sext i32 %25 to i64
  %29 = icmp slt i64 %20, %28
  br i1 %29, label %17, label %16, !llvm.loop !9

30:                                               ; preds = %17, %94
  %31 = phi i64 [ %95, %94 ], [ 1, %17 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #7
  %32 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %3)
  %33 = load i32, i32* %3, align 4, !tbaa !7
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %94, label %35

35:                                               ; preds = %30
  %36 = add nuw i32 %33, 1
  %37 = zext i32 %36 to i64
  %38 = add nsw i64 %37, -1
  %39 = icmp ult i64 %38, 8
  br i1 %39, label %92, label %40

40:                                               ; preds = %35
  %41 = and i64 %38, -8
  %42 = or i64 %41, 1
  %43 = add nsw i64 %41, -8
  %44 = lshr exact i64 %43, 3
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 24
  br i1 %47, label %76, label %48

48:                                               ; preds = %40
  %49 = and i64 %45, 4611686018427387900
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %73, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %74, %50 ]
  %53 = or i64 %51, 1
  %54 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %20, i64 %31, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 4, !tbaa !7
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 4, !tbaa !7
  %58 = or i64 %51, 9
  %59 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %20, i64 %31, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 4, !tbaa !7
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 4, !tbaa !7
  %63 = or i64 %51, 17
  %64 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %20, i64 %31, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 4, !tbaa !7
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 4, !tbaa !7
  %68 = or i64 %51, 25
  %69 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %20, i64 %31, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 4, !tbaa !7
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 4, !tbaa !7
  %73 = add nuw i64 %51, 32
  %74 = add i64 %52, -4
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %50, !llvm.loop !12

76:                                               ; preds = %50, %40
  %77 = phi i64 [ 0, %40 ], [ %73, %50 ]
  %78 = icmp eq i64 %46, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %87, %79 ], [ %77, %76 ]
  %81 = phi i64 [ %88, %79 ], [ %46, %76 ]
  %82 = or i64 %80, 1
  %83 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %20, i64 %31, i64 %82
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 4, !tbaa !7
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 4, !tbaa !7
  %87 = add nuw i64 %80, 8
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %79, !llvm.loop !14

90:                                               ; preds = %79, %76
  %91 = icmp eq i64 %38, %41
  br i1 %91, label %94, label %92

92:                                               ; preds = %35, %90
  %93 = phi i64 [ 1, %35 ], [ %42, %90 ]
  br label %99

94:                                               ; preds = %99, %90, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #7
  %95 = add nuw nsw i64 %31, 1
  %96 = load i32, i32* %2, align 4, !tbaa !7
  %97 = sext i32 %96 to i64
  %98 = icmp slt i64 %31, %97
  br i1 %98, label %30, label %22, !llvm.loop !16

99:                                               ; preds = %92, %99
  %100 = phi i64 [ %102, %99 ], [ %93, %92 ]
  %101 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %20, i64 %31, i64 %100
  store i32 1, i32* %101, align 4, !tbaa !7
  %102 = add nuw nsw i64 %100, 1
  %103 = icmp eq i64 %102, %37
  br i1 %103, label %94, label %99, !llvm.loop !17

104:                                              ; preds = %16, %145
  %105 = phi i64 [ %108, %145 ], [ 1, %16 ]
  %106 = phi i32 [ %192, %145 ], [ 0, %16 ]
  %107 = add nsw i64 %105, -1
  %108 = add nuw nsw i64 %105, 1
  br label %140

109:                                              ; preds = %145
  %110 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %192)
  %111 = bitcast %"class.std::basic_ostream"* %110 to i8**
  %112 = load i8*, i8** %111, align 8, !tbaa !19
  %113 = getelementptr i8, i8* %112, i64 -24
  %114 = bitcast i8* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.std::basic_ostream"* %110 to i8*
  %117 = add nsw i64 %115, 240
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = bitcast i8* %118 to %"class.std::ctype"**
  %120 = load %"class.std::ctype"*, %"class.std::ctype"** %119, align 8, !tbaa !21
  %121 = icmp eq %"class.std::ctype"* %120, null
  br i1 %121, label %122, label %123

122:                                              ; preds = %109
  call void @_ZSt16__throw_bad_castv() #8
  unreachable

123:                                              ; preds = %109
  %124 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %120, i64 0, i32 8
  %125 = load i8, i8* %124, align 8, !tbaa !24
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %120, i64 0, i32 9, i64 10
  %129 = load i8, i8* %128, align 1, !tbaa !26
  br label %136

130:                                              ; preds = %123
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %120)
  %131 = bitcast %"class.std::ctype"* %120 to i8 (%"class.std::ctype"*, i8)***
  %132 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %131, align 8, !tbaa !19
  %133 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %132, i64 6
  %134 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %133, align 8
  %135 = call signext i8 %134(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %120, i8 signext 10)
  br label %136

136:                                              ; preds = %127, %130
  %137 = phi i8 [ %129, %127 ], [ %135, %130 ]
  %138 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %110, i8 signext %137)
  %139 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %138)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  ret i32 0

140:                                              ; preds = %104, %147
  %141 = phi i64 [ 1, %104 ], [ %144, %147 ]
  %142 = phi i32 [ %106, %104 ], [ %192, %147 ]
  %143 = add nsw i64 %141, -1
  %144 = add nuw nsw i64 %141, 1
  br label %149

145:                                              ; preds = %147
  %146 = icmp eq i64 %108, 101
  br i1 %146, label %109, label %104, !llvm.loop !27

147:                                              ; preds = %190
  %148 = icmp eq i64 %144, 101
  br i1 %148, label %145, label %140, !llvm.loop !28

149:                                              ; preds = %140, %190
  %150 = phi i64 [ 1, %140 ], [ %191, %190 ]
  %151 = phi i32 [ %142, %140 ], [ %192, %190 ]
  %152 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %105, i64 %141, i64 %150
  %153 = load i32, i32* %152, align 4, !tbaa !7
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %149
  %156 = add nuw nsw i64 %150, 1
  br label %190

157:                                              ; preds = %149
  %158 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %107, i64 %141, i64 %150
  %159 = load i32, i32* %158, align 4, !tbaa !7
  %160 = icmp eq i32 %159, 0
  %161 = zext i1 %160 to i32
  %162 = add nsw i32 %151, %161
  %163 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %108, i64 %141, i64 %150
  %164 = load i32, i32* %163, align 4, !tbaa !7
  %165 = icmp eq i32 %164, 0
  %166 = zext i1 %165 to i32
  %167 = add nsw i32 %162, %166
  %168 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %105, i64 %143, i64 %150
  %169 = load i32, i32* %168, align 4, !tbaa !7
  %170 = icmp eq i32 %169, 0
  %171 = zext i1 %170 to i32
  %172 = add nsw i32 %167, %171
  %173 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %105, i64 %144, i64 %150
  %174 = load i32, i32* %173, align 4, !tbaa !7
  %175 = icmp eq i32 %174, 0
  %176 = zext i1 %175 to i32
  %177 = add nsw i32 %172, %176
  %178 = add nsw i64 %150, -1
  %179 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %105, i64 %141, i64 %178
  %180 = load i32, i32* %179, align 4, !tbaa !7
  %181 = icmp eq i32 %180, 0
  %182 = zext i1 %181 to i32
  %183 = add nsw i32 %177, %182
  %184 = add nuw nsw i64 %150, 1
  %185 = getelementptr inbounds [102 x [102 x [102 x i32]]], [102 x [102 x [102 x i32]]]* @A, i64 0, i64 %105, i64 %141, i64 %184
  %186 = load i32, i32* %185, align 4, !tbaa !7
  %187 = icmp eq i32 %186, 0
  %188 = zext i1 %187 to i32
  %189 = add nsw i32 %183, %188
  br label %190

190:                                              ; preds = %155, %157
  %191 = phi i64 [ %156, %155 ], [ %184, %157 ]
  %192 = phi i32 [ %151, %155 ], [ %189, %157 ]
  %193 = icmp eq i64 %191, 101
  br i1 %193, label %147, label %149, !llvm.loop !29
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #5

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_3DSurfaceArea.cpp() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind }
attributes #8 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = distinct !{!9, !10, !11}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!"llvm.loop.unswitch.partial.disable"}
!12 = distinct !{!12, !10, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !10}
!17 = distinct !{!17, !10, !18, !13}
!18 = !{!"llvm.loop.unroll.runtime.disable"}
!19 = !{!20, !20, i64 0}
!20 = !{!"vtable pointer", !6, i64 0}
!21 = !{!22, !4, i64 240}
!22 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !4, i64 216, !5, i64 224, !23, i64 225, !4, i64 232, !4, i64 240, !4, i64 248, !4, i64 256}
!23 = !{!"bool", !5, i64 0}
!24 = !{!25, !5, i64 56}
!25 = !{!"_ZTSSt5ctypeIcE", !4, i64 16, !23, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !5, i64 56, !5, i64 57, !5, i64 313, !5, i64 569}
!26 = !{!5, !5, i64 0}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
