digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x56459a280a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i32, align 4\l  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %4 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([33 x\l... i8], [33 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %3)\l  %5 = bitcast i32* %1 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10\l  %6 = bitcast i32* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10\l  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)\l  %8 = load i32, i32* %2, align 4, !tbaa !7\l  %9 = icmp sgt i32 %8, 0\l  br i1 %9, label %116, label %10\l|{<s0>T|<s1>F}}"];
	Node0x56459a280a50:s0 -> Node0x56459a281c70;
	Node0x56459a280a50:s1 -> Node0x56459a2836a0;
	Node0x56459a2836a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%10:\l10:                                               \l  %11 = phi i32 [ %8, %0 ], [ %123, %116 ]\l  %12 = load i32, i32* %1, align 4, !tbaa !7\l  %13 = icmp sgt i32 %12, 0\l  %14 = icmp sgt i32 %11, 0\l  %15 = select i1 %13, i1 %14, i1 false\l  br i1 %15, label %16, label %126\l|{<s0>T|<s1>F}}"];
	Node0x56459a2836a0:s0 -> Node0x56459a284140;
	Node0x56459a2836a0:s1 -> Node0x56459a2841d0;
	Node0x56459a284140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%16:\l16:                                               \l  %17 = zext i32 %11 to i64\l  %18 = icmp ult i32 %11, 8\l  %19 = and i64 %17, 4294967288\l  %20 = icmp eq i64 %19, %17\l  br label %21\l}"];
	Node0x56459a284140 -> Node0x56459a284500;
	Node0x56459a284500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%21:\l21:                                               \l  %22 = phi i32 [ %114, %113 ], [ 0, %16 ]\l  %23 = phi i32 [ %110, %113 ], [ 0, %16 ]\l  %24 = insertelement \<4 x i32\> poison, i32 %22, i32 0\l  %25 = shufflevector \<4 x i32\> %24, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %26 = insertelement \<4 x i32\> poison, i32 %22, i32 0\l  %27 = shufflevector \<4 x i32\> %26, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  br label %28\l}"];
	Node0x56459a284500 -> Node0x56459a285550;
	Node0x56459a285550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%28:\l28:                                               \l  %29 = phi i32 [ 0, %21 ], [ %111, %107 ]\l  %30 = phi i32 [ %23, %21 ], [ %110, %107 ]\l  br i1 %18, label %83, label %31\l|{<s0>T|<s1>F}}"];
	Node0x56459a285550:s0 -> Node0x56459a285870;
	Node0x56459a285550:s1 -> Node0x56459a285900;
	Node0x56459a285900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%31:\l31:                                               \l  %32 = insertelement \<4 x i32\> poison, i32 %29, i32 0\l  %33 = shufflevector \<4 x i32\> %32, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %34 = insertelement \<4 x i32\> poison, i32 %29, i32 0\l  %35 = shufflevector \<4 x i32\> %34, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  br label %36\l}"];
	Node0x56459a285900 -> Node0x56459a285f10;
	Node0x56459a285f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%36:\l36:                                               \l  %37 = phi i64 [ 0, %31 ], [ %78, %36 ]\l  %38 = phi \<4 x i32\> [ zeroinitializer, %31 ], [ %76, %36 ]\l  %39 = phi \<4 x i32\> [ zeroinitializer, %31 ], [ %77, %36 ]\l  %40 = getelementptr inbounds [1234567 x i32], [1234567 x i32]* @x, i64 0,\l... i64 %37\l  %41 = bitcast i32* %40 to \<4 x i32\>*\l  %42 = load \<4 x i32\>, \<4 x i32\>* %41, align 16, !tbaa !7\l  %43 = getelementptr inbounds i32, i32* %40, i64 4\l  %44 = bitcast i32* %43 to \<4 x i32\>*\l  %45 = load \<4 x i32\>, \<4 x i32\>* %44, align 16, !tbaa !7\l  %46 = sub nsw \<4 x i32\> %42, %25\l  %47 = sub nsw \<4 x i32\> %45, %27\l  %48 = call \<4 x i32\> @llvm.abs.v4i32(\<4 x i32\> %46, i1 true)\l  %49 = call \<4 x i32\> @llvm.abs.v4i32(\<4 x i32\> %47, i1 true)\l  %50 = getelementptr inbounds [1234567 x i32], [1234567 x i32]* @y, i64 0,\l... i64 %37\l  %51 = bitcast i32* %50 to \<4 x i32\>*\l  %52 = load \<4 x i32\>, \<4 x i32\>* %51, align 16, !tbaa !7\l  %53 = getelementptr inbounds i32, i32* %50, i64 4\l  %54 = bitcast i32* %53 to \<4 x i32\>*\l  %55 = load \<4 x i32\>, \<4 x i32\>* %54, align 16, !tbaa !7\l  %56 = sub nsw \<4 x i32\> %52, %33\l  %57 = sub nsw \<4 x i32\> %55, %35\l  %58 = call \<4 x i32\> @llvm.abs.v4i32(\<4 x i32\> %56, i1 true)\l  %59 = call \<4 x i32\> @llvm.abs.v4i32(\<4 x i32\> %57, i1 true)\l  %60 = icmp ult \<4 x i32\> %48, %58\l  %61 = icmp ult \<4 x i32\> %49, %59\l  %62 = select \<4 x i1\> %60, \<4 x i32\> %58, \<4 x i32\> %48\l  %63 = select \<4 x i1\> %61, \<4 x i32\> %59, \<4 x i32\> %49\l  %64 = getelementptr inbounds [1234567 x i32], [1234567 x i32]* @w, i64 0,\l... i64 %37\l  %65 = bitcast i32* %64 to \<4 x i32\>*\l  %66 = load \<4 x i32\>, \<4 x i32\>* %65, align 16, !tbaa !7\l  %67 = getelementptr inbounds i32, i32* %64, i64 4\l  %68 = bitcast i32* %67 to \<4 x i32\>*\l  %69 = load \<4 x i32\>, \<4 x i32\>* %68, align 16, !tbaa !7\l  %70 = sub nsw \<4 x i32\> %66, %62\l  %71 = sub nsw \<4 x i32\> %69, %63\l  %72 = icmp sgt \<4 x i32\> %70, zeroinitializer\l  %73 = icmp sgt \<4 x i32\> %71, zeroinitializer\l  %74 = select \<4 x i1\> %72, \<4 x i32\> %70, \<4 x i32\> zeroinitializer\l  %75 = select \<4 x i1\> %73, \<4 x i32\> %71, \<4 x i32\> zeroinitializer\l  %76 = add \<4 x i32\> %74, %38\l  %77 = add \<4 x i32\> %75, %39\l  %78 = add nuw i64 %37, 8\l  %79 = icmp eq i64 %78, %19\l  br i1 %79, label %80, label %36, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x56459a285f10:s0 -> Node0x56459a2880d0;
	Node0x56459a285f10:s1 -> Node0x56459a285f10;
	Node0x56459a2880d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%80:\l80:                                               \l  %81 = add \<4 x i32\> %77, %76\l  %82 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %81)\l  br i1 %20, label %107, label %83\l|{<s0>T|<s1>F}}"];
	Node0x56459a2880d0:s0 -> Node0x56459a285680;
	Node0x56459a2880d0:s1 -> Node0x56459a285870;
	Node0x56459a285870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%83:\l83:                                               \l  %84 = phi i64 [ 0, %28 ], [ %19, %80 ]\l  %85 = phi i32 [ 0, %28 ], [ %82, %80 ]\l  br label %86\l}"];
	Node0x56459a285870 -> Node0x56459a288700;
	Node0x56459a288700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi i64 [ %105, %86 ], [ %84, %83 ]\l  %88 = phi i32 [ %104, %86 ], [ %85, %83 ]\l  %89 = getelementptr inbounds [1234567 x i32], [1234567 x i32]* @x, i64 0,\l... i64 %87\l  %90 = load i32, i32* %89, align 4, !tbaa !7\l  %91 = sub nsw i32 %90, %22\l  %92 = call i32 @llvm.abs.i32(i32 %91, i1 true)\l  %93 = getelementptr inbounds [1234567 x i32], [1234567 x i32]* @y, i64 0,\l... i64 %87\l  %94 = load i32, i32* %93, align 4, !tbaa !7\l  %95 = sub nsw i32 %94, %29\l  %96 = call i32 @llvm.abs.i32(i32 %95, i1 true)\l  %97 = icmp ult i32 %92, %96\l  %98 = select i1 %97, i32 %96, i32 %92\l  %99 = getelementptr inbounds [1234567 x i32], [1234567 x i32]* @w, i64 0,\l... i64 %87\l  %100 = load i32, i32* %99, align 4, !tbaa !7\l  %101 = sub nsw i32 %100, %98\l  %102 = icmp sgt i32 %101, 0\l  %103 = select i1 %102, i32 %101, i32 0\l  %104 = add nuw nsw i32 %103, %88\l  %105 = add nuw nsw i64 %87, 1\l  %106 = icmp eq i64 %105, %17\l  br i1 %106, label %107, label %86, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x56459a288700:s0 -> Node0x56459a285680;
	Node0x56459a288700:s1 -> Node0x56459a288700;
	Node0x56459a285680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%107:\l107:                                              \l  %108 = phi i32 [ %82, %80 ], [ %104, %86 ]\l  %109 = icmp slt i32 %30, %108\l  %110 = select i1 %109, i32 %108, i32 %30\l  %111 = add nuw nsw i32 %29, 1\l  %112 = icmp eq i32 %111, %12\l  br i1 %112, label %113, label %28, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x56459a285680:s0 -> Node0x56459a2845f0;
	Node0x56459a285680:s1 -> Node0x56459a285550;
	Node0x56459a2845f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%113:\l113:                                              \l  %114 = add nuw nsw i32 %22, 1\l  %115 = icmp eq i32 %114, %12\l  br i1 %115, label %126, label %21, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x56459a2845f0:s0 -> Node0x56459a2841d0;
	Node0x56459a2845f0:s1 -> Node0x56459a284500;
	Node0x56459a281c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%116:\l116:                                              \l  %117 = phi i64 [ %122, %116 ], [ 0, %0 ]\l  %118 = getelementptr inbounds [1234567 x i32], [1234567 x i32]* @x, i64 0,\l... i64 %117\l  %119 = getelementptr inbounds [1234567 x i32], [1234567 x i32]* @y, i64 0,\l... i64 %117\l  %120 = getelementptr inbounds [1234567 x i32], [1234567 x i32]* @w, i64 0,\l... i64 %117\l  %121 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x\l... i8], [9 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %118, i32* nonnull %119,\l... i32* nonnull %120)\l  %122 = add nuw nsw i64 %117, 1\l  %123 = load i32, i32* %2, align 4, !tbaa !7\l  %124 = sext i32 %123 to i64\l  %125 = icmp slt i64 %122, %124\l  br i1 %125, label %116, label %10, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x56459a281c70:s0 -> Node0x56459a281c70;
	Node0x56459a281c70:s1 -> Node0x56459a2836a0;
	Node0x56459a2841d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%126:\l126:                                              \l  %127 = phi i32 [ 0, %10 ], [ %110, %113 ]\l  %128 = call nonnull align 8 dereferenceable(8) %\"class.std::basic_ostream\"*\l... @_ZNSolsEi(%\"class.std::basic_ostream\"* nonnull align 8 dereferenceable(8)\l... @_ZSt4cout, i32 %127)\l  %129 = bitcast %\"class.std::basic_ostream\"* %128 to i8**\l  %130 = load i8*, i8** %129, align 8, !tbaa !17\l  %131 = getelementptr i8, i8* %130, i64 -24\l  %132 = bitcast i8* %131 to i64*\l  %133 = load i64, i64* %132, align 8\l  %134 = bitcast %\"class.std::basic_ostream\"* %128 to i8*\l  %135 = add nsw i64 %133, 240\l  %136 = getelementptr inbounds i8, i8* %134, i64 %135\l  %137 = bitcast i8* %136 to %\"class.std::ctype\"**\l  %138 = load %\"class.std::ctype\"*, %\"class.std::ctype\"** %137, align 8, !tbaa\l... !19\l  %139 = icmp eq %\"class.std::ctype\"* %138, null\l  br i1 %139, label %140, label %141\l|{<s0>T|<s1>F}}"];
	Node0x56459a2841d0:s0 -> Node0x56459a28b880;
	Node0x56459a2841d0:s1 -> Node0x56459a28b910;
	Node0x56459a28b880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{%140:\l140:                                              \l  call void @_ZSt16__throw_bad_castv() #11\l  unreachable\l}"];
	Node0x56459a28b910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%141:\l141:                                              \l  %142 = getelementptr inbounds %\"class.std::ctype\", %\"class.std::ctype\"*\l... %138, i64 0, i32 8\l  %143 = load i8, i8* %142, align 8, !tbaa !22\l  %144 = icmp eq i8 %143, 0\l  br i1 %144, label %148, label %145\l|{<s0>T|<s1>F}}"];
	Node0x56459a28b910:s0 -> Node0x56459a28bf00;
	Node0x56459a28b910:s1 -> Node0x56459a28bf90;
	Node0x56459a28bf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%145:\l145:                                              \l  %146 = getelementptr inbounds %\"class.std::ctype\", %\"class.std::ctype\"*\l... %138, i64 0, i32 9, i64 10\l  %147 = load i8, i8* %146, align 1, !tbaa !24\l  br label %154\l}"];
	Node0x56459a28bf90 -> Node0x56459a28c280;
	Node0x56459a28bf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%148:\l148:                                              \l  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%\"class.std::ctype\"* nonnull\l... align 8 dereferenceable(570) %138)\l  %149 = bitcast %\"class.std::ctype\"* %138 to i8 (%\"class.std::ctype\"*, i8)***\l  %150 = load i8 (%\"class.std::ctype\"*, i8)**, i8 (%\"class.std::ctype\"*,\l... i8)*** %149, align 8, !tbaa !17\l  %151 = getelementptr inbounds i8 (%\"class.std::ctype\"*, i8)*, i8\l... (%\"class.std::ctype\"*, i8)** %150, i64 6\l  %152 = load i8 (%\"class.std::ctype\"*, i8)*, i8 (%\"class.std::ctype\"*, i8)**\l... %151, align 8\l  %153 = call signext i8 %152(%\"class.std::ctype\"* nonnull align 8\l... dereferenceable(570) %138, i8 signext 10)\l  br label %154\l}"];
	Node0x56459a28bf00 -> Node0x56459a28c280;
	Node0x56459a28c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%154:\l154:                                              \l  %155 = phi i8 [ %147, %145 ], [ %153, %148 ]\l  %156 = call nonnull align 8 dereferenceable(8) %\"class.std::basic_ostream\"*\l... @_ZNSo3putEc(%\"class.std::basic_ostream\"* nonnull align 8 dereferenceable(8)\l... %128, i8 signext %155)\l  %157 = call nonnull align 8 dereferenceable(8) %\"class.std::basic_ostream\"*\l... @_ZNSo5flushEv(%\"class.std::basic_ostream\"* nonnull align 8\l... dereferenceable(8) %156)\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10\l  ret i32 0\l}"];
}
