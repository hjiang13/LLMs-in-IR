digraph "CFG for '_Z3dfsii' function" {
	label="CFG for '_Z3dfsii' function";

	Node0x55e9c7649af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%2:\l  %3 = load i32, i32* @TIME, align 4, !tbaa !3\l  %4 = sext i32 %3 to i64\l  %5 = getelementptr inbounds [100005 x i32], [100005 x i32]* @rev, i64 0, i64\l... %4\l  store i32 %0, i32* %5, align 4, !tbaa !3\l  %6 = add nsw i32 %3, 1\l  store i32 %6, i32* @TIME, align 4, !tbaa !3\l  %7 = sext i32 %0 to i64\l  %8 = getelementptr inbounds [100005 x i32], [100005 x i32]* @en, i64 0, i64\l... %7\l  store i32 %3, i32* %8, align 4, !tbaa !3\l  %9 = getelementptr inbounds [100005 x i32], [100005 x i32]* @sub, i64 0, i64\l... %7\l  store i32 1, i32* %9, align 4, !tbaa !3\l  %10 = getelementptr inbounds [100005 x %\"class.std::vector\"], [100005 x\l... %\"class.std::vector\"]* @adj, i64 0, i64 %7, i32 0, i32 0, i32 0, i32 0\l  %11 = load i32*, i32** %10, align 8, !tbaa !7\l  %12 = getelementptr inbounds [100005 x %\"class.std::vector\"], [100005 x\l... %\"class.std::vector\"]* @adj, i64 0, i64 %7, i32 0, i32 0, i32 0, i32 1\l  %13 = load i32*, i32** %12, align 8, !tbaa !7\l  %14 = getelementptr inbounds [100005 x i64], [100005 x i64]* @dep, i64 0,\l... i64 %7\l  %15 = getelementptr inbounds [100005 x i32], [100005 x i32]* @h, i64 0, i64\l... %7\l  %16 = getelementptr inbounds [100005 x i64], [100005 x i64]* @dp, i64 0, i64\l... %7\l  %17 = icmp eq i32* %11, %13\l  br i1 %17, label %20, label %24\l|{<s0>T|<s1>F}}"];
	Node0x55e9c7649af0:s0 -> Node0x55e9c7649d10;
	Node0x55e9c7649af0:s1 -> Node0x55e9c764b670;
	Node0x55e9c764b7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = load i32, i32* @TIME, align 4, !tbaa !3\l  br label %20\l}"];
	Node0x55e9c764b7b0 -> Node0x55e9c7649d10;
	Node0x55e9c7649d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%20:\l20:                                               \l  %21 = phi i32 [ %19, %18 ], [ %6, %2 ]\l  %22 = add nsw i32 %21, -1\l  %23 = getelementptr inbounds [100005 x i32], [100005 x i32]* @ex, i64 0, i64\l... %7\l  store i32 %22, i32* %23, align 4, !tbaa !3\l  ret void\l}"];
	Node0x55e9c764b670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32* [ %64, %63 ], [ %11, %2 ]\l  %26 = load i32, i32* %25, align 4, !tbaa !3\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds [100005 x i32], [100005 x i32]* @eu, i64 0, i64\l... %27\l  %29 = load i32, i32* %28, align 4, !tbaa !3\l  %30 = icmp eq i32 %29, %0\l  br i1 %30, label %31, label %34\l|{<s0>T|<s1>F}}"];
	Node0x55e9c764b670:s0 -> Node0x55e9c764c000;
	Node0x55e9c764b670:s1 -> Node0x55e9c764c050;
	Node0x55e9c764c000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%31:\l31:                                               \l  %32 = getelementptr inbounds [100005 x i32], [100005 x i32]* @ev, i64 0, i64\l... %27\l  %33 = load i32, i32* %32, align 4, !tbaa !3\l  br label %34\l}"];
	Node0x55e9c764c000 -> Node0x55e9c764c050;
	Node0x55e9c764c050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %33, %31 ], [ %29, %24 ]\l  %36 = icmp eq i32 %35, %1\l  br i1 %36, label %63, label %37\l|{<s0>T|<s1>F}}"];
	Node0x55e9c764c050:s0 -> Node0x55e9c764bc60;
	Node0x55e9c764c050:s1 -> Node0x55e9c764c680;
	Node0x55e9c764c680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%37:\l37:                                               \l  %38 = getelementptr inbounds [100005 x i64], [100005 x i64]* @ew, i64 0, i64\l... %27\l  %39 = load i64, i64* %38, align 8, !tbaa !9\l  %40 = load i64, i64* %14, align 8, !tbaa !9\l  %41 = add nsw i64 %40, %39\l  %42 = sext i32 %35 to i64\l  %43 = getelementptr inbounds [100005 x i64], [100005 x i64]* @dep, i64 0,\l... i64 %42\l  store i64 %41, i64* %43, align 8, !tbaa !9\l  %44 = load i32, i32* %15, align 4, !tbaa !3\l  %45 = add nsw i32 %44, 1\l  %46 = getelementptr inbounds [100005 x i32], [100005 x i32]* @h, i64 0, i64\l... %42\l  store i32 %45, i32* %46, align 4, !tbaa !3\l  %47 = getelementptr inbounds [100005 x i32], [100005 x i32]* @par, i64 0,\l... i64 %42\l  store i32 %0, i32* %47, align 4, !tbaa !3\l  tail call void @_Z3dfsii(i32 %35, i32 %0)\l  %48 = getelementptr inbounds [100005 x i32], [100005 x i32]* @sub, i64 0,\l... i64 %42\l  %49 = load i32, i32* %48, align 4, !tbaa !3\l  %50 = load i32, i32* %9, align 4, !tbaa !3\l  %51 = add nsw i32 %50, %49\l  store i32 %51, i32* %9, align 4, !tbaa !3\l  %52 = getelementptr inbounds [100005 x i64], [100005 x i64]* @dp, i64 0, i64\l... %42\l  %53 = load i64, i64* %52, align 8, !tbaa !9\l  %54 = load i32, i32* %48, align 4, !tbaa !3\l  %55 = sext i32 %54 to i64\l  %56 = mul nsw i64 %39, %55\l  %57 = srem i64 %56, 1000000007\l  %58 = add nsw i64 %57, %53\l  %59 = srem i64 %58, 1000000007\l  %60 = load i64, i64* %16, align 8, !tbaa !9\l  %61 = add nsw i64 %59, %60\l  %62 = srem i64 %61, 1000000007\l  store i64 %62, i64* %16, align 8, !tbaa !9\l  br label %63\l}"];
	Node0x55e9c764c680 -> Node0x55e9c764bc60;
	Node0x55e9c764bc60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = getelementptr inbounds i32, i32* %25, i64 1\l  %65 = icmp eq i32* %64, %13\l  br i1 %65, label %18, label %24\l|{<s0>T|<s1>F}}"];
	Node0x55e9c764bc60:s0 -> Node0x55e9c764b7b0;
	Node0x55e9c764bc60:s1 -> Node0x55e9c764b670;
}
