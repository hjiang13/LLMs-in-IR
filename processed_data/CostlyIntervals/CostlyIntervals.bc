; ModuleID = '../../Benchmarks/CostlyIntervals/CostlyIntervals.cpp'
source_filename = "../../Benchmarks/CostlyIntervals/CostlyIntervals.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%class.SegTree_max = type { %"class.std::vector" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%class.SegTree_min = type { %"class.std::vector" }
%class.SegTree_or = type { %"class.std::vector" }
%class.SegTree_and = type { %"class.std::vector" }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"struct.std::piecewise_construct_t" = type { i8 }
%"struct.std::_Rb_tree_node" = type <{ %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf", [4 x i8] }>
%"struct.__gnu_cxx::__aligned_membuf" = type { [4 x i8] }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i32* }
%"class.std::tuple.27" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::map" = type { %"class.std::_Rb_tree.6" }
%"class.std::_Rb_tree.6" = type { %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_node.13" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.14" }
%"struct.__gnu_cxx::__aligned_membuf.14" = type { [8 x i8] }
%"struct.std::pair.10" = type { i32, i32 }

$_ZN11SegTree_maxIiLi262144EED2Ev = comdat any

$_ZN11SegTree_minIiLi262144EED2Ev = comdat any

$_ZN10SegTree_orIiLi262144EED2Ev = comdat any

$_ZN11SegTree_andIiLi262144EED2Ev = comdat any

$_ZN11SegTree_maxIiLi262144EE6getvalEiiiii = comdat any

$_ZN11SegTree_minIiLi262144EE6getvalEiiiii = comdat any

$_ZN10SegTree_orIiLi262144EE6getvalEiiiii = comdat any

$_ZN11SegTree_andIiLi262144EE6getvalEiiiii = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EED2Ev = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOiEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_ = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@N = dso_local global i32 0, align 4
@K = dso_local global i32 0, align 4
@A = dso_local global [101010 x i32] zeroinitializer, align 16
@stma = dso_local global %class.SegTree_max zeroinitializer, align 8
@stmi = dso_local global %class.SegTree_min zeroinitializer, align 8
@stor = dso_local global %class.SegTree_or zeroinitializer, align 8
@stand = dso_local global %class.SegTree_and zeroinitializer, align 8
@nex = dso_local local_unnamed_addr global [31 x [2 x i32]] zeroinitializer, align 16
@ret = dso_local local_unnamed_addr global [101010 x i32] zeroinitializer, align 16
@add = dso_local global [101010 x %"class.std::vector"] zeroinitializer, align 16
@del = dso_local global [101010 x %"class.std::vector"] zeroinitializer, align 16
@cand = dso_local global [101010 x %"class.std::set"] zeroinitializer, align 16
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.10 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_CostlyIntervals.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN11SegTree_maxIiLi262144EED2Ev(%class.SegTree_max* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.SegTree_max, %class.SegTree_max* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8, !tbaa !3
  %4 = icmp eq i32* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #18
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN11SegTree_minIiLi262144EED2Ev(%class.SegTree_min* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.SegTree_min, %class.SegTree_min* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8, !tbaa !3
  %4 = icmp eq i32* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #18
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN10SegTree_orIiLi262144EED2Ev(%class.SegTree_or* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.SegTree_or, %class.SegTree_or* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8, !tbaa !3
  %4 = icmp eq i32* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #18
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN11SegTree_andIiLi262144EED2Ev(%class.SegTree_and* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.SegTree_and, %class.SegTree_and* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8, !tbaa !3
  %4 = icmp eq i32* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #18
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor(i8* nocapture readnone %0) #4 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  br label %2

2:                                                ; preds = %10, %1
  %3 = phi %"class.std::vector"* [ getelementptr inbounds ([101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @add, i64 1, i64 0), %1 ], [ %4, %10 ]
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 -1
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8, !tbaa !3
  %7 = icmp eq i32* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast i32* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #18
  br label %10

10:                                               ; preds = %2, %8
  %11 = icmp eq %"class.std::vector"* %4, getelementptr inbounds ([101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @add, i64 0, i64 0)
  br i1 %11, label %12, label %2

12:                                               ; preds = %10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor.7(i8* nocapture readnone %0) #4 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  br label %2

2:                                                ; preds = %10, %1
  %3 = phi %"class.std::vector"* [ getelementptr inbounds ([101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @del, i64 1, i64 0), %1 ], [ %4, %10 ]
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 -1
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8, !tbaa !3
  %7 = icmp eq i32* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast i32* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #18
  br label %10

10:                                               ; preds = %2, %8
  %11 = icmp eq %"class.std::vector"* %4, getelementptr inbounds ([101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @del, i64 0, i64 0)
  br i1 %11, label %12, label %2

12:                                               ; preds = %10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor.9(i8* nocapture readnone %0) #4 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  br label %2

2:                                                ; preds = %13, %1
  %3 = phi %"class.std::set"* [ getelementptr inbounds ([101010 x %"class.std::set"], [101010 x %"class.std::set"]* @cand, i64 1, i64 0), %1 ], [ %4, %13 ]
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i64 -1
  %5 = getelementptr inbounds %"class.std::set", %"class.std::set"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::set", %"class.std::set"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds i8, i8* %6, i64 16
  %8 = bitcast i8* %7 to %"struct.std::_Rb_tree_node"**
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8, !tbaa !8
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %5, %"struct.std::_Rb_tree_node"* %9)
          to label %13 unwind label %10

10:                                               ; preds = %2
  %11 = landingpad { i8*, i32 }
          catch i8* null
  %12 = extractvalue { i8*, i32 } %11, 0
  tail call void @__clang_call_terminate(i8* %12) #19
  unreachable

13:                                               ; preds = %2
  %14 = icmp eq %"class.std::set"* %4, getelementptr inbounds ([101010 x %"class.std::set"], [101010 x %"class.std::set"]* @cand, i64 0, i64 0)
  br i1 %14, label %15, label %2

15:                                               ; preds = %13
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z5solvev() local_unnamed_addr #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::tuple", align 8
  %2 = alloca %"class.std::tuple.27", align 1
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::map", align 8
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %8 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !13
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %9, align 8, !tbaa !15
  %10 = bitcast %union.anon* %7 to i8*
  store i8 0, i8* %10, align 8, !tbaa !17
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(404040) bitcast ([101010 x i32]* @ret to i8*), i8 -1, i64 404040, i1 false)
  %11 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) @N)
          to label %12 unwind label %117

12:                                               ; preds = %0
  %13 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %11, i32* nonnull align 4 dereferenceable(4) @K)
          to label %14 unwind label %117

14:                                               ; preds = %12
  %15 = load i32, i32* @N, align 4, !tbaa !18
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %106, %14
  %18 = phi i32 [ %15, %14 ], [ %108, %106 ]
  %19 = insertelement <4 x i32> poison, i32 %18, i32 0
  %20 = shufflevector <4 x i32> %19, <4 x i32> poison, <4 x i32> zeroinitializer
  store <4 x i32> %20, <4 x i32>* bitcast ([31 x [2 x i32]]* @nex to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 2, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 4, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 6, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 8, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 10, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 12, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 14, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 16, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 18, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 20, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 22, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 24, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 26, i64 0) to <4 x i32>*), align 16, !tbaa !18
  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 28, i64 0) to <4 x i32>*), align 16, !tbaa !18
  %21 = icmp sgt i32 %18, 0
  br i1 %21, label %119, label %447

22:                                               ; preds = %14, %106
  %23 = phi i64 [ %107, %106 ], [ 0, %14 ]
  %24 = getelementptr inbounds [101010 x i32], [101010 x i32]* @A, i64 0, i64 %23
  %25 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %24)
          to label %26 unwind label %115

26:                                               ; preds = %22
  %27 = load i32, i32* %24, align 4, !tbaa !18
  %28 = add nuw nsw i64 %23, 262144
  %29 = load i32*, i32** getelementptr inbounds (%class.SegTree_max, %class.SegTree_max* @stma, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %30 = getelementptr inbounds i32, i32* %29, i64 %28
  store i32 %27, i32* %30, align 4, !tbaa !18
  %31 = trunc i64 %28 to i32
  br label %32

32:                                               ; preds = %26, %32
  %33 = phi i32 [ %34, %32 ], [ %31, %26 ]
  %34 = lshr i32 %33, 1
  %35 = and i32 %33, 2147483646
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %29, i64 %36
  %38 = load i32, i32* %37, align 4, !tbaa !18
  %39 = or i32 %33, 1
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %29, i64 %40
  %42 = load i32, i32* %41, align 4, !tbaa !18
  %43 = icmp slt i32 %38, %42
  %44 = select i1 %43, i32 %42, i32 %38
  %45 = zext i32 %34 to i64
  %46 = getelementptr inbounds i32, i32* %29, i64 %45
  store i32 %44, i32* %46, align 4, !tbaa !18
  %47 = icmp ugt i32 %33, 3
  br i1 %47, label %32, label %48, !llvm.loop !20

48:                                               ; preds = %32
  %49 = load i32, i32* %24, align 4, !tbaa !18
  %50 = load i32*, i32** getelementptr inbounds (%class.SegTree_min, %class.SegTree_min* @stmi, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %51 = getelementptr inbounds i32, i32* %50, i64 %28
  store i32 %49, i32* %51, align 4, !tbaa !18
  br label %52

52:                                               ; preds = %48, %52
  %53 = phi i32 [ %54, %52 ], [ %31, %48 ]
  %54 = lshr i32 %53, 1
  %55 = and i32 %53, 2147483646
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %50, i64 %56
  %58 = load i32, i32* %57, align 4, !tbaa !18
  %59 = or i32 %53, 1
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %50, i64 %60
  %62 = load i32, i32* %61, align 4, !tbaa !18
  %63 = icmp slt i32 %62, %58
  %64 = select i1 %63, i32 %62, i32 %58
  %65 = zext i32 %54 to i64
  %66 = getelementptr inbounds i32, i32* %50, i64 %65
  store i32 %64, i32* %66, align 4, !tbaa !18
  %67 = icmp ugt i32 %53, 3
  br i1 %67, label %52, label %68, !llvm.loop !22

68:                                               ; preds = %52
  %69 = load i32, i32* %24, align 4, !tbaa !18
  %70 = load i32*, i32** getelementptr inbounds (%class.SegTree_or, %class.SegTree_or* @stor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %71 = getelementptr inbounds i32, i32* %70, i64 %28
  store i32 %69, i32* %71, align 4, !tbaa !18
  br label %72

72:                                               ; preds = %68, %72
  %73 = phi i32 [ %74, %72 ], [ %31, %68 ]
  %74 = lshr i32 %73, 1
  %75 = and i32 %73, 2147483646
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %70, i64 %76
  %78 = load i32, i32* %77, align 4, !tbaa !18
  %79 = or i32 %73, 1
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %70, i64 %80
  %82 = load i32, i32* %81, align 4, !tbaa !18
  %83 = or i32 %82, %78
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds i32, i32* %70, i64 %84
  store i32 %83, i32* %85, align 4, !tbaa !18
  %86 = icmp ugt i32 %73, 3
  br i1 %86, label %72, label %87, !llvm.loop !23

87:                                               ; preds = %72
  %88 = load i32, i32* %24, align 4, !tbaa !18
  %89 = load i32*, i32** getelementptr inbounds (%class.SegTree_and, %class.SegTree_and* @stand, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %90 = getelementptr inbounds i32, i32* %89, i64 %28
  store i32 %88, i32* %90, align 4, !tbaa !18
  br label %91

91:                                               ; preds = %87, %91
  %92 = phi i32 [ %93, %91 ], [ %31, %87 ]
  %93 = lshr i32 %92, 1
  %94 = and i32 %92, 2147483646
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i32, i32* %89, i64 %95
  %97 = load i32, i32* %96, align 4, !tbaa !18
  %98 = or i32 %92, 1
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds i32, i32* %89, i64 %99
  %101 = load i32, i32* %100, align 4, !tbaa !18
  %102 = and i32 %101, %97
  %103 = zext i32 %93 to i64
  %104 = getelementptr inbounds i32, i32* %89, i64 %103
  store i32 %102, i32* %104, align 4, !tbaa !18
  %105 = icmp ugt i32 %92, 3
  br i1 %105, label %91, label %106, !llvm.loop !24

106:                                              ; preds = %91
  %107 = add nuw nsw i64 %23, 1
  %108 = load i32, i32* @N, align 4, !tbaa !18
  %109 = sext i32 %108 to i64
  %110 = icmp slt i64 %107, %109
  br i1 %110, label %22, label %17, !llvm.loop !25

111:                                              ; preds = %191, %244
  %112 = landingpad { i8*, i32 }
          cleanup
  br label %865

113:                                              ; preds = %257
  %114 = landingpad { i8*, i32 }
          cleanup
  br label %865

115:                                              ; preds = %22
  %116 = landingpad { i8*, i32 }
          cleanup
  br label %865

117:                                              ; preds = %0, %12
  %118 = landingpad { i8*, i32 }
          cleanup
  br label %865

119:                                              ; preds = %17
  %120 = zext i32 %18 to i64
  br label %121

121:                                              ; preds = %119, %437
  %122 = phi i64 [ %120, %119 ], [ %123, %437 ]
  %123 = add nsw i64 %122, -1
  %124 = getelementptr inbounds [101010 x i32], [101010 x i32]* @A, i64 0, i64 %123
  %125 = getelementptr inbounds [101010 x %"class.std::set"], [101010 x %"class.std::set"]* @cand, i64 0, i64 %123, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds i8, i8* %125, i64 16
  %127 = bitcast i8* %126 to %"struct.std::_Rb_tree_node"**
  %128 = getelementptr inbounds i8, i8* %125, i64 8
  %129 = bitcast i8* %128 to %"struct.std::_Rb_tree_node_base"*
  %130 = getelementptr inbounds i8, i8* %125, i64 24
  %131 = bitcast i8* %130 to %"struct.std::_Rb_tree_node_base"**
  %132 = getelementptr inbounds i8, i8* %125, i64 40
  %133 = bitcast i8* %132 to i64*
  %134 = trunc i64 %123 to i32
  %135 = trunc i64 %123 to i32
  br label %136

136:                                              ; preds = %121, %254
  %137 = phi i64 [ 0, %121 ], [ %255, %254 ]
  %138 = load i32, i32* %124, align 4, !tbaa !18
  %139 = trunc i64 %137 to i32
  %140 = shl nuw nsw i32 1, %139
  %141 = and i32 %138, %140
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds [31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 %137, i64 1
  store i32 %134, i32* %144, align 4, !tbaa !18
  %145 = getelementptr inbounds [31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 %137, i64 0
  %146 = load i32, i32* %145, align 8
  br label %149

147:                                              ; preds = %136
  %148 = getelementptr inbounds [31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 %137, i64 0
  store i32 %135, i32* %148, align 8, !tbaa !18
  br label %149

149:                                              ; preds = %147, %143
  %150 = phi i32 [ %135, %147 ], [ %146, %143 ]
  %151 = getelementptr inbounds [31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 %137, i64 0
  %152 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %127, align 16, !tbaa !26
  %153 = icmp eq %"struct.std::_Rb_tree_node"* %152, null
  br i1 %153, label %168, label %154

154:                                              ; preds = %149, %154
  %155 = phi %"struct.std::_Rb_tree_node"* [ %164, %154 ], [ %152, %149 ]
  %156 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %155, i64 0, i32 1
  %157 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %156 to i32*
  %158 = load i32, i32* %157, align 4, !tbaa !18
  %159 = icmp slt i32 %150, %158
  %160 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %155, i64 0, i32 0, i32 2
  %161 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %155, i64 0, i32 0, i32 3
  %162 = select i1 %159, %"struct.std::_Rb_tree_node_base"** %160, %"struct.std::_Rb_tree_node_base"** %161
  %163 = bitcast %"struct.std::_Rb_tree_node_base"** %162 to %"struct.std::_Rb_tree_node"**
  %164 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %163, align 8, !tbaa !26
  %165 = icmp eq %"struct.std::_Rb_tree_node"* %164, null
  br i1 %165, label %166, label %154, !llvm.loop !27

166:                                              ; preds = %154
  %167 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %155, i64 0, i32 0
  br i1 %159, label %168, label %174

168:                                              ; preds = %166, %149
  %169 = phi %"struct.std::_Rb_tree_node_base"* [ %167, %166 ], [ %129, %149 ]
  %170 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %131, align 8, !tbaa !28
  %171 = icmp eq %"struct.std::_Rb_tree_node_base"* %169, %170
  br i1 %171, label %182, label %172

172:                                              ; preds = %168
  %173 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %169) #20
  br label %174

174:                                              ; preds = %172, %166
  %175 = phi %"struct.std::_Rb_tree_node_base"* [ %169, %172 ], [ %167, %166 ]
  %176 = phi %"struct.std::_Rb_tree_node_base"* [ %173, %172 ], [ %167, %166 ]
  %177 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %176, i64 1, i32 0
  %178 = load i32, i32* %177, align 4, !tbaa !18
  %179 = icmp sge i32 %178, %150
  %180 = icmp eq %"struct.std::_Rb_tree_node_base"* %175, null
  %181 = select i1 %179, i1 true, i1 %180
  br i1 %181, label %202, label %184

182:                                              ; preds = %168
  %183 = icmp eq %"struct.std::_Rb_tree_node_base"* %169, null
  br i1 %183, label %202, label %184

184:                                              ; preds = %174, %182
  %185 = phi %"struct.std::_Rb_tree_node_base"* [ %169, %182 ], [ %175, %174 ]
  %186 = icmp eq %"struct.std::_Rb_tree_node_base"* %185, %129
  br i1 %186, label %191, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %185, i64 1, i32 0
  %189 = load i32, i32* %188, align 4, !tbaa !18
  %190 = icmp slt i32 %150, %189
  br label %191

191:                                              ; preds = %187, %184
  %192 = phi i1 [ true, %184 ], [ %190, %187 ]
  %193 = invoke noalias nonnull i8* @_Znwm(i64 40) #21
          to label %194 unwind label %111

194:                                              ; preds = %191
  %195 = getelementptr inbounds i8, i8* %193, i64 32
  %196 = bitcast i8* %195 to i32*
  %197 = load i32, i32* %151, align 8, !tbaa !18
  store i32 %197, i32* %196, align 4, !tbaa !18
  %198 = bitcast i8* %193 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %192, %"struct.std::_Rb_tree_node_base"* nonnull %198, %"struct.std::_Rb_tree_node_base"* nonnull %185, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %129) #18
  %199 = load i64, i64* %133, align 8, !tbaa !29
  %200 = add i64 %199, 1
  store i64 %200, i64* %133, align 8, !tbaa !29
  %201 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %127, align 16, !tbaa !26
  br label %202

202:                                              ; preds = %194, %182, %174
  %203 = phi %"struct.std::_Rb_tree_node"* [ %201, %194 ], [ %152, %182 ], [ %152, %174 ]
  %204 = getelementptr inbounds [31 x [2 x i32]], [31 x [2 x i32]]* @nex, i64 0, i64 %137, i64 1
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq %"struct.std::_Rb_tree_node"* %203, null
  br i1 %206, label %221, label %207

207:                                              ; preds = %202, %207
  %208 = phi %"struct.std::_Rb_tree_node"* [ %217, %207 ], [ %203, %202 ]
  %209 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %208, i64 0, i32 1
  %210 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %209 to i32*
  %211 = load i32, i32* %210, align 4, !tbaa !18
  %212 = icmp slt i32 %205, %211
  %213 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %208, i64 0, i32 0, i32 2
  %214 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %208, i64 0, i32 0, i32 3
  %215 = select i1 %212, %"struct.std::_Rb_tree_node_base"** %213, %"struct.std::_Rb_tree_node_base"** %214
  %216 = bitcast %"struct.std::_Rb_tree_node_base"** %215 to %"struct.std::_Rb_tree_node"**
  %217 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %216, align 8, !tbaa !26
  %218 = icmp eq %"struct.std::_Rb_tree_node"* %217, null
  br i1 %218, label %219, label %207, !llvm.loop !27

219:                                              ; preds = %207
  %220 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %208, i64 0, i32 0
  br i1 %212, label %221, label %227

221:                                              ; preds = %219, %202
  %222 = phi %"struct.std::_Rb_tree_node_base"* [ %220, %219 ], [ %129, %202 ]
  %223 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %131, align 8, !tbaa !28
  %224 = icmp eq %"struct.std::_Rb_tree_node_base"* %222, %223
  br i1 %224, label %235, label %225

225:                                              ; preds = %221
  %226 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %222) #20
  br label %227

227:                                              ; preds = %225, %219
  %228 = phi %"struct.std::_Rb_tree_node_base"* [ %222, %225 ], [ %220, %219 ]
  %229 = phi %"struct.std::_Rb_tree_node_base"* [ %226, %225 ], [ %220, %219 ]
  %230 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %229, i64 1, i32 0
  %231 = load i32, i32* %230, align 4, !tbaa !18
  %232 = icmp sge i32 %231, %205
  %233 = icmp eq %"struct.std::_Rb_tree_node_base"* %228, null
  %234 = select i1 %232, i1 true, i1 %233
  br i1 %234, label %254, label %237

235:                                              ; preds = %221
  %236 = icmp eq %"struct.std::_Rb_tree_node_base"* %222, null
  br i1 %236, label %254, label %237

237:                                              ; preds = %227, %235
  %238 = phi %"struct.std::_Rb_tree_node_base"* [ %222, %235 ], [ %228, %227 ]
  %239 = icmp eq %"struct.std::_Rb_tree_node_base"* %238, %129
  br i1 %239, label %244, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %238, i64 1, i32 0
  %242 = load i32, i32* %241, align 4, !tbaa !18
  %243 = icmp slt i32 %205, %242
  br label %244

244:                                              ; preds = %240, %237
  %245 = phi i1 [ true, %237 ], [ %243, %240 ]
  %246 = invoke noalias nonnull i8* @_Znwm(i64 40) #21
          to label %247 unwind label %111

247:                                              ; preds = %244
  %248 = getelementptr inbounds i8, i8* %246, i64 32
  %249 = bitcast i8* %248 to i32*
  %250 = load i32, i32* %204, align 4, !tbaa !18
  store i32 %250, i32* %249, align 4, !tbaa !18
  %251 = bitcast i8* %246 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %245, %"struct.std::_Rb_tree_node_base"* nonnull %251, %"struct.std::_Rb_tree_node_base"* nonnull %238, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %129) #18
  %252 = load i64, i64* %133, align 8, !tbaa !29
  %253 = add i64 %252, 1
  store i64 %253, i64* %133, align 8, !tbaa !29
  br label %254

254:                                              ; preds = %247, %235, %227
  %255 = add nuw nsw i64 %137, 1
  %256 = icmp eq i64 %255, 30
  br i1 %256, label %257, label %136, !llvm.loop !30

257:                                              ; preds = %254
  %258 = getelementptr inbounds [101010 x %"class.std::set"], [101010 x %"class.std::set"]* @cand, i64 0, i64 %123
  %259 = getelementptr inbounds %"class.std::set", %"class.std::set"* %258, i64 0, i32 0
  %260 = invoke i64 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %259, i32* nonnull align 4 dereferenceable(4) @N)
          to label %261 unwind label %113

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.std::set", %"class.std::set"* %258, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = getelementptr inbounds i8, i8* %262, i64 24
  %264 = bitcast i8* %263 to %"struct.std::_Rb_tree_node_base"**
  %265 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %264, align 8, !tbaa !28
  %266 = getelementptr inbounds i8, i8* %262, i64 8
  %267 = bitcast i8* %266 to %"struct.std::_Rb_tree_node_base"*
  %268 = icmp eq %"struct.std::_Rb_tree_node_base"* %265, %267
  br i1 %268, label %437, label %269

269:                                              ; preds = %261
  %270 = trunc i64 %123 to i32
  br label %275

271:                                              ; preds = %288
  %272 = icmp eq i32 %294, -1
  br i1 %272, label %437, label %273

273:                                              ; preds = %271
  %274 = trunc i64 %123 to i32
  br label %305

275:                                              ; preds = %269, %288
  %276 = phi i32 [ %294, %288 ], [ -1, %269 ]
  %277 = phi %"struct.std::_Rb_tree_node_base"* [ %295, %288 ], [ %265, %269 ]
  %278 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %277, i64 1, i32 0
  %279 = load i32, i32* %278, align 4, !tbaa !18
  %280 = add nsw i32 %279, 1
  %281 = invoke i32 @_ZN11SegTree_maxIiLi262144EE6getvalEiiiii(%class.SegTree_max* nonnull align 8 dereferenceable(24) @stma, i32 %270, i32 %280, i32 0, i32 262144, i32 1)
          to label %282 unwind label %297

282:                                              ; preds = %275
  %283 = invoke i32 @_ZN11SegTree_minIiLi262144EE6getvalEiiiii(%class.SegTree_min* nonnull align 8 dereferenceable(24) @stmi, i32 %270, i32 %280, i32 0, i32 262144, i32 1)
          to label %284 unwind label %299

284:                                              ; preds = %282
  %285 = invoke i32 @_ZN10SegTree_orIiLi262144EE6getvalEiiiii(%class.SegTree_or* nonnull align 8 dereferenceable(24) @stor, i32 %270, i32 %280, i32 0, i32 262144, i32 1)
          to label %286 unwind label %301

286:                                              ; preds = %284
  %287 = invoke i32 @_ZN11SegTree_andIiLi262144EE6getvalEiiiii(%class.SegTree_and* nonnull align 8 dereferenceable(24) @stand, i32 %270, i32 %280, i32 0, i32 262144, i32 1)
          to label %288 unwind label %303

288:                                              ; preds = %286
  %289 = add i32 %283, %285
  %290 = add i32 %281, %287
  %291 = sub i32 %289, %290
  %292 = load i32, i32* @K, align 4, !tbaa !18
  %293 = icmp slt i32 %291, %292
  %294 = select i1 %293, i32 %276, i32 %279
  %295 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* nonnull %277) #20
  %296 = icmp eq %"struct.std::_Rb_tree_node_base"* %295, %267
  br i1 %296, label %271, label %275

297:                                              ; preds = %275
  %298 = landingpad { i8*, i32 }
          cleanup
  br label %865

299:                                              ; preds = %282
  %300 = landingpad { i8*, i32 }
          cleanup
  br label %865

301:                                              ; preds = %284
  %302 = landingpad { i8*, i32 }
          cleanup
  br label %865

303:                                              ; preds = %286
  %304 = landingpad { i8*, i32 }
          cleanup
  br label %865

305:                                              ; preds = %273, %336
  %306 = phi i32 [ %338, %336 ], [ 19, %273 ]
  %307 = phi i32 [ %337, %336 ], [ %294, %273 ]
  %308 = shl nuw i32 1, %306
  %309 = add nsw i32 %308, %307
  %310 = load i32, i32* @N, align 4, !tbaa !18
  %311 = icmp slt i32 %309, %310
  br i1 %311, label %312, label %336

312:                                              ; preds = %305
  %313 = add nsw i32 %309, 1
  %314 = invoke i32 @_ZN11SegTree_maxIiLi262144EE6getvalEiiiii(%class.SegTree_max* nonnull align 8 dereferenceable(24) @stma, i32 %274, i32 %313, i32 0, i32 262144, i32 1)
          to label %315 unwind label %328

315:                                              ; preds = %312
  %316 = invoke i32 @_ZN11SegTree_minIiLi262144EE6getvalEiiiii(%class.SegTree_min* nonnull align 8 dereferenceable(24) @stmi, i32 %274, i32 %313, i32 0, i32 262144, i32 1)
          to label %317 unwind label %330

317:                                              ; preds = %315
  %318 = invoke i32 @_ZN10SegTree_orIiLi262144EE6getvalEiiiii(%class.SegTree_or* nonnull align 8 dereferenceable(24) @stor, i32 %274, i32 %313, i32 0, i32 262144, i32 1)
          to label %319 unwind label %332

319:                                              ; preds = %317
  %320 = invoke i32 @_ZN11SegTree_andIiLi262144EE6getvalEiiiii(%class.SegTree_and* nonnull align 8 dereferenceable(24) @stand, i32 %274, i32 %313, i32 0, i32 262144, i32 1)
          to label %321 unwind label %334

321:                                              ; preds = %319
  %322 = add i32 %316, %318
  %323 = add i32 %314, %320
  %324 = sub i32 %322, %323
  %325 = load i32, i32* @K, align 4, !tbaa !18
  %326 = icmp slt i32 %324, %325
  %327 = select i1 %326, i32 %307, i32 %309
  br label %336

328:                                              ; preds = %312
  %329 = landingpad { i8*, i32 }
          cleanup
  br label %865

330:                                              ; preds = %315
  %331 = landingpad { i8*, i32 }
          cleanup
  br label %865

332:                                              ; preds = %317
  %333 = landingpad { i8*, i32 }
          cleanup
  br label %865

334:                                              ; preds = %319
  %335 = landingpad { i8*, i32 }
          cleanup
  br label %865

336:                                              ; preds = %305, %321
  %337 = phi i32 [ %307, %305 ], [ %327, %321 ]
  %338 = add nsw i32 %306, -1
  %339 = icmp eq i32 %306, 0
  br i1 %339, label %340, label %305, !llvm.loop !31

340:                                              ; preds = %336
  %341 = trunc i64 %123 to i32
  %342 = sub nsw i32 %337, %341
  %343 = add nsw i32 %342, 1
  %344 = getelementptr inbounds [101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @add, i64 0, i64 %123, i32 0, i32 0, i32 0, i32 1
  %345 = load i32*, i32** %344, align 8, !tbaa !32
  %346 = getelementptr inbounds [101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @add, i64 0, i64 %123, i32 0, i32 0, i32 0, i32 2
  %347 = load i32*, i32** %346, align 8, !tbaa !33
  %348 = icmp eq i32* %345, %347
  br i1 %348, label %351, label %349

349:                                              ; preds = %340
  store i32 %343, i32* %345, align 4, !tbaa !18
  %350 = getelementptr inbounds i32, i32* %345, i64 1
  store i32* %350, i32** %344, align 8, !tbaa !32
  br label %389

351:                                              ; preds = %340
  %352 = getelementptr inbounds [101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @add, i64 0, i64 %123, i32 0, i32 0, i32 0, i32 0
  %353 = load i32*, i32** %352, align 8, !tbaa !3
  %354 = ptrtoint i32* %345 to i64
  %355 = ptrtoint i32* %353 to i64
  %356 = sub i64 %354, %355
  %357 = ashr exact i64 %356, 2
  %358 = icmp eq i64 %356, 9223372036854775804
  br i1 %358, label %359, label %361

359:                                              ; preds = %351
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)) #22
          to label %360 unwind label %441

360:                                              ; preds = %359
  unreachable

361:                                              ; preds = %351
  %362 = icmp eq i64 %356, 0
  %363 = select i1 %362, i64 1, i64 %357
  %364 = add nsw i64 %363, %357
  %365 = icmp ult i64 %364, %357
  %366 = icmp ugt i64 %364, 2305843009213693951
  %367 = or i1 %365, %366
  %368 = select i1 %367, i64 2305843009213693951, i64 %364
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %375, label %370

370:                                              ; preds = %361
  %371 = shl nuw nsw i64 %368, 2
  %372 = invoke noalias nonnull i8* @_Znwm(i64 %371) #21
          to label %373 unwind label %439

373:                                              ; preds = %370
  %374 = bitcast i8* %372 to i32*
  br label %375

375:                                              ; preds = %373, %361
  %376 = phi i32* [ %374, %373 ], [ null, %361 ]
  %377 = getelementptr inbounds i32, i32* %376, i64 %357
  store i32 %343, i32* %377, align 4, !tbaa !18
  %378 = icmp sgt i64 %356, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %375
  %380 = bitcast i32* %376 to i8*
  %381 = bitcast i32* %353 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %380, i8* align 4 %381, i64 %356, i1 false) #18
  br label %382

382:                                              ; preds = %379, %375
  %383 = getelementptr inbounds i32, i32* %377, i64 1
  %384 = icmp eq i32* %353, null
  br i1 %384, label %387, label %385

385:                                              ; preds = %382
  %386 = bitcast i32* %353 to i8*
  call void @_ZdlPv(i8* nonnull %386) #18
  br label %387

387:                                              ; preds = %385, %382
  store i32* %376, i32** %352, align 8, !tbaa !3
  store i32* %383, i32** %344, align 8, !tbaa !32
  %388 = getelementptr inbounds i32, i32* %376, i64 %368
  store i32* %388, i32** %346, align 8, !tbaa !33
  br label %389

389:                                              ; preds = %387, %349
  %390 = add nsw i32 %337, 1
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @del, i64 0, i64 %391, i32 0, i32 0, i32 0, i32 1
  %393 = load i32*, i32** %392, align 8, !tbaa !32
  %394 = getelementptr inbounds [101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @del, i64 0, i64 %391, i32 0, i32 0, i32 0, i32 2
  %395 = load i32*, i32** %394, align 8, !tbaa !33
  %396 = icmp eq i32* %393, %395
  br i1 %396, label %399, label %397

397:                                              ; preds = %389
  store i32 %343, i32* %393, align 4, !tbaa !18
  %398 = getelementptr inbounds i32, i32* %393, i64 1
  store i32* %398, i32** %392, align 8, !tbaa !32
  br label %437

399:                                              ; preds = %389
  %400 = getelementptr inbounds [101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @del, i64 0, i64 %391, i32 0, i32 0, i32 0, i32 0
  %401 = load i32*, i32** %400, align 8, !tbaa !3
  %402 = ptrtoint i32* %393 to i64
  %403 = ptrtoint i32* %401 to i64
  %404 = sub i64 %402, %403
  %405 = ashr exact i64 %404, 2
  %406 = icmp eq i64 %404, 9223372036854775804
  br i1 %406, label %407, label %409

407:                                              ; preds = %399
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)) #22
          to label %408 unwind label %445

408:                                              ; preds = %407
  unreachable

409:                                              ; preds = %399
  %410 = icmp eq i64 %404, 0
  %411 = select i1 %410, i64 1, i64 %405
  %412 = add nsw i64 %411, %405
  %413 = icmp ult i64 %412, %405
  %414 = icmp ugt i64 %412, 2305843009213693951
  %415 = or i1 %413, %414
  %416 = select i1 %415, i64 2305843009213693951, i64 %412
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %423, label %418

418:                                              ; preds = %409
  %419 = shl nuw nsw i64 %416, 2
  %420 = invoke noalias nonnull i8* @_Znwm(i64 %419) #21
          to label %421 unwind label %443

421:                                              ; preds = %418
  %422 = bitcast i8* %420 to i32*
  br label %423

423:                                              ; preds = %421, %409
  %424 = phi i32* [ %422, %421 ], [ null, %409 ]
  %425 = getelementptr inbounds i32, i32* %424, i64 %405
  store i32 %343, i32* %425, align 4, !tbaa !18
  %426 = icmp sgt i64 %404, 0
  br i1 %426, label %427, label %430

427:                                              ; preds = %423
  %428 = bitcast i32* %424 to i8*
  %429 = bitcast i32* %401 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %428, i8* align 4 %429, i64 %404, i1 false) #18
  br label %430

430:                                              ; preds = %427, %423
  %431 = getelementptr inbounds i32, i32* %425, i64 1
  %432 = icmp eq i32* %401, null
  br i1 %432, label %435, label %433

433:                                              ; preds = %430
  %434 = bitcast i32* %401 to i8*
  call void @_ZdlPv(i8* nonnull %434) #18
  br label %435

435:                                              ; preds = %433, %430
  store i32* %424, i32** %400, align 8, !tbaa !3
  store i32* %431, i32** %392, align 8, !tbaa !32
  %436 = getelementptr inbounds i32, i32* %424, i64 %416
  store i32* %436, i32** %394, align 8, !tbaa !33
  br label %437

437:                                              ; preds = %261, %397, %435, %271
  %438 = icmp sgt i64 %122, 1
  br i1 %438, label %121, label %447, !llvm.loop !34

439:                                              ; preds = %370
  %440 = landingpad { i8*, i32 }
          cleanup
  br label %865

441:                                              ; preds = %359
  %442 = landingpad { i8*, i32 }
          cleanup
  br label %865

443:                                              ; preds = %418
  %444 = landingpad { i8*, i32 }
          cleanup
  br label %865

445:                                              ; preds = %407
  %446 = landingpad { i8*, i32 }
          cleanup
  br label %865

447:                                              ; preds = %437, %17
  %448 = getelementptr inbounds %"class.std::map", %"class.std::map"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %448) #18
  %449 = getelementptr inbounds i8, i8* %448, i64 8
  %450 = bitcast i8* %449 to i32*
  store i32 0, i32* %450, align 8, !tbaa !35
  %451 = getelementptr inbounds i8, i8* %448, i64 16
  %452 = bitcast i8* %451 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %452, align 8, !tbaa !8
  %453 = getelementptr inbounds i8, i8* %448, i64 24
  %454 = bitcast i8* %453 to i8**
  store i8* %449, i8** %454, align 8, !tbaa !28
  %455 = getelementptr inbounds i8, i8* %448, i64 32
  %456 = bitcast i8* %455 to i8**
  store i8* %449, i8** %456, align 8, !tbaa !36
  %457 = getelementptr inbounds i8, i8* %448, i64 40
  %458 = bitcast i8* %457 to i64*
  store i64 0, i64* %458, align 8, !tbaa !29
  %459 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %459) #18
  store i32 -1, i32* %5, align 4, !tbaa !18
  %460 = bitcast i8* %451 to %"struct.std::_Rb_tree_node.13"**
  %461 = bitcast i8* %449 to %"struct.std::_Rb_tree_node_base"*
  %462 = getelementptr inbounds %"class.std::map", %"class.std::map"* %4, i64 0, i32 0
  %463 = bitcast %"class.std::tuple"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %463) #18
  %464 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %464, align 8, !tbaa !26, !alias.scope !37
  %465 = getelementptr inbounds %"class.std::tuple.27", %"class.std::tuple.27"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %465) #18
  %466 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOiEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %462, %"struct.std::_Rb_tree_node_base"* nonnull %461, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* nonnull align 8 dereferenceable(8) %1, %"class.std::tuple.27"* nonnull align 1 dereferenceable(1) %2)
          to label %467 unwind label %488

467:                                              ; preds = %447
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %465) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %463) #18
  %468 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %466, i64 1
  %469 = bitcast %"struct.std::_Rb_tree_node_base"* %468 to %"struct.std::pair.10"*
  %470 = getelementptr inbounds %"struct.std::pair.10", %"struct.std::pair.10"* %469, i64 0, i32 1
  store i32 1, i32* %470, align 4, !tbaa !18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %459) #18
  %471 = getelementptr inbounds %"class.std::map", %"class.std::map"* %4, i64 0, i32 0
  %472 = bitcast i8* %453 to %"struct.std::_Rb_tree_node_base"**
  %473 = load i32, i32* @N, align 4, !tbaa !18
  %474 = icmp sgt i32 %473, 0
  br i1 %474, label %475, label %851

475:                                              ; preds = %467, %842
  %476 = phi i64 [ %843, %842 ], [ 0, %467 ]
  %477 = getelementptr inbounds [101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @add, i64 0, i64 %476, i32 0, i32 0, i32 0, i32 0
  %478 = load i32*, i32** %477, align 8, !tbaa !26
  %479 = getelementptr inbounds [101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @add, i64 0, i64 %476, i32 0, i32 0, i32 0, i32 1
  %480 = load i32*, i32** %479, align 8, !tbaa !26
  %481 = icmp eq i32* %478, %480
  br i1 %481, label %482, label %490

482:                                              ; preds = %557, %475
  %483 = getelementptr inbounds [101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @del, i64 0, i64 %476, i32 0, i32 0, i32 0, i32 0
  %484 = load i32*, i32** %483, align 8, !tbaa !26
  %485 = getelementptr inbounds [101010 x %"class.std::vector"], [101010 x %"class.std::vector"]* @del, i64 0, i64 %476, i32 0, i32 0, i32 0, i32 1
  %486 = load i32*, i32** %485, align 8, !tbaa !26
  %487 = icmp eq i32* %484, %486
  br i1 %487, label %804, label %568

488:                                              ; preds = %447
  %489 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %459) #18
  br label %862

490:                                              ; preds = %475, %557
  %491 = phi i32* [ %564, %557 ], [ %478, %475 ]
  %492 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %460, align 8, !tbaa !8
  %493 = load i32, i32* %491, align 4
  %494 = icmp eq %"struct.std::_Rb_tree_node.13"* %492, null
  br i1 %494, label %518, label %495

495:                                              ; preds = %490, %495
  %496 = phi %"struct.std::_Rb_tree_node.13"* [ %508, %495 ], [ %492, %490 ]
  %497 = phi %"struct.std::_Rb_tree_node_base"* [ %505, %495 ], [ %461, %490 ]
  %498 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %496, i64 0, i32 1
  %499 = bitcast %"struct.__gnu_cxx::__aligned_membuf.14"* %498 to i32*
  %500 = load i32, i32* %499, align 4, !tbaa !18
  %501 = icmp slt i32 %500, %493
  %502 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %496, i64 0, i32 0, i32 3
  %503 = getelementptr %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %496, i64 0, i32 0
  %504 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %496, i64 0, i32 0, i32 2
  %505 = select i1 %501, %"struct.std::_Rb_tree_node_base"* %497, %"struct.std::_Rb_tree_node_base"* %503
  %506 = select i1 %501, %"struct.std::_Rb_tree_node_base"** %502, %"struct.std::_Rb_tree_node_base"** %504
  %507 = bitcast %"struct.std::_Rb_tree_node_base"** %506 to %"struct.std::_Rb_tree_node.13"**
  %508 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %507, align 8, !tbaa !26
  %509 = icmp eq %"struct.std::_Rb_tree_node.13"* %508, null
  br i1 %509, label %510, label %495, !llvm.loop !40

510:                                              ; preds = %495
  %511 = icmp eq %"struct.std::_Rb_tree_node_base"* %505, %461
  br i1 %511, label %518, label %512

512:                                              ; preds = %510
  %513 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %497, i64 1, i32 0
  %514 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %503, i64 1, i32 0
  %515 = select i1 %501, i32* %513, i32* %514
  %516 = load i32, i32* %515, align 4, !tbaa !18
  %517 = icmp slt i32 %493, %516
  br i1 %517, label %518, label %557

518:                                              ; preds = %512, %510, %490
  %519 = phi %"struct.std::_Rb_tree_node_base"* [ %505, %512 ], [ %461, %510 ], [ %461, %490 ]
  %520 = invoke noalias nonnull i8* @_Znwm(i64 40) #21
          to label %521 unwind label %566

521:                                              ; preds = %518
  %522 = getelementptr inbounds i8, i8* %520, i64 32
  %523 = bitcast i8* %522 to i32*
  %524 = load i32, i32* %491, align 4, !tbaa !18
  store i32 %524, i32* %523, align 4, !tbaa !41
  %525 = getelementptr inbounds i8, i8* %520, i64 36
  %526 = bitcast i8* %525 to i32*
  store i32 0, i32* %526, align 4, !tbaa !43
  %527 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %471, %"struct.std::_Rb_tree_node_base"* %519, i32* nonnull align 4 dereferenceable(4) %523)
          to label %528 unwind label %546

528:                                              ; preds = %521
  %529 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %527, 0
  %530 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %527, 1
  %531 = icmp eq %"struct.std::_Rb_tree_node_base"* %530, null
  br i1 %531, label %550, label %532

532:                                              ; preds = %528
  %533 = icmp ne %"struct.std::_Rb_tree_node_base"* %529, null
  %534 = icmp eq %"struct.std::_Rb_tree_node_base"* %530, %461
  %535 = select i1 %533, i1 true, i1 %534
  br i1 %535, label %541, label %536

536:                                              ; preds = %532
  %537 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %530, i64 1, i32 0
  %538 = load i32, i32* %523, align 4, !tbaa !18
  %539 = load i32, i32* %537, align 4, !tbaa !18
  %540 = icmp slt i32 %538, %539
  br label %541

541:                                              ; preds = %536, %532
  %542 = phi i1 [ %540, %536 ], [ true, %532 ]
  %543 = bitcast i8* %520 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %542, %"struct.std::_Rb_tree_node_base"* nonnull %543, %"struct.std::_Rb_tree_node_base"* nonnull %530, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %461) #18
  %544 = load i64, i64* %458, align 8, !tbaa !29
  %545 = add i64 %544, 1
  store i64 %545, i64* %458, align 8, !tbaa !29
  br label %557

546:                                              ; preds = %521
  %547 = landingpad { i8*, i32 }
          catch i8* null
  %548 = extractvalue { i8*, i32 } %547, 0
  %549 = call i8* @__cxa_begin_catch(i8* %548) #18
  call void @_ZdlPv(i8* nonnull %520) #18
  invoke void @__cxa_rethrow() #22
          to label %556 unwind label %551

550:                                              ; preds = %528
  call void @_ZdlPv(i8* nonnull %520) #18
  br label %557

551:                                              ; preds = %546
  %552 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %862 unwind label %553

553:                                              ; preds = %551
  %554 = landingpad { i8*, i32 }
          catch i8* null
  %555 = extractvalue { i8*, i32 } %554, 0
  call void @__clang_call_terminate(i8* %555) #19
  unreachable

556:                                              ; preds = %546
  unreachable

557:                                              ; preds = %512, %550, %541
  %558 = phi %"struct.std::_Rb_tree_node_base"* [ %505, %512 ], [ %529, %550 ], [ %543, %541 ]
  %559 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %558, i64 1
  %560 = bitcast %"struct.std::_Rb_tree_node_base"* %559 to %"struct.std::pair.10"*
  %561 = getelementptr inbounds %"struct.std::pair.10", %"struct.std::pair.10"* %560, i64 0, i32 1
  %562 = load i32, i32* %561, align 4, !tbaa !18
  %563 = add nsw i32 %562, 1
  store i32 %563, i32* %561, align 4, !tbaa !18
  %564 = getelementptr inbounds i32, i32* %491, i64 1
  %565 = icmp eq i32* %564, %480
  br i1 %565, label %482, label %490

566:                                              ; preds = %518
  %567 = landingpad { i8*, i32 }
          cleanup
  br label %862

568:                                              ; preds = %482, %801
  %569 = phi i32* [ %802, %801 ], [ %484, %482 ]
  %570 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %460, align 8, !tbaa !8
  %571 = load i32, i32* %569, align 4
  %572 = icmp eq %"struct.std::_Rb_tree_node.13"* %570, null
  br i1 %572, label %596, label %573

573:                                              ; preds = %568, %573
  %574 = phi %"struct.std::_Rb_tree_node.13"* [ %586, %573 ], [ %570, %568 ]
  %575 = phi %"struct.std::_Rb_tree_node_base"* [ %583, %573 ], [ %461, %568 ]
  %576 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %574, i64 0, i32 1
  %577 = bitcast %"struct.__gnu_cxx::__aligned_membuf.14"* %576 to i32*
  %578 = load i32, i32* %577, align 4, !tbaa !18
  %579 = icmp slt i32 %578, %571
  %580 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %574, i64 0, i32 0, i32 3
  %581 = getelementptr %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %574, i64 0, i32 0
  %582 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %574, i64 0, i32 0, i32 2
  %583 = select i1 %579, %"struct.std::_Rb_tree_node_base"* %575, %"struct.std::_Rb_tree_node_base"* %581
  %584 = select i1 %579, %"struct.std::_Rb_tree_node_base"** %580, %"struct.std::_Rb_tree_node_base"** %582
  %585 = bitcast %"struct.std::_Rb_tree_node_base"** %584 to %"struct.std::_Rb_tree_node.13"**
  %586 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %585, align 8, !tbaa !26
  %587 = icmp eq %"struct.std::_Rb_tree_node.13"* %586, null
  br i1 %587, label %588, label %573, !llvm.loop !40

588:                                              ; preds = %573
  %589 = icmp eq %"struct.std::_Rb_tree_node_base"* %583, %461
  br i1 %589, label %596, label %590

590:                                              ; preds = %588
  %591 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %575, i64 1, i32 0
  %592 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %581, i64 1, i32 0
  %593 = select i1 %579, i32* %591, i32* %592
  %594 = load i32, i32* %593, align 4, !tbaa !18
  %595 = icmp slt i32 %571, %594
  br i1 %595, label %596, label %635

596:                                              ; preds = %590, %588, %568
  %597 = phi %"struct.std::_Rb_tree_node_base"* [ %583, %590 ], [ %461, %588 ], [ %461, %568 ]
  %598 = invoke noalias nonnull i8* @_Znwm(i64 40) #21
          to label %599 unwind label %799

599:                                              ; preds = %596
  %600 = getelementptr inbounds i8, i8* %598, i64 32
  %601 = bitcast i8* %600 to i32*
  %602 = load i32, i32* %569, align 4, !tbaa !18
  store i32 %602, i32* %601, align 4, !tbaa !41
  %603 = getelementptr inbounds i8, i8* %598, i64 36
  %604 = bitcast i8* %603 to i32*
  store i32 0, i32* %604, align 4, !tbaa !43
  %605 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %471, %"struct.std::_Rb_tree_node_base"* %597, i32* nonnull align 4 dereferenceable(4) %601)
          to label %606 unwind label %624

606:                                              ; preds = %599
  %607 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %605, 0
  %608 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %605, 1
  %609 = icmp eq %"struct.std::_Rb_tree_node_base"* %608, null
  br i1 %609, label %628, label %610

610:                                              ; preds = %606
  %611 = icmp ne %"struct.std::_Rb_tree_node_base"* %607, null
  %612 = icmp eq %"struct.std::_Rb_tree_node_base"* %608, %461
  %613 = select i1 %611, i1 true, i1 %612
  br i1 %613, label %619, label %614

614:                                              ; preds = %610
  %615 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %608, i64 1, i32 0
  %616 = load i32, i32* %601, align 4, !tbaa !18
  %617 = load i32, i32* %615, align 4, !tbaa !18
  %618 = icmp slt i32 %616, %617
  br label %619

619:                                              ; preds = %614, %610
  %620 = phi i1 [ %618, %614 ], [ true, %610 ]
  %621 = bitcast i8* %598 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %620, %"struct.std::_Rb_tree_node_base"* nonnull %621, %"struct.std::_Rb_tree_node_base"* nonnull %608, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %461) #18
  %622 = load i64, i64* %458, align 8, !tbaa !29
  %623 = add i64 %622, 1
  store i64 %623, i64* %458, align 8, !tbaa !29
  br label %635

624:                                              ; preds = %599
  %625 = landingpad { i8*, i32 }
          catch i8* null
  %626 = extractvalue { i8*, i32 } %625, 0
  %627 = call i8* @__cxa_begin_catch(i8* %626) #18
  call void @_ZdlPv(i8* nonnull %598) #18
  invoke void @__cxa_rethrow() #22
          to label %634 unwind label %629

628:                                              ; preds = %606
  call void @_ZdlPv(i8* nonnull %598) #18
  br label %635

629:                                              ; preds = %624
  %630 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %862 unwind label %631

631:                                              ; preds = %629
  %632 = landingpad { i8*, i32 }
          catch i8* null
  %633 = extractvalue { i8*, i32 } %632, 0
  call void @__clang_call_terminate(i8* %633) #19
  unreachable

634:                                              ; preds = %624
  unreachable

635:                                              ; preds = %590, %628, %619
  %636 = phi %"struct.std::_Rb_tree_node_base"* [ %583, %590 ], [ %607, %628 ], [ %621, %619 ]
  %637 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %636, i64 1
  %638 = bitcast %"struct.std::_Rb_tree_node_base"* %637 to %"struct.std::pair.10"*
  %639 = getelementptr inbounds %"struct.std::pair.10", %"struct.std::pair.10"* %638, i64 0, i32 1
  %640 = load i32, i32* %639, align 4, !tbaa !18
  %641 = add nsw i32 %640, -1
  store i32 %641, i32* %639, align 4, !tbaa !18
  %642 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %460, align 8, !tbaa !8
  %643 = load i32, i32* %569, align 4
  %644 = icmp eq %"struct.std::_Rb_tree_node.13"* %642, null
  br i1 %644, label %668, label %645

645:                                              ; preds = %635, %645
  %646 = phi %"struct.std::_Rb_tree_node.13"* [ %658, %645 ], [ %642, %635 ]
  %647 = phi %"struct.std::_Rb_tree_node_base"* [ %655, %645 ], [ %461, %635 ]
  %648 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %646, i64 0, i32 1
  %649 = bitcast %"struct.__gnu_cxx::__aligned_membuf.14"* %648 to i32*
  %650 = load i32, i32* %649, align 4, !tbaa !18
  %651 = icmp slt i32 %650, %643
  %652 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %646, i64 0, i32 0, i32 3
  %653 = getelementptr %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %646, i64 0, i32 0
  %654 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %646, i64 0, i32 0, i32 2
  %655 = select i1 %651, %"struct.std::_Rb_tree_node_base"* %647, %"struct.std::_Rb_tree_node_base"* %653
  %656 = select i1 %651, %"struct.std::_Rb_tree_node_base"** %652, %"struct.std::_Rb_tree_node_base"** %654
  %657 = bitcast %"struct.std::_Rb_tree_node_base"** %656 to %"struct.std::_Rb_tree_node.13"**
  %658 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %657, align 8, !tbaa !26
  %659 = icmp eq %"struct.std::_Rb_tree_node.13"* %658, null
  br i1 %659, label %660, label %645, !llvm.loop !40

660:                                              ; preds = %645
  %661 = icmp eq %"struct.std::_Rb_tree_node_base"* %655, %461
  br i1 %661, label %668, label %662

662:                                              ; preds = %660
  %663 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %647, i64 1, i32 0
  %664 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %653, i64 1, i32 0
  %665 = select i1 %651, i32* %663, i32* %664
  %666 = load i32, i32* %665, align 4, !tbaa !18
  %667 = icmp slt i32 %643, %666
  br i1 %667, label %668, label %707

668:                                              ; preds = %662, %660, %635
  %669 = phi %"struct.std::_Rb_tree_node_base"* [ %655, %662 ], [ %461, %660 ], [ %461, %635 ]
  %670 = invoke noalias nonnull i8* @_Znwm(i64 40) #21
          to label %671 unwind label %799

671:                                              ; preds = %668
  %672 = getelementptr inbounds i8, i8* %670, i64 32
  %673 = bitcast i8* %672 to i32*
  %674 = load i32, i32* %569, align 4, !tbaa !18
  store i32 %674, i32* %673, align 4, !tbaa !41
  %675 = getelementptr inbounds i8, i8* %670, i64 36
  %676 = bitcast i8* %675 to i32*
  store i32 0, i32* %676, align 4, !tbaa !43
  %677 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %471, %"struct.std::_Rb_tree_node_base"* %669, i32* nonnull align 4 dereferenceable(4) %673)
          to label %678 unwind label %696

678:                                              ; preds = %671
  %679 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %677, 0
  %680 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %677, 1
  %681 = icmp eq %"struct.std::_Rb_tree_node_base"* %680, null
  br i1 %681, label %700, label %682

682:                                              ; preds = %678
  %683 = icmp ne %"struct.std::_Rb_tree_node_base"* %679, null
  %684 = icmp eq %"struct.std::_Rb_tree_node_base"* %680, %461
  %685 = select i1 %683, i1 true, i1 %684
  br i1 %685, label %691, label %686

686:                                              ; preds = %682
  %687 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %680, i64 1, i32 0
  %688 = load i32, i32* %673, align 4, !tbaa !18
  %689 = load i32, i32* %687, align 4, !tbaa !18
  %690 = icmp slt i32 %688, %689
  br label %691

691:                                              ; preds = %686, %682
  %692 = phi i1 [ %690, %686 ], [ true, %682 ]
  %693 = bitcast i8* %670 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %692, %"struct.std::_Rb_tree_node_base"* nonnull %693, %"struct.std::_Rb_tree_node_base"* nonnull %680, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %461) #18
  %694 = load i64, i64* %458, align 8, !tbaa !29
  %695 = add i64 %694, 1
  store i64 %695, i64* %458, align 8, !tbaa !29
  br label %707

696:                                              ; preds = %671
  %697 = landingpad { i8*, i32 }
          catch i8* null
  %698 = extractvalue { i8*, i32 } %697, 0
  %699 = call i8* @__cxa_begin_catch(i8* %698) #18
  call void @_ZdlPv(i8* nonnull %670) #18
  invoke void @__cxa_rethrow() #22
          to label %706 unwind label %701

700:                                              ; preds = %678
  call void @_ZdlPv(i8* nonnull %670) #18
  br label %707

701:                                              ; preds = %696
  %702 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %862 unwind label %703

703:                                              ; preds = %701
  %704 = landingpad { i8*, i32 }
          catch i8* null
  %705 = extractvalue { i8*, i32 } %704, 0
  call void @__clang_call_terminate(i8* %705) #19
  unreachable

706:                                              ; preds = %696
  unreachable

707:                                              ; preds = %662, %700, %691
  %708 = phi %"struct.std::_Rb_tree_node_base"* [ %655, %662 ], [ %679, %700 ], [ %693, %691 ]
  %709 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %708, i64 1
  %710 = bitcast %"struct.std::_Rb_tree_node_base"* %709 to %"struct.std::pair.10"*
  %711 = getelementptr inbounds %"struct.std::pair.10", %"struct.std::pair.10"* %710, i64 0, i32 1
  %712 = load i32, i32* %711, align 4, !tbaa !18
  %713 = icmp eq i32 %712, 0
  br i1 %713, label %714, label %801

714:                                              ; preds = %707
  %715 = load i32, i32* %569, align 4
  %716 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %460, align 8, !tbaa !26
  %717 = icmp eq %"struct.std::_Rb_tree_node.13"* %716, null
  br i1 %717, label %777, label %718

718:                                              ; preds = %714, %771
  %719 = phi %"struct.std::_Rb_tree_node.13"* [ %775, %771 ], [ %716, %714 ]
  %720 = phi %"struct.std::_Rb_tree_node_base"* [ %772, %771 ], [ %461, %714 ]
  %721 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %719, i64 0, i32 1
  %722 = bitcast %"struct.__gnu_cxx::__aligned_membuf.14"* %721 to i32*
  %723 = load i32, i32* %722, align 4, !tbaa !18
  %724 = icmp slt i32 %723, %715
  br i1 %724, label %725, label %727

725:                                              ; preds = %718
  %726 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %719, i64 0, i32 0, i32 3
  br label %771

727:                                              ; preds = %718
  %728 = icmp slt i32 %715, %723
  %729 = getelementptr %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %719, i64 0, i32 0
  %730 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %719, i64 0, i32 0, i32 2
  br i1 %728, label %771, label %731

731:                                              ; preds = %727
  %732 = bitcast %"struct.std::_Rb_tree_node_base"** %730 to %"struct.std::_Rb_tree_node.13"**
  %733 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %732, align 8, !tbaa !44
  %734 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %719, i64 0, i32 0, i32 3
  %735 = bitcast %"struct.std::_Rb_tree_node_base"** %734 to %"struct.std::_Rb_tree_node.13"**
  %736 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %735, align 8, !tbaa !45
  %737 = icmp eq %"struct.std::_Rb_tree_node.13"* %733, null
  br i1 %737, label %753, label %738

738:                                              ; preds = %731, %738
  %739 = phi %"struct.std::_Rb_tree_node.13"* [ %751, %738 ], [ %733, %731 ]
  %740 = phi %"struct.std::_Rb_tree_node_base"* [ %748, %738 ], [ %729, %731 ]
  %741 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %739, i64 0, i32 1
  %742 = bitcast %"struct.__gnu_cxx::__aligned_membuf.14"* %741 to i32*
  %743 = load i32, i32* %742, align 4, !tbaa !18
  %744 = icmp slt i32 %743, %715
  %745 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %739, i64 0, i32 0, i32 3
  %746 = getelementptr %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %739, i64 0, i32 0
  %747 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %739, i64 0, i32 0, i32 2
  %748 = select i1 %744, %"struct.std::_Rb_tree_node_base"* %740, %"struct.std::_Rb_tree_node_base"* %746
  %749 = select i1 %744, %"struct.std::_Rb_tree_node_base"** %745, %"struct.std::_Rb_tree_node_base"** %747
  %750 = bitcast %"struct.std::_Rb_tree_node_base"** %749 to %"struct.std::_Rb_tree_node.13"**
  %751 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %750, align 8, !tbaa !26
  %752 = icmp eq %"struct.std::_Rb_tree_node.13"* %751, null
  br i1 %752, label %753, label %738, !llvm.loop !40

753:                                              ; preds = %738, %731
  %754 = phi %"struct.std::_Rb_tree_node_base"* [ %729, %731 ], [ %748, %738 ]
  %755 = icmp eq %"struct.std::_Rb_tree_node.13"* %736, null
  br i1 %755, label %777, label %756

756:                                              ; preds = %753, %756
  %757 = phi %"struct.std::_Rb_tree_node.13"* [ %769, %756 ], [ %736, %753 ]
  %758 = phi %"struct.std::_Rb_tree_node_base"* [ %766, %756 ], [ %720, %753 ]
  %759 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %757, i64 0, i32 1
  %760 = bitcast %"struct.__gnu_cxx::__aligned_membuf.14"* %759 to i32*
  %761 = load i32, i32* %760, align 4, !tbaa !18
  %762 = icmp slt i32 %715, %761
  %763 = getelementptr %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %757, i64 0, i32 0
  %764 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %757, i64 0, i32 0, i32 2
  %765 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %757, i64 0, i32 0, i32 3
  %766 = select i1 %762, %"struct.std::_Rb_tree_node_base"* %763, %"struct.std::_Rb_tree_node_base"* %758
  %767 = select i1 %762, %"struct.std::_Rb_tree_node_base"** %764, %"struct.std::_Rb_tree_node_base"** %765
  %768 = bitcast %"struct.std::_Rb_tree_node_base"** %767 to %"struct.std::_Rb_tree_node.13"**
  %769 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %768, align 8, !tbaa !26
  %770 = icmp eq %"struct.std::_Rb_tree_node.13"* %769, null
  br i1 %770, label %777, label %756, !llvm.loop !46

771:                                              ; preds = %727, %725
  %772 = phi %"struct.std::_Rb_tree_node_base"* [ %720, %725 ], [ %729, %727 ]
  %773 = phi %"struct.std::_Rb_tree_node_base"** [ %726, %725 ], [ %730, %727 ]
  %774 = bitcast %"struct.std::_Rb_tree_node_base"** %773 to %"struct.std::_Rb_tree_node.13"**
  %775 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %774, align 8, !tbaa !26
  %776 = icmp eq %"struct.std::_Rb_tree_node.13"* %775, null
  br i1 %776, label %777, label %718, !llvm.loop !47

777:                                              ; preds = %771, %756, %753, %714
  %778 = phi %"struct.std::_Rb_tree_node_base"* [ %754, %753 ], [ %461, %714 ], [ %754, %756 ], [ %772, %771 ]
  %779 = phi %"struct.std::_Rb_tree_node_base"* [ %720, %753 ], [ %461, %714 ], [ %766, %756 ], [ %772, %771 ]
  %780 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %472, align 8, !tbaa !28
  %781 = icmp eq %"struct.std::_Rb_tree_node_base"* %780, %778
  %782 = icmp eq %"struct.std::_Rb_tree_node_base"* %779, %461
  %783 = select i1 %781, i1 %782, i1 false
  br i1 %783, label %784, label %789

784:                                              ; preds = %777
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %471, %"struct.std::_Rb_tree_node.13"* %716)
          to label %788 unwind label %785

785:                                              ; preds = %784
  %786 = landingpad { i8*, i32 }
          catch i8* null
  %787 = extractvalue { i8*, i32 } %786, 0
  call void @__clang_call_terminate(i8* %787) #19
  unreachable

788:                                              ; preds = %784
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %452, align 8, !tbaa !8
  store i8* %449, i8** %454, align 8, !tbaa !28
  store i8* %449, i8** %456, align 8, !tbaa !36
  store i64 0, i64* %458, align 8, !tbaa !29
  br label %801

789:                                              ; preds = %777
  %790 = icmp eq %"struct.std::_Rb_tree_node_base"* %778, %779
  br i1 %790, label %801, label %791

791:                                              ; preds = %789, %791
  %792 = phi %"struct.std::_Rb_tree_node_base"* [ %793, %791 ], [ %778, %789 ]
  %793 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %792) #20
  %794 = call %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"* %792, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %461) #18
  %795 = bitcast %"struct.std::_Rb_tree_node_base"* %794 to i8*
  call void @_ZdlPv(i8* %795) #18
  %796 = load i64, i64* %458, align 8, !tbaa !29
  %797 = add i64 %796, -1
  store i64 %797, i64* %458, align 8, !tbaa !29
  %798 = icmp eq %"struct.std::_Rb_tree_node_base"* %793, %779
  br i1 %798, label %801, label %791, !llvm.loop !48

799:                                              ; preds = %668, %596
  %800 = landingpad { i8*, i32 }
          cleanup
  br label %862

801:                                              ; preds = %791, %788, %789, %707
  %802 = getelementptr inbounds i32, i32* %569, i64 1
  %803 = icmp eq i32* %802, %486
  br i1 %803, label %804, label %568

804:                                              ; preds = %801, %482
  %805 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* nonnull %461) #20
  %806 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %805, i64 1, i32 0
  %807 = load i32, i32* %806, align 4, !tbaa !41
  %808 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %807)
          to label %809 unwind label %847

809:                                              ; preds = %804
  %810 = bitcast %"class.std::basic_ostream"* %808 to i8**
  %811 = load i8*, i8** %810, align 8, !tbaa !49
  %812 = getelementptr i8, i8* %811, i64 -24
  %813 = bitcast i8* %812 to i64*
  %814 = load i64, i64* %813, align 8
  %815 = bitcast %"class.std::basic_ostream"* %808 to i8*
  %816 = add nsw i64 %814, 240
  %817 = getelementptr inbounds i8, i8* %815, i64 %816
  %818 = bitcast i8* %817 to %"class.std::ctype"**
  %819 = load %"class.std::ctype"*, %"class.std::ctype"** %818, align 8, !tbaa !51
  %820 = icmp eq %"class.std::ctype"* %819, null
  br i1 %820, label %821, label %823

821:                                              ; preds = %809
  invoke void @_ZSt16__throw_bad_castv() #22
          to label %822 unwind label %849

822:                                              ; preds = %821
  unreachable

823:                                              ; preds = %809
  %824 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %819, i64 0, i32 8
  %825 = load i8, i8* %824, align 8, !tbaa !54
  %826 = icmp eq i8 %825, 0
  br i1 %826, label %830, label %827

827:                                              ; preds = %823
  %828 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %819, i64 0, i32 9, i64 10
  %829 = load i8, i8* %828, align 1, !tbaa !17
  br label %837

830:                                              ; preds = %823
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %819)
          to label %831 unwind label %847

831:                                              ; preds = %830
  %832 = bitcast %"class.std::ctype"* %819 to i8 (%"class.std::ctype"*, i8)***
  %833 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %832, align 8, !tbaa !49
  %834 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %833, i64 6
  %835 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %834, align 8
  %836 = invoke signext i8 %835(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %819, i8 signext 10)
          to label %837 unwind label %847

837:                                              ; preds = %831, %827
  %838 = phi i8 [ %829, %827 ], [ %836, %831 ]
  %839 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %808, i8 signext %838)
          to label %840 unwind label %847

840:                                              ; preds = %837
  %841 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %839)
          to label %842 unwind label %847

842:                                              ; preds = %840
  %843 = add nuw nsw i64 %476, 1
  %844 = load i32, i32* @N, align 4, !tbaa !18
  %845 = sext i32 %844 to i64
  %846 = icmp slt i64 %843, %845
  br i1 %846, label %475, label %851, !llvm.loop !56

847:                                              ; preds = %804, %830, %831, %837, %840
  %848 = landingpad { i8*, i32 }
          cleanup
  br label %862

849:                                              ; preds = %821
  %850 = landingpad { i8*, i32 }
          cleanup
  br label %862

851:                                              ; preds = %842, %467
  %852 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %460, align 8, !tbaa !8
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %471, %"struct.std::_Rb_tree_node.13"* %852)
          to label %856 unwind label %853

853:                                              ; preds = %851
  %854 = landingpad { i8*, i32 }
          catch i8* null
  %855 = extractvalue { i8*, i32 } %854, 0
  call void @__clang_call_terminate(i8* %855) #19
  unreachable

856:                                              ; preds = %851
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %448) #18
  %857 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %858 = load i8*, i8** %857, align 8, !tbaa !57
  %859 = icmp eq i8* %858, %10
  br i1 %859, label %861, label %860

860:                                              ; preds = %856
  call void @_ZdlPv(i8* %858) #18
  br label %861

861:                                              ; preds = %856, %860
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #18
  ret void

862:                                              ; preds = %847, %849, %629, %701, %799, %566, %551, %488
  %863 = phi { i8*, i32 } [ %489, %488 ], [ %567, %566 ], [ %552, %551 ], [ %630, %629 ], [ %800, %799 ], [ %702, %701 ], [ %848, %847 ], [ %850, %849 ]
  %864 = getelementptr inbounds %"class.std::map", %"class.std::map"* %4, i64 0, i32 0
  call void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EED2Ev(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %864) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %448) #18
  br label %865

865:                                              ; preds = %443, %445, %439, %441, %111, %115, %117, %113, %297, %301, %303, %299, %328, %332, %334, %330, %862
  %866 = phi { i8*, i32 } [ %863, %862 ], [ %329, %328 ], [ %331, %330 ], [ %335, %334 ], [ %333, %332 ], [ %298, %297 ], [ %300, %299 ], [ %304, %303 ], [ %302, %301 ], [ %112, %111 ], [ %114, %113 ], [ %116, %115 ], [ %118, %117 ], [ %440, %439 ], [ %442, %441 ], [ %444, %443 ], [ %446, %445 ]
  %867 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %868 = load i8*, i8** %867, align 8, !tbaa !57
  %869 = icmp eq i8* %868, %10
  br i1 %869, label %871, label %870

870:                                              ; preds = %865
  call void @_ZdlPv(i8* %868) #18
  br label %871

871:                                              ; preds = %865, %870
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #18
  resume { i8*, i32 } %866
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i32 @_ZN11SegTree_maxIiLi262144EE6getvalEiiiii(%class.SegTree_max* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #8 comdat align 2 {
  %7 = icmp sgt i32 %4, %1
  %8 = icmp sgt i32 %2, %3
  %9 = select i1 %7, i1 %8, i1 false
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = icmp sgt i32 %1, %3
  %12 = icmp sgt i32 %4, %2
  %13 = select i1 %11, i1 true, i1 %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = sext i32 %5 to i64
  %16 = getelementptr inbounds %class.SegTree_max, %class.SegTree_max* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8, !tbaa !3
  %18 = getelementptr inbounds i32, i32* %17, i64 %15
  %19 = load i32, i32* %18, align 4, !tbaa !18
  br label %20

20:                                               ; preds = %14, %6, %22
  %21 = phi i32 [ %30, %22 ], [ %19, %14 ], [ 0, %6 ]
  ret i32 %21

22:                                               ; preds = %10
  %23 = add nsw i32 %4, %3
  %24 = sdiv i32 %23, 2
  %25 = shl nsw i32 %5, 1
  %26 = tail call i32 @_ZN11SegTree_maxIiLi262144EE6getvalEiiiii(%class.SegTree_max* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %3, i32 %24, i32 %25)
  %27 = or i32 %25, 1
  %28 = tail call i32 @_ZN11SegTree_maxIiLi262144EE6getvalEiiiii(%class.SegTree_max* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %24, i32 %4, i32 %27)
  %29 = icmp slt i32 %26, %28
  %30 = select i1 %29, i32 %28, i32 %26
  br label %20
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i32 @_ZN11SegTree_minIiLi262144EE6getvalEiiiii(%class.SegTree_min* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #8 comdat align 2 {
  %7 = icmp sgt i32 %4, %1
  %8 = icmp sgt i32 %2, %3
  %9 = select i1 %7, i1 %8, i1 false
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = icmp sgt i32 %1, %3
  %12 = icmp sgt i32 %4, %2
  %13 = select i1 %11, i1 true, i1 %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = sext i32 %5 to i64
  %16 = getelementptr inbounds %class.SegTree_min, %class.SegTree_min* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8, !tbaa !3
  %18 = getelementptr inbounds i32, i32* %17, i64 %15
  %19 = load i32, i32* %18, align 4, !tbaa !18
  br label %20

20:                                               ; preds = %14, %6, %22
  %21 = phi i32 [ %30, %22 ], [ %19, %14 ], [ 1073741824, %6 ]
  ret i32 %21

22:                                               ; preds = %10
  %23 = add nsw i32 %4, %3
  %24 = sdiv i32 %23, 2
  %25 = shl nsw i32 %5, 1
  %26 = tail call i32 @_ZN11SegTree_minIiLi262144EE6getvalEiiiii(%class.SegTree_min* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %3, i32 %24, i32 %25)
  %27 = or i32 %25, 1
  %28 = tail call i32 @_ZN11SegTree_minIiLi262144EE6getvalEiiiii(%class.SegTree_min* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %24, i32 %4, i32 %27)
  %29 = icmp slt i32 %28, %26
  %30 = select i1 %29, i32 %28, i32 %26
  br label %20
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i32 @_ZN10SegTree_orIiLi262144EE6getvalEiiiii(%class.SegTree_or* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #8 comdat align 2 {
  %7 = icmp sgt i32 %4, %1
  %8 = icmp sgt i32 %2, %3
  %9 = select i1 %7, i1 %8, i1 false
  br i1 %9, label %10, label %42

10:                                               ; preds = %6
  %11 = icmp sgt i32 %4, %2
  br i1 %11, label %12, label %23

12:                                               ; preds = %10, %12
  %13 = phi i32 [ %20, %12 ], [ %5, %10 ]
  %14 = phi i32 [ %17, %12 ], [ %3, %10 ]
  %15 = phi i32 [ %21, %12 ], [ 0, %10 ]
  %16 = add nsw i32 %14, %4
  %17 = sdiv i32 %16, 2
  %18 = shl nsw i32 %13, 1
  %19 = tail call i32 @_ZN10SegTree_orIiLi262144EE6getvalEiiiii(%class.SegTree_or* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %14, i32 %17, i32 %18)
  %20 = or i32 %18, 1
  %21 = or i32 %19, %15
  %22 = icmp slt i32 %17, %2
  br i1 %22, label %12, label %42

23:                                               ; preds = %10, %34
  %24 = phi i32 [ %39, %34 ], [ %5, %10 ]
  %25 = phi i32 [ %36, %34 ], [ %3, %10 ]
  %26 = phi i32 [ %40, %34 ], [ 0, %10 ]
  %27 = icmp slt i32 %25, %1
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = sext i32 %24 to i64
  %30 = getelementptr inbounds %class.SegTree_or, %class.SegTree_or* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8, !tbaa !3
  %32 = getelementptr inbounds i32, i32* %31, i64 %29
  %33 = load i32, i32* %32, align 4, !tbaa !18
  br label %42

34:                                               ; preds = %23
  %35 = add nsw i32 %25, %4
  %36 = sdiv i32 %35, 2
  %37 = shl nsw i32 %24, 1
  %38 = tail call i32 @_ZN10SegTree_orIiLi262144EE6getvalEiiiii(%class.SegTree_or* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %25, i32 %36, i32 %37)
  %39 = or i32 %37, 1
  %40 = or i32 %38, %26
  %41 = icmp slt i32 %36, %2
  br i1 %41, label %23, label %42

42:                                               ; preds = %34, %12, %6, %28
  %43 = phi i32 [ %26, %28 ], [ 0, %6 ], [ %21, %12 ], [ %40, %34 ]
  %44 = phi i32 [ %33, %28 ], [ 0, %6 ], [ 0, %12 ], [ 0, %34 ]
  %45 = or i32 %44, %43
  ret i32 %45
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i32 @_ZN11SegTree_andIiLi262144EE6getvalEiiiii(%class.SegTree_and* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #8 comdat align 2 {
  %7 = icmp sgt i32 %4, %1
  %8 = icmp sgt i32 %2, %3
  %9 = select i1 %7, i1 %8, i1 false
  br i1 %9, label %10, label %42

10:                                               ; preds = %6
  %11 = icmp sgt i32 %4, %2
  br i1 %11, label %12, label %23

12:                                               ; preds = %10, %12
  %13 = phi i32 [ %20, %12 ], [ %5, %10 ]
  %14 = phi i32 [ %17, %12 ], [ %3, %10 ]
  %15 = phi i32 [ %21, %12 ], [ -1, %10 ]
  %16 = add nsw i32 %14, %4
  %17 = sdiv i32 %16, 2
  %18 = shl nsw i32 %13, 1
  %19 = tail call i32 @_ZN11SegTree_andIiLi262144EE6getvalEiiiii(%class.SegTree_and* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %14, i32 %17, i32 %18)
  %20 = or i32 %18, 1
  %21 = and i32 %19, %15
  %22 = icmp slt i32 %17, %2
  br i1 %22, label %12, label %42

23:                                               ; preds = %10, %34
  %24 = phi i32 [ %39, %34 ], [ %5, %10 ]
  %25 = phi i32 [ %36, %34 ], [ %3, %10 ]
  %26 = phi i32 [ %40, %34 ], [ -1, %10 ]
  %27 = icmp slt i32 %25, %1
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = sext i32 %24 to i64
  %30 = getelementptr inbounds %class.SegTree_and, %class.SegTree_and* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8, !tbaa !3
  %32 = getelementptr inbounds i32, i32* %31, i64 %29
  %33 = load i32, i32* %32, align 4, !tbaa !18
  br label %42

34:                                               ; preds = %23
  %35 = add nsw i32 %25, %4
  %36 = sdiv i32 %35, 2
  %37 = shl nsw i32 %24, 1
  %38 = tail call i32 @_ZN11SegTree_andIiLi262144EE6getvalEiiiii(%class.SegTree_and* nonnull align 8 dereferenceable(24) %0, i32 %1, i32 %2, i32 %25, i32 %36, i32 %37)
  %39 = or i32 %37, 1
  %40 = and i32 %38, %26
  %41 = icmp slt i32 %36, %2
  br i1 %41, label %23, label %42

42:                                               ; preds = %34, %12, %6, %28
  %43 = phi i32 [ %26, %28 ], [ -1, %6 ], [ %21, %12 ], [ %40, %34 ]
  %44 = phi i32 [ %33, %28 ], [ 2147483647, %6 ], [ 2147483647, %12 ], [ 2147483647, %34 ]
  %45 = and i32 %44, %43
  ret i32 %45
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

; Function Attrs: norecurse uwtable
define dso_local i32 @main(i32 %0, i8** nocapture readonly %1) local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !13
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %7, align 8, !tbaa !15
  %8 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %8, align 8, !tbaa !17
  %9 = icmp eq i32 %0, 1
  br i1 %9, label %10, label %22

10:                                               ; preds = %2
  %11 = invoke zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
          to label %12 unwind label %20

12:                                               ; preds = %10
  %13 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8, !tbaa !49
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, 216
  %18 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %17
  %19 = bitcast i8* %18 to %"class.std::basic_ostream"**
  store %"class.std::basic_ostream"* null, %"class.std::basic_ostream"** %19, align 8, !tbaa !58
  br label %29

20:                                               ; preds = %10
  %21 = landingpad { i8*, i32 }
          cleanup
  br label %94

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %25 = icmp sgt i32 %0, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = add nsw i32 %0, -1
  %28 = zext i32 %27 to i64
  br label %33

29:                                               ; preds = %57, %12, %22
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %31 = load i64, i64* %7, align 8, !tbaa !15
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %81, label %67

33:                                               ; preds = %26, %57
  %34 = phi i64 [ 0, %26 ], [ %35, %57 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i8*, i8** %1, i64 %35
  %37 = load i8*, i8** %36, align 8, !tbaa !26
  %38 = call i64 @strlen(i8* noundef nonnull dereferenceable(1) %37) #18
  %39 = load i64, i64* %7, align 8, !tbaa !15
  %40 = sub i64 4611686018427387903, %39
  %41 = icmp ult i64 %40, %38
  br i1 %41, label %42, label %44

42:                                               ; preds = %33
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #22
          to label %43 unwind label %65

43:                                               ; preds = %42
  unreachable

44:                                               ; preds = %33
  %45 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i8* %37, i64 %38)
          to label %46 unwind label %63

46:                                               ; preds = %44
  %47 = load i64, i64* %7, align 8, !tbaa !15
  %48 = add i64 %47, 1
  %49 = load i8*, i8** %23, align 8, !tbaa !57
  %50 = icmp eq i8* %49, %8
  %51 = load i64, i64* %24, align 8
  %52 = select i1 %50, i64 15, i64 %51
  %53 = icmp ugt i64 %48, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i64 %47, i64 0, i8* null, i64 1)
          to label %55 unwind label %63

55:                                               ; preds = %54
  %56 = load i8*, i8** %23, align 8, !tbaa !57
  br label %57

57:                                               ; preds = %46, %55
  %58 = phi i8* [ %56, %55 ], [ %49, %46 ]
  %59 = getelementptr inbounds i8, i8* %58, i64 %47
  store i8 10, i8* %59, align 1, !tbaa !17
  store i64 %48, i64* %7, align 8, !tbaa !15
  %60 = load i8*, i8** %23, align 8, !tbaa !57
  %61 = getelementptr inbounds i8, i8* %60, i64 %48
  store i8 0, i8* %61, align 1, !tbaa !17
  %62 = icmp eq i64 %35, %28
  br i1 %62, label %29, label %33

63:                                               ; preds = %44, %54
  %64 = landingpad { i8*, i32 }
          cleanup
  br label %94

65:                                               ; preds = %81, %42
  %66 = landingpad { i8*, i32 }
          cleanup
  br label %94

67:                                               ; preds = %29, %67
  %68 = phi i64 [ %78, %67 ], [ 0, %29 ]
  %69 = phi i64 [ %79, %67 ], [ %31, %29 ]
  %70 = xor i64 %68, -1
  %71 = add i64 %69, %70
  %72 = load i8*, i8** %30, align 8, !tbaa !57
  %73 = getelementptr inbounds i8, i8* %72, i64 %71
  %74 = load i8, i8* %73, align 1, !tbaa !17
  %75 = sext i8 %74 to i32
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !26
  %77 = call i32 @ungetc(i32 %75, %struct._IO_FILE* %76)
  %78 = add nuw i64 %68, 1
  %79 = load i64, i64* %7, align 8, !tbaa !15
  %80 = icmp ugt i64 %79, %78
  br i1 %80, label %67, label %81, !llvm.loop !59

81:                                               ; preds = %67, %29
  %82 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !49
  %83 = getelementptr i8, i8* %82, i64 -24
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = add nsw i64 %85, 216
  %87 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %86
  %88 = bitcast i8* %87 to %"class.std::basic_ostream"**
  store %"class.std::basic_ostream"* null, %"class.std::basic_ostream"** %88, align 8, !tbaa !58
  invoke void @_Z5solvev()
          to label %89 unwind label %65

89:                                               ; preds = %81
  %90 = load i8*, i8** %30, align 8, !tbaa !57
  %91 = icmp eq i8* %90, %8
  br i1 %91, label %93, label %92

92:                                               ; preds = %89
  call void @_ZdlPv(i8* %90) #18
  br label %93

93:                                               ; preds = %89, %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #18
  ret i32 0

94:                                               ; preds = %63, %65, %20
  %95 = phi { i8*, i32 } [ %21, %20 ], [ %64, %63 ], [ %66, %65 ]
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8, !tbaa !57
  %98 = icmp eq i8* %97, %8
  br i1 %98, label %100, label %99

99:                                               ; preds = %94
  call void @_ZdlPv(i8* %97) #18
  br label %100

100:                                              ; preds = %94, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #18
  resume { i8*, i32 } %95
}

declare dso_local zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @ungetc(i32 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #10

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #11 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #18
  tail call void @_ZSt9terminatev() #19
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %1) local_unnamed_addr #8 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"struct.std::_Rb_tree_node"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"struct.std::_Rb_tree_node"* [ %11, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 3
  %7 = bitcast %"struct.std::_Rb_tree_node_base"** %6 to %"struct.std::_Rb_tree_node"**
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8, !tbaa !45
  tail call void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %8)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 2
  %10 = bitcast %"struct.std::_Rb_tree_node_base"** %9 to %"struct.std::_Rb_tree_node"**
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8, !tbaa !44
  %12 = bitcast %"struct.std::_Rb_tree_node"* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %12) #18
  %13 = icmp eq %"struct.std::_Rb_tree_node"* %11, null
  br i1 %13, label %14, label %4, !llvm.loop !60

14:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EED2Ev(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %0) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::_Rb_tree.6", %"class.std::_Rb_tree.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to %"struct.std::_Rb_tree_node.13"**
  %5 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %4, align 8, !tbaa !8
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node.13"* %5)
          to label %6 unwind label %7

6:                                                ; preds = %1
  ret void

7:                                                ; preds = %1
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  tail call void @__clang_call_terminate(i8* %9) #19
  unreachable
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node.13"* %1) local_unnamed_addr #8 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"struct.std::_Rb_tree_node.13"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"struct.std::_Rb_tree_node.13"* [ %11, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %5, i64 0, i32 0, i32 3
  %7 = bitcast %"struct.std::_Rb_tree_node_base"** %6 to %"struct.std::_Rb_tree_node.13"**
  %8 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %7, align 8, !tbaa !45
  tail call void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node.13"* %8)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %5, i64 0, i32 0, i32 2
  %10 = bitcast %"struct.std::_Rb_tree_node_base"** %9 to %"struct.std::_Rb_tree_node.13"**
  %11 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %10, align 8, !tbaa !44
  %12 = bitcast %"struct.std::_Rb_tree_node.13"* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %12) #18
  %13 = icmp eq %"struct.std::_Rb_tree_node.13"* %11, null
  br i1 %13, label %14, label %4, !llvm.loop !61

14:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #13

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #15

; Function Attrs: nounwind
declare dso_local void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local i64 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5eraseERKi(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, i32* nonnull align 4 dereferenceable(4) %1) local_unnamed_addr #5 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 16
  %5 = bitcast i8* %4 to %"struct.std::_Rb_tree_node"**
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to %"struct.std::_Rb_tree_node_base"*
  %8 = load i32, i32* %1, align 4
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8, !tbaa !26
  %10 = icmp eq %"struct.std::_Rb_tree_node"* %9, null
  br i1 %10, label %70, label %11

11:                                               ; preds = %2, %64
  %12 = phi %"struct.std::_Rb_tree_node"* [ %68, %64 ], [ %9, %2 ]
  %13 = phi %"struct.std::_Rb_tree_node_base"* [ %65, %64 ], [ %7, %2 ]
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %12, i64 0, i32 1
  %15 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %14 to i32*
  %16 = load i32, i32* %15, align 4, !tbaa !18
  %17 = icmp slt i32 %16, %8
  br i1 %17, label %18, label %20

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %12, i64 0, i32 0, i32 3
  br label %64

20:                                               ; preds = %11
  %21 = icmp slt i32 %8, %16
  %22 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %12, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %12, i64 0, i32 0, i32 2
  br i1 %21, label %64, label %24

24:                                               ; preds = %20
  %25 = bitcast %"struct.std::_Rb_tree_node_base"** %23 to %"struct.std::_Rb_tree_node"**
  %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %25, align 8, !tbaa !44
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %12, i64 0, i32 0, i32 3
  %28 = bitcast %"struct.std::_Rb_tree_node_base"** %27 to %"struct.std::_Rb_tree_node"**
  %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %28, align 8, !tbaa !45
  %30 = icmp eq %"struct.std::_Rb_tree_node"* %26, null
  br i1 %30, label %46, label %31

31:                                               ; preds = %24, %31
  %32 = phi %"struct.std::_Rb_tree_node"* [ %44, %31 ], [ %26, %24 ]
  %33 = phi %"struct.std::_Rb_tree_node_base"* [ %41, %31 ], [ %22, %24 ]
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %32, i64 0, i32 1
  %35 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %34 to i32*
  %36 = load i32, i32* %35, align 4, !tbaa !18
  %37 = icmp slt i32 %36, %8
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %32, i64 0, i32 0, i32 3
  %39 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %32, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %32, i64 0, i32 0, i32 2
  %41 = select i1 %37, %"struct.std::_Rb_tree_node_base"* %33, %"struct.std::_Rb_tree_node_base"* %39
  %42 = select i1 %37, %"struct.std::_Rb_tree_node_base"** %38, %"struct.std::_Rb_tree_node_base"** %40
  %43 = bitcast %"struct.std::_Rb_tree_node_base"** %42 to %"struct.std::_Rb_tree_node"**
  %44 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %43, align 8, !tbaa !26
  %45 = icmp eq %"struct.std::_Rb_tree_node"* %44, null
  br i1 %45, label %46, label %31, !llvm.loop !62

46:                                               ; preds = %31, %24
  %47 = phi %"struct.std::_Rb_tree_node_base"* [ %22, %24 ], [ %41, %31 ]
  %48 = icmp eq %"struct.std::_Rb_tree_node"* %29, null
  br i1 %48, label %70, label %49

49:                                               ; preds = %46, %49
  %50 = phi %"struct.std::_Rb_tree_node"* [ %62, %49 ], [ %29, %46 ]
  %51 = phi %"struct.std::_Rb_tree_node_base"* [ %59, %49 ], [ %13, %46 ]
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %50, i64 0, i32 1
  %53 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %52 to i32*
  %54 = load i32, i32* %53, align 4, !tbaa !18
  %55 = icmp slt i32 %8, %54
  %56 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %50, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %50, i64 0, i32 0, i32 2
  %58 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %50, i64 0, i32 0, i32 3
  %59 = select i1 %55, %"struct.std::_Rb_tree_node_base"* %56, %"struct.std::_Rb_tree_node_base"* %51
  %60 = select i1 %55, %"struct.std::_Rb_tree_node_base"** %57, %"struct.std::_Rb_tree_node_base"** %58
  %61 = bitcast %"struct.std::_Rb_tree_node_base"** %60 to %"struct.std::_Rb_tree_node"**
  %62 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %61, align 8, !tbaa !26
  %63 = icmp eq %"struct.std::_Rb_tree_node"* %62, null
  br i1 %63, label %70, label %49, !llvm.loop !63

64:                                               ; preds = %20, %18
  %65 = phi %"struct.std::_Rb_tree_node_base"* [ %13, %18 ], [ %22, %20 ]
  %66 = phi %"struct.std::_Rb_tree_node_base"** [ %19, %18 ], [ %23, %20 ]
  %67 = bitcast %"struct.std::_Rb_tree_node_base"** %66 to %"struct.std::_Rb_tree_node"**
  %68 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %67, align 8, !tbaa !26
  %69 = icmp eq %"struct.std::_Rb_tree_node"* %68, null
  br i1 %69, label %70, label %11, !llvm.loop !64

70:                                               ; preds = %64, %49, %2, %46
  %71 = phi %"struct.std::_Rb_tree_node_base"* [ %47, %46 ], [ %7, %2 ], [ %47, %49 ], [ %65, %64 ]
  %72 = phi %"struct.std::_Rb_tree_node_base"* [ %13, %46 ], [ %7, %2 ], [ %59, %49 ], [ %65, %64 ]
  %73 = getelementptr inbounds i8, i8* %3, i64 40
  %74 = bitcast i8* %73 to i64*
  %75 = load i64, i64* %74, align 8, !tbaa !29
  %76 = getelementptr inbounds i8, i8* %3, i64 24
  %77 = bitcast i8* %76 to %"struct.std::_Rb_tree_node_base"**
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8, !tbaa !28
  %79 = icmp eq %"struct.std::_Rb_tree_node_base"* %78, %71
  %80 = icmp eq %"struct.std::_Rb_tree_node_base"* %72, %7
  %81 = select i1 %79, i1 %80, i1 false
  br i1 %81, label %82, label %91

82:                                               ; preds = %70
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %9)
          to label %86 unwind label %83

83:                                               ; preds = %82
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  tail call void @__clang_call_terminate(i8* %85) #19
  unreachable

86:                                               ; preds = %82
  %87 = bitcast i8* %4 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %87, align 8, !tbaa !8
  %88 = bitcast i8* %76 to i8**
  store i8* %6, i8** %88, align 8, !tbaa !28
  %89 = getelementptr inbounds i8, i8* %3, i64 32
  %90 = bitcast i8* %89 to i8**
  store i8* %6, i8** %90, align 8, !tbaa !36
  store i64 0, i64* %74, align 8, !tbaa !29
  br label %101

91:                                               ; preds = %70
  %92 = icmp eq %"struct.std::_Rb_tree_node_base"* %71, %72
  br i1 %92, label %101, label %93

93:                                               ; preds = %91, %93
  %94 = phi %"struct.std::_Rb_tree_node_base"* [ %95, %93 ], [ %71, %91 ]
  %95 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %94) #20
  %96 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"* %94, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %7) #18
  %97 = bitcast %"struct.std::_Rb_tree_node_base"* %96 to i8*
  tail call void @_ZdlPv(i8* %97) #18
  %98 = load i64, i64* %74, align 8, !tbaa !29
  %99 = add i64 %98, -1
  store i64 %99, i64* %74, align 8, !tbaa !29
  %100 = icmp eq %"struct.std::_Rb_tree_node_base"* %95, %72
  br i1 %100, label %101, label %93, !llvm.loop !65

101:                                              ; preds = %93, %86, %91
  %102 = phi i64 [ 0, %86 ], [ %75, %91 ], [ %99, %93 ]
  %103 = sub i64 %75, %102
  ret i64 %103
}

; Function Attrs: nounwind
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #15

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #16

; Function Attrs: uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOiEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) %2, %"class.std::tuple"* nonnull align 8 dereferenceable(8) %3, %"class.std::tuple.27"* nonnull align 1 dereferenceable(1) %4) local_unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = tail call noalias nonnull i8* @_Znwm(i64 40) #21
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  %8 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8, !tbaa !66
  %10 = bitcast i8* %7 to i32*
  %11 = load i32, i32* %9, align 4, !tbaa !18
  store i32 %11, i32* %10, align 4, !tbaa !41
  %12 = getelementptr inbounds i8, i8* %6, i64 36
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4, !tbaa !43
  %14 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, i32* nonnull align 4 dereferenceable(4) %10)
          to label %15 unwind label %41

15:                                               ; preds = %5
  %16 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %14, 0
  %17 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %14, 1
  %18 = icmp eq %"struct.std::_Rb_tree_node_base"* %17, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %15
  %20 = icmp eq %"struct.std::_Rb_tree_node_base"* %16, null
  br i1 %20, label %21, label %31

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.std::_Rb_tree.6", %"class.std::_Rb_tree.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = bitcast i8* %23 to %"struct.std::_Rb_tree_node_base"*
  %25 = icmp eq %"struct.std::_Rb_tree_node_base"* %17, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %17, i64 1, i32 0
  %28 = load i32, i32* %10, align 4, !tbaa !18
  %29 = load i32, i32* %27, align 4, !tbaa !18
  %30 = icmp slt i32 %28, %29
  br label %31

31:                                               ; preds = %19, %26, %21
  %32 = phi i1 [ true, %21 ], [ %30, %26 ], [ true, %19 ]
  %33 = bitcast i8* %6 to %"struct.std::_Rb_tree_node_base"*
  %34 = getelementptr inbounds %"class.std::_Rb_tree.6", %"class.std::_Rb_tree.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i8* %35 to %"struct.std::_Rb_tree_node_base"*
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %32, %"struct.std::_Rb_tree_node_base"* nonnull %33, %"struct.std::_Rb_tree_node_base"* nonnull %17, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %36) #18
  %37 = getelementptr inbounds i8, i8* %34, i64 40
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !29
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8, !tbaa !29
  br label %46

41:                                               ; preds = %5
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  %44 = tail call i8* @__cxa_begin_catch(i8* %43) #18
  tail call void @_ZdlPv(i8* nonnull %6) #18
  invoke void @__cxa_rethrow() #22
          to label %54 unwind label %48

45:                                               ; preds = %15
  tail call void @_ZdlPv(i8* nonnull %6) #18
  br label %46

46:                                               ; preds = %45, %31
  %47 = phi %"struct.std::_Rb_tree_node_base"* [ %16, %45 ], [ %33, %31 ]
  ret %"struct.std::_Rb_tree_node_base"* %47

48:                                               ; preds = %41
  %49 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %50 unwind label %51

50:                                               ; preds = %48
  resume { i8*, i32 } %49

51:                                               ; preds = %48
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  tail call void @__clang_call_terminate(i8* %53) #19
  unreachable

54:                                               ; preds = %41
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree.6"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, i32* nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::_Rb_tree.6", %"class.std::_Rb_tree.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Rb_tree_node_base"*
  %7 = icmp eq %"struct.std::_Rb_tree_node_base"* %6, %1
  br i1 %7, label %8, label %59

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %4, i64 40
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !29
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = load i32, i32* %2, align 4
  br label %23

15:                                               ; preds = %8
  %16 = getelementptr inbounds i8, i8* %4, i64 32
  %17 = bitcast i8* %16 to %"struct.std::_Rb_tree_node_base"**
  %18 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %17, align 8, !tbaa !26
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %18, i64 1, i32 0
  %20 = load i32, i32* %19, align 4, !tbaa !18
  %21 = load i32, i32* %2, align 4, !tbaa !18
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %167, label %23

23:                                               ; preds = %13, %15
  %24 = phi i32 [ %14, %13 ], [ %21, %15 ]
  %25 = getelementptr inbounds i8, i8* %4, i64 16
  %26 = bitcast i8* %25 to %"struct.std::_Rb_tree_node.13"**
  %27 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %26, align 8, !tbaa !26
  %28 = icmp eq %"struct.std::_Rb_tree_node.13"* %27, null
  br i1 %28, label %43, label %29

29:                                               ; preds = %23, %29
  %30 = phi %"struct.std::_Rb_tree_node.13"* [ %39, %29 ], [ %27, %23 ]
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %30, i64 0, i32 1
  %32 = bitcast %"struct.__gnu_cxx::__aligned_membuf.14"* %31 to i32*
  %33 = load i32, i32* %32, align 4, !tbaa !18
  %34 = icmp slt i32 %24, %33
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %30, i64 0, i32 0, i32 2
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %30, i64 0, i32 0, i32 3
  %37 = select i1 %34, %"struct.std::_Rb_tree_node_base"** %35, %"struct.std::_Rb_tree_node_base"** %36
  %38 = bitcast %"struct.std::_Rb_tree_node_base"** %37 to %"struct.std::_Rb_tree_node.13"**
  %39 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %38, align 8, !tbaa !26
  %40 = icmp eq %"struct.std::_Rb_tree_node.13"* %39, null
  br i1 %40, label %41, label %29, !llvm.loop !68

41:                                               ; preds = %29
  %42 = getelementptr %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %30, i64 0, i32 0
  br i1 %34, label %43, label %51

43:                                               ; preds = %41, %23
  %44 = phi %"struct.std::_Rb_tree_node_base"* [ %42, %41 ], [ %1, %23 ]
  %45 = getelementptr inbounds i8, i8* %4, i64 24
  %46 = bitcast i8* %45 to %"struct.std::_Rb_tree_node_base"**
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8, !tbaa !28
  %48 = icmp eq %"struct.std::_Rb_tree_node_base"* %44, %47
  br i1 %48, label %167, label %49

49:                                               ; preds = %43
  %50 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %44) #20
  br label %51

51:                                               ; preds = %49, %41
  %52 = phi %"struct.std::_Rb_tree_node_base"* [ %44, %49 ], [ %42, %41 ]
  %53 = phi %"struct.std::_Rb_tree_node_base"* [ %50, %49 ], [ %42, %41 ]
  %54 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %53, i64 1, i32 0
  %55 = load i32, i32* %54, align 4, !tbaa !18
  %56 = icmp slt i32 %55, %24
  %57 = select i1 %56, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %53
  %58 = select i1 %56, %"struct.std::_Rb_tree_node_base"* %52, %"struct.std::_Rb_tree_node_base"* null
  br label %167

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %1, i64 1, i32 0
  %61 = load i32, i32* %2, align 4, !tbaa !18
  %62 = load i32, i32* %60, align 4, !tbaa !18
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %64, label %113

64:                                               ; preds = %59
  %65 = getelementptr inbounds i8, i8* %4, i64 24
  %66 = bitcast i8* %65 to %"struct.std::_Rb_tree_node_base"**
  %67 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %66, align 8, !tbaa !26
  %68 = icmp eq %"struct.std::_Rb_tree_node_base"* %67, %1
  br i1 %68, label %167, label %69

69:                                               ; preds = %64
  %70 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* nonnull %1) #20
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %70, i64 1, i32 0
  %72 = load i32, i32* %71, align 4, !tbaa !18
  %73 = icmp slt i32 %72, %61
  br i1 %73, label %74, label %81

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %70, i64 0, i32 3
  %76 = bitcast %"struct.std::_Rb_tree_node_base"** %75 to %"struct.std::_Rb_tree_node.13"**
  %77 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %76, align 8, !tbaa !45
  %78 = icmp eq %"struct.std::_Rb_tree_node.13"* %77, null
  %79 = select i1 %78, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %1
  %80 = select i1 %78, %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"* %1
  br label %167

81:                                               ; preds = %69
  %82 = getelementptr inbounds i8, i8* %4, i64 16
  %83 = bitcast i8* %82 to %"struct.std::_Rb_tree_node.13"**
  %84 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %83, align 8, !tbaa !26
  %85 = icmp eq %"struct.std::_Rb_tree_node.13"* %84, null
  br i1 %85, label %100, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"struct.std::_Rb_tree_node.13"* [ %96, %86 ], [ %84, %81 ]
  %88 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %87, i64 0, i32 1
  %89 = bitcast %"struct.__gnu_cxx::__aligned_membuf.14"* %88 to i32*
  %90 = load i32, i32* %89, align 4, !tbaa !18
  %91 = icmp slt i32 %61, %90
  %92 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %87, i64 0, i32 0, i32 2
  %93 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %87, i64 0, i32 0, i32 3
  %94 = select i1 %91, %"struct.std::_Rb_tree_node_base"** %92, %"struct.std::_Rb_tree_node_base"** %93
  %95 = bitcast %"struct.std::_Rb_tree_node_base"** %94 to %"struct.std::_Rb_tree_node.13"**
  %96 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %95, align 8, !tbaa !26
  %97 = icmp eq %"struct.std::_Rb_tree_node.13"* %96, null
  br i1 %97, label %98, label %86, !llvm.loop !68

98:                                               ; preds = %86
  %99 = getelementptr %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %87, i64 0, i32 0
  br i1 %91, label %100, label %105

100:                                              ; preds = %98, %81
  %101 = phi %"struct.std::_Rb_tree_node_base"* [ %99, %98 ], [ %6, %81 ]
  %102 = icmp eq %"struct.std::_Rb_tree_node_base"* %101, %67
  br i1 %102, label %167, label %103

103:                                              ; preds = %100
  %104 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %101) #20
  br label %105

105:                                              ; preds = %103, %98
  %106 = phi %"struct.std::_Rb_tree_node_base"* [ %101, %103 ], [ %99, %98 ]
  %107 = phi %"struct.std::_Rb_tree_node_base"* [ %104, %103 ], [ %99, %98 ]
  %108 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %107, i64 1, i32 0
  %109 = load i32, i32* %108, align 4, !tbaa !18
  %110 = icmp slt i32 %109, %61
  %111 = select i1 %110, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %107
  %112 = select i1 %110, %"struct.std::_Rb_tree_node_base"* %106, %"struct.std::_Rb_tree_node_base"* null
  br label %167

113:                                              ; preds = %59
  %114 = icmp slt i32 %62, %61
  br i1 %114, label %115, label %167

115:                                              ; preds = %113
  %116 = getelementptr inbounds i8, i8* %4, i64 32
  %117 = bitcast i8* %116 to %"struct.std::_Rb_tree_node_base"**
  %118 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %117, align 8, !tbaa !26
  %119 = icmp eq %"struct.std::_Rb_tree_node_base"* %118, %1
  br i1 %119, label %167, label %120

120:                                              ; preds = %115
  %121 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* nonnull %1) #20
  %122 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %121, i64 1, i32 0
  %123 = load i32, i32* %122, align 4, !tbaa !18
  %124 = icmp slt i32 %61, %123
  br i1 %124, label %125, label %132

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %1, i64 0, i32 3
  %127 = bitcast %"struct.std::_Rb_tree_node_base"** %126 to %"struct.std::_Rb_tree_node.13"**
  %128 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %127, align 8, !tbaa !45
  %129 = icmp eq %"struct.std::_Rb_tree_node.13"* %128, null
  %130 = select i1 %129, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %121
  %131 = select i1 %129, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"* %121
  br label %167

132:                                              ; preds = %120
  %133 = getelementptr inbounds i8, i8* %4, i64 16
  %134 = bitcast i8* %133 to %"struct.std::_Rb_tree_node.13"**
  %135 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %134, align 8, !tbaa !26
  %136 = icmp eq %"struct.std::_Rb_tree_node.13"* %135, null
  br i1 %136, label %151, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"struct.std::_Rb_tree_node.13"* [ %147, %137 ], [ %135, %132 ]
  %139 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %138, i64 0, i32 1
  %140 = bitcast %"struct.__gnu_cxx::__aligned_membuf.14"* %139 to i32*
  %141 = load i32, i32* %140, align 4, !tbaa !18
  %142 = icmp slt i32 %61, %141
  %143 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %138, i64 0, i32 0, i32 2
  %144 = getelementptr inbounds %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %138, i64 0, i32 0, i32 3
  %145 = select i1 %142, %"struct.std::_Rb_tree_node_base"** %143, %"struct.std::_Rb_tree_node_base"** %144
  %146 = bitcast %"struct.std::_Rb_tree_node_base"** %145 to %"struct.std::_Rb_tree_node.13"**
  %147 = load %"struct.std::_Rb_tree_node.13"*, %"struct.std::_Rb_tree_node.13"** %146, align 8, !tbaa !26
  %148 = icmp eq %"struct.std::_Rb_tree_node.13"* %147, null
  br i1 %148, label %149, label %137, !llvm.loop !68

149:                                              ; preds = %137
  %150 = getelementptr %"struct.std::_Rb_tree_node.13", %"struct.std::_Rb_tree_node.13"* %138, i64 0, i32 0
  br i1 %142, label %151, label %159

151:                                              ; preds = %149, %132
  %152 = phi %"struct.std::_Rb_tree_node_base"* [ %150, %149 ], [ %6, %132 ]
  %153 = getelementptr inbounds i8, i8* %4, i64 24
  %154 = bitcast i8* %153 to %"struct.std::_Rb_tree_node_base"**
  %155 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %154, align 8, !tbaa !28
  %156 = icmp eq %"struct.std::_Rb_tree_node_base"* %152, %155
  br i1 %156, label %167, label %157

157:                                              ; preds = %151
  %158 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %152) #20
  br label %159

159:                                              ; preds = %157, %149
  %160 = phi %"struct.std::_Rb_tree_node_base"* [ %152, %157 ], [ %150, %149 ]
  %161 = phi %"struct.std::_Rb_tree_node_base"* [ %158, %157 ], [ %150, %149 ]
  %162 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %161, i64 1, i32 0
  %163 = load i32, i32* %162, align 4, !tbaa !18
  %164 = icmp slt i32 %163, %61
  %165 = select i1 %164, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %161
  %166 = select i1 %164, %"struct.std::_Rb_tree_node_base"* %160, %"struct.std::_Rb_tree_node_base"* null
  br label %167

167:                                              ; preds = %159, %151, %105, %100, %51, %43, %125, %74, %113, %115, %64, %15
  %168 = phi %"struct.std::_Rb_tree_node_base"* [ null, %15 ], [ %1, %64 ], [ null, %115 ], [ %1, %113 ], [ %79, %74 ], [ %130, %125 ], [ %57, %51 ], [ null, %43 ], [ %111, %105 ], [ null, %100 ], [ %165, %159 ], [ null, %151 ]
  %169 = phi %"struct.std::_Rb_tree_node_base"* [ %18, %15 ], [ %1, %64 ], [ %1, %115 ], [ null, %113 ], [ %80, %74 ], [ %131, %125 ], [ %58, %51 ], [ %44, %43 ], [ %112, %105 ], [ %67, %100 ], [ %166, %159 ], [ %152, %151 ]
  %170 = insertvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } undef, %"struct.std::_Rb_tree_node_base"* %168, 0
  %171 = insertvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %170, %"struct.std::_Rb_tree_node_base"* %169, 1
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %171
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #15

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #13

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #17

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_CostlyIntervals.cpp() #5 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #18
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) bitcast (%class.SegTree_max* @stma to i8*), i8 0, i64 24, i1 false) #18
  %2 = invoke noalias nonnull i8* @_Znwm(i64 2097152) #21
          to label %3 unwind label %9

3:                                                ; preds = %0
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(2097152) %2, i8 0, i64 2097152, i1 false)
  %4 = getelementptr i8, i8* %2, i64 2097152
  %5 = load i32*, i32** getelementptr inbounds (%class.SegTree_max, %class.SegTree_max* @stma, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  store i8* %2, i8** bitcast (%class.SegTree_max* @stma to i8**), align 8, !tbaa !3
  store i8* %4, i8** bitcast (i32** getelementptr inbounds (%class.SegTree_max, %class.SegTree_max* @stma, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1) to i8**), align 8, !tbaa !32
  store i8* %4, i8** bitcast (i32** getelementptr inbounds (%class.SegTree_max, %class.SegTree_max* @stma, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2) to i8**), align 8, !tbaa !33
  %6 = icmp eq i32* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = bitcast i32* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #18
  br label %19

9:                                                ; preds = %0
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = load i32*, i32** getelementptr inbounds (%class.SegTree_max, %class.SegTree_max* @stma, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %12 = icmp eq i32* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9, %146, %87, %74
  %14 = phi i32* [ %76, %74 ], [ %89, %87 ], [ %148, %146 ], [ %11, %9 ]
  %15 = phi { i8*, i32 } [ %75, %74 ], [ %88, %87 ], [ %147, %146 ], [ %10, %9 ]
  %16 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* nonnull %16) #18
  br label %17

17:                                               ; preds = %13, %146, %87, %74, %9
  %18 = phi { i8*, i32 } [ %10, %9 ], [ %75, %74 ], [ %88, %87 ], [ %147, %146 ], [ %15, %13 ]
  resume { i8*, i32 } %18

19:                                               ; preds = %3, %7
  %20 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SegTree_max*)* @_ZN11SegTree_maxIiLi262144EED2Ev to void (i8*)*), i8* bitcast (%class.SegTree_max* @stma to i8*), i8* nonnull @__dso_handle) #18
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) bitcast (%class.SegTree_min* @stmi to i8*), i8 0, i64 24, i1 false) #18
  %21 = invoke noalias nonnull i8* @_Znwm(i64 2097152) #21
          to label %22 unwind label %74

22:                                               ; preds = %19
  %23 = bitcast i8* %21 to i32*
  %24 = getelementptr i8, i8* %21, i64 2097152
  br label %25

25:                                               ; preds = %25, %22
  %26 = phi i64 [ 0, %22 ], [ %66, %25 ]
  %27 = getelementptr i32, i32* %23, i64 %26
  %28 = bitcast i32* %27 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %28, align 4, !tbaa !18
  %29 = getelementptr i32, i32* %27, i64 4
  %30 = bitcast i32* %29 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %30, align 4, !tbaa !18
  %31 = or i64 %26, 8
  %32 = getelementptr i32, i32* %23, i64 %31
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %33, align 4, !tbaa !18
  %34 = getelementptr i32, i32* %32, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %35, align 4, !tbaa !18
  %36 = or i64 %26, 16
  %37 = getelementptr i32, i32* %23, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %38, align 4, !tbaa !18
  %39 = getelementptr i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %40, align 4, !tbaa !18
  %41 = or i64 %26, 24
  %42 = getelementptr i32, i32* %23, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %43, align 4, !tbaa !18
  %44 = getelementptr i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %45, align 4, !tbaa !18
  %46 = or i64 %26, 32
  %47 = getelementptr i32, i32* %23, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %48, align 4, !tbaa !18
  %49 = getelementptr i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %50, align 4, !tbaa !18
  %51 = or i64 %26, 40
  %52 = getelementptr i32, i32* %23, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %53, align 4, !tbaa !18
  %54 = getelementptr i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %55, align 4, !tbaa !18
  %56 = or i64 %26, 48
  %57 = getelementptr i32, i32* %23, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %58, align 4, !tbaa !18
  %59 = getelementptr i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %60, align 4, !tbaa !18
  %61 = or i64 %26, 56
  %62 = getelementptr i32, i32* %23, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %63, align 4, !tbaa !18
  %64 = getelementptr i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1073741824, i32 1073741824, i32 1073741824, i32 1073741824>, <4 x i32>* %65, align 4, !tbaa !18
  %66 = add nuw nsw i64 %26, 64
  %67 = icmp eq i64 %66, 524288
  br i1 %67, label %68, label %25, !llvm.loop !69

68:                                               ; preds = %25
  %69 = getelementptr inbounds i8, i8* %21, i64 2097152
  %70 = load i32*, i32** getelementptr inbounds (%class.SegTree_min, %class.SegTree_min* @stmi, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  store i8* %21, i8** bitcast (%class.SegTree_min* @stmi to i8**), align 8, !tbaa !3
  store i8* %24, i8** bitcast (i32** getelementptr inbounds (%class.SegTree_min, %class.SegTree_min* @stmi, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1) to i8**), align 8, !tbaa !32
  store i8* %69, i8** bitcast (i32** getelementptr inbounds (%class.SegTree_min, %class.SegTree_min* @stmi, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2) to i8**), align 8, !tbaa !33
  %71 = icmp eq i32* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %68
  %73 = bitcast i32* %70 to i8*
  tail call void @_ZdlPv(i8* nonnull %73) #18
  br label %78

74:                                               ; preds = %19
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = load i32*, i32** getelementptr inbounds (%class.SegTree_min, %class.SegTree_min* @stmi, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %77 = icmp eq i32* %76, null
  br i1 %77, label %17, label %13

78:                                               ; preds = %68, %72
  %79 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SegTree_min*)* @_ZN11SegTree_minIiLi262144EED2Ev to void (i8*)*), i8* bitcast (%class.SegTree_min* @stmi to i8*), i8* nonnull @__dso_handle) #18
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) bitcast (%class.SegTree_or* @stor to i8*), i8 0, i64 24, i1 false) #18
  %80 = invoke noalias nonnull i8* @_Znwm(i64 2097152) #21
          to label %81 unwind label %87

81:                                               ; preds = %78
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(2097152) %80, i8 0, i64 2097152, i1 false)
  %82 = getelementptr i8, i8* %80, i64 2097152
  %83 = load i32*, i32** getelementptr inbounds (%class.SegTree_or, %class.SegTree_or* @stor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  store i8* %80, i8** bitcast (%class.SegTree_or* @stor to i8**), align 8, !tbaa !3
  store i8* %82, i8** bitcast (i32** getelementptr inbounds (%class.SegTree_or, %class.SegTree_or* @stor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1) to i8**), align 8, !tbaa !32
  store i8* %82, i8** bitcast (i32** getelementptr inbounds (%class.SegTree_or, %class.SegTree_or* @stor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2) to i8**), align 8, !tbaa !33
  %84 = icmp eq i32* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %81
  %86 = bitcast i32* %83 to i8*
  tail call void @_ZdlPv(i8* nonnull %86) #18
  br label %91

87:                                               ; preds = %78
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = load i32*, i32** getelementptr inbounds (%class.SegTree_or, %class.SegTree_or* @stor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %90 = icmp eq i32* %89, null
  br i1 %90, label %17, label %13

91:                                               ; preds = %81, %85
  %92 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SegTree_or*)* @_ZN10SegTree_orIiLi262144EED2Ev to void (i8*)*), i8* bitcast (%class.SegTree_or* @stor to i8*), i8* nonnull @__dso_handle) #18
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) bitcast (%class.SegTree_and* @stand to i8*), i8 0, i64 24, i1 false) #18
  %93 = invoke noalias nonnull i8* @_Znwm(i64 2097152) #21
          to label %94 unwind label %146

94:                                               ; preds = %91
  %95 = bitcast i8* %93 to i32*
  %96 = getelementptr i8, i8* %93, i64 2097152
  br label %97

97:                                               ; preds = %97, %94
  %98 = phi i64 [ 0, %94 ], [ %138, %97 ]
  %99 = getelementptr i32, i32* %95, i64 %98
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %100, align 4, !tbaa !18
  %101 = getelementptr i32, i32* %99, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %102, align 4, !tbaa !18
  %103 = or i64 %98, 8
  %104 = getelementptr i32, i32* %95, i64 %103
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %105, align 4, !tbaa !18
  %106 = getelementptr i32, i32* %104, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %107, align 4, !tbaa !18
  %108 = or i64 %98, 16
  %109 = getelementptr i32, i32* %95, i64 %108
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %110, align 4, !tbaa !18
  %111 = getelementptr i32, i32* %109, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %112, align 4, !tbaa !18
  %113 = or i64 %98, 24
  %114 = getelementptr i32, i32* %95, i64 %113
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %115, align 4, !tbaa !18
  %116 = getelementptr i32, i32* %114, i64 4
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %117, align 4, !tbaa !18
  %118 = or i64 %98, 32
  %119 = getelementptr i32, i32* %95, i64 %118
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %120, align 4, !tbaa !18
  %121 = getelementptr i32, i32* %119, i64 4
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %122, align 4, !tbaa !18
  %123 = or i64 %98, 40
  %124 = getelementptr i32, i32* %95, i64 %123
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %125, align 4, !tbaa !18
  %126 = getelementptr i32, i32* %124, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %127, align 4, !tbaa !18
  %128 = or i64 %98, 48
  %129 = getelementptr i32, i32* %95, i64 %128
  %130 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %130, align 4, !tbaa !18
  %131 = getelementptr i32, i32* %129, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %132, align 4, !tbaa !18
  %133 = or i64 %98, 56
  %134 = getelementptr i32, i32* %95, i64 %133
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %135, align 4, !tbaa !18
  %136 = getelementptr i32, i32* %134, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %137, align 4, !tbaa !18
  %138 = add nuw nsw i64 %98, 64
  %139 = icmp eq i64 %138, 524288
  br i1 %139, label %140, label %97, !llvm.loop !71

140:                                              ; preds = %97
  %141 = getelementptr inbounds i8, i8* %93, i64 2097152
  %142 = load i32*, i32** getelementptr inbounds (%class.SegTree_and, %class.SegTree_and* @stand, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  store i8* %93, i8** bitcast (%class.SegTree_and* @stand to i8**), align 8, !tbaa !3
  store i8* %96, i8** bitcast (i32** getelementptr inbounds (%class.SegTree_and, %class.SegTree_and* @stand, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1) to i8**), align 8, !tbaa !32
  store i8* %141, i8** bitcast (i32** getelementptr inbounds (%class.SegTree_and, %class.SegTree_and* @stand, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2) to i8**), align 8, !tbaa !33
  %143 = icmp eq i32* %142, null
  br i1 %143, label %150, label %144

144:                                              ; preds = %140
  %145 = bitcast i32* %142 to i8*
  tail call void @_ZdlPv(i8* nonnull %145) #18
  br label %150

146:                                              ; preds = %91
  %147 = landingpad { i8*, i32 }
          cleanup
  %148 = load i32*, i32** getelementptr inbounds (%class.SegTree_and, %class.SegTree_and* @stand, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %149 = icmp eq i32* %148, null
  br i1 %149, label %17, label %13

150:                                              ; preds = %140, %144
  %151 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.SegTree_and*)* @_ZN11SegTree_andIiLi262144EED2Ev to void (i8*)*), i8* bitcast (%class.SegTree_and* @stand to i8*), i8* nonnull @__dso_handle) #18
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(2424240) bitcast ([101010 x %"class.std::vector"]* @add to i8*), i8 0, i64 2424240, i1 false) #18
  %152 = tail call i32 @__cxa_atexit(void (i8*)* nonnull @__cxx_global_array_dtor, i8* null, i8* nonnull @__dso_handle) #18
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(2424240) bitcast ([101010 x %"class.std::vector"]* @del to i8*), i8 0, i64 2424240, i1 false) #18
  %153 = tail call i32 @__cxa_atexit(void (i8*)* nonnull @__cxx_global_array_dtor.7, i8* null, i8* nonnull @__dso_handle) #18
  br label %154

154:                                              ; preds = %154, %150
  %155 = phi %"class.std::set"* [ getelementptr inbounds ([101010 x %"class.std::set"], [101010 x %"class.std::set"]* @cand, i64 0, i64 0), %150 ], [ %211, %154 ]
  %156 = getelementptr inbounds %"class.std::set", %"class.std::set"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds i8, i8* %156, i64 8
  %158 = bitcast i8* %157 to i32*
  store i32 0, i32* %158, align 8, !tbaa !35
  %159 = getelementptr inbounds i8, i8* %156, i64 16
  %160 = bitcast i8* %159 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %160, align 8, !tbaa !8
  %161 = getelementptr inbounds i8, i8* %156, i64 24
  %162 = bitcast i8* %161 to i8**
  store i8* %157, i8** %162, align 8, !tbaa !28
  %163 = getelementptr inbounds i8, i8* %156, i64 32
  %164 = bitcast i8* %163 to i8**
  store i8* %157, i8** %164, align 8, !tbaa !36
  %165 = getelementptr inbounds i8, i8* %156, i64 40
  %166 = bitcast i8* %165 to i64*
  store i64 0, i64* %166, align 8, !tbaa !29
  %167 = getelementptr inbounds %"class.std::set", %"class.std::set"* %155, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = getelementptr inbounds i8, i8* %167, i64 8
  %169 = bitcast i8* %168 to i32*
  store i32 0, i32* %169, align 8, !tbaa !35
  %170 = getelementptr inbounds i8, i8* %167, i64 16
  %171 = bitcast i8* %170 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %171, align 8, !tbaa !8
  %172 = getelementptr inbounds i8, i8* %167, i64 24
  %173 = bitcast i8* %172 to i8**
  store i8* %168, i8** %173, align 8, !tbaa !28
  %174 = getelementptr inbounds i8, i8* %167, i64 32
  %175 = bitcast i8* %174 to i8**
  store i8* %168, i8** %175, align 8, !tbaa !36
  %176 = getelementptr inbounds i8, i8* %167, i64 40
  %177 = bitcast i8* %176 to i64*
  store i64 0, i64* %177, align 8, !tbaa !29
  %178 = getelementptr inbounds %"class.std::set", %"class.std::set"* %155, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = getelementptr inbounds i8, i8* %178, i64 8
  %180 = bitcast i8* %179 to i32*
  store i32 0, i32* %180, align 8, !tbaa !35
  %181 = getelementptr inbounds i8, i8* %178, i64 16
  %182 = bitcast i8* %181 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %182, align 8, !tbaa !8
  %183 = getelementptr inbounds i8, i8* %178, i64 24
  %184 = bitcast i8* %183 to i8**
  store i8* %179, i8** %184, align 8, !tbaa !28
  %185 = getelementptr inbounds i8, i8* %178, i64 32
  %186 = bitcast i8* %185 to i8**
  store i8* %179, i8** %186, align 8, !tbaa !36
  %187 = getelementptr inbounds i8, i8* %178, i64 40
  %188 = bitcast i8* %187 to i64*
  store i64 0, i64* %188, align 8, !tbaa !29
  %189 = getelementptr inbounds %"class.std::set", %"class.std::set"* %155, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = getelementptr inbounds i8, i8* %189, i64 8
  %191 = bitcast i8* %190 to i32*
  store i32 0, i32* %191, align 8, !tbaa !35
  %192 = getelementptr inbounds i8, i8* %189, i64 16
  %193 = bitcast i8* %192 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %193, align 8, !tbaa !8
  %194 = getelementptr inbounds i8, i8* %189, i64 24
  %195 = bitcast i8* %194 to i8**
  store i8* %190, i8** %195, align 8, !tbaa !28
  %196 = getelementptr inbounds i8, i8* %189, i64 32
  %197 = bitcast i8* %196 to i8**
  store i8* %190, i8** %197, align 8, !tbaa !36
  %198 = getelementptr inbounds i8, i8* %189, i64 40
  %199 = bitcast i8* %198 to i64*
  store i64 0, i64* %199, align 8, !tbaa !29
  %200 = getelementptr inbounds %"class.std::set", %"class.std::set"* %155, i64 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = getelementptr inbounds i8, i8* %200, i64 8
  %202 = bitcast i8* %201 to i32*
  store i32 0, i32* %202, align 8, !tbaa !35
  %203 = getelementptr inbounds i8, i8* %200, i64 16
  %204 = bitcast i8* %203 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %204, align 8, !tbaa !8
  %205 = getelementptr inbounds i8, i8* %200, i64 24
  %206 = bitcast i8* %205 to i8**
  store i8* %201, i8** %206, align 8, !tbaa !28
  %207 = getelementptr inbounds i8, i8* %200, i64 32
  %208 = bitcast i8* %207 to i8**
  store i8* %201, i8** %208, align 8, !tbaa !36
  %209 = getelementptr inbounds i8, i8* %200, i64 40
  %210 = bitcast i8* %209 to i64*
  store i64 0, i64* %210, align 8, !tbaa !29
  %211 = getelementptr inbounds %"class.std::set", %"class.std::set"* %155, i64 5
  %212 = icmp eq %"class.std::set"* %211, getelementptr inbounds ([101010 x %"class.std::set"], [101010 x %"class.std::set"]* @cand, i64 1, i64 0)
  br i1 %212, label %213, label %154

213:                                              ; preds = %154
  %214 = tail call i32 @__cxa_atexit(void (i8*)* nonnull @__cxx_global_array_dtor.9, i8* null, i8* nonnull @__dso_handle) #18
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { inlinehint nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #7 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #8 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { noinline noreturn nounwind }
attributes #12 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #17 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nounwind }
attributes #19 = { noreturn nounwind }
attributes #20 = { nounwind readonly willreturn }
attributes #21 = { allocsize(0) }
attributes #22 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !5, i64 8}
!9 = !{!"_ZTSSt15_Rb_tree_header", !10, i64 0, !12, i64 32}
!10 = !{!"_ZTSSt18_Rb_tree_node_base", !11, i64 0, !5, i64 8, !5, i64 16, !5, i64 24}
!11 = !{!"_ZTSSt14_Rb_tree_color", !6, i64 0}
!12 = !{!"long", !6, i64 0}
!13 = !{!14, !5, i64 0}
!14 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!15 = !{!16, !12, i64 8}
!16 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !14, i64 0, !12, i64 8, !6, i64 16}
!17 = !{!6, !6, i64 0}
!18 = !{!19, !19, i64 0}
!19 = !{!"int", !6, i64 0}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.mustprogress"}
!22 = distinct !{!22, !21}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !21}
!25 = distinct !{!25, !21}
!26 = !{!5, !5, i64 0}
!27 = distinct !{!27, !21}
!28 = !{!9, !5, i64 16}
!29 = !{!9, !12, i64 32}
!30 = distinct !{!30, !21}
!31 = distinct !{!31, !21}
!32 = !{!4, !5, i64 8}
!33 = !{!4, !5, i64 16}
!34 = distinct !{!34, !21}
!35 = !{!9, !11, i64 0}
!36 = !{!9, !5, i64 24}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_: argument 0"}
!39 = distinct !{!39, !"_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_"}
!40 = distinct !{!40, !21}
!41 = !{!42, !19, i64 0}
!42 = !{!"_ZTSSt4pairIKiiE", !19, i64 0, !19, i64 4}
!43 = !{!42, !19, i64 4}
!44 = !{!10, !5, i64 16}
!45 = !{!10, !5, i64 24}
!46 = distinct !{!46, !21}
!47 = distinct !{!47, !21}
!48 = distinct !{!48, !21}
!49 = !{!50, !50, i64 0}
!50 = !{!"vtable pointer", !7, i64 0}
!51 = !{!52, !5, i64 240}
!52 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !5, i64 216, !6, i64 224, !53, i64 225, !5, i64 232, !5, i64 240, !5, i64 248, !5, i64 256}
!53 = !{!"bool", !6, i64 0}
!54 = !{!55, !6, i64 56}
!55 = !{!"_ZTSSt5ctypeIcE", !5, i64 16, !53, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !6, i64 56, !6, i64 57, !6, i64 313, !6, i64 569}
!56 = distinct !{!56, !21}
!57 = !{!16, !5, i64 0}
!58 = !{!52, !5, i64 216}
!59 = distinct !{!59, !21}
!60 = distinct !{!60, !21}
!61 = distinct !{!61, !21}
!62 = distinct !{!62, !21}
!63 = distinct !{!63, !21}
!64 = distinct !{!64, !21}
!65 = distinct !{!65, !21}
!66 = !{!67, !5, i64 0}
!67 = !{!"_ZTSSt10_Head_baseILm0EOiLb0EE", !5, i64 0}
!68 = distinct !{!68, !21}
!69 = distinct !{!69, !21, !70}
!70 = !{!"llvm.loop.isvectorized", i32 1}
!71 = distinct !{!71, !21, !70}
