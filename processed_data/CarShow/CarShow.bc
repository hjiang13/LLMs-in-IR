; ModuleID = '../../Benchmarks/CarShow/CarShow.cpp'
source_filename = "../../Benchmarks/CarShow/CarShow.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl_data" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"struct.std::pair" = type { i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_T0_ = comdat any

$_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_SB_SB_T0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@n = dso_local global i32 0, align 4
@q = dso_local global i32 0, align 4
@A = dso_local global [100005 x i32] zeroinitializer, align 16
@lst = dso_local local_unnamed_addr global [1000005 x i32] zeroinitializer, align 16
@L = dso_local local_unnamed_addr global [100005 x i32] zeroinitializer, align 16
@R = dso_local local_unnamed_addr global [100005 x i32] zeroinitializer, align 16
@ql = dso_local global [100005 x i32] zeroinitializer, align 16
@qr = dso_local global [100005 x i32] zeroinitializer, align 16
@quer = dso_local global [320 x %"class.std::vector"] zeroinitializer, align 16
@lef = dso_local local_unnamed_addr global i32 100005, align 4
@rig = dso_local local_unnamed_addr global i32 0, align 4
@cur = dso_local local_unnamed_addr global i64 0, align 8
@res = dso_local local_unnamed_addr global [100005 x i64] zeroinitializer, align 16
@.str = private unnamed_addr constant [23 x i8] c"../input_files/CarShow\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_CarShow.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor(i8* nocapture readnone %0) #3 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  br label %2

2:                                                ; preds = %10, %1
  %3 = phi %"class.std::vector"* [ getelementptr inbounds ([320 x %"class.std::vector"], [320 x %"class.std::vector"]* @quer, i64 1, i64 0), %1 ], [ %4, %10 ]
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 -1
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8, !tbaa !3
  %7 = icmp eq %"struct.std::pair"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.std::pair"* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #15
  br label %10

10:                                               ; preds = %2, %8
  %11 = icmp eq %"class.std::vector"* %4, getelementptr inbounds ([320 x %"class.std::vector"], [320 x %"class.std::vector"]* @quer, i64 0, i64 0)
  br i1 %11, label %12, label %2

12:                                               ; preds = %10
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define dso_local void @_Z3Addi(i32 %0) local_unnamed_addr #4 {
  %2 = load i32, i32* @lef, align 4, !tbaa !8
  %3 = icmp eq i32 %2, 100005
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = load i64, i64* @cur, align 8, !tbaa !10
  %6 = add nsw i64 %5, 1
  store i64 %6, i64* @cur, align 8, !tbaa !10
  store i32 %0, i32* @rig, align 4, !tbaa !8
  store i32 %0, i32* @lef, align 4, !tbaa !8
  br label %36

7:                                                ; preds = %1
  %8 = add nsw i32 %0, 1
  %9 = icmp eq i32 %8, %2
  br i1 %9, label %10, label %23

10:                                               ; preds = %7
  %11 = add nsw i32 %2, -1
  store i32 %11, i32* @lef, align 4, !tbaa !8
  %12 = load i32, i32* @rig, align 4, !tbaa !8
  %13 = add nsw i32 %12, 1
  %14 = sext i32 %0 to i64
  %15 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4, !tbaa !8
  %17 = icmp sgt i32 %16, %12
  %18 = select i1 %17, i32 %13, i32 %16
  %19 = sub nsw i32 %18, %0
  %20 = sext i32 %19 to i64
  %21 = load i64, i64* @cur, align 8, !tbaa !10
  %22 = add nsw i64 %21, %20
  store i64 %22, i64* @cur, align 8, !tbaa !10
  br label %36

23:                                               ; preds = %7
  %24 = load i32, i32* @rig, align 4, !tbaa !8
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* @rig, align 4, !tbaa !8
  %26 = add nsw i32 %2, -1
  %27 = sext i32 %0 to i64
  %28 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4, !tbaa !8
  %30 = icmp sgt i32 %2, %29
  %31 = select i1 %30, i32 %26, i32 %29
  %32 = sub nsw i32 %0, %31
  %33 = sext i32 %32 to i64
  %34 = load i64, i64* @cur, align 8, !tbaa !10
  %35 = add nsw i64 %34, %33
  store i64 %35, i64* @cur, align 8, !tbaa !10
  br label %36

36:                                               ; preds = %10, %23, %4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable willreturn
define dso_local void @_Z3Remi(i32 %0) local_unnamed_addr #4 {
  %2 = load i32, i32* @lef, align 4, !tbaa !8
  %3 = load i32, i32* @rig, align 4, !tbaa !8
  %4 = icmp eq i32 %2, %3
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load i64, i64* @cur, align 8, !tbaa !10
  %7 = add nsw i64 %6, -1
  store i64 %7, i64* @cur, align 8, !tbaa !10
  store i32 100005, i32* @lef, align 4, !tbaa !8
  br label %34

8:                                                ; preds = %1
  %9 = icmp eq i32 %2, %0
  br i1 %9, label %10, label %22

10:                                               ; preds = %8
  %11 = add nsw i32 %0, 1
  store i32 %11, i32* @lef, align 4, !tbaa !8
  %12 = add nsw i32 %3, 1
  %13 = sext i32 %0 to i64
  %14 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %13
  %15 = load i32, i32* %14, align 4, !tbaa !8
  %16 = icmp sgt i32 %15, %3
  %17 = select i1 %16, i32 %12, i32 %15
  %18 = sub nsw i32 %17, %0
  %19 = sext i32 %18 to i64
  %20 = load i64, i64* @cur, align 8, !tbaa !10
  %21 = sub nsw i64 %20, %19
  store i64 %21, i64* @cur, align 8, !tbaa !10
  br label %34

22:                                               ; preds = %8
  %23 = add nsw i32 %3, -1
  store i32 %23, i32* @rig, align 4, !tbaa !8
  %24 = add nsw i32 %2, -1
  %25 = sext i32 %0 to i64
  %26 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %25
  %27 = load i32, i32* %26, align 4, !tbaa !8
  %28 = icmp sgt i32 %2, %27
  %29 = select i1 %28, i32 %24, i32 %27
  %30 = sub nsw i32 %0, %29
  %31 = sext i32 %30 to i64
  %32 = load i64, i64* @cur, align 8, !tbaa !10
  %33 = sub nsw i64 %32, %31
  store i64 %33, i64* @cur, align 8, !tbaa !10
  br label %34

34:                                               ; preds = %10, %22, %5
  ret void
}

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #5 personality i32 (...)* @__gxx_personality_v0 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !12
  %2 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %1)
  %3 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32* nonnull @n, i32* nonnull @q)
  %4 = load i32, i32* @n, align 4, !tbaa !8
  %5 = add nsw i32 %4, 1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %6
  store i32 0, i32* %7, align 4, !tbaa !8
  store i32 0, i32* getelementptr inbounds ([100005 x i32], [100005 x i32]* @L, i64 0, i64 0), align 16, !tbaa !8
  %8 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %6
  store i32 %5, i32* %8, align 4, !tbaa !8
  store i32 %5, i32* getelementptr inbounds ([100005 x i32], [100005 x i32]* @R, i64 0, i64 0), align 16, !tbaa !8
  %9 = icmp slt i32 %4, 1
  br i1 %9, label %12, label %15

10:                                               ; preds = %30
  %11 = add nsw i32 %34, 1
  br label %12

12:                                               ; preds = %10, %0
  %13 = phi i32 [ %11, %10 ], [ %5, %0 ]
  %14 = phi i32 [ %34, %10 ], [ %4, %0 ]
  br label %49

15:                                               ; preds = %0, %30
  %16 = phi i64 [ %33, %30 ], [ 1, %0 ]
  %17 = getelementptr inbounds [100005 x i32], [100005 x i32]* @A, i64 0, i64 %16
  %18 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32* nonnull %17)
  %19 = load i32, i32* %17, align 4, !tbaa !8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4, !tbaa !8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %15
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %25
  %27 = trunc i64 %16 to i32
  store i32 %27, i32* %26, align 4, !tbaa !8
  br label %30

28:                                               ; preds = %15
  %29 = trunc i64 %16 to i32
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi i32 [ %29, %28 ], [ %27, %24 ]
  %32 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %16
  store i32 %22, i32* %32, align 4
  store i32 %31, i32* %21, align 4, !tbaa !8
  %33 = add nuw nsw i64 %16, 1
  %34 = load i32, i32* @n, align 4, !tbaa !8
  %35 = sext i32 %34 to i64
  %36 = icmp slt i64 %16, %35
  br i1 %36, label %15, label %10, !llvm.loop !13

37:                                               ; preds = %49
  %38 = icmp slt i32 %14, 0
  br i1 %38, label %136, label %39

39:                                               ; preds = %37
  %40 = add nuw i32 %14, 2
  %41 = zext i32 %40 to i64
  %42 = load i32, i32* getelementptr inbounds ([100005 x i32], [100005 x i32]* @L, i64 0, i64 0), align 16
  %43 = add nsw i64 %41, -1
  %44 = add nsw i64 %41, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %77, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, -4
  br label %110

49:                                               ; preds = %49, %12
  %50 = phi i64 [ 0, %12 ], [ %75, %49 ]
  %51 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4, !tbaa !8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %53
  store i32 %13, i32* %54, align 4, !tbaa !8
  %55 = add nuw nsw i64 %50, 1
  %56 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4, !tbaa !8
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %58
  store i32 %13, i32* %59, align 4, !tbaa !8
  %60 = add nuw nsw i64 %50, 2
  %61 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4, !tbaa !8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %63
  store i32 %13, i32* %64, align 4, !tbaa !8
  %65 = add nuw nsw i64 %50, 3
  %66 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0, i64 %65
  %67 = load i32, i32* %66, align 4, !tbaa !8
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %68
  store i32 %13, i32* %69, align 4, !tbaa !8
  %70 = add nuw nsw i64 %50, 4
  %71 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0, i64 %70
  %72 = load i32, i32* %71, align 4, !tbaa !8
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %73
  store i32 %13, i32* %74, align 4, !tbaa !8
  %75 = add nuw nsw i64 %50, 5
  %76 = icmp eq i64 %75, 1000005
  br i1 %76, label %37, label %49, !llvm.loop !15

77:                                               ; preds = %110, %39
  %78 = phi i32 [ %42, %39 ], [ %132, %110 ]
  %79 = phi i64 [ 1, %39 ], [ %133, %110 ]
  %80 = icmp eq i64 %45, 0
  br i1 %80, label %92, label %81

81:                                               ; preds = %77, %81
  %82 = phi i32 [ %88, %81 ], [ %78, %77 ]
  %83 = phi i64 [ %89, %81 ], [ %79, %77 ]
  %84 = phi i64 [ %90, %81 ], [ %45, %77 ]
  %85 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %83
  %86 = load i32, i32* %85, align 4
  %87 = icmp slt i32 %86, %82
  %88 = select i1 %87, i32 %82, i32 %86
  store i32 %88, i32* %85, align 4, !tbaa !8
  %89 = add nuw nsw i64 %83, 1
  %90 = add i64 %84, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %81, !llvm.loop !16

92:                                               ; preds = %81, %77
  %93 = icmp sgt i32 %14, -1
  br i1 %93, label %94, label %136

94:                                               ; preds = %92
  %95 = zext i32 %14 to i64
  %96 = and i64 %95, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %107

98:                                               ; preds = %94
  %99 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %95
  %100 = add nuw nsw i64 %95, 1
  %101 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = load i32, i32* %99, align 4
  %104 = icmp slt i32 %102, %103
  %105 = select i1 %104, i32 %102, i32 %103
  store i32 %105, i32* %99, align 4, !tbaa !8
  %106 = add nsw i64 %95, -1
  br label %107

107:                                              ; preds = %98, %94
  %108 = phi i64 [ %95, %94 ], [ %106, %98 ]
  %109 = icmp eq i32 %14, 0
  br i1 %109, label %136, label %139

110:                                              ; preds = %110, %47
  %111 = phi i32 [ %42, %47 ], [ %132, %110 ]
  %112 = phi i64 [ 1, %47 ], [ %133, %110 ]
  %113 = phi i64 [ %48, %47 ], [ %134, %110 ]
  %114 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %112
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %115, %111
  %117 = select i1 %116, i32 %111, i32 %115
  store i32 %117, i32* %114, align 4, !tbaa !8
  %118 = add nuw nsw i64 %112, 1
  %119 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = icmp slt i32 %120, %117
  %122 = select i1 %121, i32 %117, i32 %120
  store i32 %122, i32* %119, align 4, !tbaa !8
  %123 = add nuw nsw i64 %112, 2
  %124 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = icmp slt i32 %125, %122
  %127 = select i1 %126, i32 %122, i32 %125
  store i32 %127, i32* %124, align 4, !tbaa !8
  %128 = add nuw nsw i64 %112, 3
  %129 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = icmp slt i32 %130, %127
  %132 = select i1 %131, i32 %127, i32 %130
  store i32 %132, i32* %129, align 4, !tbaa !8
  %133 = add nuw nsw i64 %112, 4
  %134 = add i64 %113, -4
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %77, label %110, !llvm.loop !18

136:                                              ; preds = %107, %139, %37, %92
  %137 = load i32, i32* @q, align 4, !tbaa !8
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %161, label %157

139:                                              ; preds = %107, %139
  %140 = phi i64 [ %154, %139 ], [ %108, %107 ]
  %141 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %140
  %142 = add nuw nsw i64 %140, 1
  %143 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = load i32, i32* %141, align 4
  %146 = icmp slt i32 %144, %145
  %147 = select i1 %146, i32 %144, i32 %145
  store i32 %147, i32* %141, align 4, !tbaa !8
  %148 = add nsw i64 %140, -1
  %149 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = icmp slt i32 %147, %150
  %152 = select i1 %151, i32 %147, i32 %150
  store i32 %152, i32* %149, align 4, !tbaa !8
  %153 = icmp sgt i64 %140, 1
  %154 = add nsw i64 %140, -2
  br i1 %153, label %139, label %136, !llvm.loop !19

155:                                              ; preds = %435
  %156 = load i32, i32* @n, align 4, !tbaa !8
  br label %157

157:                                              ; preds = %155, %136
  %158 = phi i32 [ %437, %155 ], [ %137, %136 ]
  %159 = phi i32 [ %156, %155 ], [ %14, %136 ]
  %160 = icmp slt i32 %159, 0
  br i1 %160, label %442, label %445

161:                                              ; preds = %136, %435
  %162 = phi i64 [ %436, %435 ], [ 0, %136 ]
  %163 = getelementptr inbounds [100005 x i32], [100005 x i32]* @ql, i64 0, i64 %162
  %164 = getelementptr inbounds [100005 x i32], [100005 x i32]* @qr, i64 0, i64 %162
  %165 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %163, i32* nonnull %164)
  %166 = load i32, i32* %164, align 4, !tbaa !8
  %167 = load i32, i32* %163, align 4, !tbaa !8
  %168 = sub nsw i32 %166, %167
  %169 = icmp slt i32 %168, 320
  br i1 %169, label %170, label %269

170:                                              ; preds = %161
  %171 = icmp slt i32 %166, %167
  br i1 %171, label %172, label %175

172:                                              ; preds = %170
  %173 = load i64, i64* @cur, align 8, !tbaa !10
  %174 = getelementptr inbounds [100005 x i64], [100005 x i64]* @res, i64 0, i64 %162
  store i64 %173, i64* %174, align 8, !tbaa !10
  br label %435

175:                                              ; preds = %170
  %176 = sext i32 %167 to i64
  %177 = add i32 %166, 1
  %178 = load i32, i32* @lef, align 4, !tbaa !8
  br label %186

179:                                              ; preds = %224
  %180 = getelementptr inbounds [100005 x i64], [100005 x i64]* @res, i64 0, i64 %162
  store i64 %227, i64* %180, align 8, !tbaa !10
  br i1 %171, label %435, label %181

181:                                              ; preds = %179
  %182 = sext i32 %167 to i64
  %183 = add i32 %166, 1
  %184 = load i32, i32* @lef, align 4, !tbaa !8
  %185 = load i32, i32* @rig, align 4, !tbaa !8
  br label %230

186:                                              ; preds = %175, %224
  %187 = phi i32 [ %178, %175 ], [ %228, %224 ]
  %188 = phi i64 [ %176, %175 ], [ %226, %224 ]
  %189 = icmp eq i32 %187, 100005
  br i1 %189, label %190, label %196

190:                                              ; preds = %186
  %191 = load i64, i64* @cur, align 8, !tbaa !10
  %192 = add nsw i64 %191, 1
  store i64 %192, i64* @cur, align 8, !tbaa !10
  %193 = trunc i64 %188 to i32
  store i32 %193, i32* @rig, align 4, !tbaa !8
  store i32 %193, i32* @lef, align 4, !tbaa !8
  %194 = add nsw i64 %188, 1
  %195 = trunc i64 %194 to i32
  br label %224

196:                                              ; preds = %186
  %197 = add nsw i64 %188, 1
  %198 = trunc i64 %197 to i32
  %199 = icmp eq i32 %187, %198
  br i1 %199, label %200, label %212

200:                                              ; preds = %196
  %201 = add nsw i32 %187, -1
  store i32 %201, i32* @lef, align 4, !tbaa !8
  %202 = load i32, i32* @rig, align 4, !tbaa !8
  %203 = add nsw i32 %202, 1
  %204 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %188
  %205 = load i32, i32* %204, align 4, !tbaa !8
  %206 = icmp sgt i32 %205, %202
  %207 = select i1 %206, i32 %203, i32 %205
  %208 = sext i32 %207 to i64
  %209 = sub nsw i64 %208, %188
  %210 = load i64, i64* @cur, align 8, !tbaa !10
  %211 = add nsw i64 %210, %209
  store i64 %211, i64* @cur, align 8, !tbaa !10
  br label %224

212:                                              ; preds = %196
  %213 = load i32, i32* @rig, align 4, !tbaa !8
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* @rig, align 4, !tbaa !8
  %215 = add nsw i32 %187, -1
  %216 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %188
  %217 = load i32, i32* %216, align 4, !tbaa !8
  %218 = icmp sgt i32 %187, %217
  %219 = select i1 %218, i32 %215, i32 %217
  %220 = sext i32 %219 to i64
  %221 = sub nsw i64 %188, %220
  %222 = load i64, i64* @cur, align 8, !tbaa !10
  %223 = add nsw i64 %222, %221
  store i64 %223, i64* @cur, align 8, !tbaa !10
  br label %224

224:                                              ; preds = %190, %200, %212
  %225 = phi i32 [ %195, %190 ], [ %198, %200 ], [ %198, %212 ]
  %226 = phi i64 [ %194, %190 ], [ %197, %200 ], [ %197, %212 ]
  %227 = phi i64 [ %192, %190 ], [ %211, %200 ], [ %223, %212 ]
  %228 = phi i32 [ %193, %190 ], [ %201, %200 ], [ %187, %212 ]
  %229 = icmp eq i32 %225, %177
  br i1 %229, label %179, label %186, !llvm.loop !20

230:                                              ; preds = %181, %262
  %231 = phi i64 [ %227, %181 ], [ %263, %262 ]
  %232 = phi i32 [ %185, %181 ], [ %264, %262 ]
  %233 = phi i32 [ %184, %181 ], [ %265, %262 ]
  %234 = phi i64 [ %182, %181 ], [ %266, %262 ]
  %235 = icmp eq i32 %233, %232
  br i1 %235, label %236, label %238

236:                                              ; preds = %230
  %237 = add nsw i64 %231, -1
  store i64 %237, i64* @cur, align 8, !tbaa !10
  store i32 100005, i32* @lef, align 4, !tbaa !8
  br label %262

238:                                              ; preds = %230
  %239 = trunc i64 %234 to i32
  %240 = icmp eq i32 %233, %239
  br i1 %240, label %241, label %252

241:                                              ; preds = %238
  %242 = trunc i64 %234 to i32
  %243 = add i32 %242, 1
  store i32 %243, i32* @lef, align 4, !tbaa !8
  %244 = add nsw i32 %232, 1
  %245 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %234
  %246 = load i32, i32* %245, align 4, !tbaa !8
  %247 = icmp sgt i32 %246, %232
  %248 = select i1 %247, i32 %244, i32 %246
  %249 = sext i32 %248 to i64
  %250 = sub i64 %234, %249
  %251 = add i64 %250, %231
  store i64 %251, i64* @cur, align 8, !tbaa !10
  br label %262

252:                                              ; preds = %238
  %253 = add nsw i32 %232, -1
  store i32 %253, i32* @rig, align 4, !tbaa !8
  %254 = add nsw i32 %233, -1
  %255 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %234
  %256 = load i32, i32* %255, align 4, !tbaa !8
  %257 = icmp sgt i32 %233, %256
  %258 = select i1 %257, i32 %254, i32 %256
  %259 = sext i32 %258 to i64
  %260 = sub i64 %259, %234
  %261 = add i64 %260, %231
  store i64 %261, i64* @cur, align 8, !tbaa !10
  br label %262

262:                                              ; preds = %236, %241, %252
  %263 = phi i64 [ %237, %236 ], [ %251, %241 ], [ %261, %252 ]
  %264 = phi i32 [ %232, %236 ], [ %232, %241 ], [ %253, %252 ]
  %265 = phi i32 [ 100005, %236 ], [ %243, %241 ], [ %233, %252 ]
  %266 = add nsw i64 %234, 1
  %267 = trunc i64 %266 to i32
  %268 = icmp eq i32 %183, %267
  br i1 %268, label %435, label %230, !llvm.loop !21

269:                                              ; preds = %161
  %270 = sdiv i32 %167, 320
  %271 = add nsw i32 %270, 1
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [320 x %"class.std::vector"], [320 x %"class.std::vector"]* @quer, i64 0, i64 %272, i32 0, i32 0, i32 0, i32 1
  %274 = load %"struct.std::pair"*, %"struct.std::pair"** %273, align 8, !tbaa !22
  %275 = ptrtoint %"struct.std::pair"* %274 to i64
  %276 = getelementptr inbounds [320 x %"class.std::vector"], [320 x %"class.std::vector"]* @quer, i64 0, i64 %272, i32 0, i32 0, i32 0, i32 2
  %277 = load %"struct.std::pair"*, %"struct.std::pair"** %276, align 8, !tbaa !23
  %278 = icmp eq %"struct.std::pair"* %274, %277
  br i1 %278, label %286, label %279

279:                                              ; preds = %269
  %280 = bitcast %"struct.std::pair"* %274 to i64*
  %281 = shl nuw nsw i64 %162, 32
  %282 = zext i32 %166 to i64
  %283 = or i64 %281, %282
  store i64 %283, i64* %280, align 4
  %284 = load %"struct.std::pair"*, %"struct.std::pair"** %273, align 8, !tbaa !22
  %285 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %284, i64 1
  store %"struct.std::pair"* %285, %"struct.std::pair"** %273, align 8, !tbaa !22
  br label %435

286:                                              ; preds = %269
  %287 = getelementptr inbounds [320 x %"class.std::vector"], [320 x %"class.std::vector"]* @quer, i64 0, i64 %272, i32 0, i32 0, i32 0, i32 0
  %288 = load %"struct.std::pair"*, %"struct.std::pair"** %287, align 8, !tbaa !3
  %289 = ptrtoint %"struct.std::pair"* %288 to i64
  %290 = ptrtoint %"struct.std::pair"* %274 to i64
  %291 = ptrtoint %"struct.std::pair"* %288 to i64
  %292 = sub i64 %290, %291
  %293 = ashr exact i64 %292, 3
  %294 = icmp eq i64 %292, 9223372036854775800
  br i1 %294, label %295, label %296

295:                                              ; preds = %286
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #16
  unreachable

296:                                              ; preds = %286
  %297 = icmp eq i64 %292, 0
  %298 = select i1 %297, i64 1, i64 %293
  %299 = add nsw i64 %298, %293
  %300 = icmp ult i64 %299, %293
  %301 = icmp ugt i64 %299, 1152921504606846975
  %302 = or i1 %300, %301
  %303 = select i1 %302, i64 1152921504606846975, i64 %299
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %309, label %305

305:                                              ; preds = %296
  %306 = shl nuw nsw i64 %303, 3
  %307 = tail call noalias nonnull i8* @_Znwm(i64 %306) #17
  %308 = bitcast i8* %307 to %"struct.std::pair"*
  br label %309

309:                                              ; preds = %305, %296
  %310 = phi %"struct.std::pair"* [ %308, %305 ], [ null, %296 ]
  %311 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %310, i64 %293
  %312 = bitcast %"struct.std::pair"* %311 to i64*
  %313 = shl nuw nsw i64 %162, 32
  %314 = zext i32 %166 to i64
  %315 = or i64 %313, %314
  store i64 %315, i64* %312, align 4
  %316 = icmp eq %"struct.std::pair"* %288, %274
  br i1 %316, label %427, label %317

317:                                              ; preds = %309
  %318 = add i64 %275, -8
  %319 = sub i64 %318, %289
  %320 = lshr i64 %319, 3
  %321 = add nuw nsw i64 %320, 1
  %322 = icmp ult i64 %319, 24
  br i1 %322, label %415, label %323

323:                                              ; preds = %317
  %324 = add i64 %275, -8
  %325 = sub i64 %324, %289
  %326 = lshr i64 %325, 3
  %327 = add nuw nsw i64 %326, 1
  %328 = getelementptr %"struct.std::pair", %"struct.std::pair"* %310, i64 %327
  %329 = add nuw nsw i64 %326, 1
  %330 = getelementptr %"struct.std::pair", %"struct.std::pair"* %288, i64 %329
  %331 = icmp ult %"struct.std::pair"* %310, %330
  %332 = icmp ult %"struct.std::pair"* %288, %328
  %333 = and i1 %331, %332
  br i1 %333, label %415, label %334

334:                                              ; preds = %323
  %335 = and i64 %321, 4611686018427387900
  %336 = getelementptr %"struct.std::pair", %"struct.std::pair"* %310, i64 %335
  %337 = getelementptr %"struct.std::pair", %"struct.std::pair"* %288, i64 %335
  %338 = add nsw i64 %335, -4
  %339 = lshr exact i64 %338, 2
  %340 = add nuw nsw i64 %339, 1
  %341 = and i64 %340, 3
  %342 = icmp ult i64 %338, 12
  br i1 %342, label %394, label %343

343:                                              ; preds = %334
  %344 = and i64 %340, 9223372036854775804
  br label %345

345:                                              ; preds = %345, %343
  %346 = phi i64 [ 0, %343 ], [ %391, %345 ]
  %347 = phi i64 [ %344, %343 ], [ %392, %345 ]
  %348 = getelementptr %"struct.std::pair", %"struct.std::pair"* %310, i64 %346
  %349 = getelementptr %"struct.std::pair", %"struct.std::pair"* %288, i64 %346
  %350 = bitcast %"struct.std::pair"* %349 to <2 x i64>*
  %351 = load <2 x i64>, <2 x i64>* %350, align 4, !alias.scope !24
  %352 = getelementptr %"struct.std::pair", %"struct.std::pair"* %349, i64 2
  %353 = bitcast %"struct.std::pair"* %352 to <2 x i64>*
  %354 = load <2 x i64>, <2 x i64>* %353, align 4, !alias.scope !24
  %355 = bitcast %"struct.std::pair"* %348 to <2 x i64>*
  store <2 x i64> %351, <2 x i64>* %355, align 4, !alias.scope !27, !noalias !24
  %356 = getelementptr %"struct.std::pair", %"struct.std::pair"* %348, i64 2
  %357 = bitcast %"struct.std::pair"* %356 to <2 x i64>*
  store <2 x i64> %354, <2 x i64>* %357, align 4, !alias.scope !27, !noalias !24
  %358 = or i64 %346, 4
  %359 = getelementptr %"struct.std::pair", %"struct.std::pair"* %310, i64 %358
  %360 = getelementptr %"struct.std::pair", %"struct.std::pair"* %288, i64 %358
  %361 = bitcast %"struct.std::pair"* %360 to <2 x i64>*
  %362 = load <2 x i64>, <2 x i64>* %361, align 4, !alias.scope !24
  %363 = getelementptr %"struct.std::pair", %"struct.std::pair"* %360, i64 2
  %364 = bitcast %"struct.std::pair"* %363 to <2 x i64>*
  %365 = load <2 x i64>, <2 x i64>* %364, align 4, !alias.scope !24
  %366 = bitcast %"struct.std::pair"* %359 to <2 x i64>*
  store <2 x i64> %362, <2 x i64>* %366, align 4, !alias.scope !27, !noalias !24
  %367 = getelementptr %"struct.std::pair", %"struct.std::pair"* %359, i64 2
  %368 = bitcast %"struct.std::pair"* %367 to <2 x i64>*
  store <2 x i64> %365, <2 x i64>* %368, align 4, !alias.scope !27, !noalias !24
  %369 = or i64 %346, 8
  %370 = getelementptr %"struct.std::pair", %"struct.std::pair"* %310, i64 %369
  %371 = getelementptr %"struct.std::pair", %"struct.std::pair"* %288, i64 %369
  %372 = bitcast %"struct.std::pair"* %371 to <2 x i64>*
  %373 = load <2 x i64>, <2 x i64>* %372, align 4, !alias.scope !24
  %374 = getelementptr %"struct.std::pair", %"struct.std::pair"* %371, i64 2
  %375 = bitcast %"struct.std::pair"* %374 to <2 x i64>*
  %376 = load <2 x i64>, <2 x i64>* %375, align 4, !alias.scope !24
  %377 = bitcast %"struct.std::pair"* %370 to <2 x i64>*
  store <2 x i64> %373, <2 x i64>* %377, align 4, !alias.scope !27, !noalias !24
  %378 = getelementptr %"struct.std::pair", %"struct.std::pair"* %370, i64 2
  %379 = bitcast %"struct.std::pair"* %378 to <2 x i64>*
  store <2 x i64> %376, <2 x i64>* %379, align 4, !alias.scope !27, !noalias !24
  %380 = or i64 %346, 12
  %381 = getelementptr %"struct.std::pair", %"struct.std::pair"* %310, i64 %380
  %382 = getelementptr %"struct.std::pair", %"struct.std::pair"* %288, i64 %380
  %383 = bitcast %"struct.std::pair"* %382 to <2 x i64>*
  %384 = load <2 x i64>, <2 x i64>* %383, align 4, !alias.scope !24
  %385 = getelementptr %"struct.std::pair", %"struct.std::pair"* %382, i64 2
  %386 = bitcast %"struct.std::pair"* %385 to <2 x i64>*
  %387 = load <2 x i64>, <2 x i64>* %386, align 4, !alias.scope !24
  %388 = bitcast %"struct.std::pair"* %381 to <2 x i64>*
  store <2 x i64> %384, <2 x i64>* %388, align 4, !alias.scope !27, !noalias !24
  %389 = getelementptr %"struct.std::pair", %"struct.std::pair"* %381, i64 2
  %390 = bitcast %"struct.std::pair"* %389 to <2 x i64>*
  store <2 x i64> %387, <2 x i64>* %390, align 4, !alias.scope !27, !noalias !24
  %391 = add nuw i64 %346, 16
  %392 = add i64 %347, -4
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %394, label %345, !llvm.loop !29

394:                                              ; preds = %345, %334
  %395 = phi i64 [ 0, %334 ], [ %391, %345 ]
  %396 = icmp eq i64 %341, 0
  br i1 %396, label %413, label %397

397:                                              ; preds = %394, %397
  %398 = phi i64 [ %410, %397 ], [ %395, %394 ]
  %399 = phi i64 [ %411, %397 ], [ %341, %394 ]
  %400 = getelementptr %"struct.std::pair", %"struct.std::pair"* %310, i64 %398
  %401 = getelementptr %"struct.std::pair", %"struct.std::pair"* %288, i64 %398
  %402 = bitcast %"struct.std::pair"* %401 to <2 x i64>*
  %403 = load <2 x i64>, <2 x i64>* %402, align 4, !alias.scope !24
  %404 = getelementptr %"struct.std::pair", %"struct.std::pair"* %401, i64 2
  %405 = bitcast %"struct.std::pair"* %404 to <2 x i64>*
  %406 = load <2 x i64>, <2 x i64>* %405, align 4, !alias.scope !24
  %407 = bitcast %"struct.std::pair"* %400 to <2 x i64>*
  store <2 x i64> %403, <2 x i64>* %407, align 4, !alias.scope !27, !noalias !24
  %408 = getelementptr %"struct.std::pair", %"struct.std::pair"* %400, i64 2
  %409 = bitcast %"struct.std::pair"* %408 to <2 x i64>*
  store <2 x i64> %406, <2 x i64>* %409, align 4, !alias.scope !27, !noalias !24
  %410 = add nuw i64 %398, 4
  %411 = add i64 %399, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %397, !llvm.loop !31

413:                                              ; preds = %397, %394
  %414 = icmp eq i64 %321, %335
  br i1 %414, label %427, label %415

415:                                              ; preds = %323, %317, %413
  %416 = phi %"struct.std::pair"* [ %310, %323 ], [ %310, %317 ], [ %336, %413 ]
  %417 = phi %"struct.std::pair"* [ %288, %323 ], [ %288, %317 ], [ %337, %413 ]
  br label %418

418:                                              ; preds = %415, %418
  %419 = phi %"struct.std::pair"* [ %425, %418 ], [ %416, %415 ]
  %420 = phi %"struct.std::pair"* [ %424, %418 ], [ %417, %415 ]
  %421 = bitcast %"struct.std::pair"* %420 to i64*
  %422 = bitcast %"struct.std::pair"* %419 to i64*
  %423 = load i64, i64* %421, align 4
  store i64 %423, i64* %422, align 4
  %424 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %420, i64 1
  %425 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %419, i64 1
  %426 = icmp eq %"struct.std::pair"* %424, %274
  br i1 %426, label %427, label %418, !llvm.loop !32

427:                                              ; preds = %418, %413, %309
  %428 = phi %"struct.std::pair"* [ %310, %309 ], [ %336, %413 ], [ %425, %418 ]
  %429 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %428, i64 1
  %430 = icmp eq %"struct.std::pair"* %288, null
  br i1 %430, label %433, label %431

431:                                              ; preds = %427
  %432 = bitcast %"struct.std::pair"* %288 to i8*
  tail call void @_ZdlPv(i8* nonnull %432) #15
  br label %433

433:                                              ; preds = %427, %431
  store %"struct.std::pair"* %310, %"struct.std::pair"** %287, align 8, !tbaa !3
  store %"struct.std::pair"* %429, %"struct.std::pair"** %273, align 8, !tbaa !22
  %434 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %310, i64 %303
  store %"struct.std::pair"* %434, %"struct.std::pair"** %276, align 8, !tbaa !23
  br label %435

435:                                              ; preds = %262, %172, %179, %433, %279
  %436 = add nuw nsw i64 %162, 1
  %437 = load i32, i32* @q, align 4, !tbaa !8
  %438 = sext i32 %437 to i64
  %439 = icmp slt i64 %436, %438
  br i1 %439, label %161, label %155, !llvm.loop !33

440:                                              ; preds = %723
  %441 = load i32, i32* @q, align 4, !tbaa !8
  br label %442

442:                                              ; preds = %440, %157
  %443 = phi i32 [ %441, %440 ], [ %158, %157 ]
  %444 = icmp sgt i32 %443, 0
  br i1 %444, label %730, label %729

445:                                              ; preds = %157, %723
  %446 = phi i64 [ %724, %723 ], [ 0, %157 ]
  %447 = phi i32 [ %726, %723 ], [ 0, %157 ]
  %448 = getelementptr inbounds [320 x %"class.std::vector"], [320 x %"class.std::vector"]* @quer, i64 0, i64 %446, i32 0, i32 0, i32 0, i32 0
  %449 = load %"struct.std::pair"*, %"struct.std::pair"** %448, align 8, !tbaa !12
  %450 = getelementptr inbounds [320 x %"class.std::vector"], [320 x %"class.std::vector"]* @quer, i64 0, i64 %446, i32 0, i32 0, i32 0, i32 1
  %451 = load %"struct.std::pair"*, %"struct.std::pair"** %450, align 8, !tbaa !12
  %452 = icmp eq %"struct.std::pair"* %449, %451
  br i1 %452, label %463, label %453

453:                                              ; preds = %445
  %454 = ptrtoint %"struct.std::pair"* %451 to i64
  %455 = ptrtoint %"struct.std::pair"* %449 to i64
  %456 = sub i64 %454, %455
  %457 = ashr exact i64 %456, 3
  %458 = tail call i64 @llvm.ctlz.i64(i64 %457, i1 true) #15, !range !34
  %459 = shl nuw nsw i64 %458, 1
  %460 = xor i64 %459, 126
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_(%"struct.std::pair"* %449, %"struct.std::pair"* %451, i64 %460)
  tail call void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_T0_(%"struct.std::pair"* %449, %"struct.std::pair"* %451)
  %461 = load %"struct.std::pair"*, %"struct.std::pair"** %450, align 8, !tbaa !22
  %462 = load %"struct.std::pair"*, %"struct.std::pair"** %448, align 8, !tbaa !3
  br label %463

463:                                              ; preds = %445, %453
  %464 = phi %"struct.std::pair"* [ %449, %445 ], [ %462, %453 ]
  %465 = phi %"struct.std::pair"* [ %449, %445 ], [ %461, %453 ]
  %466 = ptrtoint %"struct.std::pair"* %465 to i64
  %467 = ptrtoint %"struct.std::pair"* %464 to i64
  %468 = sub i64 %466, %467
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %639, label %470

470:                                              ; preds = %463
  %471 = ashr exact i64 %468, 3
  %472 = call i64 @llvm.umax.i64(i64 %471, i64 1)
  br label %480

473:                                              ; preds = %633
  %474 = icmp slt i32 %635, %447
  br i1 %474, label %475, label %639

475:                                              ; preds = %473
  %476 = sext i32 %635 to i64
  %477 = sext i32 %447 to i64
  %478 = load i32, i32* @lef, align 4, !tbaa !8
  %479 = load i32, i32* @rig, align 4, !tbaa !8
  br label %647

480:                                              ; preds = %470, %633
  %481 = phi i64 [ 0, %470 ], [ %637, %633 ]
  %482 = phi i32 [ %447, %470 ], [ %496, %633 ]
  %483 = phi i32 [ %447, %470 ], [ %635, %633 ]
  %484 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %464, i64 %481, i32 1
  %485 = load i32, i32* %484, align 4, !tbaa !35
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds [100005 x i32], [100005 x i32]* @qr, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4, !tbaa !8
  %489 = icmp sgt i32 %482, %488
  br i1 %489, label %495, label %490

490:                                              ; preds = %480
  %491 = sext i32 %482 to i64
  %492 = sext i32 %488 to i64
  %493 = add i32 %488, 1
  %494 = load i32, i32* @lef, align 4, !tbaa !8
  br label %504

495:                                              ; preds = %540, %480
  %496 = phi i32 [ %482, %480 ], [ %493, %540 ]
  %497 = getelementptr inbounds [100005 x i32], [100005 x i32]* @ql, i64 0, i64 %486
  %498 = load i32, i32* %497, align 4, !tbaa !8
  %499 = icmp slt i32 %498, %483
  br i1 %499, label %500, label %545

500:                                              ; preds = %495
  %501 = sext i32 %483 to i64
  %502 = sext i32 %498 to i64
  %503 = load i32, i32* @lef, align 4, !tbaa !8
  br label %555

504:                                              ; preds = %490, %540
  %505 = phi i32 [ %494, %490 ], [ %541, %540 ]
  %506 = phi i64 [ %491, %490 ], [ %507, %540 ]
  %507 = add nsw i64 %506, 1
  %508 = icmp eq i32 %505, 100005
  br i1 %508, label %509, label %513

509:                                              ; preds = %504
  %510 = load i64, i64* @cur, align 8, !tbaa !10
  %511 = add nsw i64 %510, 1
  store i64 %511, i64* @cur, align 8, !tbaa !10
  %512 = trunc i64 %506 to i32
  store i32 %512, i32* @rig, align 4, !tbaa !8
  store i32 %512, i32* @lef, align 4, !tbaa !8
  br label %540

513:                                              ; preds = %504
  %514 = trunc i64 %507 to i32
  %515 = icmp eq i32 %505, %514
  br i1 %515, label %516, label %528

516:                                              ; preds = %513
  %517 = add nsw i32 %505, -1
  store i32 %517, i32* @lef, align 4, !tbaa !8
  %518 = load i32, i32* @rig, align 4, !tbaa !8
  %519 = add nsw i32 %518, 1
  %520 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %506
  %521 = load i32, i32* %520, align 4, !tbaa !8
  %522 = icmp sgt i32 %521, %518
  %523 = select i1 %522, i32 %519, i32 %521
  %524 = sext i32 %523 to i64
  %525 = sub nsw i64 %524, %506
  %526 = load i64, i64* @cur, align 8, !tbaa !10
  %527 = add nsw i64 %526, %525
  store i64 %527, i64* @cur, align 8, !tbaa !10
  br label %540

528:                                              ; preds = %513
  %529 = load i32, i32* @rig, align 4, !tbaa !8
  %530 = add nsw i32 %529, 1
  store i32 %530, i32* @rig, align 4, !tbaa !8
  %531 = add nsw i32 %505, -1
  %532 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %506
  %533 = load i32, i32* %532, align 4, !tbaa !8
  %534 = icmp sgt i32 %505, %533
  %535 = select i1 %534, i32 %531, i32 %533
  %536 = sext i32 %535 to i64
  %537 = sub nsw i64 %506, %536
  %538 = load i64, i64* @cur, align 8, !tbaa !10
  %539 = add nsw i64 %538, %537
  store i64 %539, i64* @cur, align 8, !tbaa !10
  br label %540

540:                                              ; preds = %509, %516, %528
  %541 = phi i32 [ %512, %509 ], [ %517, %516 ], [ %505, %528 ]
  %542 = icmp eq i64 %506, %492
  br i1 %542, label %495, label %504, !llvm.loop !37

543:                                              ; preds = %591
  %544 = trunc i64 %558 to i32
  br label %545

545:                                              ; preds = %543, %495
  %546 = phi i32 [ %483, %495 ], [ %544, %543 ]
  %547 = icmp slt i32 %546, %498
  br i1 %547, label %550, label %548

548:                                              ; preds = %545
  %549 = load i64, i64* @cur, align 8, !tbaa !10
  br label %633

550:                                              ; preds = %545
  %551 = sext i32 %546 to i64
  %552 = sext i32 %498 to i64
  %553 = load i32, i32* @lef, align 4, !tbaa !8
  %554 = load i32, i32* @rig, align 4, !tbaa !8
  br label %594

555:                                              ; preds = %500, %591
  %556 = phi i32 [ %503, %500 ], [ %592, %591 ]
  %557 = phi i64 [ %501, %500 ], [ %558, %591 ]
  %558 = add nsw i64 %557, -1
  %559 = icmp eq i32 %556, 100005
  br i1 %559, label %560, label %564

560:                                              ; preds = %555
  %561 = load i64, i64* @cur, align 8, !tbaa !10
  %562 = add nsw i64 %561, 1
  store i64 %562, i64* @cur, align 8, !tbaa !10
  %563 = trunc i64 %558 to i32
  store i32 %563, i32* @rig, align 4, !tbaa !8
  store i32 %563, i32* @lef, align 4, !tbaa !8
  br label %591

564:                                              ; preds = %555
  %565 = trunc i64 %557 to i32
  %566 = icmp eq i32 %556, %565
  br i1 %566, label %567, label %579

567:                                              ; preds = %564
  %568 = add nsw i32 %556, -1
  store i32 %568, i32* @lef, align 4, !tbaa !8
  %569 = load i32, i32* @rig, align 4, !tbaa !8
  %570 = add nsw i32 %569, 1
  %571 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %558
  %572 = load i32, i32* %571, align 4, !tbaa !8
  %573 = icmp sgt i32 %572, %569
  %574 = select i1 %573, i32 %570, i32 %572
  %575 = sext i32 %574 to i64
  %576 = sub nsw i64 %575, %558
  %577 = load i64, i64* @cur, align 8, !tbaa !10
  %578 = add nsw i64 %577, %576
  store i64 %578, i64* @cur, align 8, !tbaa !10
  br label %591

579:                                              ; preds = %564
  %580 = load i32, i32* @rig, align 4, !tbaa !8
  %581 = add nsw i32 %580, 1
  store i32 %581, i32* @rig, align 4, !tbaa !8
  %582 = add nsw i32 %556, -1
  %583 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %558
  %584 = load i32, i32* %583, align 4, !tbaa !8
  %585 = icmp sgt i32 %556, %584
  %586 = select i1 %585, i32 %582, i32 %584
  %587 = sext i32 %586 to i64
  %588 = sub nsw i64 %558, %587
  %589 = load i64, i64* @cur, align 8, !tbaa !10
  %590 = add nsw i64 %589, %588
  store i64 %590, i64* @cur, align 8, !tbaa !10
  br label %591

591:                                              ; preds = %560, %567, %579
  %592 = phi i32 [ %563, %560 ], [ %568, %567 ], [ %556, %579 ]
  %593 = icmp sgt i64 %558, %502
  br i1 %593, label %555, label %543, !llvm.loop !38

594:                                              ; preds = %550, %628
  %595 = phi i32 [ %554, %550 ], [ %630, %628 ]
  %596 = phi i32 [ %553, %550 ], [ %631, %628 ]
  %597 = phi i64 [ %551, %550 ], [ %598, %628 ]
  %598 = add nsw i64 %597, 1
  %599 = icmp eq i32 %596, %595
  br i1 %599, label %600, label %603

600:                                              ; preds = %594
  %601 = load i64, i64* @cur, align 8, !tbaa !10
  %602 = add nsw i64 %601, -1
  store i64 %602, i64* @cur, align 8, !tbaa !10
  store i32 100005, i32* @lef, align 4, !tbaa !8
  br label %628

603:                                              ; preds = %594
  %604 = trunc i64 %597 to i32
  %605 = icmp eq i32 %596, %604
  br i1 %605, label %606, label %617

606:                                              ; preds = %603
  %607 = trunc i64 %598 to i32
  store i32 %607, i32* @lef, align 4, !tbaa !8
  %608 = add nsw i32 %595, 1
  %609 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %597
  %610 = load i32, i32* %609, align 4, !tbaa !8
  %611 = icmp sgt i32 %610, %595
  %612 = select i1 %611, i32 %608, i32 %610
  %613 = sext i32 %612 to i64
  %614 = sub i64 %597, %613
  %615 = load i64, i64* @cur, align 8, !tbaa !10
  %616 = add i64 %614, %615
  store i64 %616, i64* @cur, align 8, !tbaa !10
  br label %628

617:                                              ; preds = %603
  %618 = add nsw i32 %595, -1
  store i32 %618, i32* @rig, align 4, !tbaa !8
  %619 = add nsw i32 %596, -1
  %620 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %597
  %621 = load i32, i32* %620, align 4, !tbaa !8
  %622 = icmp sgt i32 %596, %621
  %623 = select i1 %622, i32 %619, i32 %621
  %624 = sext i32 %623 to i64
  %625 = sub i64 %624, %597
  %626 = load i64, i64* @cur, align 8, !tbaa !10
  %627 = add i64 %625, %626
  store i64 %627, i64* @cur, align 8, !tbaa !10
  br label %628

628:                                              ; preds = %600, %606, %617
  %629 = phi i64 [ %602, %600 ], [ %616, %606 ], [ %627, %617 ]
  %630 = phi i32 [ %595, %600 ], [ %595, %606 ], [ %618, %617 ]
  %631 = phi i32 [ 100005, %600 ], [ %607, %606 ], [ %596, %617 ]
  %632 = icmp eq i64 %598, %552
  br i1 %632, label %633, label %594, !llvm.loop !39

633:                                              ; preds = %628, %548
  %634 = phi i64 [ %549, %548 ], [ %629, %628 ]
  %635 = phi i32 [ %546, %548 ], [ %498, %628 ]
  %636 = getelementptr inbounds [100005 x i64], [100005 x i64]* @res, i64 0, i64 %486
  store i64 %634, i64* %636, align 8, !tbaa !10
  %637 = add nuw nsw i64 %481, 1
  %638 = icmp eq i64 %637, %472
  br i1 %638, label %473, label %480, !llvm.loop !40

639:                                              ; preds = %681, %463, %473
  %640 = phi i32 [ %496, %473 ], [ %447, %463 ], [ %496, %681 ]
  %641 = icmp slt i32 %447, %640
  br i1 %641, label %642, label %723

642:                                              ; preds = %639
  %643 = sext i32 %640 to i64
  %644 = sext i32 %447 to i64
  %645 = load i32, i32* @lef, align 4, !tbaa !8
  %646 = load i32, i32* @rig, align 4, !tbaa !8
  br label %685

647:                                              ; preds = %475, %681
  %648 = phi i32 [ %479, %475 ], [ %682, %681 ]
  %649 = phi i32 [ %478, %475 ], [ %683, %681 ]
  %650 = phi i64 [ %476, %475 ], [ %651, %681 ]
  %651 = add nsw i64 %650, 1
  %652 = icmp eq i32 %649, %648
  br i1 %652, label %653, label %656

653:                                              ; preds = %647
  %654 = load i64, i64* @cur, align 8, !tbaa !10
  %655 = add nsw i64 %654, -1
  store i64 %655, i64* @cur, align 8, !tbaa !10
  store i32 100005, i32* @lef, align 4, !tbaa !8
  br label %681

656:                                              ; preds = %647
  %657 = trunc i64 %650 to i32
  %658 = icmp eq i32 %649, %657
  br i1 %658, label %659, label %670

659:                                              ; preds = %656
  %660 = trunc i64 %651 to i32
  store i32 %660, i32* @lef, align 4, !tbaa !8
  %661 = add nsw i32 %648, 1
  %662 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %650
  %663 = load i32, i32* %662, align 4, !tbaa !8
  %664 = icmp sgt i32 %663, %648
  %665 = select i1 %664, i32 %661, i32 %663
  %666 = sext i32 %665 to i64
  %667 = sub i64 %650, %666
  %668 = load i64, i64* @cur, align 8, !tbaa !10
  %669 = add i64 %667, %668
  store i64 %669, i64* @cur, align 8, !tbaa !10
  br label %681

670:                                              ; preds = %656
  %671 = add nsw i32 %648, -1
  store i32 %671, i32* @rig, align 4, !tbaa !8
  %672 = add nsw i32 %649, -1
  %673 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %650
  %674 = load i32, i32* %673, align 4, !tbaa !8
  %675 = icmp sgt i32 %649, %674
  %676 = select i1 %675, i32 %672, i32 %674
  %677 = sext i32 %676 to i64
  %678 = sub i64 %677, %650
  %679 = load i64, i64* @cur, align 8, !tbaa !10
  %680 = add i64 %678, %679
  store i64 %680, i64* @cur, align 8, !tbaa !10
  br label %681

681:                                              ; preds = %653, %659, %670
  %682 = phi i32 [ %648, %653 ], [ %648, %659 ], [ %671, %670 ]
  %683 = phi i32 [ 100005, %653 ], [ %660, %659 ], [ %649, %670 ]
  %684 = icmp slt i64 %651, %477
  br i1 %684, label %647, label %639, !llvm.loop !41

685:                                              ; preds = %642, %719
  %686 = phi i32 [ %646, %642 ], [ %720, %719 ]
  %687 = phi i32 [ %645, %642 ], [ %721, %719 ]
  %688 = phi i64 [ %643, %642 ], [ %689, %719 ]
  %689 = add nsw i64 %688, -1
  %690 = icmp eq i32 %687, %686
  br i1 %690, label %691, label %694

691:                                              ; preds = %685
  %692 = load i64, i64* @cur, align 8, !tbaa !10
  %693 = add nsw i64 %692, -1
  store i64 %693, i64* @cur, align 8, !tbaa !10
  store i32 100005, i32* @lef, align 4, !tbaa !8
  br label %719

694:                                              ; preds = %685
  %695 = trunc i64 %689 to i32
  %696 = icmp eq i32 %687, %695
  br i1 %696, label %697, label %708

697:                                              ; preds = %694
  %698 = trunc i64 %688 to i32
  store i32 %698, i32* @lef, align 4, !tbaa !8
  %699 = add nsw i32 %686, 1
  %700 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %689
  %701 = load i32, i32* %700, align 4, !tbaa !8
  %702 = icmp sgt i32 %701, %686
  %703 = select i1 %702, i32 %699, i32 %701
  %704 = sext i32 %703 to i64
  %705 = sub i64 %689, %704
  %706 = load i64, i64* @cur, align 8, !tbaa !10
  %707 = add i64 %705, %706
  store i64 %707, i64* @cur, align 8, !tbaa !10
  br label %719

708:                                              ; preds = %694
  %709 = add nsw i32 %686, -1
  store i32 %709, i32* @rig, align 4, !tbaa !8
  %710 = add nsw i32 %687, -1
  %711 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %689
  %712 = load i32, i32* %711, align 4, !tbaa !8
  %713 = icmp sgt i32 %687, %712
  %714 = select i1 %713, i32 %710, i32 %712
  %715 = sext i32 %714 to i64
  %716 = sub i64 %715, %689
  %717 = load i64, i64* @cur, align 8, !tbaa !10
  %718 = add i64 %716, %717
  store i64 %718, i64* @cur, align 8, !tbaa !10
  br label %719

719:                                              ; preds = %691, %697, %708
  %720 = phi i32 [ %686, %691 ], [ %686, %697 ], [ %709, %708 ]
  %721 = phi i32 [ 100005, %691 ], [ %698, %697 ], [ %687, %708 ]
  %722 = icmp sgt i64 %689, %644
  br i1 %722, label %685, label %723, !llvm.loop !42

723:                                              ; preds = %719, %639
  %724 = add nuw i64 %446, 1
  %725 = trunc i64 %724 to i32
  %726 = mul nsw i32 %725, 320
  %727 = load i32, i32* @n, align 4, !tbaa !8
  %728 = icmp sgt i32 %726, %727
  br i1 %728, label %440, label %445, !llvm.loop !43

729:                                              ; preds = %730, %442
  ret i32 0

730:                                              ; preds = %442, %730
  %731 = phi i64 [ %735, %730 ], [ 0, %442 ]
  %732 = getelementptr inbounds [100005 x i64], [100005 x i64]* @res, i64 0, i64 %731
  %733 = load i64, i64* %732, align 8, !tbaa !10
  %734 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 %733)
  %735 = add nuw nsw i64 %731, 1
  %736 = load i32, i32* @q, align 4, !tbaa !8
  %737 = sext i32 %736 to i64
  %738 = icmp slt i64 %735, %737
  br i1 %738, label %730, label %729, !llvm.loop !44
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_(%"struct.std::pair"* %0, %"struct.std::pair"* %1, i64 %2) local_unnamed_addr #10 comdat {
  %4 = ptrtoint %"struct.std::pair"* %0 to i64
  %5 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 1
  %6 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1
  %8 = ptrtoint %"struct.std::pair"* %1 to i64
  %9 = sub i64 %8, %4
  %10 = icmp sgt i64 %9, 128
  br i1 %10, label %11, label %248

11:                                               ; preds = %3, %243
  %12 = phi i64 [ %246, %243 ], [ %9, %3 ]
  %13 = phi i64 [ %244, %243 ], [ %2, %3 ]
  %14 = phi %"struct.std::pair"* [ %205, %243 ], [ %1, %3 ]
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %16, label %196

16:                                               ; preds = %11
  %17 = lshr exact i64 %12, 3
  %18 = add nsw i64 %17, -2
  %19 = lshr i64 %18, 1
  %20 = add nsw i64 %17, -1
  %21 = lshr i64 %20, 1
  %22 = and i64 %12, 8
  %23 = icmp eq i64 %22, 0
  %24 = lshr i64 %18, 1
  %25 = or i64 %18, 1
  %26 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %25, i32 0
  %27 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %24, i32 0
  %28 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %25, i32 1
  %29 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %24, i32 1
  br label %30

30:                                               ; preds = %97, %16
  %31 = phi i64 [ %19, %16 ], [ %102, %97 ]
  %32 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %31
  %33 = bitcast %"struct.std::pair"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = icmp sgt i64 %21, %31
  br i1 %35, label %36, label %63

36:                                               ; preds = %30, %55
  %37 = phi i64 [ %57, %55 ], [ %31, %30 ]
  %38 = shl i64 %37, 1
  %39 = add i64 %38, 2
  %40 = or i64 %38, 1
  %41 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %39, i32 0
  %42 = load i32, i32* %41, align 4, !tbaa !45
  %43 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %40, i32 0
  %44 = load i32, i32* %43, align 4, !tbaa !45
  %45 = icmp slt i32 %42, %44
  br i1 %45, label %54, label %46

46:                                               ; preds = %36
  %47 = icmp slt i32 %44, %42
  br i1 %47, label %55, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %39, i32 1
  %50 = load i32, i32* %49, align 4, !tbaa !35
  %51 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %40, i32 1
  %52 = load i32, i32* %51, align 4, !tbaa !35
  %53 = icmp slt i32 %50, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %48, %36
  br label %55

55:                                               ; preds = %54, %48, %46
  %56 = phi i32 [ %44, %54 ], [ %42, %48 ], [ %42, %46 ]
  %57 = phi i64 [ %40, %54 ], [ %39, %48 ], [ %39, %46 ]
  %58 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %37, i32 0
  store i32 %56, i32* %58, align 4, !tbaa !45
  %59 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %57, i32 1
  %60 = load i32, i32* %59, align 4, !tbaa !8
  %61 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %37, i32 1
  store i32 %60, i32* %61, align 4, !tbaa !35
  %62 = icmp slt i64 %57, %21
  br i1 %62, label %36, label %63, !llvm.loop !46

63:                                               ; preds = %55, %30
  %64 = phi i64 [ %31, %30 ], [ %57, %55 ]
  %65 = icmp eq i64 %64, %24
  %66 = select i1 %23, i1 %65, i1 false
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = load i32, i32* %26, align 4, !tbaa !8
  store i32 %68, i32* %27, align 4, !tbaa !45
  %69 = load i32, i32* %28, align 4, !tbaa !8
  store i32 %69, i32* %29, align 4, !tbaa !35
  br label %70

70:                                               ; preds = %67, %63
  %71 = phi i64 [ %25, %67 ], [ %64, %63 ]
  %72 = trunc i64 %34 to i32
  %73 = lshr i64 %34, 32
  %74 = trunc i64 %73 to i32
  %75 = icmp sgt i64 %71, %31
  br i1 %75, label %76, label %97

76:                                               ; preds = %70, %92
  %77 = phi i64 [ %79, %92 ], [ %71, %70 ]
  %78 = add nsw i64 %77, -1
  %79 = sdiv i64 %78, 2
  %80 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %79, i32 0
  %81 = load i32, i32* %80, align 4, !tbaa !45
  %82 = icmp slt i32 %81, %72
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %79, i32 1
  %85 = load i32, i32* %84, align 4, !tbaa !8
  br label %92

86:                                               ; preds = %76
  %87 = icmp sgt i32 %81, %72
  br i1 %87, label %97, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %79, i32 1
  %90 = load i32, i32* %89, align 4, !tbaa !35
  %91 = icmp slt i32 %90, %74
  br i1 %91, label %92, label %97

92:                                               ; preds = %88, %83
  %93 = phi i32 [ %85, %83 ], [ %90, %88 ]
  %94 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %77, i32 0
  store i32 %81, i32* %94, align 4, !tbaa !45
  %95 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %77, i32 1
  store i32 %93, i32* %95, align 4, !tbaa !35
  %96 = icmp sgt i64 %79, %31
  br i1 %96, label %76, label %97, !llvm.loop !47

97:                                               ; preds = %86, %88, %92, %70
  %98 = phi i64 [ %71, %70 ], [ %77, %86 ], [ %79, %92 ], [ %77, %88 ]
  %99 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %98, i32 0
  store i32 %72, i32* %99, align 4, !tbaa !45
  %100 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %98, i32 1
  store i32 %74, i32* %100, align 4, !tbaa !35
  %101 = icmp eq i64 %31, 0
  %102 = add nsw i64 %31, -1
  br i1 %101, label %103, label %30, !llvm.loop !48

103:                                              ; preds = %97
  %104 = icmp sgt i64 %12, 8
  br i1 %104, label %105, label %248

105:                                              ; preds = %103, %191
  %106 = phi %"struct.std::pair"* [ %107, %191 ], [ %14, %103 ]
  %107 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %106, i64 -1
  %108 = bitcast %"struct.std::pair"* %107 to i64*
  %109 = load i64, i64* %108, align 4
  %110 = load i32, i32* %6, align 4, !tbaa !8
  %111 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %107, i64 0, i32 0
  store i32 %110, i32* %111, align 4, !tbaa !45
  %112 = load i32, i32* %7, align 4, !tbaa !8
  %113 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %106, i64 -1, i32 1
  store i32 %112, i32* %113, align 4, !tbaa !35
  %114 = ptrtoint %"struct.std::pair"* %107 to i64
  %115 = sub i64 %114, %4
  %116 = ashr exact i64 %115, 3
  %117 = add nsw i64 %116, -1
  %118 = sdiv i64 %117, 2
  %119 = icmp sgt i64 %115, 16
  br i1 %119, label %120, label %147

120:                                              ; preds = %105, %139
  %121 = phi i64 [ %141, %139 ], [ 0, %105 ]
  %122 = shl i64 %121, 1
  %123 = add i64 %122, 2
  %124 = or i64 %122, 1
  %125 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %123, i32 0
  %126 = load i32, i32* %125, align 4, !tbaa !45
  %127 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %124, i32 0
  %128 = load i32, i32* %127, align 4, !tbaa !45
  %129 = icmp slt i32 %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %120
  %131 = icmp slt i32 %128, %126
  br i1 %131, label %139, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %123, i32 1
  %134 = load i32, i32* %133, align 4, !tbaa !35
  %135 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %124, i32 1
  %136 = load i32, i32* %135, align 4, !tbaa !35
  %137 = icmp slt i32 %134, %136
  br i1 %137, label %138, label %139

138:                                              ; preds = %132, %120
  br label %139

139:                                              ; preds = %138, %132, %130
  %140 = phi i32 [ %128, %138 ], [ %126, %132 ], [ %126, %130 ]
  %141 = phi i64 [ %124, %138 ], [ %123, %132 ], [ %123, %130 ]
  %142 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %121, i32 0
  store i32 %140, i32* %142, align 4, !tbaa !45
  %143 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %141, i32 1
  %144 = load i32, i32* %143, align 4, !tbaa !8
  %145 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %121, i32 1
  store i32 %144, i32* %145, align 4, !tbaa !35
  %146 = icmp slt i64 %141, %118
  br i1 %146, label %120, label %147, !llvm.loop !46

147:                                              ; preds = %139, %105
  %148 = phi i64 [ 0, %105 ], [ %141, %139 ]
  %149 = and i64 %115, 8
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %164

151:                                              ; preds = %147
  %152 = add nsw i64 %116, -2
  %153 = sdiv i64 %152, 2
  %154 = icmp eq i64 %148, %153
  br i1 %154, label %155, label %164

155:                                              ; preds = %151
  %156 = shl i64 %148, 1
  %157 = or i64 %156, 1
  %158 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %157, i32 0
  %159 = load i32, i32* %158, align 4, !tbaa !8
  %160 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %148, i32 0
  store i32 %159, i32* %160, align 4, !tbaa !45
  %161 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %157, i32 1
  %162 = load i32, i32* %161, align 4, !tbaa !8
  %163 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %148, i32 1
  store i32 %162, i32* %163, align 4, !tbaa !35
  br label %164

164:                                              ; preds = %155, %151, %147
  %165 = phi i64 [ %157, %155 ], [ %148, %151 ], [ %148, %147 ]
  %166 = trunc i64 %109 to i32
  %167 = lshr i64 %109, 32
  %168 = trunc i64 %167 to i32
  %169 = icmp sgt i64 %165, 0
  br i1 %169, label %170, label %191

170:                                              ; preds = %164, %186
  %171 = phi i64 [ %173, %186 ], [ %165, %164 ]
  %172 = add nsw i64 %171, -1
  %173 = lshr i64 %172, 1
  %174 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %173, i32 0
  %175 = load i32, i32* %174, align 4, !tbaa !45
  %176 = icmp slt i32 %175, %166
  br i1 %176, label %177, label %180

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %173, i32 1
  %179 = load i32, i32* %178, align 4, !tbaa !8
  br label %186

180:                                              ; preds = %170
  %181 = icmp sgt i32 %175, %166
  br i1 %181, label %191, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %173, i32 1
  %184 = load i32, i32* %183, align 4, !tbaa !35
  %185 = icmp slt i32 %184, %168
  br i1 %185, label %186, label %191

186:                                              ; preds = %182, %177
  %187 = phi i32 [ %179, %177 ], [ %184, %182 ]
  %188 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %171, i32 0
  store i32 %175, i32* %188, align 4, !tbaa !45
  %189 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %171, i32 1
  store i32 %187, i32* %189, align 4, !tbaa !35
  %190 = icmp ult i64 %172, 2
  br i1 %190, label %191, label %170, !llvm.loop !47

191:                                              ; preds = %180, %182, %186, %164
  %192 = phi i64 [ %165, %164 ], [ %171, %182 ], [ 0, %186 ], [ %171, %180 ]
  %193 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %192, i32 0
  store i32 %166, i32* %193, align 4, !tbaa !45
  %194 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %192, i32 1
  store i32 %168, i32* %194, align 4, !tbaa !35
  %195 = icmp sgt i64 %115, 8
  br i1 %195, label %105, label %248, !llvm.loop !49

196:                                              ; preds = %11
  %197 = lshr i64 %12, 4
  %198 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %197
  %199 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %14, i64 -1
  tail call void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_SB_SB_T0_(%"struct.std::pair"* %0, %"struct.std::pair"* nonnull %5, %"struct.std::pair"* %198, %"struct.std::pair"* nonnull %199)
  br label %200

200:                                              ; preds = %236, %196
  %201 = phi %"struct.std::pair"* [ %5, %196 ], [ %242, %236 ]
  %202 = phi %"struct.std::pair"* [ %14, %196 ], [ %222, %236 ]
  %203 = load i32, i32* %6, align 4, !tbaa !45
  br label %204

204:                                              ; preds = %216, %200
  %205 = phi %"struct.std::pair"* [ %201, %200 ], [ %217, %216 ]
  %206 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %205, i64 0, i32 0
  %207 = load i32, i32* %206, align 4, !tbaa !45
  %208 = icmp slt i32 %207, %203
  br i1 %208, label %216, label %209

209:                                              ; preds = %204
  %210 = icmp slt i32 %203, %207
  br i1 %210, label %218, label %211

211:                                              ; preds = %209
  %212 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %205, i64 0, i32 1
  %213 = load i32, i32* %212, align 4, !tbaa !35
  %214 = load i32, i32* %7, align 4, !tbaa !35
  %215 = icmp slt i32 %213, %214
  br i1 %215, label %216, label %218

216:                                              ; preds = %211, %204
  %217 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %205, i64 1
  br label %204, !llvm.loop !50

218:                                              ; preds = %211, %209
  %219 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %205, i64 0, i32 0
  br label %220

220:                                              ; preds = %233, %218
  %221 = phi %"struct.std::pair"* [ %202, %218 ], [ %222, %233 ]
  %222 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %221, i64 -1
  %223 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %222, i64 0, i32 0
  %224 = load i32, i32* %223, align 4, !tbaa !45
  %225 = icmp slt i32 %203, %224
  br i1 %225, label %233, label %226

226:                                              ; preds = %220
  %227 = icmp slt i32 %224, %203
  br i1 %227, label %234, label %228

228:                                              ; preds = %226
  %229 = load i32, i32* %7, align 4, !tbaa !35
  %230 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %221, i64 -1, i32 1
  %231 = load i32, i32* %230, align 4, !tbaa !35
  %232 = icmp slt i32 %229, %231
  br i1 %232, label %233, label %234

233:                                              ; preds = %228, %220
  br label %220, !llvm.loop !51

234:                                              ; preds = %228, %226
  %235 = icmp ult %"struct.std::pair"* %205, %222
  br i1 %235, label %236, label %243

236:                                              ; preds = %234
  %237 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %222, i64 0, i32 0
  store i32 %224, i32* %219, align 4, !tbaa !8
  store i32 %207, i32* %237, align 4, !tbaa !8
  %238 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %205, i64 0, i32 1
  %239 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %221, i64 -1, i32 1
  %240 = load i32, i32* %238, align 4, !tbaa !8
  %241 = load i32, i32* %239, align 4, !tbaa !8
  store i32 %241, i32* %238, align 4, !tbaa !8
  store i32 %240, i32* %239, align 4, !tbaa !8
  %242 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %205, i64 1
  br label %200, !llvm.loop !52

243:                                              ; preds = %234
  %244 = add nsw i64 %13, -1
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_(%"struct.std::pair"* %205, %"struct.std::pair"* %14, i64 %244)
  %245 = ptrtoint %"struct.std::pair"* %205 to i64
  %246 = sub i64 %245, %4
  %247 = icmp sgt i64 %246, 128
  br i1 %247, label %11, label %248, !llvm.loop !53

248:                                              ; preds = %243, %191, %3, %103
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_T0_(%"struct.std::pair"* %0, %"struct.std::pair"* %1) local_unnamed_addr #10 comdat {
  %3 = ptrtoint %"struct.std::pair"* %1 to i64
  %4 = ptrtoint %"struct.std::pair"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 128
  br i1 %6, label %7, label %156

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1
  br label %10

10:                                               ; preds = %7, %118
  %11 = phi i64 [ 0, %7 ], [ %121, %118 ]
  %12 = phi i64 [ 1, %7 ], [ %119, %118 ]
  %13 = phi %"struct.std::pair"* [ %0, %7 ], [ %15, %118 ]
  %14 = add i64 %11, 1
  %15 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %12
  %16 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !tbaa !45
  %18 = load i32, i32* %8, align 4, !tbaa !45
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %27, label %20

20:                                               ; preds = %10
  %21 = icmp slt i32 %18, %17
  br i1 %21, label %90, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i64 1, i32 1
  %24 = load i32, i32* %23, align 4, !tbaa !35
  %25 = load i32, i32* %9, align 4, !tbaa !35
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %90

27:                                               ; preds = %22, %10
  %28 = bitcast %"struct.std::pair"* %15 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = lshr i64 %29, 32
  %31 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i64 2
  %32 = and i64 %14, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %27, %34
  %35 = phi i64 [ %47, %34 ], [ %12, %27 ]
  %36 = phi %"struct.std::pair"* [ %40, %34 ], [ %31, %27 ]
  %37 = phi %"struct.std::pair"* [ %39, %34 ], [ %15, %27 ]
  %38 = phi i64 [ %48, %34 ], [ %32, %27 ]
  %39 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %37, i64 -1
  %40 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %36, i64 -1
  %41 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %39, i64 0, i32 0
  %42 = load i32, i32* %41, align 4, !tbaa !8
  %43 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %40, i64 0, i32 0
  store i32 %42, i32* %43, align 4, !tbaa !45
  %44 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %37, i64 -1, i32 1
  %45 = load i32, i32* %44, align 4, !tbaa !8
  %46 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %36, i64 -1, i32 1
  store i32 %45, i32* %46, align 4, !tbaa !35
  %47 = add nsw i64 %35, -1
  %48 = add i64 %38, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %34, !llvm.loop !54

50:                                               ; preds = %34, %27
  %51 = phi i64 [ %12, %27 ], [ %47, %34 ]
  %52 = phi %"struct.std::pair"* [ %31, %27 ], [ %40, %34 ]
  %53 = phi %"struct.std::pair"* [ %15, %27 ], [ %39, %34 ]
  %54 = icmp ult i64 %11, 3
  br i1 %54, label %87, label %55

55:                                               ; preds = %50, %55
  %56 = phi i64 [ %85, %55 ], [ %51, %50 ]
  %57 = phi %"struct.std::pair"* [ %78, %55 ], [ %52, %50 ]
  %58 = phi %"struct.std::pair"* [ %77, %55 ], [ %53, %50 ]
  %59 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -1, i32 0
  %60 = load i32, i32* %59, align 4, !tbaa !8
  %61 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 -1, i32 0
  store i32 %60, i32* %61, align 4, !tbaa !45
  %62 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -1, i32 1
  %63 = load i32, i32* %62, align 4, !tbaa !8
  %64 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 -1, i32 1
  store i32 %63, i32* %64, align 4, !tbaa !35
  %65 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -2, i32 0
  %66 = load i32, i32* %65, align 4, !tbaa !8
  %67 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 -2, i32 0
  store i32 %66, i32* %67, align 4, !tbaa !45
  %68 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -2, i32 1
  %69 = load i32, i32* %68, align 4, !tbaa !8
  %70 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 -2, i32 1
  store i32 %69, i32* %70, align 4, !tbaa !35
  %71 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -3, i32 0
  %72 = load i32, i32* %71, align 4, !tbaa !8
  %73 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 -3, i32 0
  store i32 %72, i32* %73, align 4, !tbaa !45
  %74 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -3, i32 1
  %75 = load i32, i32* %74, align 4, !tbaa !8
  %76 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 -3, i32 1
  store i32 %75, i32* %76, align 4, !tbaa !35
  %77 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -4
  %78 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 -4
  %79 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %77, i64 0, i32 0
  %80 = load i32, i32* %79, align 4, !tbaa !8
  %81 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %78, i64 0, i32 0
  store i32 %80, i32* %81, align 4, !tbaa !45
  %82 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -4, i32 1
  %83 = load i32, i32* %82, align 4, !tbaa !8
  %84 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 -4, i32 1
  store i32 %83, i32* %84, align 4, !tbaa !35
  %85 = add nsw i64 %56, -4
  %86 = icmp sgt i64 %56, 4
  br i1 %86, label %55, label %87, !llvm.loop !55

87:                                               ; preds = %55, %50
  %88 = trunc i64 %29 to i32
  %89 = trunc i64 %30 to i32
  store i32 %88, i32* %8, align 4, !tbaa !45
  store i32 %89, i32* %9, align 4, !tbaa !35
  br label %118

90:                                               ; preds = %22, %20
  %91 = bitcast %"struct.std::pair"* %15 to i64*
  %92 = load i64, i64* %91, align 4
  %93 = trunc i64 %92 to i32
  %94 = lshr i64 %92, 32
  %95 = trunc i64 %94 to i32
  br label %96

96:                                               ; preds = %111, %90
  %97 = phi %"struct.std::pair"* [ %15, %90 ], [ %98, %111 ]
  %98 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i64 -1
  %99 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 4, !tbaa !45
  %101 = icmp sgt i32 %100, %93
  br i1 %101, label %102, label %105

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i64 -1, i32 1
  %104 = load i32, i32* %103, align 4, !tbaa !8
  br label %111

105:                                              ; preds = %96
  %106 = icmp slt i32 %100, %93
  br i1 %106, label %115, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i64 -1, i32 1
  %109 = load i32, i32* %108, align 4, !tbaa !35
  %110 = icmp sgt i32 %109, %95
  br i1 %110, label %111, label %115

111:                                              ; preds = %107, %102
  %112 = phi i32 [ %104, %102 ], [ %109, %107 ]
  %113 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i64 0, i32 0
  store i32 %100, i32* %113, align 4, !tbaa !45
  %114 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i64 0, i32 1
  store i32 %112, i32* %114, align 4, !tbaa !35
  br label %96, !llvm.loop !56

115:                                              ; preds = %107, %105
  %116 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i64 0, i32 0
  store i32 %93, i32* %116, align 4, !tbaa !45
  %117 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i64 0, i32 1
  store i32 %95, i32* %117, align 4, !tbaa !35
  br label %118

118:                                              ; preds = %115, %87
  %119 = add nuw nsw i64 %12, 1
  %120 = icmp eq i64 %119, 16
  %121 = add i64 %11, 1
  br i1 %120, label %122, label %10, !llvm.loop !57

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 16
  %124 = icmp eq %"struct.std::pair"* %123, %1
  br i1 %124, label %235, label %125

125:                                              ; preds = %122, %151
  %126 = phi %"struct.std::pair"* [ %154, %151 ], [ %123, %122 ]
  %127 = bitcast %"struct.std::pair"* %126 to i64*
  %128 = load i64, i64* %127, align 4
  %129 = trunc i64 %128 to i32
  %130 = lshr i64 %128, 32
  %131 = trunc i64 %130 to i32
  br label %132

132:                                              ; preds = %147, %125
  %133 = phi %"struct.std::pair"* [ %126, %125 ], [ %134, %147 ]
  %134 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %133, i64 -1
  %135 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %134, i64 0, i32 0
  %136 = load i32, i32* %135, align 4, !tbaa !45
  %137 = icmp sgt i32 %136, %129
  br i1 %137, label %138, label %141

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %133, i64 -1, i32 1
  %140 = load i32, i32* %139, align 4, !tbaa !8
  br label %147

141:                                              ; preds = %132
  %142 = icmp slt i32 %136, %129
  br i1 %142, label %151, label %143

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %133, i64 -1, i32 1
  %145 = load i32, i32* %144, align 4, !tbaa !35
  %146 = icmp sgt i32 %145, %131
  br i1 %146, label %147, label %151

147:                                              ; preds = %143, %138
  %148 = phi i32 [ %140, %138 ], [ %145, %143 ]
  %149 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %133, i64 0, i32 0
  store i32 %136, i32* %149, align 4, !tbaa !45
  %150 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %133, i64 0, i32 1
  store i32 %148, i32* %150, align 4, !tbaa !35
  br label %132, !llvm.loop !56

151:                                              ; preds = %143, %141
  %152 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %133, i64 0, i32 0
  store i32 %129, i32* %152, align 4, !tbaa !45
  %153 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %133, i64 0, i32 1
  store i32 %131, i32* %153, align 4, !tbaa !35
  %154 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %126, i64 1
  %155 = icmp eq %"struct.std::pair"* %154, %1
  br i1 %155, label %235, label %125, !llvm.loop !58

156:                                              ; preds = %2
  %157 = icmp eq %"struct.std::pair"* %0, %1
  br i1 %157, label %235, label %158

158:                                              ; preds = %156
  %159 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %160 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1
  %161 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 1
  %162 = icmp eq %"struct.std::pair"* %161, %1
  br i1 %162, label %235, label %163

163:                                              ; preds = %158, %232
  %164 = phi %"struct.std::pair"* [ %233, %232 ], [ %161, %158 ]
  %165 = phi %"struct.std::pair"* [ %164, %232 ], [ %0, %158 ]
  %166 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %164, i64 0, i32 0
  %167 = load i32, i32* %166, align 4, !tbaa !45
  %168 = load i32, i32* %159, align 4, !tbaa !45
  %169 = icmp slt i32 %167, %168
  br i1 %169, label %177, label %170

170:                                              ; preds = %163
  %171 = icmp slt i32 %168, %167
  br i1 %171, label %204, label %172

172:                                              ; preds = %170
  %173 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %165, i64 1, i32 1
  %174 = load i32, i32* %173, align 4, !tbaa !35
  %175 = load i32, i32* %160, align 4, !tbaa !35
  %176 = icmp slt i32 %174, %175
  br i1 %176, label %177, label %204

177:                                              ; preds = %172, %163
  %178 = bitcast %"struct.std::pair"* %164 to i64*
  %179 = load i64, i64* %178, align 4
  %180 = trunc i64 %179 to i32
  %181 = lshr i64 %179, 32
  %182 = trunc i64 %181 to i32
  %183 = ptrtoint %"struct.std::pair"* %164 to i64
  %184 = sub i64 %183, %4
  %185 = icmp sgt i64 %184, 0
  br i1 %185, label %186, label %203

186:                                              ; preds = %177
  %187 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %165, i64 2
  %188 = lshr exact i64 %184, 3
  br label %189

189:                                              ; preds = %189, %186
  %190 = phi i64 [ %201, %189 ], [ %188, %186 ]
  %191 = phi %"struct.std::pair"* [ %194, %189 ], [ %187, %186 ]
  %192 = phi %"struct.std::pair"* [ %193, %189 ], [ %164, %186 ]
  %193 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %192, i64 -1
  %194 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %191, i64 -1
  %195 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %193, i64 0, i32 0
  %196 = load i32, i32* %195, align 4, !tbaa !8
  %197 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %194, i64 0, i32 0
  store i32 %196, i32* %197, align 4, !tbaa !45
  %198 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %192, i64 -1, i32 1
  %199 = load i32, i32* %198, align 4, !tbaa !8
  %200 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %191, i64 -1, i32 1
  store i32 %199, i32* %200, align 4, !tbaa !35
  %201 = add nsw i64 %190, -1
  %202 = icmp sgt i64 %190, 1
  br i1 %202, label %189, label %203, !llvm.loop !55

203:                                              ; preds = %189, %177
  store i32 %180, i32* %159, align 4, !tbaa !45
  store i32 %182, i32* %160, align 4, !tbaa !35
  br label %232

204:                                              ; preds = %172, %170
  %205 = bitcast %"struct.std::pair"* %164 to i64*
  %206 = load i64, i64* %205, align 4
  %207 = trunc i64 %206 to i32
  %208 = lshr i64 %206, 32
  %209 = trunc i64 %208 to i32
  br label %210

210:                                              ; preds = %225, %204
  %211 = phi %"struct.std::pair"* [ %164, %204 ], [ %212, %225 ]
  %212 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %211, i64 -1
  %213 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %212, i64 0, i32 0
  %214 = load i32, i32* %213, align 4, !tbaa !45
  %215 = icmp sgt i32 %214, %207
  br i1 %215, label %216, label %219

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %211, i64 -1, i32 1
  %218 = load i32, i32* %217, align 4, !tbaa !8
  br label %225

219:                                              ; preds = %210
  %220 = icmp slt i32 %214, %207
  br i1 %220, label %229, label %221

221:                                              ; preds = %219
  %222 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %211, i64 -1, i32 1
  %223 = load i32, i32* %222, align 4, !tbaa !35
  %224 = icmp sgt i32 %223, %209
  br i1 %224, label %225, label %229

225:                                              ; preds = %221, %216
  %226 = phi i32 [ %218, %216 ], [ %223, %221 ]
  %227 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %211, i64 0, i32 0
  store i32 %214, i32* %227, align 4, !tbaa !45
  %228 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %211, i64 0, i32 1
  store i32 %226, i32* %228, align 4, !tbaa !35
  br label %210, !llvm.loop !56

229:                                              ; preds = %221, %219
  %230 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %211, i64 0, i32 0
  store i32 %207, i32* %230, align 4, !tbaa !45
  %231 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %211, i64 0, i32 1
  store i32 %209, i32* %231, align 4, !tbaa !35
  br label %232

232:                                              ; preds = %229, %203
  %233 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %164, i64 1
  %234 = icmp eq %"struct.std::pair"* %233, %1
  br i1 %234, label %235, label %163, !llvm.loop !57

235:                                              ; preds = %232, %151, %158, %156, %122
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_SB_SB_T0_(%"struct.std::pair"* %0, %"struct.std::pair"* %1, %"struct.std::pair"* %2, %"struct.std::pair"* %3) local_unnamed_addr #11 comdat {
  %5 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4, !tbaa !45
  %7 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 4, !tbaa !45
  %9 = icmp slt i32 %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %4
  %11 = icmp slt i32 %8, %6
  br i1 %11, label %49, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4, !tbaa !35
  %15 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1
  %16 = load i32, i32* %15, align 4, !tbaa !35
  %17 = icmp slt i32 %14, %16
  br i1 %17, label %18, label %49

18:                                               ; preds = %4, %12
  %19 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 0
  %20 = load i32, i32* %19, align 4, !tbaa !45
  %21 = icmp slt i32 %8, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = icmp slt i32 %20, %8
  br i1 %23, label %33, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1
  %26 = load i32, i32* %25, align 4, !tbaa !35
  %27 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1
  %28 = load i32, i32* %27, align 4, !tbaa !35
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %18, %24
  %31 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %32 = load i32, i32* %31, align 4, !tbaa !8
  store i32 %8, i32* %31, align 4, !tbaa !8
  store i32 %32, i32* %7, align 4, !tbaa !8
  br label %80

33:                                               ; preds = %22, %24
  %34 = icmp slt i32 %6, %20
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = icmp slt i32 %20, %6
  br i1 %36, label %46, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 4, !tbaa !35
  %40 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1
  %41 = load i32, i32* %40, align 4, !tbaa !35
  %42 = icmp slt i32 %39, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %33, %37
  %44 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %45 = load i32, i32* %44, align 4, !tbaa !8
  store i32 %20, i32* %44, align 4, !tbaa !8
  store i32 %45, i32* %19, align 4, !tbaa !8
  br label %80

46:                                               ; preds = %35, %37
  %47 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %48 = load i32, i32* %47, align 4, !tbaa !8
  store i32 %6, i32* %47, align 4, !tbaa !8
  store i32 %48, i32* %5, align 4, !tbaa !8
  br label %80

49:                                               ; preds = %10, %12
  %50 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 0
  %51 = load i32, i32* %50, align 4, !tbaa !45
  %52 = icmp slt i32 %6, %51
  br i1 %52, label %61, label %53

53:                                               ; preds = %49
  %54 = icmp slt i32 %51, %6
  br i1 %54, label %64, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1
  %57 = load i32, i32* %56, align 4, !tbaa !35
  %58 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1
  %59 = load i32, i32* %58, align 4, !tbaa !35
  %60 = icmp slt i32 %57, %59
  br i1 %60, label %61, label %64

61:                                               ; preds = %49, %55
  %62 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %63 = load i32, i32* %62, align 4, !tbaa !8
  store i32 %6, i32* %62, align 4, !tbaa !8
  store i32 %63, i32* %5, align 4, !tbaa !8
  br label %80

64:                                               ; preds = %53, %55
  %65 = icmp slt i32 %8, %51
  br i1 %65, label %74, label %66

66:                                               ; preds = %64
  %67 = icmp slt i32 %51, %8
  br i1 %67, label %77, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1
  %70 = load i32, i32* %69, align 4, !tbaa !35
  %71 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1
  %72 = load i32, i32* %71, align 4, !tbaa !35
  %73 = icmp slt i32 %70, %72
  br i1 %73, label %74, label %77

74:                                               ; preds = %64, %68
  %75 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %76 = load i32, i32* %75, align 4, !tbaa !8
  store i32 %51, i32* %75, align 4, !tbaa !8
  store i32 %76, i32* %50, align 4, !tbaa !8
  br label %80

77:                                               ; preds = %66, %68
  %78 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %79 = load i32, i32* %78, align 4, !tbaa !8
  store i32 %8, i32* %78, align 4, !tbaa !8
  store i32 %79, i32* %7, align 4, !tbaa !8
  br label %80

80:                                               ; preds = %61, %77, %74, %30, %46, %43
  %81 = phi %"struct.std::pair"* [ %1, %61 ], [ %2, %77 ], [ %3, %74 ], [ %2, %30 ], [ %1, %46 ], [ %3, %43 ]
  %82 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1
  %83 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %81, i64 0, i32 1
  %84 = load i32, i32* %82, align 4, !tbaa !8
  %85 = load i32, i32* %83, align 4, !tbaa !8
  store i32 %85, i32* %82, align 4, !tbaa !8
  store i32 %84, i32* %83, align 4, !tbaa !8
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_CarShow.cpp() #10 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #15
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(7680) bitcast ([320 x %"class.std::vector"]* @quer to i8*), i8 0, i64 7680, i1 false) #15
  %2 = tail call i32 @__cxa_atexit(void (i8*)* nonnull @__cxx_global_array_dtor, i8* null, i8* nonnull @__dso_handle) #15
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #14

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #15 = { nounwind }
attributes #16 = { noreturn }
attributes #17 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt12_Vector_baseISt4pairIiiESaIS1_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !9, i64 0}
!9 = !{!"int", !6, i64 0}
!10 = !{!11, !11, i64 0}
!11 = !{!"long long", !6, i64 0}
!12 = !{!5, !5, i64 0}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.mustprogress"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !14}
!19 = distinct !{!19, !14}
!20 = distinct !{!20, !14}
!21 = distinct !{!21, !14}
!22 = !{!4, !5, i64 8}
!23 = !{!4, !5, i64 16}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !14, !30}
!30 = !{!"llvm.loop.isvectorized", i32 1}
!31 = distinct !{!31, !17}
!32 = distinct !{!32, !14, !30}
!33 = distinct !{!33, !14}
!34 = !{i64 0, i64 65}
!35 = !{!36, !9, i64 4}
!36 = !{!"_ZTSSt4pairIiiE", !9, i64 0, !9, i64 4}
!37 = distinct !{!37, !14}
!38 = distinct !{!38, !14}
!39 = distinct !{!39, !14}
!40 = distinct !{!40, !14}
!41 = distinct !{!41, !14}
!42 = distinct !{!42, !14}
!43 = distinct !{!43, !14}
!44 = distinct !{!44, !14}
!45 = !{!36, !9, i64 0}
!46 = distinct !{!46, !14}
!47 = distinct !{!47, !14}
!48 = distinct !{!48, !14}
!49 = distinct !{!49, !14}
!50 = distinct !{!50, !14}
!51 = distinct !{!51, !14}
!52 = distinct !{!52, !14}
!53 = distinct !{!53, !14}
!54 = distinct !{!54, !17}
!55 = distinct !{!55, !14}
!56 = distinct !{!56, !14}
!57 = distinct !{!57, !14}
!58 = distinct !{!58, !14}
