digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55a3c4402d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%0:\l  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %2 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([23 x\l... i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %1)\l  %3 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6\l... x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32* nonnull @n, i32* nonnull @q)\l  %4 = load i32, i32* @n, align 4, !tbaa !7\l  %5 = add nsw i32 %4, 1\l  %6 = sext i32 %5 to i64\l  %7 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64 %6\l  store i32 0, i32* %7, align 4, !tbaa !7\l  store i32 0, i32* getelementptr inbounds ([100005 x i32], [100005 x i32]*\l... @L, i64 0, i64 0), align 16, !tbaa !7\l  %8 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64 %6\l  store i32 %5, i32* %8, align 4, !tbaa !7\l  store i32 %5, i32* getelementptr inbounds ([100005 x i32], [100005 x i32]*\l... @R, i64 0, i64 0), align 16, !tbaa !7\l  %9 = icmp slt i32 %4, 1\l  br i1 %9, label %12, label %15\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4402d40:s0 -> Node0x55a3c44033e0;
	Node0x55a3c4402d40:s1 -> Node0x55a3c4403b30;
	Node0x55a3c4403c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%10:\l10:                                               \l  %11 = add nsw i32 %34, 1\l  br label %12\l}"];
	Node0x55a3c4403c70 -> Node0x55a3c44033e0;
	Node0x55a3c44033e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%12:\l12:                                               \l  %13 = phi i32 [ %11, %10 ], [ %5, %0 ]\l  %14 = phi i32 [ %34, %10 ], [ %4, %0 ]\l  br label %49\l}"];
	Node0x55a3c44033e0 -> Node0x55a3c4403f60;
	Node0x55a3c4403b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%15:\l15:                                               \l  %16 = phi i64 [ %33, %30 ], [ 1, %0 ]\l  %17 = getelementptr inbounds [100005 x i32], [100005 x i32]* @A, i64 0, i64\l... %16\l  %18 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds\l... ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32* nonnull %17)\l  %19 = load i32, i32* %17, align 4, !tbaa !7\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0,\l... i64 %20\l  %22 = load i32, i32* %21, align 4, !tbaa !7\l  %23 = icmp eq i32 %22, 0\l  br i1 %23, label %28, label %24\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4403b30:s0 -> Node0x55a3c4404600;
	Node0x55a3c4403b30:s1 -> Node0x55a3c4404690;
	Node0x55a3c4404690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%24:\l24:                                               \l  %25 = sext i32 %22 to i64\l  %26 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %25\l  %27 = trunc i64 %16 to i32\l  store i32 %27, i32* %26, align 4, !tbaa !7\l  br label %30\l}"];
	Node0x55a3c4404690 -> Node0x55a3c4404050;
	Node0x55a3c4404600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%28:\l28:                                               \l  %29 = trunc i64 %16 to i32\l  br label %30\l}"];
	Node0x55a3c4404600 -> Node0x55a3c4404050;
	Node0x55a3c4404050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%30:\l30:                                               \l  %31 = phi i32 [ %29, %28 ], [ %27, %24 ]\l  %32 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %16\l  store i32 %22, i32* %32, align 4\l  store i32 %31, i32* %21, align 4, !tbaa !7\l  %33 = add nuw nsw i64 %16, 1\l  %34 = load i32, i32* @n, align 4, !tbaa !7\l  %35 = sext i32 %34 to i64\l  %36 = icmp slt i64 %16, %35\l  br i1 %36, label %15, label %10, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4404050:s0 -> Node0x55a3c4403b30;
	Node0x55a3c4404050:s1 -> Node0x55a3c4403c70;
	Node0x55a3c4405110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%37:\l37:                                               \l  %38 = icmp slt i32 %14, 0\l  br i1 %38, label %136, label %39\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4405110:s0 -> Node0x55a3c44051f0;
	Node0x55a3c4405110:s1 -> Node0x55a3c4405240;
	Node0x55a3c4405240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%39:\l39:                                               \l  %40 = add nuw i32 %14, 2\l  %41 = zext i32 %40 to i64\l  %42 = load i32, i32* getelementptr inbounds ([100005 x i32], [100005 x i32]*\l... @L, i64 0, i64 0), align 16\l  %43 = add nsw i64 %41, -1\l  %44 = add nsw i64 %41, -2\l  %45 = and i64 %43, 3\l  %46 = icmp ult i64 %44, 3\l  br i1 %46, label %77, label %47\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4405240:s0 -> Node0x55a3c4405720;
	Node0x55a3c4405240:s1 -> Node0x55a3c4405770;
	Node0x55a3c4405770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%47:\l47:                                               \l  %48 = and i64 %43, -4\l  br label %110\l}"];
	Node0x55a3c4405770 -> Node0x55a3c4405930;
	Node0x55a3c4403f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%49:\l49:                                               \l  %50 = phi i64 [ 0, %12 ], [ %75, %49 ]\l  %51 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0,\l... i64 %50\l  %52 = load i32, i32* %51, align 4, !tbaa !7\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %53\l  store i32 %13, i32* %54, align 4, !tbaa !7\l  %55 = add nuw nsw i64 %50, 1\l  %56 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0,\l... i64 %55\l  %57 = load i32, i32* %56, align 4, !tbaa !7\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %58\l  store i32 %13, i32* %59, align 4, !tbaa !7\l  %60 = add nuw nsw i64 %50, 2\l  %61 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0,\l... i64 %60\l  %62 = load i32, i32* %61, align 4, !tbaa !7\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %63\l  store i32 %13, i32* %64, align 4, !tbaa !7\l  %65 = add nuw nsw i64 %50, 3\l  %66 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0,\l... i64 %65\l  %67 = load i32, i32* %66, align 4, !tbaa !7\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %68\l  store i32 %13, i32* %69, align 4, !tbaa !7\l  %70 = add nuw nsw i64 %50, 4\l  %71 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @lst, i64 0,\l... i64 %70\l  %72 = load i32, i32* %71, align 4, !tbaa !7\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %73\l  store i32 %13, i32* %74, align 4, !tbaa !7\l  %75 = add nuw nsw i64 %50, 5\l  %76 = icmp eq i64 %75, 1000005\l  br i1 %76, label %37, label %49, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4403f60:s0 -> Node0x55a3c4405110;
	Node0x55a3c4403f60:s1 -> Node0x55a3c4403f60;
	Node0x55a3c4405720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%77:\l77:                                               \l  %78 = phi i32 [ %42, %39 ], [ %132, %110 ]\l  %79 = phi i64 [ 1, %39 ], [ %133, %110 ]\l  %80 = icmp eq i64 %45, 0\l  br i1 %80, label %92, label %81\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4405720:s0 -> Node0x55a3c4407fc0;
	Node0x55a3c4405720:s1 -> Node0x55a3c4408010;
	Node0x55a3c4408010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%81:\l81:                                               \l  %82 = phi i32 [ %88, %81 ], [ %78, %77 ]\l  %83 = phi i64 [ %89, %81 ], [ %79, %77 ]\l  %84 = phi i64 [ %90, %81 ], [ %45, %77 ]\l  %85 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %83\l  %86 = load i32, i32* %85, align 4\l  %87 = icmp slt i32 %86, %82\l  %88 = select i1 %87, i32 %82, i32 %86\l  store i32 %88, i32* %85, align 4, !tbaa !7\l  %89 = add nuw nsw i64 %83, 1\l  %90 = add i64 %84, -1\l  %91 = icmp eq i64 %90, 0\l  br i1 %91, label %92, label %81, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4408010:s0 -> Node0x55a3c4407fc0;
	Node0x55a3c4408010:s1 -> Node0x55a3c4408010;
	Node0x55a3c4407fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%92:\l92:                                               \l  %93 = icmp sgt i32 %14, -1\l  br i1 %93, label %94, label %136\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4407fc0:s0 -> Node0x55a3c4408ae0;
	Node0x55a3c4407fc0:s1 -> Node0x55a3c44051f0;
	Node0x55a3c4408ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%94:\l94:                                               \l  %95 = zext i32 %14 to i64\l  %96 = and i64 %95, 1\l  %97 = icmp eq i64 %96, 0\l  br i1 %97, label %98, label %107\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4408ae0:s0 -> Node0x55a3c4408d70;
	Node0x55a3c4408ae0:s1 -> Node0x55a3c4408dc0;
	Node0x55a3c4408d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%98:\l98:                                               \l  %99 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %95\l  %100 = add nuw nsw i64 %95, 1\l  %101 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %100\l  %102 = load i32, i32* %101, align 4\l  %103 = load i32, i32* %99, align 4\l  %104 = icmp slt i32 %102, %103\l  %105 = select i1 %104, i32 %102, i32 %103\l  store i32 %105, i32* %99, align 4, !tbaa !7\l  %106 = add nsw i64 %95, -1\l  br label %107\l}"];
	Node0x55a3c4408d70 -> Node0x55a3c4408dc0;
	Node0x55a3c4408dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%107:\l107:                                              \l  %108 = phi i64 [ %95, %94 ], [ %106, %98 ]\l  %109 = icmp eq i32 %14, 0\l  br i1 %109, label %136, label %139\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4408dc0:s0 -> Node0x55a3c44051f0;
	Node0x55a3c4408dc0:s1 -> Node0x55a3c44095c0;
	Node0x55a3c4405930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%110:\l110:                                              \l  %111 = phi i32 [ %42, %47 ], [ %132, %110 ]\l  %112 = phi i64 [ 1, %47 ], [ %133, %110 ]\l  %113 = phi i64 [ %48, %47 ], [ %134, %110 ]\l  %114 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %112\l  %115 = load i32, i32* %114, align 4\l  %116 = icmp slt i32 %115, %111\l  %117 = select i1 %116, i32 %111, i32 %115\l  store i32 %117, i32* %114, align 4, !tbaa !7\l  %118 = add nuw nsw i64 %112, 1\l  %119 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %118\l  %120 = load i32, i32* %119, align 4\l  %121 = icmp slt i32 %120, %117\l  %122 = select i1 %121, i32 %117, i32 %120\l  store i32 %122, i32* %119, align 4, !tbaa !7\l  %123 = add nuw nsw i64 %112, 2\l  %124 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %123\l  %125 = load i32, i32* %124, align 4\l  %126 = icmp slt i32 %125, %122\l  %127 = select i1 %126, i32 %122, i32 %125\l  store i32 %127, i32* %124, align 4, !tbaa !7\l  %128 = add nuw nsw i64 %112, 3\l  %129 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %128\l  %130 = load i32, i32* %129, align 4\l  %131 = icmp slt i32 %130, %127\l  %132 = select i1 %131, i32 %127, i32 %130\l  store i32 %132, i32* %129, align 4, !tbaa !7\l  %133 = add nuw nsw i64 %112, 4\l  %134 = add i64 %113, -4\l  %135 = icmp eq i64 %134, 0\l  br i1 %135, label %77, label %110, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4405930:s0 -> Node0x55a3c4405720;
	Node0x55a3c4405930:s1 -> Node0x55a3c4405930;
	Node0x55a3c44051f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%136:\l136:                                              \l  %137 = load i32, i32* @q, align 4, !tbaa !7\l  %138 = icmp sgt i32 %137, 0\l  br i1 %138, label %161, label %157\l|{<s0>T|<s1>F}}"];
	Node0x55a3c44051f0:s0 -> Node0x55a3c440b290;
	Node0x55a3c44051f0:s1 -> Node0x55a3c440b2e0;
	Node0x55a3c44095c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%139:\l139:                                              \l  %140 = phi i64 [ %154, %139 ], [ %108, %107 ]\l  %141 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %140\l  %142 = add nuw nsw i64 %140, 1\l  %143 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %142\l  %144 = load i32, i32* %143, align 4\l  %145 = load i32, i32* %141, align 4\l  %146 = icmp slt i32 %144, %145\l  %147 = select i1 %146, i32 %144, i32 %145\l  store i32 %147, i32* %141, align 4, !tbaa !7\l  %148 = add nsw i64 %140, -1\l  %149 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %148\l  %150 = load i32, i32* %149, align 4\l  %151 = icmp slt i32 %147, %150\l  %152 = select i1 %151, i32 %147, i32 %150\l  store i32 %152, i32* %149, align 4, !tbaa !7\l  %153 = icmp sgt i64 %140, 1\l  %154 = add nsw i64 %140, -2\l  br i1 %153, label %139, label %136, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55a3c44095c0:s0 -> Node0x55a3c44095c0;
	Node0x55a3c44095c0:s1 -> Node0x55a3c44051f0;
	Node0x55a3c440bf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%155:\l155:                                              \l  %156 = load i32, i32* @n, align 4, !tbaa !7\l  br label %157\l}"];
	Node0x55a3c440bf50 -> Node0x55a3c440b2e0;
	Node0x55a3c440b2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%157:\l157:                                              \l  %158 = phi i32 [ %437, %155 ], [ %137, %136 ]\l  %159 = phi i32 [ %156, %155 ], [ %14, %136 ]\l  %160 = icmp slt i32 %159, 0\l  br i1 %160, label %442, label %445\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440b2e0:s0 -> Node0x55a3c440c2b0;
	Node0x55a3c440b2e0:s1 -> Node0x55a3c440c300;
	Node0x55a3c440b290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%161:\l161:                                              \l  %162 = phi i64 [ %436, %435 ], [ 0, %136 ]\l  %163 = getelementptr inbounds [100005 x i32], [100005 x i32]* @ql, i64 0,\l... i64 %162\l  %164 = getelementptr inbounds [100005 x i32], [100005 x i32]* @qr, i64 0,\l... i64 %162\l  %165 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds\l... ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %163, i32* nonnull\l... %164)\l  %166 = load i32, i32* %164, align 4, !tbaa !7\l  %167 = load i32, i32* %163, align 4, !tbaa !7\l  %168 = sub nsw i32 %166, %167\l  %169 = icmp slt i32 %168, 320\l  br i1 %169, label %170, label %269\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440b290:s0 -> Node0x55a3c440a480;
	Node0x55a3c440b290:s1 -> Node0x55a3c440a510;
	Node0x55a3c440a480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%170:\l170:                                              \l  %171 = icmp slt i32 %166, %167\l  br i1 %171, label %172, label %175\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440a480:s0 -> Node0x55a3c440a6e0;
	Node0x55a3c440a480:s1 -> Node0x55a3c440a730;
	Node0x55a3c440a6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%172:\l172:                                              \l  %173 = load i64, i64* @cur, align 8, !tbaa !16\l  %174 = getelementptr inbounds [100005 x i64], [100005 x i64]* @res, i64 0,\l... i64 %162\l  store i64 %173, i64* %174, align 8, !tbaa !16\l  br label %435\l}"];
	Node0x55a3c440a6e0 -> Node0x55a3c440c440;
	Node0x55a3c440a730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%175:\l175:                                              \l  %176 = sext i32 %167 to i64\l  %177 = add i32 %166, 1\l  %178 = load i32, i32* @lef, align 4, !tbaa !7\l  br label %186\l}"];
	Node0x55a3c440a730 -> Node0x55a3c440d720;
	Node0x55a3c440d7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%179:\l179:                                              \l  %180 = getelementptr inbounds [100005 x i64], [100005 x i64]* @res, i64 0,\l... i64 %162\l  store i64 %227, i64* %180, align 8, !tbaa !16\l  br i1 %171, label %435, label %181\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440d7e0:s0 -> Node0x55a3c440c440;
	Node0x55a3c440d7e0:s1 -> Node0x55a3c440d980;
	Node0x55a3c440d980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%181:\l181:                                              \l  %182 = sext i32 %167 to i64\l  %183 = add i32 %166, 1\l  %184 = load i32, i32* @lef, align 4, !tbaa !7\l  %185 = load i32, i32* @rig, align 4, !tbaa !7\l  br label %230\l}"];
	Node0x55a3c440d980 -> Node0x55a3c440dca0;
	Node0x55a3c440d720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%186:\l186:                                              \l  %187 = phi i32 [ %178, %175 ], [ %228, %224 ]\l  %188 = phi i64 [ %176, %175 ], [ %226, %224 ]\l  %189 = icmp eq i32 %187, 100005\l  br i1 %189, label %190, label %196\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440d720:s0 -> Node0x55a3c440e050;
	Node0x55a3c440d720:s1 -> Node0x55a3c440e0e0;
	Node0x55a3c440e050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%190:\l190:                                              \l  %191 = load i64, i64* @cur, align 8, !tbaa !16\l  %192 = add nsw i64 %191, 1\l  store i64 %192, i64* @cur, align 8, !tbaa !16\l  %193 = trunc i64 %188 to i32\l  store i32 %193, i32* @rig, align 4, !tbaa !7\l  store i32 %193, i32* @lef, align 4, !tbaa !7\l  %194 = add nsw i64 %188, 1\l  %195 = trunc i64 %194 to i32\l  br label %224\l}"];
	Node0x55a3c440e050 -> Node0x55a3c440dd60;
	Node0x55a3c440e0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%196:\l196:                                              \l  %197 = add nsw i64 %188, 1\l  %198 = trunc i64 %197 to i32\l  %199 = icmp eq i32 %187, %198\l  br i1 %199, label %200, label %212\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440e0e0:s0 -> Node0x55a3c440e840;
	Node0x55a3c440e0e0:s1 -> Node0x55a3c440e890;
	Node0x55a3c440e840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%200:\l200:                                              \l  %201 = add nsw i32 %187, -1\l  store i32 %201, i32* @lef, align 4, !tbaa !7\l  %202 = load i32, i32* @rig, align 4, !tbaa !7\l  %203 = add nsw i32 %202, 1\l  %204 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %188\l  %205 = load i32, i32* %204, align 4, !tbaa !7\l  %206 = icmp sgt i32 %205, %202\l  %207 = select i1 %206, i32 %203, i32 %205\l  %208 = sext i32 %207 to i64\l  %209 = sub nsw i64 %208, %188\l  %210 = load i64, i64* @cur, align 8, !tbaa !16\l  %211 = add nsw i64 %210, %209\l  store i64 %211, i64* @cur, align 8, !tbaa !16\l  br label %224\l}"];
	Node0x55a3c440e840 -> Node0x55a3c440dd60;
	Node0x55a3c440e890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%212:\l212:                                              \l  %213 = load i32, i32* @rig, align 4, !tbaa !7\l  %214 = add nsw i32 %213, 1\l  store i32 %214, i32* @rig, align 4, !tbaa !7\l  %215 = add nsw i32 %187, -1\l  %216 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %188\l  %217 = load i32, i32* %216, align 4, !tbaa !7\l  %218 = icmp sgt i32 %187, %217\l  %219 = select i1 %218, i32 %215, i32 %217\l  %220 = sext i32 %219 to i64\l  %221 = sub nsw i64 %188, %220\l  %222 = load i64, i64* @cur, align 8, !tbaa !16\l  %223 = add nsw i64 %222, %221\l  store i64 %223, i64* @cur, align 8, !tbaa !16\l  br label %224\l}"];
	Node0x55a3c440e890 -> Node0x55a3c440dd60;
	Node0x55a3c440dd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%224:\l224:                                              \l  %225 = phi i32 [ %195, %190 ], [ %198, %200 ], [ %198, %212 ]\l  %226 = phi i64 [ %194, %190 ], [ %197, %200 ], [ %197, %212 ]\l  %227 = phi i64 [ %192, %190 ], [ %211, %200 ], [ %223, %212 ]\l  %228 = phi i32 [ %193, %190 ], [ %201, %200 ], [ %187, %212 ]\l  %229 = icmp eq i32 %225, %177\l  br i1 %229, label %179, label %186, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440dd60:s0 -> Node0x55a3c440d7e0;
	Node0x55a3c440dd60:s1 -> Node0x55a3c440d720;
	Node0x55a3c440dca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%230:\l230:                                              \l  %231 = phi i64 [ %227, %181 ], [ %263, %262 ]\l  %232 = phi i32 [ %185, %181 ], [ %264, %262 ]\l  %233 = phi i32 [ %184, %181 ], [ %265, %262 ]\l  %234 = phi i64 [ %182, %181 ], [ %266, %262 ]\l  %235 = icmp eq i32 %233, %232\l  br i1 %235, label %236, label %238\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440dca0:s0 -> Node0x55a3c4410180;
	Node0x55a3c440dca0:s1 -> Node0x55a3c4410210;
	Node0x55a3c4410180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%236:\l236:                                              \l  %237 = add nsw i64 %231, -1\l  store i64 %237, i64* @cur, align 8, !tbaa !16\l  store i32 100005, i32* @lef, align 4, !tbaa !7\l  br label %262\l}"];
	Node0x55a3c4410180 -> Node0x55a3c440fdb0;
	Node0x55a3c4410210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%238:\l238:                                              \l  %239 = trunc i64 %234 to i32\l  %240 = icmp eq i32 %233, %239\l  br i1 %240, label %241, label %252\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4410210:s0 -> Node0x55a3c4410670;
	Node0x55a3c4410210:s1 -> Node0x55a3c44106c0;
	Node0x55a3c4410670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%241:\l241:                                              \l  %242 = trunc i64 %234 to i32\l  %243 = add i32 %242, 1\l  store i32 %243, i32* @lef, align 4, !tbaa !7\l  %244 = add nsw i32 %232, 1\l  %245 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %234\l  %246 = load i32, i32* %245, align 4, !tbaa !7\l  %247 = icmp sgt i32 %246, %232\l  %248 = select i1 %247, i32 %244, i32 %246\l  %249 = sext i32 %248 to i64\l  %250 = sub i64 %234, %249\l  %251 = add i64 %250, %231\l  store i64 %251, i64* @cur, align 8, !tbaa !16\l  br label %262\l}"];
	Node0x55a3c4410670 -> Node0x55a3c440fdb0;
	Node0x55a3c44106c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%252:\l252:                                              \l  %253 = add nsw i32 %232, -1\l  store i32 %253, i32* @rig, align 4, !tbaa !7\l  %254 = add nsw i32 %233, -1\l  %255 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %234\l  %256 = load i32, i32* %255, align 4, !tbaa !7\l  %257 = icmp sgt i32 %233, %256\l  %258 = select i1 %257, i32 %254, i32 %256\l  %259 = sext i32 %258 to i64\l  %260 = sub i64 %259, %234\l  %261 = add i64 %260, %231\l  store i64 %261, i64* @cur, align 8, !tbaa !16\l  br label %262\l}"];
	Node0x55a3c44106c0 -> Node0x55a3c440fdb0;
	Node0x55a3c440fdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%262:\l262:                                              \l  %263 = phi i64 [ %237, %236 ], [ %251, %241 ], [ %261, %252 ]\l  %264 = phi i32 [ %232, %236 ], [ %232, %241 ], [ %253, %252 ]\l  %265 = phi i32 [ 100005, %236 ], [ %243, %241 ], [ %233, %252 ]\l  %266 = add nsw i64 %234, 1\l  %267 = trunc i64 %266 to i32\l  %268 = icmp eq i32 %183, %267\l  br i1 %268, label %435, label %230, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440fdb0:s0 -> Node0x55a3c440c440;
	Node0x55a3c440fdb0:s1 -> Node0x55a3c440dca0;
	Node0x55a3c440a510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%269:\l269:                                              \l  %270 = sdiv i32 %167, 320\l  %271 = add nsw i32 %270, 1\l  %272 = sext i32 %271 to i64\l  %273 = getelementptr inbounds [320 x %\"class.std::vector\"], [320 x\l... %\"class.std::vector\"]* @quer, i64 0, i64 %272, i32 0, i32 0, i32 0, i32 1\l  %274 = load %\"struct.std::pair\"*, %\"struct.std::pair\"** %273, align 8, !tbaa\l... !20\l  %275 = ptrtoint %\"struct.std::pair\"* %274 to i64\l  %276 = getelementptr inbounds [320 x %\"class.std::vector\"], [320 x\l... %\"class.std::vector\"]* @quer, i64 0, i64 %272, i32 0, i32 0, i32 0, i32 2\l  %277 = load %\"struct.std::pair\"*, %\"struct.std::pair\"** %276, align 8, !tbaa\l... !22\l  %278 = icmp eq %\"struct.std::pair\"* %274, %277\l  br i1 %278, label %286, label %279\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440a510:s0 -> Node0x55a3c4407340;
	Node0x55a3c440a510:s1 -> Node0x55a3c4407390;
	Node0x55a3c4407390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%279:\l279:                                              \l  %280 = bitcast %\"struct.std::pair\"* %274 to i64*\l  %281 = shl nuw nsw i64 %162, 32\l  %282 = zext i32 %166 to i64\l  %283 = or i64 %281, %282\l  store i64 %283, i64* %280, align 4\l  %284 = load %\"struct.std::pair\"*, %\"struct.std::pair\"** %273, align 8, !tbaa\l... !20\l  %285 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"*\l... %284, i64 1\l  store %\"struct.std::pair\"* %285, %\"struct.std::pair\"** %273, align 8, !tbaa\l... !20\l  br label %435\l}"];
	Node0x55a3c4407390 -> Node0x55a3c440c440;
	Node0x55a3c4407340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%286:\l286:                                              \l  %287 = getelementptr inbounds [320 x %\"class.std::vector\"], [320 x\l... %\"class.std::vector\"]* @quer, i64 0, i64 %272, i32 0, i32 0, i32 0, i32 0\l  %288 = load %\"struct.std::pair\"*, %\"struct.std::pair\"** %287, align 8, !tbaa\l... !23\l  %289 = ptrtoint %\"struct.std::pair\"* %288 to i64\l  %290 = ptrtoint %\"struct.std::pair\"* %274 to i64\l  %291 = ptrtoint %\"struct.std::pair\"* %288 to i64\l  %292 = sub i64 %290, %291\l  %293 = ashr exact i64 %292, 3\l  %294 = icmp eq i64 %292, 9223372036854775800\l  br i1 %294, label %295, label %296\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4407340:s0 -> Node0x55a3c4415510;
	Node0x55a3c4407340:s1 -> Node0x55a3c4415560;
	Node0x55a3c4415510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%295:\l295:                                              \l  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds\l... ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #14\l  unreachable\l}"];
	Node0x55a3c4415560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%296:\l296:                                              \l  %297 = icmp eq i64 %292, 0\l  %298 = select i1 %297, i64 1, i64 %293\l  %299 = add nsw i64 %298, %293\l  %300 = icmp ult i64 %299, %293\l  %301 = icmp ugt i64 %299, 1152921504606846975\l  %302 = or i1 %300, %301\l  %303 = select i1 %302, i64 1152921504606846975, i64 %299\l  %304 = icmp eq i64 %303, 0\l  br i1 %304, label %309, label %305\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4415560:s0 -> Node0x55a3c4415e10;
	Node0x55a3c4415560:s1 -> Node0x55a3c4415e60;
	Node0x55a3c4415e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%305:\l305:                                              \l  %306 = shl nuw nsw i64 %303, 3\l  %307 = tail call noalias nonnull i8* @_Znwm(i64 %306) #15\l  %308 = bitcast i8* %307 to %\"struct.std::pair\"*\l  br label %309\l}"];
	Node0x55a3c4415e60 -> Node0x55a3c4415e10;
	Node0x55a3c4415e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%309:\l309:                                              \l  %310 = phi %\"struct.std::pair\"* [ %308, %305 ], [ null, %296 ]\l  %311 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"*\l... %310, i64 %293\l  %312 = bitcast %\"struct.std::pair\"* %311 to i64*\l  %313 = shl nuw nsw i64 %162, 32\l  %314 = zext i32 %166 to i64\l  %315 = or i64 %313, %314\l  store i64 %315, i64* %312, align 4\l  %316 = icmp eq %\"struct.std::pair\"* %288, %274\l  br i1 %316, label %427, label %317\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4415e10:s0 -> Node0x55a3c44167a0;
	Node0x55a3c4415e10:s1 -> Node0x55a3c44167f0;
	Node0x55a3c44167f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%317:\l317:                                              \l  %318 = add i64 %275, -8\l  %319 = sub i64 %318, %289\l  %320 = lshr i64 %319, 3\l  %321 = add nuw nsw i64 %320, 1\l  %322 = icmp ult i64 %319, 24\l  br i1 %322, label %415, label %323\l|{<s0>T|<s1>F}}"];
	Node0x55a3c44167f0:s0 -> Node0x55a3c4416c20;
	Node0x55a3c44167f0:s1 -> Node0x55a3c4416c70;
	Node0x55a3c4416c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%323:\l323:                                              \l  %324 = add i64 %275, -8\l  %325 = sub i64 %324, %289\l  %326 = lshr i64 %325, 3\l  %327 = add nuw nsw i64 %326, 1\l  %328 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %310, i64 %327\l  %329 = add nuw nsw i64 %326, 1\l  %330 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %288, i64 %329\l  %331 = icmp ult %\"struct.std::pair\"* %310, %330\l  %332 = icmp ult %\"struct.std::pair\"* %288, %328\l  %333 = and i1 %331, %332\l  br i1 %333, label %415, label %334\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4416c70:s0 -> Node0x55a3c4416c20;
	Node0x55a3c4416c70:s1 -> Node0x55a3c4417370;
	Node0x55a3c4417370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%334:\l334:                                              \l  %335 = and i64 %321, 4611686018427387900\l  %336 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %310, i64 %335\l  %337 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %288, i64 %335\l  %338 = add nsw i64 %335, -4\l  %339 = lshr exact i64 %338, 2\l  %340 = add nuw nsw i64 %339, 1\l  %341 = and i64 %340, 3\l  %342 = icmp ult i64 %338, 12\l  br i1 %342, label %394, label %343\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4417370:s0 -> Node0x55a3c4417970;
	Node0x55a3c4417370:s1 -> Node0x55a3c44179c0;
	Node0x55a3c44179c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%343:\l343:                                              \l  %344 = and i64 %340, 9223372036854775804\l  br label %345\l}"];
	Node0x55a3c44179c0 -> Node0x55a3c4417bc0;
	Node0x55a3c4417bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%345:\l345:                                              \l  %346 = phi i64 [ 0, %343 ], [ %391, %345 ]\l  %347 = phi i64 [ %344, %343 ], [ %392, %345 ]\l  %348 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %310, i64 %346\l  %349 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %288, i64 %346\l  %350 = bitcast %\"struct.std::pair\"* %349 to \<2 x i64\>*\l  %351 = load \<2 x i64\>, \<2 x i64\>* %350, align 4, !alias.scope !24\l  %352 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %349, i64 2\l  %353 = bitcast %\"struct.std::pair\"* %352 to \<2 x i64\>*\l  %354 = load \<2 x i64\>, \<2 x i64\>* %353, align 4, !alias.scope !24\l  %355 = bitcast %\"struct.std::pair\"* %348 to \<2 x i64\>*\l  store \<2 x i64\> %351, \<2 x i64\>* %355, align 4, !alias.scope !27, !noalias\l... !24\l  %356 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %348, i64 2\l  %357 = bitcast %\"struct.std::pair\"* %356 to \<2 x i64\>*\l  store \<2 x i64\> %354, \<2 x i64\>* %357, align 4, !alias.scope !27, !noalias\l... !24\l  %358 = or i64 %346, 4\l  %359 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %310, i64 %358\l  %360 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %288, i64 %358\l  %361 = bitcast %\"struct.std::pair\"* %360 to \<2 x i64\>*\l  %362 = load \<2 x i64\>, \<2 x i64\>* %361, align 4, !alias.scope !24\l  %363 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %360, i64 2\l  %364 = bitcast %\"struct.std::pair\"* %363 to \<2 x i64\>*\l  %365 = load \<2 x i64\>, \<2 x i64\>* %364, align 4, !alias.scope !24\l  %366 = bitcast %\"struct.std::pair\"* %359 to \<2 x i64\>*\l  store \<2 x i64\> %362, \<2 x i64\>* %366, align 4, !alias.scope !27, !noalias\l... !24\l  %367 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %359, i64 2\l  %368 = bitcast %\"struct.std::pair\"* %367 to \<2 x i64\>*\l  store \<2 x i64\> %365, \<2 x i64\>* %368, align 4, !alias.scope !27, !noalias\l... !24\l  %369 = or i64 %346, 8\l  %370 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %310, i64 %369\l  %371 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %288, i64 %369\l  %372 = bitcast %\"struct.std::pair\"* %371 to \<2 x i64\>*\l  %373 = load \<2 x i64\>, \<2 x i64\>* %372, align 4, !alias.scope !24\l  %374 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %371, i64 2\l  %375 = bitcast %\"struct.std::pair\"* %374 to \<2 x i64\>*\l  %376 = load \<2 x i64\>, \<2 x i64\>* %375, align 4, !alias.scope !24\l  %377 = bitcast %\"struct.std::pair\"* %370 to \<2 x i64\>*\l  store \<2 x i64\> %373, \<2 x i64\>* %377, align 4, !alias.scope !27, !noalias\l... !24\l  %378 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %370, i64 2\l  %379 = bitcast %\"struct.std::pair\"* %378 to \<2 x i64\>*\l  store \<2 x i64\> %376, \<2 x i64\>* %379, align 4, !alias.scope !27, !noalias\l... !24\l  %380 = or i64 %346, 12\l  %381 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %310, i64 %380\l  %382 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %288, i64 %380\l  %383 = bitcast %\"struct.std::pair\"* %382 to \<2 x i64\>*\l  %384 = load \<2 x i64\>, \<2 x i64\>* %383, align 4, !alias.scope !24\l  %385 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %382, i64 2\l  %386 = bitcast %\"struct.std::pair\"* %385 to \<2 x i64\>*\l  %387 = load \<2 x i64\>, \<2 x i64\>* %386, align 4, !alias.scope !24\l  %388 = bitcast %\"struct.std::pair\"* %381 to \<2 x i64\>*\l  store \<2 x i64\> %384, \<2 x i64\>* %388, align 4, !alias.scope !27, !noalias\l... !24\l  %389 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %381, i64 2\l  %390 = bitcast %\"struct.std::pair\"* %389 to \<2 x i64\>*\l  store \<2 x i64\> %387, \<2 x i64\>* %390, align 4, !alias.scope !27, !noalias\l... !24\l  %391 = add nuw i64 %346, 16\l  %392 = add i64 %347, -4\l  %393 = icmp eq i64 %392, 0\l  br i1 %393, label %394, label %345, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4417bc0:s0 -> Node0x55a3c4417970;
	Node0x55a3c4417bc0:s1 -> Node0x55a3c4417bc0;
	Node0x55a3c4417970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%394:\l394:                                              \l  %395 = phi i64 [ 0, %334 ], [ %391, %345 ]\l  %396 = icmp eq i64 %341, 0\l  br i1 %396, label %413, label %397\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4417970:s0 -> Node0x55a3c441b420;
	Node0x55a3c4417970:s1 -> Node0x55a3c441b470;
	Node0x55a3c441b470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%397:\l397:                                              \l  %398 = phi i64 [ %410, %397 ], [ %395, %394 ]\l  %399 = phi i64 [ %411, %397 ], [ %341, %394 ]\l  %400 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %310, i64 %398\l  %401 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %288, i64 %398\l  %402 = bitcast %\"struct.std::pair\"* %401 to \<2 x i64\>*\l  %403 = load \<2 x i64\>, \<2 x i64\>* %402, align 4, !alias.scope !24\l  %404 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %401, i64 2\l  %405 = bitcast %\"struct.std::pair\"* %404 to \<2 x i64\>*\l  %406 = load \<2 x i64\>, \<2 x i64\>* %405, align 4, !alias.scope !24\l  %407 = bitcast %\"struct.std::pair\"* %400 to \<2 x i64\>*\l  store \<2 x i64\> %403, \<2 x i64\>* %407, align 4, !alias.scope !27, !noalias\l... !24\l  %408 = getelementptr %\"struct.std::pair\", %\"struct.std::pair\"* %400, i64 2\l  %409 = bitcast %\"struct.std::pair\"* %408 to \<2 x i64\>*\l  store \<2 x i64\> %406, \<2 x i64\>* %409, align 4, !alias.scope !27, !noalias\l... !24\l  %410 = add nuw i64 %398, 4\l  %411 = add i64 %399, -1\l  %412 = icmp eq i64 %411, 0\l  br i1 %412, label %413, label %397, !llvm.loop !31\l|{<s0>T|<s1>F}}"];
	Node0x55a3c441b470:s0 -> Node0x55a3c441b420;
	Node0x55a3c441b470:s1 -> Node0x55a3c441b470;
	Node0x55a3c441b420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%413:\l413:                                              \l  %414 = icmp eq i64 %321, %335\l  br i1 %414, label %427, label %415\l|{<s0>T|<s1>F}}"];
	Node0x55a3c441b420:s0 -> Node0x55a3c44167a0;
	Node0x55a3c441b420:s1 -> Node0x55a3c4416c20;
	Node0x55a3c4416c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%415:\l415:                                              \l  %416 = phi %\"struct.std::pair\"* [ %310, %323 ], [ %310, %317 ], [ %336, %413\l... ]\l  %417 = phi %\"struct.std::pair\"* [ %288, %323 ], [ %288, %317 ], [ %337, %413\l... ]\l  br label %418\l}"];
	Node0x55a3c4416c20 -> Node0x55a3c441c3f0;
	Node0x55a3c441c3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%418:\l418:                                              \l  %419 = phi %\"struct.std::pair\"* [ %425, %418 ], [ %416, %415 ]\l  %420 = phi %\"struct.std::pair\"* [ %424, %418 ], [ %417, %415 ]\l  %421 = bitcast %\"struct.std::pair\"* %420 to i64*\l  %422 = bitcast %\"struct.std::pair\"* %419 to i64*\l  %423 = load i64, i64* %421, align 4\l  store i64 %423, i64* %422, align 4\l  %424 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"*\l... %420, i64 1\l  %425 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"*\l... %419, i64 1\l  %426 = icmp eq %\"struct.std::pair\"* %424, %274\l  br i1 %426, label %427, label %418, !llvm.loop !32\l|{<s0>T|<s1>F}}"];
	Node0x55a3c441c3f0:s0 -> Node0x55a3c44167a0;
	Node0x55a3c441c3f0:s1 -> Node0x55a3c441c3f0;
	Node0x55a3c44167a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%427:\l427:                                              \l  %428 = phi %\"struct.std::pair\"* [ %310, %309 ], [ %336, %413 ], [ %425, %418\l... ]\l  %429 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"*\l... %428, i64 1\l  %430 = icmp eq %\"struct.std::pair\"* %288, null\l  br i1 %430, label %433, label %431\l|{<s0>T|<s1>F}}"];
	Node0x55a3c44167a0:s0 -> Node0x55a3c441cd10;
	Node0x55a3c44167a0:s1 -> Node0x55a3c441cd60;
	Node0x55a3c441cd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%431:\l431:                                              \l  %432 = bitcast %\"struct.std::pair\"* %288 to i8*\l  tail call void @_ZdlPv(i8* nonnull %432) #16\l  br label %433\l}"];
	Node0x55a3c441cd60 -> Node0x55a3c441cd10;
	Node0x55a3c441cd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%433:\l433:                                              \l  store %\"struct.std::pair\"* %310, %\"struct.std::pair\"** %287, align 8, !tbaa\l... !23\l  store %\"struct.std::pair\"* %429, %\"struct.std::pair\"** %273, align 8, !tbaa\l... !20\l  %434 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"*\l... %310, i64 %303\l  store %\"struct.std::pair\"* %434, %\"struct.std::pair\"** %276, align 8, !tbaa\l... !22\l  br label %435\l}"];
	Node0x55a3c441cd10 -> Node0x55a3c440c440;
	Node0x55a3c440c440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%435:\l435:                                              \l  %436 = add nuw nsw i64 %162, 1\l  %437 = load i32, i32* @q, align 4, !tbaa !7\l  %438 = sext i32 %437 to i64\l  %439 = icmp slt i64 %436, %438\l  br i1 %439, label %161, label %155, !llvm.loop !33\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440c440:s0 -> Node0x55a3c440b290;
	Node0x55a3c440c440:s1 -> Node0x55a3c440bf50;
	Node0x55a3c441dcb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%440:\l440:                                              \l  %441 = load i32, i32* @q, align 4, !tbaa !7\l  br label %442\l}"];
	Node0x55a3c441dcb0 -> Node0x55a3c440c2b0;
	Node0x55a3c440c2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%442:\l442:                                              \l  %443 = phi i32 [ %441, %440 ], [ %158, %157 ]\l  %444 = icmp sgt i32 %443, 0\l  br i1 %444, label %730, label %729\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440c2b0:s0 -> Node0x55a3c441df20;
	Node0x55a3c440c2b0:s1 -> Node0x55a3c441df70;
	Node0x55a3c440c300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%445:\l445:                                              \l  %446 = phi i64 [ %724, %723 ], [ 0, %157 ]\l  %447 = phi i32 [ %726, %723 ], [ 0, %157 ]\l  %448 = getelementptr inbounds [320 x %\"class.std::vector\"], [320 x\l... %\"class.std::vector\"]* @quer, i64 0, i64 %446, i32 0, i32 0, i32 0, i32 0\l  %449 = load %\"struct.std::pair\"*, %\"struct.std::pair\"** %448, align 8, !tbaa\l... !3\l  %450 = getelementptr inbounds [320 x %\"class.std::vector\"], [320 x\l... %\"class.std::vector\"]* @quer, i64 0, i64 %446, i32 0, i32 0, i32 0, i32 1\l  %451 = load %\"struct.std::pair\"*, %\"struct.std::pair\"** %450, align 8, !tbaa\l... !3\l  %452 = icmp eq %\"struct.std::pair\"* %449, %451\l  br i1 %452, label %463, label %453\l|{<s0>T|<s1>F}}"];
	Node0x55a3c440c300:s0 -> Node0x55a3c441ec20;
	Node0x55a3c440c300:s1 -> Node0x55a3c441ecb0;
	Node0x55a3c441ecb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%453:\l453:                                              \l  %454 = ptrtoint %\"struct.std::pair\"* %451 to i64\l  %455 = ptrtoint %\"struct.std::pair\"* %449 to i64\l  %456 = sub i64 %454, %455\l  %457 = ashr exact i64 %456, 3\l  %458 = tail call i64 @llvm.ctlz.i64(i64 %457, i1 true) #16, !range !34\l  %459 = shl nuw nsw i64 %458, 1\l  %460 = xor i64 %459, 126\l  tail call void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS\l...3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_(%\"struct.std::pair\"*\l... %449, %\"struct.std::pair\"* %451, i64 %460)\l  tail call void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6ve\l...ctorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_T0_(%\"struct.std::pair\"*\l... %449, %\"struct.std::pair\"* %451)\l  %461 = load %\"struct.std::pair\"*, %\"struct.std::pair\"** %450, align 8, !tbaa\l... !20\l  %462 = load %\"struct.std::pair\"*, %\"struct.std::pair\"** %448, align 8, !tbaa\l... !23\l  br label %463\l}"];
	Node0x55a3c441ecb0 -> Node0x55a3c441ec20;
	Node0x55a3c441ec20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%463:\l463:                                              \l  %464 = phi %\"struct.std::pair\"* [ %449, %445 ], [ %462, %453 ]\l  %465 = phi %\"struct.std::pair\"* [ %449, %445 ], [ %461, %453 ]\l  %466 = ptrtoint %\"struct.std::pair\"* %465 to i64\l  %467 = ptrtoint %\"struct.std::pair\"* %464 to i64\l  %468 = sub i64 %466, %467\l  %469 = icmp eq i64 %468, 0\l  br i1 %469, label %639, label %470\l|{<s0>T|<s1>F}}"];
	Node0x55a3c441ec20:s0 -> Node0x55a3c441fdf0;
	Node0x55a3c441ec20:s1 -> Node0x55a3c441fe40;
	Node0x55a3c441fe40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%470:\l470:                                              \l  %471 = ashr exact i64 %468, 3\l  %472 = call i64 @llvm.umax.i64(i64 %471, i64 1)\l  br label %480\l}"];
	Node0x55a3c441fe40 -> Node0x55a3c4420240;
	Node0x55a3c4420300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%473:\l473:                                              \l  %474 = icmp slt i32 %635, %447\l  br i1 %474, label %475, label %639\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4420300:s0 -> Node0x55a3c4420450;
	Node0x55a3c4420300:s1 -> Node0x55a3c441fdf0;
	Node0x55a3c4420450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%475:\l475:                                              \l  %476 = sext i32 %635 to i64\l  %477 = sext i32 %447 to i64\l  %478 = load i32, i32* @lef, align 4, !tbaa !7\l  %479 = load i32, i32* @rig, align 4, !tbaa !7\l  br label %647\l}"];
	Node0x55a3c4420450 -> Node0x55a3c4420750;
	Node0x55a3c4420240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%480:\l480:                                              \l  %481 = phi i64 [ 0, %470 ], [ %637, %633 ]\l  %482 = phi i32 [ %447, %470 ], [ %496, %633 ]\l  %483 = phi i32 [ %447, %470 ], [ %635, %633 ]\l  %484 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"*\l... %464, i64 %481, i32 1\l  %485 = load i32, i32* %484, align 4, !tbaa !35\l  %486 = sext i32 %485 to i64\l  %487 = getelementptr inbounds [100005 x i32], [100005 x i32]* @qr, i64 0,\l... i64 %486\l  %488 = load i32, i32* %487, align 4, !tbaa !7\l  %489 = icmp sgt i32 %482, %488\l  br i1 %489, label %495, label %490\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4420240:s0 -> Node0x55a3c4420fb0;
	Node0x55a3c4420240:s1 -> Node0x55a3c4421040;
	Node0x55a3c4421040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%490:\l490:                                              \l  %491 = sext i32 %482 to i64\l  %492 = sext i32 %488 to i64\l  %493 = add i32 %488, 1\l  %494 = load i32, i32* @lef, align 4, !tbaa !7\l  br label %504\l}"];
	Node0x55a3c4421040 -> Node0x55a3c4421360;
	Node0x55a3c4420fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%495:\l495:                                              \l  %496 = phi i32 [ %482, %480 ], [ %493, %540 ]\l  %497 = getelementptr inbounds [100005 x i32], [100005 x i32]* @ql, i64 0,\l... i64 %486\l  %498 = load i32, i32* %497, align 4, !tbaa !7\l  %499 = icmp slt i32 %498, %483\l  br i1 %499, label %500, label %545\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4420fb0:s0 -> Node0x55a3c44216e0;
	Node0x55a3c4420fb0:s1 -> Node0x55a3c4421730;
	Node0x55a3c44216e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%500:\l500:                                              \l  %501 = sext i32 %483 to i64\l  %502 = sext i32 %498 to i64\l  %503 = load i32, i32* @lef, align 4, !tbaa !7\l  br label %555\l}"];
	Node0x55a3c44216e0 -> Node0x55a3c44219c0;
	Node0x55a3c4421360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%504:\l504:                                              \l  %505 = phi i32 [ %494, %490 ], [ %541, %540 ]\l  %506 = phi i64 [ %491, %490 ], [ %507, %540 ]\l  %507 = add nsw i64 %506, 1\l  %508 = icmp eq i32 %505, 100005\l  br i1 %508, label %509, label %513\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4421360:s0 -> Node0x55a3c4421d70;
	Node0x55a3c4421360:s1 -> Node0x55a3c4421dc0;
	Node0x55a3c4421d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%509:\l509:                                              \l  %510 = load i64, i64* @cur, align 8, !tbaa !16\l  %511 = add nsw i64 %510, 1\l  store i64 %511, i64* @cur, align 8, !tbaa !16\l  %512 = trunc i64 %506 to i32\l  store i32 %512, i32* @rig, align 4, !tbaa !7\l  store i32 %512, i32* @lef, align 4, !tbaa !7\l  br label %540\l}"];
	Node0x55a3c4421d70 -> Node0x55a3c4421420;
	Node0x55a3c4421dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%513:\l513:                                              \l  %514 = trunc i64 %507 to i32\l  %515 = icmp eq i32 %505, %514\l  br i1 %515, label %516, label %528\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4421dc0:s0 -> Node0x55a3c4411450;
	Node0x55a3c4421dc0:s1 -> Node0x55a3c44114a0;
	Node0x55a3c4411450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%516:\l516:                                              \l  %517 = add nsw i32 %505, -1\l  store i32 %517, i32* @lef, align 4, !tbaa !7\l  %518 = load i32, i32* @rig, align 4, !tbaa !7\l  %519 = add nsw i32 %518, 1\l  %520 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %506\l  %521 = load i32, i32* %520, align 4, !tbaa !7\l  %522 = icmp sgt i32 %521, %518\l  %523 = select i1 %522, i32 %519, i32 %521\l  %524 = sext i32 %523 to i64\l  %525 = sub nsw i64 %524, %506\l  %526 = load i64, i64* @cur, align 8, !tbaa !16\l  %527 = add nsw i64 %526, %525\l  store i64 %527, i64* @cur, align 8, !tbaa !16\l  br label %540\l}"];
	Node0x55a3c4411450 -> Node0x55a3c4421420;
	Node0x55a3c44114a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%528:\l528:                                              \l  %529 = load i32, i32* @rig, align 4, !tbaa !7\l  %530 = add nsw i32 %529, 1\l  store i32 %530, i32* @rig, align 4, !tbaa !7\l  %531 = add nsw i32 %505, -1\l  %532 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %506\l  %533 = load i32, i32* %532, align 4, !tbaa !7\l  %534 = icmp sgt i32 %505, %533\l  %535 = select i1 %534, i32 %531, i32 %533\l  %536 = sext i32 %535 to i64\l  %537 = sub nsw i64 %506, %536\l  %538 = load i64, i64* @cur, align 8, !tbaa !16\l  %539 = add nsw i64 %538, %537\l  store i64 %539, i64* @cur, align 8, !tbaa !16\l  br label %540\l}"];
	Node0x55a3c44114a0 -> Node0x55a3c4421420;
	Node0x55a3c4421420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%540:\l540:                                              \l  %541 = phi i32 [ %512, %509 ], [ %517, %516 ], [ %505, %528 ]\l  %542 = icmp eq i64 %506, %492\l  br i1 %542, label %495, label %504, !llvm.loop !37\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4421420:s0 -> Node0x55a3c4420fb0;
	Node0x55a3c4421420:s1 -> Node0x55a3c4421360;
	Node0x55a3c44246a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%543:\l543:                                              \l  %544 = trunc i64 %558 to i32\l  br label %545\l}"];
	Node0x55a3c44246a0 -> Node0x55a3c4421730;
	Node0x55a3c4421730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%545:\l545:                                              \l  %546 = phi i32 [ %483, %495 ], [ %544, %543 ]\l  %547 = icmp slt i32 %546, %498\l  br i1 %547, label %550, label %548\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4421730:s0 -> Node0x55a3c4424910;
	Node0x55a3c4421730:s1 -> Node0x55a3c4424960;
	Node0x55a3c4424960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%548:\l548:                                              \l  %549 = load i64, i64* @cur, align 8, !tbaa !16\l  br label %633\l}"];
	Node0x55a3c4424960 -> Node0x55a3c4420840;
	Node0x55a3c4424910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%550:\l550:                                              \l  %551 = sext i32 %546 to i64\l  %552 = sext i32 %498 to i64\l  %553 = load i32, i32* @lef, align 4, !tbaa !7\l  %554 = load i32, i32* @rig, align 4, !tbaa !7\l  br label %594\l}"];
	Node0x55a3c4424910 -> Node0x55a3c4424d00;
	Node0x55a3c44219c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%555:\l555:                                              \l  %556 = phi i32 [ %503, %500 ], [ %592, %591 ]\l  %557 = phi i64 [ %501, %500 ], [ %558, %591 ]\l  %558 = add nsw i64 %557, -1\l  %559 = icmp eq i32 %556, 100005\l  br i1 %559, label %560, label %564\l|{<s0>T|<s1>F}}"];
	Node0x55a3c44219c0:s0 -> Node0x55a3c4425090;
	Node0x55a3c44219c0:s1 -> Node0x55a3c44250e0;
	Node0x55a3c4425090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%560:\l560:                                              \l  %561 = load i64, i64* @cur, align 8, !tbaa !16\l  %562 = add nsw i64 %561, 1\l  store i64 %562, i64* @cur, align 8, !tbaa !16\l  %563 = trunc i64 %558 to i32\l  store i32 %563, i32* @rig, align 4, !tbaa !7\l  store i32 %563, i32* @lef, align 4, !tbaa !7\l  br label %591\l}"];
	Node0x55a3c4425090 -> Node0x55a3c4424dc0;
	Node0x55a3c44250e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%564:\l564:                                              \l  %565 = trunc i64 %557 to i32\l  %566 = icmp eq i32 %556, %565\l  br i1 %566, label %567, label %579\l|{<s0>T|<s1>F}}"];
	Node0x55a3c44250e0:s0 -> Node0x55a3c440c9e0;
	Node0x55a3c44250e0:s1 -> Node0x55a3c440ca30;
	Node0x55a3c440c9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%567:\l567:                                              \l  %568 = add nsw i32 %556, -1\l  store i32 %568, i32* @lef, align 4, !tbaa !7\l  %569 = load i32, i32* @rig, align 4, !tbaa !7\l  %570 = add nsw i32 %569, 1\l  %571 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %558\l  %572 = load i32, i32* %571, align 4, !tbaa !7\l  %573 = icmp sgt i32 %572, %569\l  %574 = select i1 %573, i32 %570, i32 %572\l  %575 = sext i32 %574 to i64\l  %576 = sub nsw i64 %575, %558\l  %577 = load i64, i64* @cur, align 8, !tbaa !16\l  %578 = add nsw i64 %577, %576\l  store i64 %578, i64* @cur, align 8, !tbaa !16\l  br label %591\l}"];
	Node0x55a3c440c9e0 -> Node0x55a3c4424dc0;
	Node0x55a3c440ca30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%579:\l579:                                              \l  %580 = load i32, i32* @rig, align 4, !tbaa !7\l  %581 = add nsw i32 %580, 1\l  store i32 %581, i32* @rig, align 4, !tbaa !7\l  %582 = add nsw i32 %556, -1\l  %583 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %558\l  %584 = load i32, i32* %583, align 4, !tbaa !7\l  %585 = icmp sgt i32 %556, %584\l  %586 = select i1 %585, i32 %582, i32 %584\l  %587 = sext i32 %586 to i64\l  %588 = sub nsw i64 %558, %587\l  %589 = load i64, i64* @cur, align 8, !tbaa !16\l  %590 = add nsw i64 %589, %588\l  store i64 %590, i64* @cur, align 8, !tbaa !16\l  br label %591\l}"];
	Node0x55a3c440ca30 -> Node0x55a3c4424dc0;
	Node0x55a3c4424dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%591:\l591:                                              \l  %592 = phi i32 [ %563, %560 ], [ %568, %567 ], [ %556, %579 ]\l  %593 = icmp sgt i64 %558, %502\l  br i1 %593, label %555, label %543, !llvm.loop !38\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4424dc0:s0 -> Node0x55a3c44219c0;
	Node0x55a3c4424dc0:s1 -> Node0x55a3c44246a0;
	Node0x55a3c4424d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%594:\l594:                                              \l  %595 = phi i32 [ %554, %550 ], [ %630, %628 ]\l  %596 = phi i32 [ %553, %550 ], [ %631, %628 ]\l  %597 = phi i64 [ %551, %550 ], [ %598, %628 ]\l  %598 = add nsw i64 %597, 1\l  %599 = icmp eq i32 %596, %595\l  br i1 %599, label %600, label %603\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4424d00:s0 -> Node0x55a3c43ff500;
	Node0x55a3c4424d00:s1 -> Node0x55a3c4427630;
	Node0x55a3c43ff500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%600:\l600:                                              \l  %601 = load i64, i64* @cur, align 8, !tbaa !16\l  %602 = add nsw i64 %601, -1\l  store i64 %602, i64* @cur, align 8, !tbaa !16\l  store i32 100005, i32* @lef, align 4, !tbaa !7\l  br label %628\l}"];
	Node0x55a3c43ff500 -> Node0x55a3c43ff260;
	Node0x55a3c4427630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%603:\l603:                                              \l  %604 = trunc i64 %597 to i32\l  %605 = icmp eq i32 %596, %604\l  br i1 %605, label %606, label %617\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4427630:s0 -> Node0x55a3c4427b00;
	Node0x55a3c4427630:s1 -> Node0x55a3c4427b50;
	Node0x55a3c4427b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%606:\l606:                                              \l  %607 = trunc i64 %598 to i32\l  store i32 %607, i32* @lef, align 4, !tbaa !7\l  %608 = add nsw i32 %595, 1\l  %609 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %597\l  %610 = load i32, i32* %609, align 4, !tbaa !7\l  %611 = icmp sgt i32 %610, %595\l  %612 = select i1 %611, i32 %608, i32 %610\l  %613 = sext i32 %612 to i64\l  %614 = sub i64 %597, %613\l  %615 = load i64, i64* @cur, align 8, !tbaa !16\l  %616 = add i64 %614, %615\l  store i64 %616, i64* @cur, align 8, !tbaa !16\l  br label %628\l}"];
	Node0x55a3c4427b00 -> Node0x55a3c43ff260;
	Node0x55a3c4427b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%617:\l617:                                              \l  %618 = add nsw i32 %595, -1\l  store i32 %618, i32* @rig, align 4, !tbaa !7\l  %619 = add nsw i32 %596, -1\l  %620 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %597\l  %621 = load i32, i32* %620, align 4, !tbaa !7\l  %622 = icmp sgt i32 %596, %621\l  %623 = select i1 %622, i32 %619, i32 %621\l  %624 = sext i32 %623 to i64\l  %625 = sub i64 %624, %597\l  %626 = load i64, i64* @cur, align 8, !tbaa !16\l  %627 = add i64 %625, %626\l  store i64 %627, i64* @cur, align 8, !tbaa !16\l  br label %628\l}"];
	Node0x55a3c4427b50 -> Node0x55a3c43ff260;
	Node0x55a3c43ff260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%628:\l628:                                              \l  %629 = phi i64 [ %602, %600 ], [ %616, %606 ], [ %627, %617 ]\l  %630 = phi i32 [ %595, %600 ], [ %595, %606 ], [ %618, %617 ]\l  %631 = phi i32 [ 100005, %600 ], [ %607, %606 ], [ %596, %617 ]\l  %632 = icmp eq i64 %598, %552\l  br i1 %632, label %633, label %594, !llvm.loop !39\l|{<s0>T|<s1>F}}"];
	Node0x55a3c43ff260:s0 -> Node0x55a3c4420840;
	Node0x55a3c43ff260:s1 -> Node0x55a3c4424d00;
	Node0x55a3c4420840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%633:\l633:                                              \l  %634 = phi i64 [ %549, %548 ], [ %629, %628 ]\l  %635 = phi i32 [ %546, %548 ], [ %498, %628 ]\l  %636 = getelementptr inbounds [100005 x i64], [100005 x i64]* @res, i64 0,\l... i64 %486\l  store i64 %634, i64* %636, align 8, !tbaa !16\l  %637 = add nuw nsw i64 %481, 1\l  %638 = icmp eq i64 %637, %472\l  br i1 %638, label %473, label %480, !llvm.loop !40\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4420840:s0 -> Node0x55a3c4420300;
	Node0x55a3c4420840:s1 -> Node0x55a3c4420240;
	Node0x55a3c441fdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%639:\l639:                                              \l  %640 = phi i32 [ %496, %473 ], [ %447, %463 ], [ %496, %681 ]\l  %641 = icmp slt i32 %447, %640\l  br i1 %641, label %642, label %723\l|{<s0>T|<s1>F}}"];
	Node0x55a3c441fdf0:s0 -> Node0x55a3c442a1b0;
	Node0x55a3c441fdf0:s1 -> Node0x55a3c441e070;
	Node0x55a3c442a1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%642:\l642:                                              \l  %643 = sext i32 %640 to i64\l  %644 = sext i32 %447 to i64\l  %645 = load i32, i32* @lef, align 4, !tbaa !7\l  %646 = load i32, i32* @rig, align 4, !tbaa !7\l  br label %685\l}"];
	Node0x55a3c442a1b0 -> Node0x55a3c44121d0;
	Node0x55a3c4420750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%647:\l647:                                              \l  %648 = phi i32 [ %479, %475 ], [ %682, %681 ]\l  %649 = phi i32 [ %478, %475 ], [ %683, %681 ]\l  %650 = phi i64 [ %476, %475 ], [ %651, %681 ]\l  %651 = add nsw i64 %650, 1\l  %652 = icmp eq i32 %649, %648\l  br i1 %652, label %653, label %656\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4420750:s0 -> Node0x55a3c44125c0;
	Node0x55a3c4420750:s1 -> Node0x55a3c4412610;
	Node0x55a3c44125c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%653:\l653:                                              \l  %654 = load i64, i64* @cur, align 8, !tbaa !16\l  %655 = add nsw i64 %654, -1\l  store i64 %655, i64* @cur, align 8, !tbaa !16\l  store i32 100005, i32* @lef, align 4, !tbaa !7\l  br label %681\l}"];
	Node0x55a3c44125c0 -> Node0x55a3c442a000;
	Node0x55a3c4412610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%656:\l656:                                              \l  %657 = trunc i64 %650 to i32\l  %658 = icmp eq i32 %649, %657\l  br i1 %658, label %659, label %670\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4412610:s0 -> Node0x55a3c4427220;
	Node0x55a3c4412610:s1 -> Node0x55a3c4427270;
	Node0x55a3c4427220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%659:\l659:                                              \l  %660 = trunc i64 %651 to i32\l  store i32 %660, i32* @lef, align 4, !tbaa !7\l  %661 = add nsw i32 %648, 1\l  %662 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %650\l  %663 = load i32, i32* %662, align 4, !tbaa !7\l  %664 = icmp sgt i32 %663, %648\l  %665 = select i1 %664, i32 %661, i32 %663\l  %666 = sext i32 %665 to i64\l  %667 = sub i64 %650, %666\l  %668 = load i64, i64* @cur, align 8, !tbaa !16\l  %669 = add i64 %667, %668\l  store i64 %669, i64* @cur, align 8, !tbaa !16\l  br label %681\l}"];
	Node0x55a3c4427220 -> Node0x55a3c442a000;
	Node0x55a3c4427270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%670:\l670:                                              \l  %671 = add nsw i32 %648, -1\l  store i32 %671, i32* @rig, align 4, !tbaa !7\l  %672 = add nsw i32 %649, -1\l  %673 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %650\l  %674 = load i32, i32* %673, align 4, !tbaa !7\l  %675 = icmp sgt i32 %649, %674\l  %676 = select i1 %675, i32 %672, i32 %674\l  %677 = sext i32 %676 to i64\l  %678 = sub i64 %677, %650\l  %679 = load i64, i64* @cur, align 8, !tbaa !16\l  %680 = add i64 %678, %679\l  store i64 %680, i64* @cur, align 8, !tbaa !16\l  br label %681\l}"];
	Node0x55a3c4427270 -> Node0x55a3c442a000;
	Node0x55a3c442a000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%681:\l681:                                              \l  %682 = phi i32 [ %648, %653 ], [ %648, %659 ], [ %671, %670 ]\l  %683 = phi i32 [ 100005, %653 ], [ %660, %659 ], [ %649, %670 ]\l  %684 = icmp slt i64 %651, %477\l  br i1 %684, label %647, label %639, !llvm.loop !41\l|{<s0>T|<s1>F}}"];
	Node0x55a3c442a000:s0 -> Node0x55a3c4420750;
	Node0x55a3c442a000:s1 -> Node0x55a3c441fdf0;
	Node0x55a3c44121d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%685:\l685:                                              \l  %686 = phi i32 [ %646, %642 ], [ %720, %719 ]\l  %687 = phi i32 [ %645, %642 ], [ %721, %719 ]\l  %688 = phi i64 [ %643, %642 ], [ %689, %719 ]\l  %689 = add nsw i64 %688, -1\l  %690 = icmp eq i32 %687, %686\l  br i1 %690, label %691, label %694\l|{<s0>T|<s1>F}}"];
	Node0x55a3c44121d0:s0 -> Node0x55a3c4414700;
	Node0x55a3c44121d0:s1 -> Node0x55a3c4414750;
	Node0x55a3c4414700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%691:\l691:                                              \l  %692 = load i64, i64* @cur, align 8, !tbaa !16\l  %693 = add nsw i64 %692, -1\l  store i64 %693, i64* @cur, align 8, !tbaa !16\l  store i32 100005, i32* @lef, align 4, !tbaa !7\l  br label %719\l}"];
	Node0x55a3c4414700 -> Node0x55a3c44143e0;
	Node0x55a3c4414750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%694:\l694:                                              \l  %695 = trunc i64 %689 to i32\l  %696 = icmp eq i32 %687, %695\l  br i1 %696, label %697, label %708\l|{<s0>T|<s1>F}}"];
	Node0x55a3c4414750:s0 -> Node0x55a3c4414990;
	Node0x55a3c4414750:s1 -> Node0x55a3c442f710;
	Node0x55a3c4414990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%697:\l697:                                              \l  %698 = trunc i64 %688 to i32\l  store i32 %698, i32* @lef, align 4, !tbaa !7\l  %699 = add nsw i32 %686, 1\l  %700 = getelementptr inbounds [100005 x i32], [100005 x i32]* @R, i64 0, i64\l... %689\l  %701 = load i32, i32* %700, align 4, !tbaa !7\l  %702 = icmp sgt i32 %701, %686\l  %703 = select i1 %702, i32 %699, i32 %701\l  %704 = sext i32 %703 to i64\l  %705 = sub i64 %689, %704\l  %706 = load i64, i64* @cur, align 8, !tbaa !16\l  %707 = add i64 %705, %706\l  store i64 %707, i64* @cur, align 8, !tbaa !16\l  br label %719\l}"];
	Node0x55a3c4414990 -> Node0x55a3c44143e0;
	Node0x55a3c442f710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%708:\l708:                                              \l  %709 = add nsw i32 %686, -1\l  store i32 %709, i32* @rig, align 4, !tbaa !7\l  %710 = add nsw i32 %687, -1\l  %711 = getelementptr inbounds [100005 x i32], [100005 x i32]* @L, i64 0, i64\l... %689\l  %712 = load i32, i32* %711, align 4, !tbaa !7\l  %713 = icmp sgt i32 %687, %712\l  %714 = select i1 %713, i32 %710, i32 %712\l  %715 = sext i32 %714 to i64\l  %716 = sub i64 %715, %689\l  %717 = load i64, i64* @cur, align 8, !tbaa !16\l  %718 = add i64 %716, %717\l  store i64 %718, i64* @cur, align 8, !tbaa !16\l  br label %719\l}"];
	Node0x55a3c442f710 -> Node0x55a3c44143e0;
	Node0x55a3c44143e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%719:\l719:                                              \l  %720 = phi i32 [ %686, %691 ], [ %686, %697 ], [ %709, %708 ]\l  %721 = phi i32 [ 100005, %691 ], [ %698, %697 ], [ %687, %708 ]\l  %722 = icmp sgt i64 %689, %644\l  br i1 %722, label %685, label %723, !llvm.loop !42\l|{<s0>T|<s1>F}}"];
	Node0x55a3c44143e0:s0 -> Node0x55a3c44121d0;
	Node0x55a3c44143e0:s1 -> Node0x55a3c441e070;
	Node0x55a3c441e070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%723:\l723:                                              \l  %724 = add nuw i64 %446, 1\l  %725 = trunc i64 %724 to i32\l  %726 = mul nsw i32 %725, 320\l  %727 = load i32, i32* @n, align 4, !tbaa !7\l  %728 = icmp sgt i32 %726, %727\l  br i1 %728, label %440, label %445, !llvm.loop !43\l|{<s0>T|<s1>F}}"];
	Node0x55a3c441e070:s0 -> Node0x55a3c441dcb0;
	Node0x55a3c441e070:s1 -> Node0x55a3c440c300;
	Node0x55a3c441df70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%729:\l729:                                              \l  ret i32 0\l}"];
	Node0x55a3c441df20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%730:\l730:                                              \l  %731 = phi i64 [ %735, %730 ], [ 0, %442 ]\l  %732 = getelementptr inbounds [100005 x i64], [100005 x i64]* @res, i64 0,\l... i64 %731\l  %733 = load i64, i64* %732, align 8, !tbaa !16\l  %734 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1)\l... getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 %733)\l  %735 = add nuw nsw i64 %731, 1\l  %736 = load i32, i32* @q, align 4, !tbaa !7\l  %737 = sext i32 %736 to i64\l  %738 = icmp slt i64 %735, %737\l  br i1 %738, label %730, label %729, !llvm.loop !44\l|{<s0>T|<s1>F}}"];
	Node0x55a3c441df20:s0 -> Node0x55a3c441df20;
	Node0x55a3c441df20:s1 -> Node0x55a3c441df70;
}
