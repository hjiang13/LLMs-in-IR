; ModuleID = '../../Benchmarks/AfraidoftheDark/AfraidoftheDark.cpp'
source_filename = "../../Benchmarks/AfraidoftheDark/AfraidoftheDark.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<std::pair<int, int>>, std::allocator<std::vector<std::pair<int, int>>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<std::pair<int, int>>, std::allocator<std::vector<std::pair<int, int>>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<std::pair<int, int>>, std::allocator<std::vector<std::pair<int, int>>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<std::pair<int, int>>, std::allocator<std::vector<std::pair<int, int>>>>::_Vector_impl_data" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl_data" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"struct.std::pair" = type { i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EED2Ev = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@N = dso_local global i32 0, align 4
@S = dso_local global [120010 x i32] zeroinitializer, align 16
@E = dso_local global %"class.std::vector" zeroinitializer, align 8
@sizem = dso_local local_unnamed_addr global [240020 x i32] zeroinitializer, align 16
@memo = dso_local local_unnamed_addr global [240020 x i32] zeroinitializer, align 16
@memomis = dso_local local_unnamed_addr global [240020 x %"struct.std::pair"] zeroinitializer, align 16
@.str = private unnamed_addr constant [31 x i8] c"../input_files/AfraidoftheDark\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str.3 = private unnamed_addr constant [3 x i8] c"0\0A\00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_AfraidoftheDark.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8, !tbaa !3
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8, !tbaa !8
  %6 = icmp eq %"class.std::vector.0"* %3, %5
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %14
  %8 = phi %"class.std::vector.0"* [ %15, %14 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8, !tbaa !9
  %11 = icmp eq %"struct.std::pair"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = bitcast %"struct.std::pair"* %10 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #14
  br label %14

14:                                               ; preds = %12, %7
  %15 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %8, i64 1
  %16 = icmp eq %"class.std::vector.0"* %15, %5
  br i1 %16, label %17, label %7, !llvm.loop !11

17:                                               ; preds = %14
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8, !tbaa !3
  br label %19

19:                                               ; preds = %17, %1
  %20 = phi %"class.std::vector.0"* [ %18, %17 ], [ %3, %1 ]
  %21 = icmp eq %"class.std::vector.0"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.std::vector.0"* %20 to i8*
  tail call void @_ZdlPv(i8* nonnull %23) #14
  br label %24

24:                                               ; preds = %19, %22
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local i32 @_Z4sizeiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #4 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds [240020 x i32], [240020 x i32]* @sizem, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4, !tbaa !13
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %52

8:                                                ; preds = %3
  store i32 1, i32* %5, align 4, !tbaa !13
  %9 = sext i32 %0 to i64
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %11 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %10, i64 %9, i32 0, i32 0, i32 0, i32 1
  %12 = load %"struct.std::pair"*, %"struct.std::pair"** %11, align 8, !tbaa !15
  %13 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %10, i64 %9, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8, !tbaa !9
  %15 = icmp eq %"struct.std::pair"* %12, %14
  br i1 %15, label %52, label %16

16:                                               ; preds = %8, %40
  %17 = phi %"struct.std::pair"* [ %41, %40 ], [ %14, %8 ]
  %18 = phi i32 [ %42, %40 ], [ 1, %8 ]
  %19 = phi %"class.std::vector.0"* [ %43, %40 ], [ %10, %8 ]
  %20 = phi i64 [ %44, %40 ], [ 0, %8 ]
  %21 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 %20, i32 0
  %22 = load i32, i32* %21, align 4, !tbaa !16
  %23 = icmp eq i32 %22, %1
  br i1 %23, label %40, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 %20, i32 1
  %26 = load i32, i32* %25, align 4, !tbaa !18
  %27 = tail call i32 @_Z4sizeiii(i32 %22, i32 %0, i32 %26)
  %28 = load i32, i32* @N, align 4, !tbaa !13
  %29 = sub nsw i32 %28, %27
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %31 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %30, i64 %9, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8, !tbaa !9
  %33 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %32, i64 %20, i32 1
  %34 = load i32, i32* %33, align 4, !tbaa !18
  %35 = xor i32 %34, 1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [240020 x i32], [240020 x i32]* @sizem, i64 0, i64 %36
  store i32 %29, i32* %37, align 4, !tbaa !13
  %38 = load i32, i32* %5, align 4, !tbaa !13
  %39 = add nsw i32 %38, %27
  store i32 %39, i32* %5, align 4, !tbaa !13
  br label %40

40:                                               ; preds = %16, %24
  %41 = phi %"struct.std::pair"* [ %32, %24 ], [ %17, %16 ]
  %42 = phi i32 [ %39, %24 ], [ %18, %16 ]
  %43 = phi %"class.std::vector.0"* [ %30, %24 ], [ %19, %16 ]
  %44 = add nuw i64 %20, 1
  %45 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %43, i64 %9, i32 0, i32 0, i32 0, i32 1
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %45, align 8, !tbaa !15
  %47 = ptrtoint %"struct.std::pair"* %46 to i64
  %48 = ptrtoint %"struct.std::pair"* %41 to i64
  %49 = sub i64 %47, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp ugt i64 %50, %44
  br i1 %51, label %16, label %52, !llvm.loop !19

52:                                               ; preds = %40, %8, %3
  %53 = phi i32 [ %6, %3 ], [ 1, %8 ], [ %42, %40 ]
  ret i32 %53
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree nosync nounwind uwtable
define dso_local i32 @_Z5solveiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #6 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds [240020 x i32], [240020 x i32]* @memo, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4, !tbaa !13
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = sext i32 %0 to i64
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %11 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %10, i64 %9, i32 0, i32 0, i32 0, i32 1
  %12 = load %"struct.std::pair"*, %"struct.std::pair"** %11, align 8, !tbaa !15
  %13 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %10, i64 %9, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8, !tbaa !9
  %15 = icmp eq %"struct.std::pair"* %12, %14
  br i1 %15, label %155, label %78

16:                                               ; preds = %3
  %17 = getelementptr inbounds [240020 x %"struct.std::pair"], [240020 x %"struct.std::pair"]* @memomis, i64 0, i64 %4, i32 0
  %18 = load i32, i32* %17, align 8, !tbaa !16
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds [240020 x %"struct.std::pair"], [240020 x %"struct.std::pair"]* @memomis, i64 0, i64 %4, i32 1
  %22 = load i32, i32* %21, align 4, !tbaa !18
  %23 = tail call i32 @_Z5solveiii(i32 %18, i32 %0, i32 %22)
  %24 = load i32, i32* %5, align 4, !tbaa !13
  %25 = icmp slt i32 %23, %24
  %26 = select i1 %25, i32 %23, i32 %24
  store i32 %26, i32* %5, align 4, !tbaa !13
  br label %27

27:                                               ; preds = %20, %16
  store i32 -1, i32* %17, align 8, !tbaa !16
  br label %155

28:                                               ; preds = %95
  %29 = getelementptr inbounds [120010 x i32], [120010 x i32]* @S, i64 0, i64 %9
  %30 = xor i32 %2, 1
  %31 = icmp eq %"struct.std::pair"* %102, %104
  br i1 %31, label %155, label %32

32:                                               ; preds = %28
  %33 = load i32, i32* %29, align 4, !tbaa !13
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %110, label %35

35:                                               ; preds = %32
  %36 = ptrtoint %"struct.std::pair"* %102 to i64
  %37 = ptrtoint %"struct.std::pair"* %104 to i64
  %38 = sub i64 %36, %37
  %39 = ashr exact i64 %38, 3
  %40 = call i64 @llvm.umax.i64(i64 %39, i64 1)
  %41 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 0, i32 0
  %42 = load i32, i32* %41, align 4, !tbaa !16
  %43 = icmp eq i32 %98, %42
  %44 = select i1 %43, i32 %96, i32 %97
  %45 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 0, i32 1
  %46 = load i32, i32* %45, align 4, !tbaa !18
  %47 = xor i32 %46, 1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [240020 x i32], [240020 x i32]* @memo, i64 0, i64 %48
  store i32 %44, i32* %49, align 4, !tbaa !13
  %50 = icmp eq i32 %42, %1
  %51 = select i1 %50, i32 -1, i32 %1
  %52 = load i32, i32* %45, align 4, !tbaa !18
  %53 = xor i32 %52, 1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [240020 x %"struct.std::pair"], [240020 x %"struct.std::pair"]* @memomis, i64 0, i64 %54, i32 0
  store i32 %51, i32* %55, align 8, !tbaa !16
  %56 = getelementptr inbounds [240020 x %"struct.std::pair"], [240020 x %"struct.std::pair"]* @memomis, i64 0, i64 %54, i32 1
  store i32 %30, i32* %56, align 4, !tbaa !18
  %57 = icmp ult i64 %39, 2
  br i1 %57, label %155, label %58

58:                                               ; preds = %35, %58
  %59 = phi i64 [ %76, %58 ], [ 1, %35 ]
  %60 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 %59, i32 0
  %61 = load i32, i32* %60, align 4, !tbaa !16
  %62 = icmp eq i32 %98, %61
  %63 = select i1 %62, i32 %96, i32 %97
  %64 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 %59, i32 1
  %65 = load i32, i32* %64, align 4, !tbaa !18
  %66 = xor i32 %65, 1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [240020 x i32], [240020 x i32]* @memo, i64 0, i64 %67
  store i32 %63, i32* %68, align 4, !tbaa !13
  %69 = icmp eq i32 %61, %1
  %70 = select i1 %69, i32 -1, i32 %1
  %71 = load i32, i32* %64, align 4, !tbaa !18
  %72 = xor i32 %71, 1
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [240020 x %"struct.std::pair"], [240020 x %"struct.std::pair"]* @memomis, i64 0, i64 %73, i32 0
  store i32 %70, i32* %74, align 8, !tbaa !16
  %75 = getelementptr inbounds [240020 x %"struct.std::pair"], [240020 x %"struct.std::pair"]* @memomis, i64 0, i64 %73, i32 1
  store i32 %30, i32* %75, align 4, !tbaa !18
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %40
  br i1 %77, label %155, label %58, !llvm.loop !20

78:                                               ; preds = %8, %95
  %79 = phi i64 [ %99, %95 ], [ 0, %8 ]
  %80 = phi %"struct.std::pair"* [ %104, %95 ], [ %14, %8 ]
  %81 = phi i32 [ %98, %95 ], [ -1, %8 ]
  %82 = phi i32 [ %97, %95 ], [ 1073741823, %8 ]
  %83 = phi i32 [ %96, %95 ], [ 1073741823, %8 ]
  %84 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %80, i64 %79, i32 0
  %85 = load i32, i32* %84, align 4, !tbaa !16
  %86 = icmp eq i32 %85, %1
  br i1 %86, label %95, label %87

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %80, i64 %79, i32 1
  %89 = load i32, i32* %88, align 4, !tbaa !18
  %90 = tail call i32 @_Z5solveiii(i32 %85, i32 %0, i32 %89)
  %91 = icmp slt i32 %90, %82
  br i1 %91, label %95, label %92

92:                                               ; preds = %87
  %93 = icmp slt i32 %90, %83
  %94 = select i1 %93, i32 %90, i32 %83
  br label %95

95:                                               ; preds = %92, %87, %78
  %96 = phi i32 [ %83, %78 ], [ %82, %87 ], [ %94, %92 ]
  %97 = phi i32 [ %82, %78 ], [ %90, %87 ], [ %82, %92 ]
  %98 = phi i32 [ %81, %78 ], [ %85, %87 ], [ %81, %92 ]
  %99 = add nuw i64 %79, 1
  %100 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %101 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %100, i64 %9, i32 0, i32 0, i32 0, i32 1
  %102 = load %"struct.std::pair"*, %"struct.std::pair"** %101, align 8, !tbaa !15
  %103 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %100, i64 %9, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::pair"*, %"struct.std::pair"** %103, align 8, !tbaa !9
  %105 = ptrtoint %"struct.std::pair"* %102 to i64
  %106 = ptrtoint %"struct.std::pair"* %104 to i64
  %107 = sub i64 %105, %106
  %108 = ashr exact i64 %107, 3
  %109 = icmp ugt i64 %108, %99
  br i1 %109, label %78, label %28, !llvm.loop !22

110:                                              ; preds = %32, %153
  %111 = phi %"class.std::vector.0"* [ %129, %153 ], [ %100, %32 ]
  %112 = phi i32 [ %154, %153 ], [ 0, %32 ]
  %113 = phi i64 [ %145, %153 ], [ 0, %32 ]
  %114 = phi %"struct.std::pair"* [ %132, %153 ], [ %104, %32 ]
  %115 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %114, i64 %113, i32 0
  %116 = load i32, i32* %115, align 4, !tbaa !16
  %117 = icmp eq i32 %98, %116
  %118 = select i1 %117, i32 %96, i32 %97
  %119 = icmp eq i32 %112, 0
  br i1 %119, label %120, label %128

120:                                              ; preds = %110
  %121 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %114, i64 %113, i32 1
  %122 = load i32, i32* %121, align 4, !tbaa !18
  %123 = xor i32 %122, 1
  %124 = tail call i32 @_Z4sizeiii(i32 %0, i32 %116, i32 %123)
  %125 = icmp slt i32 %124, %118
  %126 = select i1 %125, i32 %124, i32 %118
  %127 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  br label %128

128:                                              ; preds = %120, %110
  %129 = phi %"class.std::vector.0"* [ %127, %120 ], [ %111, %110 ]
  %130 = phi i32 [ %126, %120 ], [ %118, %110 ]
  %131 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %129, i64 %9, i32 0, i32 0, i32 0, i32 0
  %132 = load %"struct.std::pair"*, %"struct.std::pair"** %131, align 8, !tbaa !9
  %133 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %132, i64 %113, i32 1
  %134 = load i32, i32* %133, align 4, !tbaa !18
  %135 = xor i32 %134, 1
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [240020 x i32], [240020 x i32]* @memo, i64 0, i64 %136
  store i32 %130, i32* %137, align 4, !tbaa !13
  %138 = icmp eq i32 %116, %1
  %139 = select i1 %138, i32 -1, i32 %1
  %140 = load i32, i32* %133, align 4, !tbaa !18
  %141 = xor i32 %140, 1
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [240020 x %"struct.std::pair"], [240020 x %"struct.std::pair"]* @memomis, i64 0, i64 %142, i32 0
  store i32 %139, i32* %143, align 8, !tbaa !16
  %144 = getelementptr inbounds [240020 x %"struct.std::pair"], [240020 x %"struct.std::pair"]* @memomis, i64 0, i64 %142, i32 1
  store i32 %30, i32* %144, align 4, !tbaa !18
  %145 = add nuw i64 %113, 1
  %146 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %129, i64 %9, i32 0, i32 0, i32 0, i32 1
  %147 = load %"struct.std::pair"*, %"struct.std::pair"** %146, align 8, !tbaa !15
  %148 = ptrtoint %"struct.std::pair"* %147 to i64
  %149 = ptrtoint %"struct.std::pair"* %132 to i64
  %150 = sub i64 %148, %149
  %151 = ashr exact i64 %150, 3
  %152 = icmp ugt i64 %151, %145
  br i1 %152, label %153, label %155, !llvm.loop !23

153:                                              ; preds = %128
  %154 = load i32, i32* %29, align 4, !tbaa !13
  br label %110

155:                                              ; preds = %58, %128, %8, %35, %28, %27
  %156 = load i32, i32* %5, align 4, !tbaa !13
  ret i32 %156
}

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #7 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i8, align 1
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !25
  %8 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %7)
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #14
  %10 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %3)
  %11 = bitcast i32* %4 to i8*
  %12 = bitcast i32* %5 to i8*
  %13 = load i32, i32* %3, align 4, !tbaa !13
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %16

15:                                               ; preds = %476, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #14
  ret i32 0

16:                                               ; preds = %0, %476
  %17 = phi i32 [ %477, %476 ], [ 1, %0 ]
  %18 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) @N)
  %19 = load i32, i32* @N, align 4, !tbaa !13
  %20 = sext i32 %19 to i64
  %21 = icmp slt i32 %19, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0)) #15
  unreachable

23:                                               ; preds = %16
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = getelementptr %"class.std::vector.0", %"class.std::vector.0"* null, i64 %20
  br label %32

27:                                               ; preds = %23
  %28 = mul nuw nsw i64 %20, 24
  %29 = call noalias nonnull i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"class.std::vector.0"*
  %31 = getelementptr %"class.std::vector.0", %"class.std::vector.0"* %30, i64 %20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 %28, i1 false)
  br label %32

32:                                               ; preds = %27, %25
  %33 = phi %"class.std::vector.0"* [ %31, %27 ], [ %26, %25 ]
  %34 = phi %"class.std::vector.0"* [ %30, %27 ], [ null, %25 ]
  %35 = phi %"class.std::vector.0"* [ %31, %27 ], [ null, %25 ]
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !8
  store %"class.std::vector.0"* %34, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  store %"class.std::vector.0"* %35, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !8
  store %"class.std::vector.0"* %33, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !26
  %38 = icmp eq %"class.std::vector.0"* %36, %37
  br i1 %38, label %49, label %39

39:                                               ; preds = %32, %46
  %40 = phi %"class.std::vector.0"* [ %47, %46 ], [ %36, %32 ]
  %41 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8, !tbaa !9
  %43 = icmp eq %"struct.std::pair"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = bitcast %"struct.std::pair"* %42 to i8*
  call void @_ZdlPv(i8* nonnull %45) #14
  br label %46

46:                                               ; preds = %44, %39
  %47 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %40, i64 1
  %48 = icmp eq %"class.std::vector.0"* %47, %37
  br i1 %48, label %49, label %39, !llvm.loop !11

49:                                               ; preds = %46, %32
  %50 = icmp eq %"class.std::vector.0"* %36, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = bitcast %"class.std::vector.0"* %36 to i8*
  call void @_ZdlPv(i8* nonnull %52) #14
  br label %53

53:                                               ; preds = %49, %51
  %54 = load i32, i32* @N, align 4, !tbaa !13
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %58, label %476

56:                                               ; preds = %58
  %57 = icmp sgt i32 %68, 1
  br i1 %57, label %77, label %71

58:                                               ; preds = %53, %58
  %59 = phi i64 [ %67, %58 ], [ 0, %53 ]
  %60 = phi i32 [ %66, %58 ], [ 0, %53 ]
  %61 = getelementptr inbounds [120010 x i32], [120010 x i32]* @S, i64 0, i64 %59
  %62 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %61)
  %63 = load i32, i32* %61, align 4, !tbaa !13
  %64 = icmp eq i32 %63, 0
  %65 = zext i1 %64 to i32
  %66 = add nuw nsw i32 %60, %65
  %67 = add nuw nsw i64 %59, 1
  %68 = load i32, i32* @N, align 4, !tbaa !13
  %69 = sext i32 %68 to i64
  %70 = icmp slt i64 %67, %69
  br i1 %70, label %58, label %56, !llvm.loop !27

71:                                               ; preds = %414, %56
  %72 = phi i32 [ %68, %56 ], [ %416, %414 ]
  %73 = and i32 %66, 1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %428

75:                                               ; preds = %71
  %76 = icmp sgt i32 %72, 0
  br i1 %76, label %420, label %476

77:                                               ; preds = %56, %414
  %78 = phi i64 [ %419, %414 ], [ 0, %56 ]
  %79 = phi i64 [ %415, %414 ], [ 1, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #14
  %80 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %4)
  %81 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %80, i32* nonnull align 4 dereferenceable(4) %5)
  %82 = load i32, i32* %4, align 4, !tbaa !13
  %83 = add nsw i32 %82, -1
  store i32 %83, i32* %4, align 4, !tbaa !13
  %84 = load i32, i32* %5, align 4, !tbaa !13
  %85 = add nsw i32 %84, -1
  store i32 %85, i32* %5, align 4, !tbaa !13
  %86 = sext i32 %83 to i64
  %87 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %88 = shl i64 %78, 33
  %89 = shl nuw nsw i64 %78, 33
  %90 = zext i32 %85 to i64
  %91 = or i64 %89, %90
  %92 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %87, i64 %86, i32 0, i32 0, i32 0, i32 1
  %93 = load %"struct.std::pair"*, %"struct.std::pair"** %92, align 8, !tbaa !15
  %94 = ptrtoint %"struct.std::pair"* %93 to i64
  %95 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %87, i64 %86, i32 0, i32 0, i32 0, i32 2
  %96 = load %"struct.std::pair"*, %"struct.std::pair"** %95, align 8, !tbaa !28
  %97 = icmp eq %"struct.std::pair"* %93, %96
  br i1 %97, label %102, label %98

98:                                               ; preds = %77
  %99 = bitcast %"struct.std::pair"* %93 to i64*
  store i64 %91, i64* %99, align 4
  %100 = load %"struct.std::pair"*, %"struct.std::pair"** %92, align 8, !tbaa !15
  %101 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %100, i64 1
  store %"struct.std::pair"* %101, %"struct.std::pair"** %92, align 8, !tbaa !15
  br label %250

102:                                              ; preds = %77
  %103 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %87, i64 %86, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::pair"*, %"struct.std::pair"** %103, align 8, !tbaa !9
  %105 = ptrtoint %"struct.std::pair"* %104 to i64
  %106 = ptrtoint %"struct.std::pair"* %93 to i64
  %107 = ptrtoint %"struct.std::pair"* %104 to i64
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 3
  %110 = icmp eq i64 %108, 9223372036854775800
  br i1 %110, label %111, label %112

111:                                              ; preds = %102
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

112:                                              ; preds = %102
  %113 = icmp eq i64 %108, 0
  %114 = select i1 %113, i64 1, i64 %109
  %115 = add nsw i64 %114, %109
  %116 = icmp ult i64 %115, %109
  %117 = icmp ugt i64 %115, 1152921504606846975
  %118 = or i1 %116, %117
  %119 = select i1 %118, i64 1152921504606846975, i64 %115
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %112
  %122 = shl nuw nsw i64 %119, 3
  %123 = call noalias nonnull i8* @_Znwm(i64 %122) #16
  %124 = bitcast i8* %123 to %"struct.std::pair"*
  br label %125

125:                                              ; preds = %121, %112
  %126 = phi %"struct.std::pair"* [ %124, %121 ], [ null, %112 ]
  %127 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %126, i64 %109
  %128 = bitcast %"struct.std::pair"* %127 to i64*
  store i64 %91, i64* %128, align 4
  %129 = icmp eq %"struct.std::pair"* %104, %93
  br i1 %129, label %240, label %130

130:                                              ; preds = %125
  %131 = add i64 %94, -8
  %132 = sub i64 %131, %105
  %133 = lshr i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = icmp ult i64 %132, 24
  br i1 %135, label %228, label %136

136:                                              ; preds = %130
  %137 = add i64 %94, -8
  %138 = sub i64 %137, %105
  %139 = lshr i64 %138, 3
  %140 = add nuw nsw i64 %139, 1
  %141 = getelementptr %"struct.std::pair", %"struct.std::pair"* %126, i64 %140
  %142 = add nuw nsw i64 %139, 1
  %143 = getelementptr %"struct.std::pair", %"struct.std::pair"* %104, i64 %142
  %144 = icmp ult %"struct.std::pair"* %126, %143
  %145 = icmp ult %"struct.std::pair"* %104, %141
  %146 = and i1 %144, %145
  br i1 %146, label %228, label %147

147:                                              ; preds = %136
  %148 = and i64 %134, 4611686018427387900
  %149 = getelementptr %"struct.std::pair", %"struct.std::pair"* %126, i64 %148
  %150 = getelementptr %"struct.std::pair", %"struct.std::pair"* %104, i64 %148
  %151 = add nsw i64 %148, -4
  %152 = lshr exact i64 %151, 2
  %153 = add nuw nsw i64 %152, 1
  %154 = and i64 %153, 3
  %155 = icmp ult i64 %151, 12
  br i1 %155, label %207, label %156

156:                                              ; preds = %147
  %157 = and i64 %153, 9223372036854775804
  br label %158

158:                                              ; preds = %158, %156
  %159 = phi i64 [ 0, %156 ], [ %204, %158 ]
  %160 = phi i64 [ %157, %156 ], [ %205, %158 ]
  %161 = getelementptr %"struct.std::pair", %"struct.std::pair"* %126, i64 %159
  %162 = getelementptr %"struct.std::pair", %"struct.std::pair"* %104, i64 %159
  %163 = bitcast %"struct.std::pair"* %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 4, !alias.scope !29
  %165 = getelementptr %"struct.std::pair", %"struct.std::pair"* %162, i64 2
  %166 = bitcast %"struct.std::pair"* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 4, !alias.scope !29
  %168 = bitcast %"struct.std::pair"* %161 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %168, align 4, !alias.scope !32, !noalias !29
  %169 = getelementptr %"struct.std::pair", %"struct.std::pair"* %161, i64 2
  %170 = bitcast %"struct.std::pair"* %169 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %170, align 4, !alias.scope !32, !noalias !29
  %171 = or i64 %159, 4
  %172 = getelementptr %"struct.std::pair", %"struct.std::pair"* %126, i64 %171
  %173 = getelementptr %"struct.std::pair", %"struct.std::pair"* %104, i64 %171
  %174 = bitcast %"struct.std::pair"* %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 4, !alias.scope !29
  %176 = getelementptr %"struct.std::pair", %"struct.std::pair"* %173, i64 2
  %177 = bitcast %"struct.std::pair"* %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 4, !alias.scope !29
  %179 = bitcast %"struct.std::pair"* %172 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %179, align 4, !alias.scope !32, !noalias !29
  %180 = getelementptr %"struct.std::pair", %"struct.std::pair"* %172, i64 2
  %181 = bitcast %"struct.std::pair"* %180 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %181, align 4, !alias.scope !32, !noalias !29
  %182 = or i64 %159, 8
  %183 = getelementptr %"struct.std::pair", %"struct.std::pair"* %126, i64 %182
  %184 = getelementptr %"struct.std::pair", %"struct.std::pair"* %104, i64 %182
  %185 = bitcast %"struct.std::pair"* %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 4, !alias.scope !29
  %187 = getelementptr %"struct.std::pair", %"struct.std::pair"* %184, i64 2
  %188 = bitcast %"struct.std::pair"* %187 to <2 x i64>*
  %189 = load <2 x i64>, <2 x i64>* %188, align 4, !alias.scope !29
  %190 = bitcast %"struct.std::pair"* %183 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %190, align 4, !alias.scope !32, !noalias !29
  %191 = getelementptr %"struct.std::pair", %"struct.std::pair"* %183, i64 2
  %192 = bitcast %"struct.std::pair"* %191 to <2 x i64>*
  store <2 x i64> %189, <2 x i64>* %192, align 4, !alias.scope !32, !noalias !29
  %193 = or i64 %159, 12
  %194 = getelementptr %"struct.std::pair", %"struct.std::pair"* %126, i64 %193
  %195 = getelementptr %"struct.std::pair", %"struct.std::pair"* %104, i64 %193
  %196 = bitcast %"struct.std::pair"* %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 4, !alias.scope !29
  %198 = getelementptr %"struct.std::pair", %"struct.std::pair"* %195, i64 2
  %199 = bitcast %"struct.std::pair"* %198 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 4, !alias.scope !29
  %201 = bitcast %"struct.std::pair"* %194 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %201, align 4, !alias.scope !32, !noalias !29
  %202 = getelementptr %"struct.std::pair", %"struct.std::pair"* %194, i64 2
  %203 = bitcast %"struct.std::pair"* %202 to <2 x i64>*
  store <2 x i64> %200, <2 x i64>* %203, align 4, !alias.scope !32, !noalias !29
  %204 = add nuw i64 %159, 16
  %205 = add i64 %160, -4
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %158, !llvm.loop !34

207:                                              ; preds = %158, %147
  %208 = phi i64 [ 0, %147 ], [ %204, %158 ]
  %209 = icmp eq i64 %154, 0
  br i1 %209, label %226, label %210

210:                                              ; preds = %207, %210
  %211 = phi i64 [ %223, %210 ], [ %208, %207 ]
  %212 = phi i64 [ %224, %210 ], [ %154, %207 ]
  %213 = getelementptr %"struct.std::pair", %"struct.std::pair"* %126, i64 %211
  %214 = getelementptr %"struct.std::pair", %"struct.std::pair"* %104, i64 %211
  %215 = bitcast %"struct.std::pair"* %214 to <2 x i64>*
  %216 = load <2 x i64>, <2 x i64>* %215, align 4, !alias.scope !29
  %217 = getelementptr %"struct.std::pair", %"struct.std::pair"* %214, i64 2
  %218 = bitcast %"struct.std::pair"* %217 to <2 x i64>*
  %219 = load <2 x i64>, <2 x i64>* %218, align 4, !alias.scope !29
  %220 = bitcast %"struct.std::pair"* %213 to <2 x i64>*
  store <2 x i64> %216, <2 x i64>* %220, align 4, !alias.scope !32, !noalias !29
  %221 = getelementptr %"struct.std::pair", %"struct.std::pair"* %213, i64 2
  %222 = bitcast %"struct.std::pair"* %221 to <2 x i64>*
  store <2 x i64> %219, <2 x i64>* %222, align 4, !alias.scope !32, !noalias !29
  %223 = add nuw i64 %211, 4
  %224 = add i64 %212, -1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %210, !llvm.loop !36

226:                                              ; preds = %210, %207
  %227 = icmp eq i64 %134, %148
  br i1 %227, label %240, label %228

228:                                              ; preds = %136, %130, %226
  %229 = phi %"struct.std::pair"* [ %126, %136 ], [ %126, %130 ], [ %149, %226 ]
  %230 = phi %"struct.std::pair"* [ %104, %136 ], [ %104, %130 ], [ %150, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi %"struct.std::pair"* [ %238, %231 ], [ %229, %228 ]
  %233 = phi %"struct.std::pair"* [ %237, %231 ], [ %230, %228 ]
  %234 = bitcast %"struct.std::pair"* %233 to i64*
  %235 = bitcast %"struct.std::pair"* %232 to i64*
  %236 = load i64, i64* %234, align 4
  store i64 %236, i64* %235, align 4
  %237 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %233, i64 1
  %238 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %232, i64 1
  %239 = icmp eq %"struct.std::pair"* %237, %93
  br i1 %239, label %240, label %231, !llvm.loop !38

240:                                              ; preds = %231, %226, %125
  %241 = phi %"struct.std::pair"* [ %126, %125 ], [ %149, %226 ], [ %238, %231 ]
  %242 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %241, i64 1
  %243 = icmp eq %"struct.std::pair"* %104, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %240
  %245 = bitcast %"struct.std::pair"* %104 to i8*
  call void @_ZdlPv(i8* nonnull %245) #14
  br label %246

246:                                              ; preds = %244, %240
  store %"struct.std::pair"* %126, %"struct.std::pair"** %103, align 8, !tbaa !9
  store %"struct.std::pair"* %242, %"struct.std::pair"** %92, align 8, !tbaa !15
  %247 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %126, i64 %119
  store %"struct.std::pair"* %247, %"struct.std::pair"** %95, align 8, !tbaa !28
  %248 = load i32, i32* %5, align 4, !tbaa !13
  %249 = load i32, i32* %4, align 4, !tbaa !13
  br label %250

250:                                              ; preds = %98, %246
  %251 = phi i32 [ %83, %98 ], [ %249, %246 ]
  %252 = phi i32 [ %85, %98 ], [ %248, %246 ]
  %253 = sext i32 %252 to i64
  %254 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %255 = zext i32 %251 to i64
  %256 = or i64 %88, %255
  %257 = or i64 %256, 4294967296
  %258 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %254, i64 %253, i32 0, i32 0, i32 0, i32 1
  %259 = load %"struct.std::pair"*, %"struct.std::pair"** %258, align 8, !tbaa !15
  %260 = ptrtoint %"struct.std::pair"* %259 to i64
  %261 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %254, i64 %253, i32 0, i32 0, i32 0, i32 2
  %262 = load %"struct.std::pair"*, %"struct.std::pair"** %261, align 8, !tbaa !28
  %263 = icmp eq %"struct.std::pair"* %259, %262
  br i1 %263, label %268, label %264

264:                                              ; preds = %250
  %265 = bitcast %"struct.std::pair"* %259 to i64*
  store i64 %257, i64* %265, align 4
  %266 = load %"struct.std::pair"*, %"struct.std::pair"** %258, align 8, !tbaa !15
  %267 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %266, i64 1
  store %"struct.std::pair"* %267, %"struct.std::pair"** %258, align 8, !tbaa !15
  br label %414

268:                                              ; preds = %250
  %269 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %254, i64 %253, i32 0, i32 0, i32 0, i32 0
  %270 = load %"struct.std::pair"*, %"struct.std::pair"** %269, align 8, !tbaa !9
  %271 = ptrtoint %"struct.std::pair"* %270 to i64
  %272 = ptrtoint %"struct.std::pair"* %259 to i64
  %273 = ptrtoint %"struct.std::pair"* %270 to i64
  %274 = sub i64 %272, %273
  %275 = ashr exact i64 %274, 3
  %276 = icmp eq i64 %274, 9223372036854775800
  br i1 %276, label %277, label %278

277:                                              ; preds = %268
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

278:                                              ; preds = %268
  %279 = icmp eq i64 %274, 0
  %280 = select i1 %279, i64 1, i64 %275
  %281 = add nsw i64 %280, %275
  %282 = icmp ult i64 %281, %275
  %283 = icmp ugt i64 %281, 1152921504606846975
  %284 = or i1 %282, %283
  %285 = select i1 %284, i64 1152921504606846975, i64 %281
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %291, label %287

287:                                              ; preds = %278
  %288 = shl nuw nsw i64 %285, 3
  %289 = call noalias nonnull i8* @_Znwm(i64 %288) #16
  %290 = bitcast i8* %289 to %"struct.std::pair"*
  br label %291

291:                                              ; preds = %287, %278
  %292 = phi %"struct.std::pair"* [ %290, %287 ], [ null, %278 ]
  %293 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %292, i64 %275
  %294 = bitcast %"struct.std::pair"* %293 to i64*
  store i64 %257, i64* %294, align 4
  %295 = icmp eq %"struct.std::pair"* %270, %259
  br i1 %295, label %406, label %296

296:                                              ; preds = %291
  %297 = add i64 %260, -8
  %298 = sub i64 %297, %271
  %299 = lshr i64 %298, 3
  %300 = add nuw nsw i64 %299, 1
  %301 = icmp ult i64 %298, 24
  br i1 %301, label %394, label %302

302:                                              ; preds = %296
  %303 = add i64 %260, -8
  %304 = sub i64 %303, %271
  %305 = lshr i64 %304, 3
  %306 = add nuw nsw i64 %305, 1
  %307 = getelementptr %"struct.std::pair", %"struct.std::pair"* %292, i64 %306
  %308 = add nuw nsw i64 %305, 1
  %309 = getelementptr %"struct.std::pair", %"struct.std::pair"* %270, i64 %308
  %310 = icmp ult %"struct.std::pair"* %292, %309
  %311 = icmp ult %"struct.std::pair"* %270, %307
  %312 = and i1 %310, %311
  br i1 %312, label %394, label %313

313:                                              ; preds = %302
  %314 = and i64 %300, 4611686018427387900
  %315 = getelementptr %"struct.std::pair", %"struct.std::pair"* %292, i64 %314
  %316 = getelementptr %"struct.std::pair", %"struct.std::pair"* %270, i64 %314
  %317 = add nsw i64 %314, -4
  %318 = lshr exact i64 %317, 2
  %319 = add nuw nsw i64 %318, 1
  %320 = and i64 %319, 3
  %321 = icmp ult i64 %317, 12
  br i1 %321, label %373, label %322

322:                                              ; preds = %313
  %323 = and i64 %319, 9223372036854775804
  br label %324

324:                                              ; preds = %324, %322
  %325 = phi i64 [ 0, %322 ], [ %370, %324 ]
  %326 = phi i64 [ %323, %322 ], [ %371, %324 ]
  %327 = getelementptr %"struct.std::pair", %"struct.std::pair"* %292, i64 %325
  %328 = getelementptr %"struct.std::pair", %"struct.std::pair"* %270, i64 %325
  %329 = bitcast %"struct.std::pair"* %328 to <2 x i64>*
  %330 = load <2 x i64>, <2 x i64>* %329, align 4, !alias.scope !39
  %331 = getelementptr %"struct.std::pair", %"struct.std::pair"* %328, i64 2
  %332 = bitcast %"struct.std::pair"* %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 4, !alias.scope !39
  %334 = bitcast %"struct.std::pair"* %327 to <2 x i64>*
  store <2 x i64> %330, <2 x i64>* %334, align 4, !alias.scope !42, !noalias !39
  %335 = getelementptr %"struct.std::pair", %"struct.std::pair"* %327, i64 2
  %336 = bitcast %"struct.std::pair"* %335 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %336, align 4, !alias.scope !42, !noalias !39
  %337 = or i64 %325, 4
  %338 = getelementptr %"struct.std::pair", %"struct.std::pair"* %292, i64 %337
  %339 = getelementptr %"struct.std::pair", %"struct.std::pair"* %270, i64 %337
  %340 = bitcast %"struct.std::pair"* %339 to <2 x i64>*
  %341 = load <2 x i64>, <2 x i64>* %340, align 4, !alias.scope !39
  %342 = getelementptr %"struct.std::pair", %"struct.std::pair"* %339, i64 2
  %343 = bitcast %"struct.std::pair"* %342 to <2 x i64>*
  %344 = load <2 x i64>, <2 x i64>* %343, align 4, !alias.scope !39
  %345 = bitcast %"struct.std::pair"* %338 to <2 x i64>*
  store <2 x i64> %341, <2 x i64>* %345, align 4, !alias.scope !42, !noalias !39
  %346 = getelementptr %"struct.std::pair", %"struct.std::pair"* %338, i64 2
  %347 = bitcast %"struct.std::pair"* %346 to <2 x i64>*
  store <2 x i64> %344, <2 x i64>* %347, align 4, !alias.scope !42, !noalias !39
  %348 = or i64 %325, 8
  %349 = getelementptr %"struct.std::pair", %"struct.std::pair"* %292, i64 %348
  %350 = getelementptr %"struct.std::pair", %"struct.std::pair"* %270, i64 %348
  %351 = bitcast %"struct.std::pair"* %350 to <2 x i64>*
  %352 = load <2 x i64>, <2 x i64>* %351, align 4, !alias.scope !39
  %353 = getelementptr %"struct.std::pair", %"struct.std::pair"* %350, i64 2
  %354 = bitcast %"struct.std::pair"* %353 to <2 x i64>*
  %355 = load <2 x i64>, <2 x i64>* %354, align 4, !alias.scope !39
  %356 = bitcast %"struct.std::pair"* %349 to <2 x i64>*
  store <2 x i64> %352, <2 x i64>* %356, align 4, !alias.scope !42, !noalias !39
  %357 = getelementptr %"struct.std::pair", %"struct.std::pair"* %349, i64 2
  %358 = bitcast %"struct.std::pair"* %357 to <2 x i64>*
  store <2 x i64> %355, <2 x i64>* %358, align 4, !alias.scope !42, !noalias !39
  %359 = or i64 %325, 12
  %360 = getelementptr %"struct.std::pair", %"struct.std::pair"* %292, i64 %359
  %361 = getelementptr %"struct.std::pair", %"struct.std::pair"* %270, i64 %359
  %362 = bitcast %"struct.std::pair"* %361 to <2 x i64>*
  %363 = load <2 x i64>, <2 x i64>* %362, align 4, !alias.scope !39
  %364 = getelementptr %"struct.std::pair", %"struct.std::pair"* %361, i64 2
  %365 = bitcast %"struct.std::pair"* %364 to <2 x i64>*
  %366 = load <2 x i64>, <2 x i64>* %365, align 4, !alias.scope !39
  %367 = bitcast %"struct.std::pair"* %360 to <2 x i64>*
  store <2 x i64> %363, <2 x i64>* %367, align 4, !alias.scope !42, !noalias !39
  %368 = getelementptr %"struct.std::pair", %"struct.std::pair"* %360, i64 2
  %369 = bitcast %"struct.std::pair"* %368 to <2 x i64>*
  store <2 x i64> %366, <2 x i64>* %369, align 4, !alias.scope !42, !noalias !39
  %370 = add nuw i64 %325, 16
  %371 = add i64 %326, -4
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %373, label %324, !llvm.loop !44

373:                                              ; preds = %324, %313
  %374 = phi i64 [ 0, %313 ], [ %370, %324 ]
  %375 = icmp eq i64 %320, 0
  br i1 %375, label %392, label %376

376:                                              ; preds = %373, %376
  %377 = phi i64 [ %389, %376 ], [ %374, %373 ]
  %378 = phi i64 [ %390, %376 ], [ %320, %373 ]
  %379 = getelementptr %"struct.std::pair", %"struct.std::pair"* %292, i64 %377
  %380 = getelementptr %"struct.std::pair", %"struct.std::pair"* %270, i64 %377
  %381 = bitcast %"struct.std::pair"* %380 to <2 x i64>*
  %382 = load <2 x i64>, <2 x i64>* %381, align 4, !alias.scope !39
  %383 = getelementptr %"struct.std::pair", %"struct.std::pair"* %380, i64 2
  %384 = bitcast %"struct.std::pair"* %383 to <2 x i64>*
  %385 = load <2 x i64>, <2 x i64>* %384, align 4, !alias.scope !39
  %386 = bitcast %"struct.std::pair"* %379 to <2 x i64>*
  store <2 x i64> %382, <2 x i64>* %386, align 4, !alias.scope !42, !noalias !39
  %387 = getelementptr %"struct.std::pair", %"struct.std::pair"* %379, i64 2
  %388 = bitcast %"struct.std::pair"* %387 to <2 x i64>*
  store <2 x i64> %385, <2 x i64>* %388, align 4, !alias.scope !42, !noalias !39
  %389 = add nuw i64 %377, 4
  %390 = add i64 %378, -1
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %376, !llvm.loop !45

392:                                              ; preds = %376, %373
  %393 = icmp eq i64 %300, %314
  br i1 %393, label %406, label %394

394:                                              ; preds = %302, %296, %392
  %395 = phi %"struct.std::pair"* [ %292, %302 ], [ %292, %296 ], [ %315, %392 ]
  %396 = phi %"struct.std::pair"* [ %270, %302 ], [ %270, %296 ], [ %316, %392 ]
  br label %397

397:                                              ; preds = %394, %397
  %398 = phi %"struct.std::pair"* [ %404, %397 ], [ %395, %394 ]
  %399 = phi %"struct.std::pair"* [ %403, %397 ], [ %396, %394 ]
  %400 = bitcast %"struct.std::pair"* %399 to i64*
  %401 = bitcast %"struct.std::pair"* %398 to i64*
  %402 = load i64, i64* %400, align 4
  store i64 %402, i64* %401, align 4
  %403 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %399, i64 1
  %404 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %398, i64 1
  %405 = icmp eq %"struct.std::pair"* %403, %259
  br i1 %405, label %406, label %397, !llvm.loop !46

406:                                              ; preds = %397, %392, %291
  %407 = phi %"struct.std::pair"* [ %292, %291 ], [ %315, %392 ], [ %404, %397 ]
  %408 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %407, i64 1
  %409 = icmp eq %"struct.std::pair"* %270, null
  br i1 %409, label %412, label %410

410:                                              ; preds = %406
  %411 = bitcast %"struct.std::pair"* %270 to i8*
  call void @_ZdlPv(i8* nonnull %411) #14
  br label %412

412:                                              ; preds = %410, %406
  store %"struct.std::pair"* %292, %"struct.std::pair"** %269, align 8, !tbaa !9
  store %"struct.std::pair"* %408, %"struct.std::pair"** %258, align 8, !tbaa !15
  %413 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %292, i64 %285
  store %"struct.std::pair"* %413, %"struct.std::pair"** %261, align 8, !tbaa !28
  br label %414

414:                                              ; preds = %264, %412
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #14
  %415 = add nuw nsw i64 %79, 1
  %416 = load i32, i32* @N, align 4, !tbaa !13
  %417 = sext i32 %416 to i64
  %418 = icmp slt i64 %415, %417
  %419 = add nuw nsw i64 %78, 1
  br i1 %418, label %77, label %71, !llvm.loop !47

420:                                              ; preds = %75, %420
  %421 = phi i32 [ %426, %420 ], [ %72, %75 ]
  %422 = phi i32 [ %425, %420 ], [ 0, %75 ]
  %423 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %421)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2)
  store i8 10, i8* %2, align 1, !tbaa !48
  %424 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %423, i8* nonnull %2, i64 1)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2)
  %425 = add nuw nsw i32 %422, 1
  %426 = load i32, i32* @N, align 4, !tbaa !13
  %427 = icmp slt i32 %425, %426
  br i1 %427, label %420, label %476, !llvm.loop !49

428:                                              ; preds = %71
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(960080) bitcast ([240020 x i32]* @memo to i8*), i8 -1, i64 960080, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(960080) bitcast ([240020 x i32]* @sizem to i8*), i8 -1, i64 960080, i1 false)
  %429 = icmp sgt i32 %72, 0
  br i1 %429, label %430, label %476

430:                                              ; preds = %428, %471
  %431 = phi i64 [ %472, %471 ], [ 0, %428 ]
  %432 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %433 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %432, i64 %431, i32 0, i32 0, i32 0, i32 1
  %434 = load %"struct.std::pair"*, %"struct.std::pair"** %433, align 8, !tbaa !15
  %435 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %432, i64 %431, i32 0, i32 0, i32 0, i32 0
  %436 = load %"struct.std::pair"*, %"struct.std::pair"** %435, align 8, !tbaa !9
  %437 = icmp eq %"struct.std::pair"* %434, %436
  br i1 %437, label %464, label %438

438:                                              ; preds = %430
  %439 = trunc i64 %431 to i32
  br label %442

440:                                              ; preds = %442
  %441 = icmp eq i32 %452, 1073741823
  br i1 %441, label %464, label %466

442:                                              ; preds = %438, %442
  %443 = phi i64 [ 0, %438 ], [ %453, %442 ]
  %444 = phi %"struct.std::pair"* [ %436, %438 ], [ %458, %442 ]
  %445 = phi i32 [ 1073741823, %438 ], [ %452, %442 ]
  %446 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %444, i64 %443, i32 0
  %447 = load i32, i32* %446, align 4, !tbaa !16
  %448 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %444, i64 %443, i32 1
  %449 = load i32, i32* %448, align 4, !tbaa !18
  %450 = call i32 @_Z5solveiii(i32 %447, i32 %439, i32 %449)
  %451 = icmp slt i32 %450, %445
  %452 = select i1 %451, i32 %450, i32 %445
  %453 = add nuw i64 %443, 1
  %454 = load %"class.std::vector.0"*, %"class.std::vector.0"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @E, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !3
  %455 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %454, i64 %431, i32 0, i32 0, i32 0, i32 1
  %456 = load %"struct.std::pair"*, %"struct.std::pair"** %455, align 8, !tbaa !15
  %457 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %454, i64 %431, i32 0, i32 0, i32 0, i32 0
  %458 = load %"struct.std::pair"*, %"struct.std::pair"** %457, align 8, !tbaa !9
  %459 = ptrtoint %"struct.std::pair"* %456 to i64
  %460 = ptrtoint %"struct.std::pair"* %458 to i64
  %461 = sub i64 %459, %460
  %462 = ashr exact i64 %461, 3
  %463 = icmp ugt i64 %462, %453
  br i1 %463, label %442, label %440, !llvm.loop !50

464:                                              ; preds = %430, %440
  %465 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2)
  br label %471

466:                                              ; preds = %440
  %467 = load i32, i32* @N, align 4, !tbaa !13
  %468 = sub nsw i32 %467, %452
  %469 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %468)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1)
  store i8 10, i8* %1, align 1, !tbaa !48
  %470 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %469, i8* nonnull %1, i64 1)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1)
  br label %471

471:                                              ; preds = %466, %464
  %472 = add nuw nsw i64 %431, 1
  %473 = load i32, i32* @N, align 4, !tbaa !13
  %474 = sext i32 %473 to i64
  %475 = icmp slt i64 %472, %474
  br i1 %475, label %430, label %476, !llvm.loop !51

476:                                              ; preds = %471, %420, %53, %428, %75
  %477 = add nuw nsw i32 %17, 1
  %478 = load i32, i32* %3, align 4, !tbaa !13
  %479 = icmp slt i32 %17, %478
  br i1 %479, label %16, label %15, !llvm.loop !52
}

declare dso_local zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #0

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #10

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_AfraidoftheDark.cpp() #12 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #14
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) bitcast (%"class.std::vector"* @E to i8*), i8 0, i64 24, i1 false) #14
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @E to i8*), i8* nonnull @__dso_handle) #14
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #13

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #6 = { nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #9 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #14 = { nounwind }
attributes #15 = { noreturn }
attributes #16 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 8}
!9 = !{!10, !5, i64 0}
!10 = !{!"_ZTSNSt12_Vector_baseISt4pairIiiESaIS1_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !6, i64 0}
!15 = !{!10, !5, i64 8}
!16 = !{!17, !14, i64 0}
!17 = !{!"_ZTSSt4pairIiiE", !14, i64 0, !14, i64 4}
!18 = !{!17, !14, i64 4}
!19 = distinct !{!19, !12}
!20 = distinct !{!20, !12, !21}
!21 = !{!"llvm.loop.peeled.count", i32 1}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !12, !24}
!24 = !{!"llvm.loop.unswitch.partial.disable"}
!25 = !{!5, !5, i64 0}
!26 = !{!4, !5, i64 16}
!27 = distinct !{!27, !12}
!28 = !{!10, !5, i64 16}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !12, !35}
!35 = !{!"llvm.loop.isvectorized", i32 1}
!36 = distinct !{!36, !37}
!37 = !{!"llvm.loop.unroll.disable"}
!38 = distinct !{!38, !12, !35}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !12, !35}
!45 = distinct !{!45, !37}
!46 = distinct !{!46, !12, !35}
!47 = distinct !{!47, !12}
!48 = !{!6, !6, i64 0}
!49 = distinct !{!49, !12}
!50 = distinct !{!50, !12}
!51 = distinct !{!51, !12}
!52 = distinct !{!52, !12}
