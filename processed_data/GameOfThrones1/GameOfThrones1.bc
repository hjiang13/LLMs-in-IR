; ModuleID = '../../Benchmarks/GameOfThrones1/GameOfThrones1.cpp'
source_filename = "../../Benchmarks/GameOfThrones1/GameOfThrones1.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [30 x i8] c"../input_files/GameOfThrones1\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str.2 = private unnamed_addr constant [3 x i8] c"NO\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"YES\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_GameOfThrones1.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind readonly uwtable willreturn
define dso_local zeroext i1 @_Z21isAnagramOfPalindromeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture readonly %0) local_unnamed_addr #3 {
  %2 = alloca [256 x i32], align 16
  %3 = bitcast [256 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %3) #10
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1024) %3, i8 0, i64 1024, i1 false)
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8, !tbaa !3
  %6 = trunc i64 %5 to i32
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %65

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !10
  %11 = and i64 %5, 4294967295
  %12 = add nsw i64 %11, -1
  %13 = and i64 %5, 3
  %14 = icmp ult i64 %12, 3
  br i1 %14, label %50, label %15

15:                                               ; preds = %8
  %16 = sub nsw i64 %11, %13
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i64 [ 0, %15 ], [ %47, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %48, %17 ]
  %20 = getelementptr inbounds i8, i8* %10, i64 %18
  %21 = load i8, i8* %20, align 1, !tbaa !11
  %22 = sext i8 %21 to i64
  %23 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4, !tbaa !12
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 4, !tbaa !12
  %26 = or i64 %18, 1
  %27 = getelementptr inbounds i8, i8* %10, i64 %26
  %28 = load i8, i8* %27, align 1, !tbaa !11
  %29 = sext i8 %28 to i64
  %30 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4, !tbaa !12
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %30, align 4, !tbaa !12
  %33 = or i64 %18, 2
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = load i8, i8* %34, align 1, !tbaa !11
  %36 = sext i8 %35 to i64
  %37 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4, !tbaa !12
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %37, align 4, !tbaa !12
  %40 = or i64 %18, 3
  %41 = getelementptr inbounds i8, i8* %10, i64 %40
  %42 = load i8, i8* %41, align 1, !tbaa !11
  %43 = sext i8 %42 to i64
  %44 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %43
  %45 = load i32, i32* %44, align 4, !tbaa !12
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %44, align 4, !tbaa !12
  %47 = add nuw nsw i64 %18, 4
  %48 = add i64 %19, -4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %17, !llvm.loop !14

50:                                               ; preds = %17, %8
  %51 = phi i64 [ 0, %8 ], [ %47, %17 ]
  %52 = icmp eq i64 %13, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %50, %53
  %54 = phi i64 [ %62, %53 ], [ %51, %50 ]
  %55 = phi i64 [ %63, %53 ], [ %13, %50 ]
  %56 = getelementptr inbounds i8, i8* %10, i64 %54
  %57 = load i8, i8* %56, align 1, !tbaa !11
  %58 = sext i8 %57 to i64
  %59 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4, !tbaa !12
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %59, align 4, !tbaa !12
  %62 = add nuw nsw i64 %54, 1
  %63 = add i64 %55, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %53, !llvm.loop !16

65:                                               ; preds = %50, %53, %1
  br label %66

66:                                               ; preds = %88, %65
  %67 = phi i64 [ 0, %65 ], [ %90, %88 ]
  %68 = phi i1 [ true, %65 ], [ %91, %88 ]
  %69 = phi i32 [ 0, %65 ], [ %89, %88 ]
  %70 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %67
  %71 = load i32, i32* %70, align 8, !tbaa !12
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %66
  %75 = icmp eq i32 %69, 1
  br i1 %75, label %83, label %76

76:                                               ; preds = %74, %66
  %77 = phi i32 [ %69, %66 ], [ 1, %74 ]
  %78 = or i64 %67, 1
  %79 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %78
  %80 = load i32, i32* %79, align 4, !tbaa !12
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %88, label %86

83:                                               ; preds = %88, %86, %74
  %84 = phi i1 [ %68, %74 ], [ true, %86 ], [ %91, %88 ]
  %85 = xor i1 %84, true
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %3) #10
  ret i1 %85

86:                                               ; preds = %76
  %87 = icmp eq i32 %77, 1
  br i1 %87, label %83, label %88

88:                                               ; preds = %86, %76
  %89 = phi i32 [ %77, %76 ], [ 1, %86 ]
  %90 = add nuw nsw i64 %67, 2
  %91 = icmp ult i64 %78, 255
  %92 = icmp eq i64 %90, 256
  br i1 %92, label %83, label %66, !llvm.loop !18
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #6 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca [256 x i32], align 16
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !19
  %6 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %5)
  %7 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !20
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %10, align 8, !tbaa !3
  %11 = bitcast %union.anon* %8 to i8*
  store i8 0, i8* %11, align 8, !tbaa !11
  %12 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3)
          to label %13 unwind label %127

13:                                               ; preds = %0
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %15 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %14, %union.anon** %15, align 8, !tbaa !20
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !tbaa !10
  %18 = load i64, i64* %10, align 8, !tbaa !3
  %19 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  store i64 %18, i64* %2, align 8, !tbaa !21
  %20 = icmp ugt i64 %18, 15
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = bitcast %union.anon* %14 to i8*
  br label %29

23:                                               ; preds = %13
  %24 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i64* nonnull align 8 dereferenceable(8) %2, i64 0)
          to label %25 unwind label %129

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  store i8* %24, i8** %26, align 8, !tbaa !10
  %27 = load i64, i64* %2, align 8, !tbaa !21
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 0
  store i64 %27, i64* %28, align 8, !tbaa !11
  br label %29

29:                                               ; preds = %25, %21
  %30 = phi i8* [ %22, %21 ], [ %24, %25 ]
  switch i64 %18, label %33 [
    i64 1, label %31
    i64 0, label %34
  ]

31:                                               ; preds = %29
  %32 = load i8, i8* %17, align 1, !tbaa !11
  store i8 %32, i8* %30, align 1, !tbaa !11
  br label %34

33:                                               ; preds = %29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %17, i64 %18, i1 false) #10
  br label %34

34:                                               ; preds = %33, %31, %29
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %36 = load i64, i64* %2, align 8, !tbaa !21
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 %36, i64* %37, align 8, !tbaa !3
  %38 = load i8*, i8** %35, align 8, !tbaa !10
  %39 = getelementptr inbounds i8, i8* %38, i64 %36
  store i8 0, i8* %39, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %40 = bitcast [256 x i32]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %40) #10
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1024) %40, i8 0, i64 1024, i1 false) #10
  %41 = load i64, i64* %37, align 8, !tbaa !3
  %42 = trunc i64 %41 to i32
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %100

44:                                               ; preds = %34
  %45 = load i8*, i8** %35, align 8, !tbaa !10
  %46 = and i64 %41, 4294967295
  %47 = add nsw i64 %46, -1
  %48 = and i64 %41, 3
  %49 = icmp ult i64 %47, 3
  br i1 %49, label %85, label %50

50:                                               ; preds = %44
  %51 = sub nsw i64 %46, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %82, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %83, %52 ]
  %55 = getelementptr inbounds i8, i8* %45, i64 %53
  %56 = load i8, i8* %55, align 1, !tbaa !11
  %57 = sext i8 %56 to i64
  %58 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4, !tbaa !12
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %58, align 4, !tbaa !12
  %61 = or i64 %53, 1
  %62 = getelementptr inbounds i8, i8* %45, i64 %61
  %63 = load i8, i8* %62, align 1, !tbaa !11
  %64 = sext i8 %63 to i64
  %65 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4, !tbaa !12
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %65, align 4, !tbaa !12
  %68 = or i64 %53, 2
  %69 = getelementptr inbounds i8, i8* %45, i64 %68
  %70 = load i8, i8* %69, align 1, !tbaa !11
  %71 = sext i8 %70 to i64
  %72 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %71
  %73 = load i32, i32* %72, align 4, !tbaa !12
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 4, !tbaa !12
  %75 = or i64 %53, 3
  %76 = getelementptr inbounds i8, i8* %45, i64 %75
  %77 = load i8, i8* %76, align 1, !tbaa !11
  %78 = sext i8 %77 to i64
  %79 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %78
  %80 = load i32, i32* %79, align 4, !tbaa !12
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %79, align 4, !tbaa !12
  %82 = add nuw nsw i64 %53, 4
  %83 = add i64 %54, -4
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %52, !llvm.loop !14

85:                                               ; preds = %52, %44
  %86 = phi i64 [ 0, %44 ], [ %82, %52 ]
  %87 = icmp eq i64 %48, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %97, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %98, %88 ], [ %48, %85 ]
  %91 = getelementptr inbounds i8, i8* %45, i64 %89
  %92 = load i8, i8* %91, align 1, !tbaa !11
  %93 = sext i8 %92 to i64
  %94 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %93
  %95 = load i32, i32* %94, align 4, !tbaa !12
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %94, align 4, !tbaa !12
  %97 = add nuw nsw i64 %89, 1
  %98 = add i64 %90, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %88, !llvm.loop !22

100:                                              ; preds = %85, %88, %34
  br label %101

101:                                              ; preds = %147, %100
  %102 = phi i64 [ 0, %100 ], [ %149, %147 ]
  %103 = phi i1 [ true, %100 ], [ %150, %147 ]
  %104 = phi i32 [ 0, %100 ], [ %148, %147 ]
  %105 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %102
  %106 = load i32, i32* %105, align 8, !tbaa !12
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %101
  %110 = icmp eq i32 %104, 1
  br i1 %110, label %118, label %111

111:                                              ; preds = %109, %101
  %112 = phi i32 [ %104, %101 ], [ 1, %109 ]
  %113 = or i64 %102, 1
  %114 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %113
  %115 = load i32, i32* %114, align 4, !tbaa !12
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %147, label %145

118:                                              ; preds = %147, %145, %109
  %119 = phi i1 [ %103, %109 ], [ true, %145 ], [ %150, %147 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %40) #10
  %120 = load i8*, i8** %35, align 8, !tbaa !10
  %121 = bitcast %union.anon* %14 to i8*
  %122 = icmp eq i8* %120, %121
  br i1 %122, label %124, label %123

123:                                              ; preds = %118
  call void @_ZdlPv(i8* %120) #10
  br label %124

124:                                              ; preds = %118, %123
  br i1 %119, label %125, label %131

125:                                              ; preds = %124
  %126 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2)
          to label %133 unwind label %129

127:                                              ; preds = %0
  %128 = landingpad { i8*, i32 }
          cleanup
  br label %138

129:                                              ; preds = %131, %125, %23
  %130 = landingpad { i8*, i32 }
          cleanup
  br label %138

131:                                              ; preds = %124
  %132 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3)
          to label %133 unwind label %129

133:                                              ; preds = %131, %125
  %134 = load i8*, i8** %16, align 8, !tbaa !10
  %135 = icmp eq i8* %134, %11
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  call void @_ZdlPv(i8* %134) #10
  br label %137

137:                                              ; preds = %133, %136
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  ret i32 0

138:                                              ; preds = %129, %127
  %139 = phi { i8*, i32 } [ %128, %127 ], [ %130, %129 ]
  %140 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8, !tbaa !10
  %142 = icmp eq i8* %141, %11
  br i1 %142, label %144, label %143

143:                                              ; preds = %138
  call void @_ZdlPv(i8* %141) #10
  br label %144

144:                                              ; preds = %138, %143
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  resume { i8*, i32 } %139

145:                                              ; preds = %111
  %146 = icmp eq i32 %112, 1
  br i1 %146, label %118, label %147

147:                                              ; preds = %145, %111
  %148 = phi i32 [ %112, %111 ], [ 1, %145 ]
  %149 = add nuw nsw i64 %102, 2
  %150 = icmp ult i64 %113, 255
  %151 = icmp eq i64 %149, 256
  br i1 %151, label %118, label %101, !llvm.loop !18
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #7

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_GameOfThrones1.cpp() #9 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nofree nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #6 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #9 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!4, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = !{!13, !13, i64 0}
!13 = !{!"int", !7, i64 0}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.mustprogress"}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !15}
!19 = !{!6, !6, i64 0}
!20 = !{!5, !6, i64 0}
!21 = !{!9, !9, i64 0}
!22 = distinct !{!22, !17}
