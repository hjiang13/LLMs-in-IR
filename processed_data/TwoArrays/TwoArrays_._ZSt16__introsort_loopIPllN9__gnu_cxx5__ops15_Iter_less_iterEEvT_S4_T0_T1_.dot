digraph "CFG for '_ZSt16__introsort_loopIPllN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_' function" {
	label="CFG for '_ZSt16__introsort_loopIPllN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_' function";

	Node0x5634aa5c4960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%3:\l  %4 = alloca %\"struct.__gnu_cxx::__ops::_Iter_less_iter\", align 1\l  %5 = ptrtoint i64* %0 to i64\l  %6 = getelementptr inbounds i64, i64* %0, i64 1\l  %7 = ptrtoint i64* %1 to i64\l  %8 = sub i64 %7, %5\l  %9 = icmp sgt i64 %8, 128\l  br i1 %9, label %10, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c4960:s0 -> Node0x5634aa5c4a60;
	Node0x5634aa5c4960:s1 -> Node0x5634aa5c4d50;
	Node0x5634aa5c4a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%10:\l10:                                               \l  %11 = phi i64 [ %121, %119 ], [ %8, %3 ]\l  %12 = phi i64* [ %107, %119 ], [ %1, %3 ]\l  %13 = phi i64 [ %75, %119 ], [ %2, %3 ]\l  %14 = icmp eq i64 %13, 0\l  br i1 %14, label %15, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c4a60:s0 -> Node0x5634aa5c5150;
	Node0x5634aa5c4a60:s1 -> Node0x5634aa5c51e0;
	Node0x5634aa5c5150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds %\"struct.__gnu_cxx::__ops::_Iter_less_iter\",\l... %\"struct.__gnu_cxx::__ops::_Iter_less_iter\"* %4, i64 0, i32 0\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16)\l  call void\l... @_ZSt11__make_heapIPlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_(i64* %0,\l... i64* %12, %\"struct.__gnu_cxx::__ops::_Iter_less_iter\"* nonnull align 1\l... dereferenceable(1) %4)\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16)\l  br label %17\l}"];
	Node0x5634aa5c5150 -> Node0x5634aa5c5f40;
	Node0x5634aa5c5f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%17:\l17:                                               \l  %18 = phi i64* [ %19, %70 ], [ %12, %15 ]\l  %19 = getelementptr inbounds i64, i64* %18, i64 -1\l  %20 = load i64, i64* %19, align 8, !tbaa !3\l  %21 = load i64, i64* %0, align 8, !tbaa !3\l  store i64 %21, i64* %19, align 8, !tbaa !3\l  %22 = ptrtoint i64* %19 to i64\l  %23 = sub i64 %22, %5\l  %24 = ashr exact i64 %23, 3\l  %25 = add nsw i64 %24, -1\l  %26 = sdiv i64 %25, 2\l  %27 = icmp sgt i64 %23, 16\l  br i1 %27, label %28, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c5f40:s0 -> Node0x5634aa5c6690;
	Node0x5634aa5c5f40:s1 -> Node0x5634aa5c66e0;
	Node0x5634aa5c6690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%28:\l28:                                               \l  %29 = phi i64 [ %38, %28 ], [ 0, %17 ]\l  %30 = shl i64 %29, 1\l  %31 = add i64 %30, 2\l  %32 = getelementptr inbounds i64, i64* %0, i64 %31\l  %33 = or i64 %30, 1\l  %34 = getelementptr inbounds i64, i64* %0, i64 %33\l  %35 = load i64, i64* %32, align 8, !tbaa !3\l  %36 = load i64, i64* %34, align 8, !tbaa !3\l  %37 = icmp slt i64 %35, %36\l  %38 = select i1 %37, i64 %33, i64 %31\l  %39 = getelementptr inbounds i64, i64* %0, i64 %38\l  %40 = load i64, i64* %39, align 8, !tbaa !3\l  %41 = getelementptr inbounds i64, i64* %0, i64 %29\l  store i64 %40, i64* %41, align 8, !tbaa !3\l  %42 = icmp slt i64 %38, %26\l  br i1 %42, label %28, label %43, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c6690:s0 -> Node0x5634aa5c6690;
	Node0x5634aa5c6690:s1 -> Node0x5634aa5c66e0;
	Node0x5634aa5c66e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%43:\l43:                                               \l  %44 = phi i64 [ 0, %17 ], [ %38, %28 ]\l  %45 = and i64 %23, 8\l  %46 = icmp eq i64 %45, 0\l  br i1 %46, label %47, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c66e0:s0 -> Node0x5634aa5c73f0;
	Node0x5634aa5c66e0:s1 -> Node0x5634aa5c7440;
	Node0x5634aa5c73f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%47:\l47:                                               \l  %48 = add nsw i64 %24, -2\l  %49 = sdiv i64 %48, 2\l  %50 = icmp eq i64 %44, %49\l  br i1 %50, label %51, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c73f0:s0 -> Node0x5634aa5c7730;
	Node0x5634aa5c73f0:s1 -> Node0x5634aa5c7440;
	Node0x5634aa5c7730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%51:\l51:                                               \l  %52 = shl i64 %44, 1\l  %53 = or i64 %52, 1\l  %54 = getelementptr inbounds i64, i64* %0, i64 %53\l  %55 = load i64, i64* %54, align 8, !tbaa !3\l  %56 = getelementptr inbounds i64, i64* %0, i64 %44\l  store i64 %55, i64* %56, align 8, !tbaa !3\l  br label %57\l}"];
	Node0x5634aa5c7730 -> Node0x5634aa5c7440;
	Node0x5634aa5c7440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%57:\l57:                                               \l  %58 = phi i64 [ %53, %51 ], [ %44, %47 ], [ %44, %43 ]\l  %59 = icmp sgt i64 %58, 0\l  br i1 %59, label %60, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c7440:s0 -> Node0x5634aa5c7d60;
	Node0x5634aa5c7440:s1 -> Node0x5634aa5c6000;
	Node0x5634aa5c7d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%60:\l60:                                               \l  %61 = phi i64 [ %63, %67 ], [ %58, %57 ]\l  %62 = add nsw i64 %61, -1\l  %63 = lshr i64 %62, 1\l  %64 = getelementptr inbounds i64, i64* %0, i64 %63\l  %65 = load i64, i64* %64, align 8, !tbaa !3\l  %66 = icmp slt i64 %65, %20\l  br i1 %66, label %67, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c7d60:s0 -> Node0x5634aa5c7e90;
	Node0x5634aa5c7d60:s1 -> Node0x5634aa5c6000;
	Node0x5634aa5c7e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%67:\l67:                                               \l  %68 = getelementptr inbounds i64, i64* %0, i64 %61\l  store i64 %65, i64* %68, align 8, !tbaa !3\l  %69 = icmp ult i64 %62, 2\l  br i1 %69, label %70, label %60, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c7e90:s0 -> Node0x5634aa5c6000;
	Node0x5634aa5c7e90:s1 -> Node0x5634aa5c7d60;
	Node0x5634aa5c6000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%70:\l70:                                               \l  %71 = phi i64 [ %58, %57 ], [ %61, %60 ], [ 0, %67 ]\l  %72 = getelementptr inbounds i64, i64* %0, i64 %71\l  store i64 %20, i64* %72, align 8, !tbaa !3\l  %73 = icmp sgt i64 %23, 8\l  br i1 %73, label %17, label %123, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c6000:s0 -> Node0x5634aa5c5f40;
	Node0x5634aa5c6000:s1 -> Node0x5634aa5c4d50;
	Node0x5634aa5c51e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%74:\l74:                                               \l  %75 = add nsw i64 %13, -1\l  %76 = lshr i64 %11, 4\l  %77 = getelementptr inbounds i64, i64* %0, i64 %76\l  %78 = getelementptr inbounds i64, i64* %12, i64 -1\l  %79 = load i64, i64* %6, align 8, !tbaa !3\l  %80 = load i64, i64* %77, align 8, !tbaa !3\l  %81 = icmp slt i64 %79, %80\l  %82 = load i64, i64* %78, align 8, !tbaa !3\l  br i1 %81, label %83, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c51e0:s0 -> Node0x5634aa5c8e50;
	Node0x5634aa5c51e0:s1 -> Node0x5634aa5c8ea0;
	Node0x5634aa5c8e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%83:\l83:                                               \l  %84 = icmp slt i64 %80, %82\l  br i1 %84, label %85, label %87\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c8e50:s0 -> Node0x5634aa5c9030;
	Node0x5634aa5c8e50:s1 -> Node0x5634aa5c9080;
	Node0x5634aa5c9030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%85:\l85:                                               \l  %86 = load i64, i64* %0, align 8, !tbaa !3\l  store i64 %80, i64* %0, align 8, !tbaa !3\l  store i64 %86, i64* %77, align 8, !tbaa !3\l  br label %101\l}"];
	Node0x5634aa5c9030 -> Node0x5634aa5c9350;
	Node0x5634aa5c9080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%87:\l87:                                               \l  %88 = icmp slt i64 %79, %82\l  %89 = load i64, i64* %0, align 8, !tbaa !3\l  br i1 %88, label %90, label %91\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c9080:s0 -> Node0x5634aa5c9510;
	Node0x5634aa5c9080:s1 -> Node0x5634aa5c9560;
	Node0x5634aa5c9510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%90:\l90:                                               \l  store i64 %82, i64* %0, align 8, !tbaa !3\l  store i64 %89, i64* %78, align 8, !tbaa !3\l  br label %101\l}"];
	Node0x5634aa5c9510 -> Node0x5634aa5c9350;
	Node0x5634aa5c9560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%91:\l91:                                               \l  store i64 %79, i64* %0, align 8, !tbaa !3\l  store i64 %89, i64* %6, align 8, !tbaa !3\l  br label %101\l}"];
	Node0x5634aa5c9560 -> Node0x5634aa5c9350;
	Node0x5634aa5c8ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%92:\l92:                                               \l  %93 = icmp slt i64 %79, %82\l  br i1 %93, label %94, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c8ea0:s0 -> Node0x5634aa5be2f0;
	Node0x5634aa5c8ea0:s1 -> Node0x5634aa5be340;
	Node0x5634aa5be2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%94:\l94:                                               \l  %95 = load i64, i64* %0, align 8, !tbaa !3\l  store i64 %79, i64* %0, align 8, !tbaa !3\l  store i64 %95, i64* %6, align 8, !tbaa !3\l  br label %101\l}"];
	Node0x5634aa5be2f0 -> Node0x5634aa5c9350;
	Node0x5634aa5be340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%96:\l96:                                               \l  %97 = icmp slt i64 %80, %82\l  %98 = load i64, i64* %0, align 8, !tbaa !3\l  br i1 %97, label %99, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5be340:s0 -> Node0x5634aa5bb180;
	Node0x5634aa5be340:s1 -> Node0x5634aa5bb1d0;
	Node0x5634aa5bb180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%99:\l99:                                               \l  store i64 %82, i64* %0, align 8, !tbaa !3\l  store i64 %98, i64* %78, align 8, !tbaa !3\l  br label %101\l}"];
	Node0x5634aa5bb180 -> Node0x5634aa5c9350;
	Node0x5634aa5bb1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%100:\l100:                                              \l  store i64 %80, i64* %0, align 8, !tbaa !3\l  store i64 %98, i64* %77, align 8, !tbaa !3\l  br label %101\l}"];
	Node0x5634aa5bb1d0 -> Node0x5634aa5c9350;
	Node0x5634aa5c9350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%101:\l101:                                              \l  br label %102\l}"];
	Node0x5634aa5c9350 -> Node0x5634aa5bb5f0;
	Node0x5634aa5bb5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%102:\l102:                                              \l  %103 = phi i64* [ %113, %118 ], [ %12, %101 ]\l  %104 = phi i64* [ %110, %118 ], [ %6, %101 ]\l  %105 = load i64, i64* %0, align 8, !tbaa !3\l  br label %106\l}"];
	Node0x5634aa5bb5f0 -> Node0x5634aa5bb8d0;
	Node0x5634aa5bb8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi i64* [ %104, %102 ], [ %110, %106 ]\l  %108 = load i64, i64* %107, align 8, !tbaa !3\l  %109 = icmp slt i64 %108, %105\l  %110 = getelementptr inbounds i64, i64* %107, i64 1\l  br i1 %109, label %106, label %111, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5bb8d0:s0 -> Node0x5634aa5bb8d0;
	Node0x5634aa5bb8d0:s1 -> Node0x5634aa5bbb40;
	Node0x5634aa5bbb40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = phi i64* [ %113, %111 ], [ %103, %106 ]\l  %113 = getelementptr inbounds i64, i64* %112, i64 -1\l  %114 = load i64, i64* %113, align 8, !tbaa !3\l  %115 = icmp slt i64 %105, %114\l  br i1 %115, label %111, label %116, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5bbb40:s0 -> Node0x5634aa5bbb40;
	Node0x5634aa5bbb40:s1 -> Node0x5634aa5cb110;
	Node0x5634aa5cb110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%116:\l116:                                              \l  %117 = icmp ult i64* %107, %113\l  br i1 %117, label %118, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5cb110:s0 -> Node0x5634aa5bb6b0;
	Node0x5634aa5cb110:s1 -> Node0x5634aa5c4e90;
	Node0x5634aa5bb6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%118:\l118:                                              \l  store i64 %114, i64* %107, align 8, !tbaa !3\l  store i64 %108, i64* %113, align 8, !tbaa !3\l  br label %102, !llvm.loop !13\l}"];
	Node0x5634aa5bb6b0 -> Node0x5634aa5bb5f0;
	Node0x5634aa5c4e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%119:\l119:                                              \l  tail call void\l... @_ZSt16__introsort_loopIPllN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_(i6\l...4* nonnull %107, i64* %12, i64 %75)\l  %120 = ptrtoint i64* %107 to i64\l  %121 = sub i64 %120, %5\l  %122 = icmp sgt i64 %121, 128\l  br i1 %122, label %10, label %123, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5634aa5c4e90:s0 -> Node0x5634aa5c4a60;
	Node0x5634aa5c4e90:s1 -> Node0x5634aa5c4d50;
	Node0x5634aa5c4d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%123:\l123:                                              \l  ret void\l}"];
}
