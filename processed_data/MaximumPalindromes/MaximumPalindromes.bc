; ModuleID = '../../Benchmarks/MaximumPalindromes/MaximumPalindromes.cpp'
source_filename = "../../Benchmarks/MaximumPalindromes/MaximumPalindromes.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_Z1SB5cxx11 = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@N = dso_local local_unnamed_addr global i32 0, align 4
@P = dso_local local_unnamed_addr global [26 x [101010 x i32]] zeroinitializer, align 16
@Q = dso_local global i32 0, align 4
@L = dso_local global i32 0, align 4
@R = dso_local global i32 0, align 4
@mo = dso_local local_unnamed_addr global i64 1000000007, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZL5factr = internal unnamed_addr global [200004 x i64] zeroinitializer, align 16
@_ZL4fact = internal unnamed_addr global [200004 x i64] zeroinitializer, align 16
@_ZL3inv = internal unnamed_addr global [200004 x i64] zeroinitializer, align 16
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_MaximumPalindromes.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) unnamed_addr #3 align 2

; Function Attrs: uwtable
define dso_local void @_Z5solvev() local_unnamed_addr #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::__cxx11::basic_string", align 8
  %2 = alloca [26 x i32], align 16
  %3 = bitcast %"class.std::__cxx11::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %1 to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  store i64 0, i64* %6, align 8, !tbaa !8
  %7 = bitcast %union.anon* %4 to i8*
  store i8 0, i8* %7, align 8, !tbaa !11
  %8 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) @_Z1SB5cxx11)
          to label %9 unwind label %67

9:                                                ; preds = %0
  %10 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_Z1SB5cxx11, i64 0, i32 1), align 8, !tbaa !8
  %11 = trunc i64 %10 to i32
  store i32 %11, i32* @N, align 4, !tbaa !12
  %12 = load i8*, i8** getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_Z1SB5cxx11, i64 0, i32 0, i32 0), align 8
  %13 = icmp sgt i32 %11, 0
  br i1 %13, label %14, label %69

14:                                               ; preds = %9
  %15 = and i64 %10, 4294967295
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %15, 1
  %18 = sub nsw i64 %15, %16
  %19 = icmp eq i64 %16, 0
  br label %20

20:                                               ; preds = %14, %62
  %21 = phi i64 [ 0, %14 ], [ %63, %62 ]
  %22 = add nuw nsw i64 %21, 97
  %23 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 %21, i64 0
  %24 = load i32, i32* %23, align 8, !tbaa !12
  br i1 %17, label %49, label %25

25:                                               ; preds = %20, %25
  %26 = phi i32 [ %44, %25 ], [ %24, %20 ]
  %27 = phi i64 [ %45, %25 ], [ 0, %20 ]
  %28 = phi i64 [ %47, %25 ], [ %18, %20 ]
  %29 = getelementptr inbounds i8, i8* %12, i64 %27
  %30 = load i8, i8* %29, align 1, !tbaa !11
  %31 = sext i8 %30 to i64
  %32 = and i64 %31, 4294967295
  %33 = icmp eq i64 %22, %32
  %34 = zext i1 %33 to i32
  %35 = add nsw i32 %26, %34
  %36 = or i64 %27, 1
  %37 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 %21, i64 %36
  store i32 %35, i32* %37, align 4, !tbaa !12
  %38 = getelementptr inbounds i8, i8* %12, i64 %36
  %39 = load i8, i8* %38, align 1, !tbaa !11
  %40 = sext i8 %39 to i64
  %41 = and i64 %40, 4294967295
  %42 = icmp eq i64 %22, %41
  %43 = zext i1 %42 to i32
  %44 = add nsw i32 %35, %43
  %45 = add nuw nsw i64 %27, 2
  %46 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 %21, i64 %45
  store i32 %44, i32* %46, align 8, !tbaa !12
  %47 = add i64 %28, -2
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %25, !llvm.loop !14

49:                                               ; preds = %25, %20
  %50 = phi i32 [ %24, %20 ], [ %44, %25 ]
  %51 = phi i64 [ 0, %20 ], [ %45, %25 ]
  br i1 %19, label %62, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds i8, i8* %12, i64 %51
  %54 = load i8, i8* %53, align 1, !tbaa !11
  %55 = sext i8 %54 to i64
  %56 = and i64 %55, 4294967295
  %57 = icmp eq i64 %22, %56
  %58 = zext i1 %57 to i32
  %59 = add nsw i32 %50, %58
  %60 = add nuw nsw i64 %51, 1
  %61 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 %21, i64 %60
  store i32 %59, i32* %61, align 4, !tbaa !12
  br label %62

62:                                               ; preds = %49, %52
  %63 = add nuw nsw i64 %21, 1
  %64 = icmp eq i64 %63, 26
  br i1 %64, label %69, label %20, !llvm.loop !16

65:                                               ; preds = %144, %146
  %66 = landingpad { i8*, i32 }
          cleanup
  br label %561

67:                                               ; preds = %0, %83
  %68 = landingpad { i8*, i32 }
          cleanup
  br label %561

69:                                               ; preds = %62, %9
  store i64 1, i64* getelementptr inbounds ([200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 0), align 16, !tbaa !17
  store i64 1, i64* getelementptr inbounds ([200004 x i64], [200004 x i64]* @_ZL4fact, i64 0, i64 0), align 16, !tbaa !17
  store i64 1, i64* getelementptr inbounds ([200004 x i64], [200004 x i64]* @_ZL3inv, i64 0, i64 1), align 8, !tbaa !17
  %70 = load i64, i64* @mo, align 8, !tbaa !17
  br label %71

71:                                               ; preds = %69, %71
  %72 = phi i64 [ 2, %69 ], [ %81, %71 ]
  %73 = srem i64 %70, %72
  %74 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL3inv, i64 0, i64 %73
  %75 = load i64, i64* %74, align 8, !tbaa !17
  %76 = sdiv i64 %70, %72
  %77 = sub nsw i64 %70, %76
  %78 = mul nsw i64 %77, %75
  %79 = srem i64 %78, %70
  %80 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL3inv, i64 0, i64 %72
  store i64 %79, i64* %80, align 8, !tbaa !17
  %81 = add nuw nsw i64 %72, 1
  %82 = icmp eq i64 %81, 200004
  br i1 %82, label %130, label %71, !llvm.loop !19

83:                                               ; preds = %130
  %84 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) @Q)
          to label %85 unwind label %67

85:                                               ; preds = %83
  %86 = bitcast [26 x i32]* %2 to i8*
  %87 = load i32, i32* @Q, align 4, !tbaa !12
  %88 = add nsw i32 %87, -1
  store i32 %88, i32* @Q, align 4, !tbaa !12
  %89 = icmp eq i32 %87, 0
  br i1 %89, label %555, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 0
  %92 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 1
  %93 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 2
  %94 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 3
  %95 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 4
  %96 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 5
  %97 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 6
  %98 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 7
  %99 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 8
  %100 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 9
  %101 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 10
  %102 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 11
  %103 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 12
  %104 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 13
  %105 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 14
  %106 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 15
  %107 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 16
  %108 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 17
  %109 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 18
  %110 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 19
  %111 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 20
  %112 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 21
  %113 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 22
  %114 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 23
  %115 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 24
  %116 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 25
  %117 = bitcast [26 x i32]* %2 to <4 x i32>*
  %118 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 4
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 8
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 12
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 16
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 20
  %127 = bitcast i32* %126 to <4 x i32>*
  %128 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 24
  %129 = getelementptr inbounds [26 x i32], [26 x i32]* %2, i64 0, i64 25
  br label %144

130:                                              ; preds = %71, %130
  %131 = phi i64 [ %140, %130 ], [ 1, %71 ]
  %132 = phi i64 [ %135, %130 ], [ 1, %71 ]
  %133 = phi i64 [ %142, %130 ], [ 1, %71 ]
  %134 = mul nsw i64 %132, %133
  %135 = srem i64 %134, %70
  %136 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL4fact, i64 0, i64 %133
  store i64 %135, i64* %136, align 8, !tbaa !17
  %137 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL3inv, i64 0, i64 %133
  %138 = load i64, i64* %137, align 8, !tbaa !17
  %139 = mul nsw i64 %138, %131
  %140 = srem i64 %139, %70
  %141 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %133
  store i64 %140, i64* %141, align 8, !tbaa !17
  %142 = add nuw nsw i64 %133, 1
  %143 = icmp eq i64 %142, 200004
  br i1 %143, label %83, label %130, !llvm.loop !20

144:                                              ; preds = %90, %545
  %145 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) @L)
          to label %146 unwind label %65

146:                                              ; preds = %144
  %147 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %145, i32* nonnull align 4 dereferenceable(4) @R)
          to label %148 unwind label %65

148:                                              ; preds = %146
  %149 = load i32, i32* @L, align 4, !tbaa !12
  %150 = add nsw i32 %149, -1
  store i32 %150, i32* @L, align 4, !tbaa !12
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %86) #13
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(104) %86, i8 0, i64 104, i1 false)
  %151 = load i32, i32* @R, align 4, !tbaa !12
  %152 = sext i32 %151 to i64
  %153 = sext i32 %150 to i64
  %154 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 0, i64 %152
  %155 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 1, i64 %152
  %156 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 2, i64 %152
  %157 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 3, i64 %152
  %158 = load i32, i32* %154, align 4, !tbaa !12
  %159 = load i32, i32* %155, align 4, !tbaa !12
  %160 = load i32, i32* %156, align 4, !tbaa !12
  %161 = load i32, i32* %157, align 4, !tbaa !12
  %162 = insertelement <4 x i32> poison, i32 %158, i32 0
  %163 = insertelement <4 x i32> %162, i32 %159, i32 1
  %164 = insertelement <4 x i32> %163, i32 %160, i32 2
  %165 = insertelement <4 x i32> %164, i32 %161, i32 3
  %166 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 0, i64 %153
  %167 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 1, i64 %153
  %168 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 2, i64 %153
  %169 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 3, i64 %153
  %170 = load i32, i32* %166, align 4, !tbaa !12
  %171 = load i32, i32* %167, align 4, !tbaa !12
  %172 = load i32, i32* %168, align 4, !tbaa !12
  %173 = load i32, i32* %169, align 4, !tbaa !12
  %174 = insertelement <4 x i32> poison, i32 %170, i32 0
  %175 = insertelement <4 x i32> %174, i32 %171, i32 1
  %176 = insertelement <4 x i32> %175, i32 %172, i32 2
  %177 = insertelement <4 x i32> %176, i32 %173, i32 3
  %178 = sub nsw <4 x i32> %165, %177
  %179 = sdiv <4 x i32> %178, <i32 2, i32 2, i32 2, i32 2>
  store <4 x i32> %179, <4 x i32>* %117, align 16, !tbaa !12
  %180 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 4, i64 %152
  %181 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 5, i64 %152
  %182 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 6, i64 %152
  %183 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 7, i64 %152
  %184 = load i32, i32* %180, align 4, !tbaa !12
  %185 = load i32, i32* %181, align 4, !tbaa !12
  %186 = load i32, i32* %182, align 4, !tbaa !12
  %187 = load i32, i32* %183, align 4, !tbaa !12
  %188 = insertelement <4 x i32> poison, i32 %184, i32 0
  %189 = insertelement <4 x i32> %188, i32 %185, i32 1
  %190 = insertelement <4 x i32> %189, i32 %186, i32 2
  %191 = insertelement <4 x i32> %190, i32 %187, i32 3
  %192 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 4, i64 %153
  %193 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 5, i64 %153
  %194 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 6, i64 %153
  %195 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 7, i64 %153
  %196 = load i32, i32* %192, align 4, !tbaa !12
  %197 = load i32, i32* %193, align 4, !tbaa !12
  %198 = load i32, i32* %194, align 4, !tbaa !12
  %199 = load i32, i32* %195, align 4, !tbaa !12
  %200 = insertelement <4 x i32> poison, i32 %196, i32 0
  %201 = insertelement <4 x i32> %200, i32 %197, i32 1
  %202 = insertelement <4 x i32> %201, i32 %198, i32 2
  %203 = insertelement <4 x i32> %202, i32 %199, i32 3
  %204 = sub nsw <4 x i32> %191, %203
  %205 = sdiv <4 x i32> %204, <i32 2, i32 2, i32 2, i32 2>
  store <4 x i32> %205, <4 x i32>* %119, align 16, !tbaa !12
  %206 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 8, i64 %152
  %207 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 9, i64 %152
  %208 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 10, i64 %152
  %209 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 11, i64 %152
  %210 = load i32, i32* %206, align 4, !tbaa !12
  %211 = load i32, i32* %207, align 4, !tbaa !12
  %212 = load i32, i32* %208, align 4, !tbaa !12
  %213 = load i32, i32* %209, align 4, !tbaa !12
  %214 = insertelement <4 x i32> poison, i32 %210, i32 0
  %215 = insertelement <4 x i32> %214, i32 %211, i32 1
  %216 = insertelement <4 x i32> %215, i32 %212, i32 2
  %217 = insertelement <4 x i32> %216, i32 %213, i32 3
  %218 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 8, i64 %153
  %219 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 9, i64 %153
  %220 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 10, i64 %153
  %221 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 11, i64 %153
  %222 = load i32, i32* %218, align 4, !tbaa !12
  %223 = load i32, i32* %219, align 4, !tbaa !12
  %224 = load i32, i32* %220, align 4, !tbaa !12
  %225 = load i32, i32* %221, align 4, !tbaa !12
  %226 = insertelement <4 x i32> poison, i32 %222, i32 0
  %227 = insertelement <4 x i32> %226, i32 %223, i32 1
  %228 = insertelement <4 x i32> %227, i32 %224, i32 2
  %229 = insertelement <4 x i32> %228, i32 %225, i32 3
  %230 = sub nsw <4 x i32> %217, %229
  %231 = sdiv <4 x i32> %230, <i32 2, i32 2, i32 2, i32 2>
  store <4 x i32> %231, <4 x i32>* %121, align 16, !tbaa !12
  %232 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 12, i64 %152
  %233 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 13, i64 %152
  %234 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 14, i64 %152
  %235 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 15, i64 %152
  %236 = load i32, i32* %232, align 4, !tbaa !12
  %237 = load i32, i32* %233, align 4, !tbaa !12
  %238 = load i32, i32* %234, align 4, !tbaa !12
  %239 = load i32, i32* %235, align 4, !tbaa !12
  %240 = insertelement <4 x i32> poison, i32 %236, i32 0
  %241 = insertelement <4 x i32> %240, i32 %237, i32 1
  %242 = insertelement <4 x i32> %241, i32 %238, i32 2
  %243 = insertelement <4 x i32> %242, i32 %239, i32 3
  %244 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 12, i64 %153
  %245 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 13, i64 %153
  %246 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 14, i64 %153
  %247 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 15, i64 %153
  %248 = load i32, i32* %244, align 4, !tbaa !12
  %249 = load i32, i32* %245, align 4, !tbaa !12
  %250 = load i32, i32* %246, align 4, !tbaa !12
  %251 = load i32, i32* %247, align 4, !tbaa !12
  %252 = insertelement <4 x i32> poison, i32 %248, i32 0
  %253 = insertelement <4 x i32> %252, i32 %249, i32 1
  %254 = insertelement <4 x i32> %253, i32 %250, i32 2
  %255 = insertelement <4 x i32> %254, i32 %251, i32 3
  %256 = sub nsw <4 x i32> %243, %255
  %257 = sdiv <4 x i32> %256, <i32 2, i32 2, i32 2, i32 2>
  store <4 x i32> %257, <4 x i32>* %123, align 16, !tbaa !12
  %258 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 16, i64 %152
  %259 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 17, i64 %152
  %260 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 18, i64 %152
  %261 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 19, i64 %152
  %262 = load i32, i32* %258, align 4, !tbaa !12
  %263 = load i32, i32* %259, align 4, !tbaa !12
  %264 = load i32, i32* %260, align 4, !tbaa !12
  %265 = load i32, i32* %261, align 4, !tbaa !12
  %266 = insertelement <4 x i32> poison, i32 %262, i32 0
  %267 = insertelement <4 x i32> %266, i32 %263, i32 1
  %268 = insertelement <4 x i32> %267, i32 %264, i32 2
  %269 = insertelement <4 x i32> %268, i32 %265, i32 3
  %270 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 16, i64 %153
  %271 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 17, i64 %153
  %272 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 18, i64 %153
  %273 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 19, i64 %153
  %274 = load i32, i32* %270, align 4, !tbaa !12
  %275 = load i32, i32* %271, align 4, !tbaa !12
  %276 = load i32, i32* %272, align 4, !tbaa !12
  %277 = load i32, i32* %273, align 4, !tbaa !12
  %278 = insertelement <4 x i32> poison, i32 %274, i32 0
  %279 = insertelement <4 x i32> %278, i32 %275, i32 1
  %280 = insertelement <4 x i32> %279, i32 %276, i32 2
  %281 = insertelement <4 x i32> %280, i32 %277, i32 3
  %282 = sub nsw <4 x i32> %269, %281
  %283 = sdiv <4 x i32> %282, <i32 2, i32 2, i32 2, i32 2>
  store <4 x i32> %283, <4 x i32>* %125, align 16, !tbaa !12
  %284 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 20, i64 %152
  %285 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 21, i64 %152
  %286 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 22, i64 %152
  %287 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 23, i64 %152
  %288 = load i32, i32* %284, align 4, !tbaa !12
  %289 = load i32, i32* %285, align 4, !tbaa !12
  %290 = load i32, i32* %286, align 4, !tbaa !12
  %291 = load i32, i32* %287, align 4, !tbaa !12
  %292 = insertelement <4 x i32> poison, i32 %288, i32 0
  %293 = insertelement <4 x i32> %292, i32 %289, i32 1
  %294 = insertelement <4 x i32> %293, i32 %290, i32 2
  %295 = insertelement <4 x i32> %294, i32 %291, i32 3
  %296 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 20, i64 %153
  %297 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 21, i64 %153
  %298 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 22, i64 %153
  %299 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 23, i64 %153
  %300 = load i32, i32* %296, align 4, !tbaa !12
  %301 = load i32, i32* %297, align 4, !tbaa !12
  %302 = load i32, i32* %298, align 4, !tbaa !12
  %303 = load i32, i32* %299, align 4, !tbaa !12
  %304 = insertelement <4 x i32> poison, i32 %300, i32 0
  %305 = insertelement <4 x i32> %304, i32 %301, i32 1
  %306 = insertelement <4 x i32> %305, i32 %302, i32 2
  %307 = insertelement <4 x i32> %306, i32 %303, i32 3
  %308 = sub nsw <4 x i32> %295, %307
  %309 = sdiv <4 x i32> %308, <i32 2, i32 2, i32 2, i32 2>
  store <4 x i32> %309, <4 x i32>* %127, align 16, !tbaa !12
  %310 = add nsw <4 x i32> %205, %179
  %311 = add <4 x i32> %231, %310
  %312 = add <4 x i32> %257, %311
  %313 = add <4 x i32> %283, %312
  %314 = add <4 x i32> %309, %313
  %315 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %314)
  %316 = and <4 x i32> %308, <i32 1, i32 1, i32 1, i32 1>
  %317 = and <4 x i32> %282, <i32 1, i32 1, i32 1, i32 1>
  %318 = and <4 x i32> %256, <i32 1, i32 1, i32 1, i32 1>
  %319 = and <4 x i32> %230, <i32 1, i32 1, i32 1, i32 1>
  %320 = and <4 x i32> %204, <i32 1, i32 1, i32 1, i32 1>
  %321 = and <4 x i32> %178, <i32 1, i32 1, i32 1, i32 1>
  %322 = add nuw nsw <4 x i32> %320, %321
  %323 = add nuw nsw <4 x i32> %319, %322
  %324 = add nuw nsw <4 x i32> %318, %323
  %325 = add nuw nsw <4 x i32> %317, %324
  %326 = add nuw nsw <4 x i32> %316, %325
  %327 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %326)
  %328 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 24, i64 %152
  %329 = load i32, i32* %328, align 4, !tbaa !12
  %330 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 24, i64 %153
  %331 = load i32, i32* %330, align 4, !tbaa !12
  %332 = sub nsw i32 %329, %331
  %333 = sdiv i32 %332, 2
  store i32 %333, i32* %128, align 16, !tbaa !12
  %334 = add nsw i32 %333, %315
  %335 = and i32 %332, 1
  %336 = add nuw nsw i32 %335, %327
  %337 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 25, i64 %152
  %338 = load i32, i32* %337, align 4, !tbaa !12
  %339 = getelementptr inbounds [26 x [101010 x i32]], [26 x [101010 x i32]]* @P, i64 0, i64 25, i64 %153
  %340 = load i32, i32* %339, align 4, !tbaa !12
  %341 = sub nsw i32 %338, %340
  %342 = sdiv i32 %341, 2
  store i32 %342, i32* %129, align 4, !tbaa !12
  %343 = add nsw i32 %342, %334
  %344 = and i32 %341, 1
  %345 = add nuw nsw i32 %344, %336
  %346 = icmp eq i32 %345, 0
  %347 = select i1 %346, i32 1, i32 %345
  %348 = zext i32 %347 to i64
  %349 = load i64, i64* @mo, align 8, !tbaa !17
  %350 = sext i32 %343 to i64
  %351 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL4fact, i64 0, i64 %350
  %352 = load i64, i64* %351, align 8, !tbaa !17
  %353 = mul nsw i64 %352, %348
  %354 = srem i64 %353, %349
  %355 = load i32, i32* %91, align 16, !tbaa !12
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %356
  %358 = load i64, i64* %357, align 8, !tbaa !17
  %359 = mul nsw i64 %358, %354
  %360 = srem i64 %359, %349
  %361 = load i32, i32* %92, align 4, !tbaa !12
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %362
  %364 = load i64, i64* %363, align 8, !tbaa !17
  %365 = mul nsw i64 %364, %360
  %366 = srem i64 %365, %349
  %367 = load i32, i32* %93, align 8, !tbaa !12
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %368
  %370 = load i64, i64* %369, align 8, !tbaa !17
  %371 = mul nsw i64 %370, %366
  %372 = srem i64 %371, %349
  %373 = load i32, i32* %94, align 4, !tbaa !12
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %374
  %376 = load i64, i64* %375, align 8, !tbaa !17
  %377 = mul nsw i64 %376, %372
  %378 = srem i64 %377, %349
  %379 = load i32, i32* %95, align 16, !tbaa !12
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %380
  %382 = load i64, i64* %381, align 8, !tbaa !17
  %383 = mul nsw i64 %382, %378
  %384 = srem i64 %383, %349
  %385 = load i32, i32* %96, align 4, !tbaa !12
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %386
  %388 = load i64, i64* %387, align 8, !tbaa !17
  %389 = mul nsw i64 %388, %384
  %390 = srem i64 %389, %349
  %391 = load i32, i32* %97, align 8, !tbaa !12
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %392
  %394 = load i64, i64* %393, align 8, !tbaa !17
  %395 = mul nsw i64 %394, %390
  %396 = srem i64 %395, %349
  %397 = load i32, i32* %98, align 4, !tbaa !12
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %398
  %400 = load i64, i64* %399, align 8, !tbaa !17
  %401 = mul nsw i64 %400, %396
  %402 = srem i64 %401, %349
  %403 = load i32, i32* %99, align 16, !tbaa !12
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %404
  %406 = load i64, i64* %405, align 8, !tbaa !17
  %407 = mul nsw i64 %406, %402
  %408 = srem i64 %407, %349
  %409 = load i32, i32* %100, align 4, !tbaa !12
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %410
  %412 = load i64, i64* %411, align 8, !tbaa !17
  %413 = mul nsw i64 %412, %408
  %414 = srem i64 %413, %349
  %415 = load i32, i32* %101, align 8, !tbaa !12
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %416
  %418 = load i64, i64* %417, align 8, !tbaa !17
  %419 = mul nsw i64 %418, %414
  %420 = srem i64 %419, %349
  %421 = load i32, i32* %102, align 4, !tbaa !12
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %422
  %424 = load i64, i64* %423, align 8, !tbaa !17
  %425 = mul nsw i64 %424, %420
  %426 = srem i64 %425, %349
  %427 = load i32, i32* %103, align 16, !tbaa !12
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %428
  %430 = load i64, i64* %429, align 8, !tbaa !17
  %431 = mul nsw i64 %430, %426
  %432 = srem i64 %431, %349
  %433 = load i32, i32* %104, align 4, !tbaa !12
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %434
  %436 = load i64, i64* %435, align 8, !tbaa !17
  %437 = mul nsw i64 %436, %432
  %438 = srem i64 %437, %349
  %439 = load i32, i32* %105, align 8, !tbaa !12
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %440
  %442 = load i64, i64* %441, align 8, !tbaa !17
  %443 = mul nsw i64 %442, %438
  %444 = srem i64 %443, %349
  %445 = load i32, i32* %106, align 4, !tbaa !12
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %446
  %448 = load i64, i64* %447, align 8, !tbaa !17
  %449 = mul nsw i64 %448, %444
  %450 = srem i64 %449, %349
  %451 = load i32, i32* %107, align 16, !tbaa !12
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %452
  %454 = load i64, i64* %453, align 8, !tbaa !17
  %455 = mul nsw i64 %454, %450
  %456 = srem i64 %455, %349
  %457 = load i32, i32* %108, align 4, !tbaa !12
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %458
  %460 = load i64, i64* %459, align 8, !tbaa !17
  %461 = mul nsw i64 %460, %456
  %462 = srem i64 %461, %349
  %463 = load i32, i32* %109, align 8, !tbaa !12
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %464
  %466 = load i64, i64* %465, align 8, !tbaa !17
  %467 = mul nsw i64 %466, %462
  %468 = srem i64 %467, %349
  %469 = load i32, i32* %110, align 4, !tbaa !12
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %470
  %472 = load i64, i64* %471, align 8, !tbaa !17
  %473 = mul nsw i64 %472, %468
  %474 = srem i64 %473, %349
  %475 = load i32, i32* %111, align 16, !tbaa !12
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %476
  %478 = load i64, i64* %477, align 8, !tbaa !17
  %479 = mul nsw i64 %478, %474
  %480 = srem i64 %479, %349
  %481 = load i32, i32* %112, align 4, !tbaa !12
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %482
  %484 = load i64, i64* %483, align 8, !tbaa !17
  %485 = mul nsw i64 %484, %480
  %486 = srem i64 %485, %349
  %487 = load i32, i32* %113, align 8, !tbaa !12
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %488
  %490 = load i64, i64* %489, align 8, !tbaa !17
  %491 = mul nsw i64 %490, %486
  %492 = srem i64 %491, %349
  %493 = load i32, i32* %114, align 4, !tbaa !12
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %494
  %496 = load i64, i64* %495, align 8, !tbaa !17
  %497 = mul nsw i64 %496, %492
  %498 = srem i64 %497, %349
  %499 = load i32, i32* %115, align 16, !tbaa !12
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %500
  %502 = load i64, i64* %501, align 8, !tbaa !17
  %503 = mul nsw i64 %502, %498
  %504 = srem i64 %503, %349
  %505 = load i32, i32* %116, align 4, !tbaa !12
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds [200004 x i64], [200004 x i64]* @_ZL5factr, i64 0, i64 %506
  %508 = load i64, i64* %507, align 8, !tbaa !17
  %509 = mul nsw i64 %508, %504
  %510 = srem i64 %509, %349
  %511 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIxEERSoT_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 %510)
          to label %512 unwind label %549

512:                                              ; preds = %148
  %513 = bitcast %"class.std::basic_ostream"* %511 to i8**
  %514 = load i8*, i8** %513, align 8, !tbaa !21
  %515 = getelementptr i8, i8* %514, i64 -24
  %516 = bitcast i8* %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = bitcast %"class.std::basic_ostream"* %511 to i8*
  %519 = add nsw i64 %517, 240
  %520 = getelementptr inbounds i8, i8* %518, i64 %519
  %521 = bitcast i8* %520 to %"class.std::ctype"**
  %522 = load %"class.std::ctype"*, %"class.std::ctype"** %521, align 8, !tbaa !23
  %523 = icmp eq %"class.std::ctype"* %522, null
  br i1 %523, label %524, label %526

524:                                              ; preds = %512
  invoke void @_ZSt16__throw_bad_castv() #14
          to label %525 unwind label %551

525:                                              ; preds = %524
  unreachable

526:                                              ; preds = %512
  %527 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %522, i64 0, i32 8
  %528 = load i8, i8* %527, align 8, !tbaa !26
  %529 = icmp eq i8 %528, 0
  br i1 %529, label %533, label %530

530:                                              ; preds = %526
  %531 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %522, i64 0, i32 9, i64 10
  %532 = load i8, i8* %531, align 1, !tbaa !11
  br label %540

533:                                              ; preds = %526
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %522)
          to label %534 unwind label %549

534:                                              ; preds = %533
  %535 = bitcast %"class.std::ctype"* %522 to i8 (%"class.std::ctype"*, i8)***
  %536 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %535, align 8, !tbaa !21
  %537 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %536, i64 6
  %538 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %537, align 8
  %539 = invoke signext i8 %538(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %522, i8 signext 10)
          to label %540 unwind label %549

540:                                              ; preds = %534, %530
  %541 = phi i8 [ %532, %530 ], [ %539, %534 ]
  %542 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %511, i8 signext %541)
          to label %543 unwind label %549

543:                                              ; preds = %540
  %544 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %542)
          to label %545 unwind label %549

545:                                              ; preds = %543
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %86) #13
  %546 = load i32, i32* @Q, align 4, !tbaa !12
  %547 = add nsw i32 %546, -1
  store i32 %547, i32* @Q, align 4, !tbaa !12
  %548 = icmp eq i32 %546, 0
  br i1 %548, label %555, label %144, !llvm.loop !28

549:                                              ; preds = %148, %533, %534, %540, %543
  %550 = landingpad { i8*, i32 }
          cleanup
  br label %553

551:                                              ; preds = %524
  %552 = landingpad { i8*, i32 }
          cleanup
  br label %553

553:                                              ; preds = %551, %549
  %554 = phi { i8*, i32 } [ %550, %549 ], [ %552, %551 ]
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %86) #13
  br label %561

555:                                              ; preds = %545, %85
  %556 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %557 = load i8*, i8** %556, align 8, !tbaa !29
  %558 = icmp eq i8* %557, %7
  br i1 %558, label %560, label %559

559:                                              ; preds = %555
  call void @_ZdlPv(i8* %557) #13
  br label %560

560:                                              ; preds = %555, %559
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #13
  ret void

561:                                              ; preds = %65, %67, %553
  %562 = phi { i8*, i32 } [ %554, %553 ], [ %66, %65 ], [ %68, %67 ]
  %563 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %564 = load i8*, i8** %563, align 8, !tbaa !29
  %565 = icmp eq i8* %564, %7
  br i1 %565, label %567, label %566

566:                                              ; preds = %561
  call void @_ZdlPv(i8* %564) #13
  br label %567

567:                                              ; preds = %561, %566
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #13
  resume { i8*, i32 } %562
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: norecurse uwtable
define dso_local i32 @main(i32 %0, i8** nocapture readonly %1) local_unnamed_addr #7 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %7, align 8, !tbaa !8
  %8 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %8, align 8, !tbaa !11
  %9 = icmp eq i32 %0, 1
  br i1 %9, label %10, label %22

10:                                               ; preds = %2
  %11 = invoke zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
          to label %12 unwind label %20

12:                                               ; preds = %10
  %13 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8, !tbaa !21
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, 216
  %18 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %17
  %19 = bitcast i8* %18 to %"class.std::basic_ostream"**
  store %"class.std::basic_ostream"* null, %"class.std::basic_ostream"** %19, align 8, !tbaa !30
  br label %29

20:                                               ; preds = %10
  %21 = landingpad { i8*, i32 }
          cleanup
  br label %94

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2, i32 0
  %25 = icmp sgt i32 %0, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = add nsw i32 %0, -1
  %28 = zext i32 %27 to i64
  br label %33

29:                                               ; preds = %57, %12, %22
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %31 = load i64, i64* %7, align 8, !tbaa !8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %81, label %67

33:                                               ; preds = %26, %57
  %34 = phi i64 [ 0, %26 ], [ %35, %57 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i8*, i8** %1, i64 %35
  %37 = load i8*, i8** %36, align 8, !tbaa !31
  %38 = call i64 @strlen(i8* noundef nonnull dereferenceable(1) %37) #13
  %39 = load i64, i64* %7, align 8, !tbaa !8
  %40 = sub i64 4611686018427387903, %39
  %41 = icmp ult i64 %40, %38
  br i1 %41, label %42, label %44

42:                                               ; preds = %33
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #14
          to label %43 unwind label %65

43:                                               ; preds = %42
  unreachable

44:                                               ; preds = %33
  %45 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i8* %37, i64 %38)
          to label %46 unwind label %63

46:                                               ; preds = %44
  %47 = load i64, i64* %7, align 8, !tbaa !8
  %48 = add i64 %47, 1
  %49 = load i8*, i8** %23, align 8, !tbaa !29
  %50 = icmp eq i8* %49, %8
  %51 = load i64, i64* %24, align 8
  %52 = select i1 %50, i64 15, i64 %51
  %53 = icmp ugt i64 %48, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i64 %47, i64 0, i8* null, i64 1)
          to label %55 unwind label %63

55:                                               ; preds = %54
  %56 = load i8*, i8** %23, align 8, !tbaa !29
  br label %57

57:                                               ; preds = %46, %55
  %58 = phi i8* [ %56, %55 ], [ %49, %46 ]
  %59 = getelementptr inbounds i8, i8* %58, i64 %47
  store i8 10, i8* %59, align 1, !tbaa !11
  store i64 %48, i64* %7, align 8, !tbaa !8
  %60 = load i8*, i8** %23, align 8, !tbaa !29
  %61 = getelementptr inbounds i8, i8* %60, i64 %48
  store i8 0, i8* %61, align 1, !tbaa !11
  %62 = icmp eq i64 %35, %28
  br i1 %62, label %29, label %33

63:                                               ; preds = %44, %54
  %64 = landingpad { i8*, i32 }
          cleanup
  br label %94

65:                                               ; preds = %81, %42
  %66 = landingpad { i8*, i32 }
          cleanup
  br label %94

67:                                               ; preds = %29, %67
  %68 = phi i64 [ %78, %67 ], [ 0, %29 ]
  %69 = phi i64 [ %79, %67 ], [ %31, %29 ]
  %70 = xor i64 %68, -1
  %71 = add i64 %69, %70
  %72 = load i8*, i8** %30, align 8, !tbaa !29
  %73 = getelementptr inbounds i8, i8* %72, i64 %71
  %74 = load i8, i8* %73, align 1, !tbaa !11
  %75 = sext i8 %74 to i32
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !31
  %77 = call i32 @ungetc(i32 %75, %struct._IO_FILE* %76)
  %78 = add nuw i64 %68, 1
  %79 = load i64, i64* %7, align 8, !tbaa !8
  %80 = icmp ugt i64 %79, %78
  br i1 %80, label %67, label %81, !llvm.loop !32

81:                                               ; preds = %67, %29
  %82 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !21
  %83 = getelementptr i8, i8* %82, i64 -24
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = add nsw i64 %85, 216
  %87 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %86
  %88 = bitcast i8* %87 to %"class.std::basic_ostream"**
  store %"class.std::basic_ostream"* null, %"class.std::basic_ostream"** %88, align 8, !tbaa !30
  invoke void @_Z5solvev()
          to label %89 unwind label %65

89:                                               ; preds = %81
  %90 = load i8*, i8** %30, align 8, !tbaa !29
  %91 = icmp eq i8* %90, %8
  br i1 %91, label %93, label %92

92:                                               ; preds = %89
  call void @_ZdlPv(i8* %90) #13
  br label %93

93:                                               ; preds = %89, %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #13
  ret i32 0

94:                                               ; preds = %63, %65, %20
  %95 = phi { i8*, i32 } [ %21, %20 ], [ %64, %63 ], [ %66, %65 ]
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8, !tbaa !29
  %98 = icmp eq i8* %97, %8
  br i1 %98, label %100, label %99

99:                                               ; preds = %94
  call void @_ZdlPv(i8* %97) #13
  br label %100

100:                                              ; preds = %94, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #13
  resume { i8*, i32 } %95
}

declare dso_local zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @ungetc(i32 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #9

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIxEERSoT_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #10

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #10

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_MaximumPalindromes.cpp() #4 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #13
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_Z1SB5cxx11, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_Z1SB5cxx11 to %union.anon**), align 8, !tbaa !3
  store i64 0, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_Z1SB5cxx11, i64 0, i32 1), align 8, !tbaa !8
  store i8 0, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_Z1SB5cxx11, i64 0, i32 2) to i8*), align 8, !tbaa !11
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_Z1SB5cxx11 to i8*), i8* nonnull @__dso_handle) #13
  ret void
}

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #12

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #6 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #7 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nofree nosync nounwind readnone willreturn }
attributes #13 = { nounwind }
attributes #14 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!13, !13, i64 0}
!13 = !{!"int", !6, i64 0}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.mustprogress"}
!16 = distinct !{!16, !15}
!17 = !{!18, !18, i64 0}
!18 = !{!"long long", !6, i64 0}
!19 = distinct !{!19, !15}
!20 = distinct !{!20, !15}
!21 = !{!22, !22, i64 0}
!22 = !{!"vtable pointer", !7, i64 0}
!23 = !{!24, !5, i64 240}
!24 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !5, i64 216, !6, i64 224, !25, i64 225, !5, i64 232, !5, i64 240, !5, i64 248, !5, i64 256}
!25 = !{!"bool", !6, i64 0}
!26 = !{!27, !6, i64 56}
!27 = !{!"_ZTSSt5ctypeIcE", !5, i64 16, !25, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !6, i64 56, !6, i64 57, !6, i64 313, !6, i64 569}
!28 = distinct !{!28, !15}
!29 = !{!9, !5, i64 0}
!30 = !{!24, !5, i64 216}
!31 = !{!5, !5, i64 0}
!32 = distinct !{!32, !15}
