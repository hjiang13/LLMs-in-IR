digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55a5d972b8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i64, align 8\l  %3 = alloca %\"class.std::map\", align 8\l  %4 = alloca i64, align 8\l  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %6 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([32 x\l... i8], [32 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %5)\l  %7 = bitcast i32* %1 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13\l  %8 = call nonnull align 8 dereferenceable(16) %\"class.std::basic_istream\"*\l... @_ZNSirsERi(%\"class.std::basic_istream\"* nonnull align 8 dereferenceable(16)\l... @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)\l  %9 = bitcast i64* %2 to i8*\l  %10 = getelementptr inbounds %\"class.std::map\", %\"class.std::map\"* %3, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i32 0\l  %11 = getelementptr inbounds i8, i8* %10, i64 8\l  %12 = bitcast i8* %11 to i32*\l  %13 = getelementptr inbounds i8, i8* %10, i64 16\l  %14 = bitcast i8* %13 to %\"struct.std::_Rb_tree_node_base\"**\l  %15 = getelementptr inbounds i8, i8* %10, i64 24\l  %16 = bitcast i8* %15 to i8**\l  %17 = getelementptr inbounds i8, i8* %10, i64 32\l  %18 = bitcast i8* %17 to i8**\l  %19 = getelementptr inbounds i8, i8* %10, i64 40\l  %20 = bitcast i8* %19 to i64*\l  %21 = bitcast i64* %4 to i8*\l  %22 = bitcast i8* %13 to %\"struct.std::_Rb_tree_node\"**\l  %23 = bitcast i8* %11 to %\"struct.std::_Rb_tree_node_base\"*\l  %24 = getelementptr inbounds %\"class.std::map\", %\"class.std::map\"* %3, i64\l... 0, i32 0\l  %25 = bitcast i8* %15 to %\"struct.std::_Rb_tree_node_base\"**\l  %26 = load i32, i32* %1, align 4, !tbaa !7\l  %27 = add nsw i32 %26, -1\l  store i32 %27, i32* %1, align 4, !tbaa !7\l  %28 = icmp eq i32 %26, 0\l  br i1 %28, label %188, label %29\l|{<s0>T|<s1>F}}"];
	Node0x55a5d972b8b0:s0 -> Node0x55a5d972bb80;
	Node0x55a5d972b8b0:s1 -> Node0x55a5d972e840;
	Node0x55a5d972e840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%29:\l29:                                               \l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13\l  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #13\l  store i32 0, i32* %12, align 8, !tbaa !9\l  store %\"struct.std::_Rb_tree_node_base\"* null,\l... %\"struct.std::_Rb_tree_node_base\"** %14, align 8, !tbaa !14\l  store i8* %11, i8** %16, align 8, !tbaa !15\l  store i8* %11, i8** %18, align 8, !tbaa !16\l  store i64 0, i64* %20, align 8, !tbaa !17\l  %30 = invoke nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"*\l... @_ZNSi10_M_extractIlEERSiRT_(%\"class.std::basic_istream\"* nonnull align 8\l... dereferenceable(16) @_ZSt3cin, i64* nonnull align 8 dereferenceable(8) %2)\l          to label %31 unwind label %37\l}"];
	Node0x55a5d972e840 -> Node0x55a5d972f4f0;
	Node0x55a5d972e840 -> Node0x55a5d972f580;
	Node0x55a5d972f4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%31:\l31:                                               \l  %32 = load i64, i64* %2, align 8, !tbaa !18\l  %33 = icmp sgt i64 %32, 0\l  br i1 %33, label %39, label %34\l|{<s0>T|<s1>F}}"];
	Node0x55a5d972f4f0:s0 -> Node0x55a5d972fc90;
	Node0x55a5d972f4f0:s1 -> Node0x55a5d972fd20;
	Node0x55a5d972fd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%34:\l34:                                               \l  %35 = load %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"** %25, align 8, !tbaa !15\l  %36 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %35, %23\l  br i1 %36, label %137, label %124\l|{<s0>T|<s1>F}}"];
	Node0x55a5d972fd20:s0 -> Node0x55a5d9730570;
	Node0x55a5d972fd20:s1 -> Node0x55a5d97305c0;
	Node0x55a5d972f580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%37:\l37:                                               \l  %38 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %186\l}"];
	Node0x55a5d972f580 -> Node0x55a5d9730750;
	Node0x55a5d972fc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%39:\l39:                                               \l  %40 = phi i64 [ %115, %109 ], [ 0, %31 ]\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13\l  %41 = invoke nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"*\l... @_ZNSi10_M_extractIlEERSiRT_(%\"class.std::basic_istream\"* nonnull align 8\l... dereferenceable(16) @_ZSt3cin, i64* nonnull align 8 dereferenceable(8) %4)\l          to label %42 unwind label %118\l}"];
	Node0x55a5d972fc90 -> Node0x55a5d9730b20;
	Node0x55a5d972fc90 -> Node0x55a5d9730bb0;
	Node0x55a5d9730b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%42:\l42:                                               \l  %43 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %22, align 8, !tbaa !14\l  %44 = load i64, i64* %4, align 8\l  %45 = icmp eq %\"struct.std::_Rb_tree_node\"* %43, null\l  br i1 %45, label %69, label %46\l|{<s0>T|<s1>F}}"];
	Node0x55a5d9730b20:s0 -> Node0x55a5d9731510;
	Node0x55a5d9730b20:s1 -> Node0x55a5d9731560;
	Node0x55a5d9731560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi %\"struct.std::_Rb_tree_node\"* [ %59, %46 ], [ %43, %42 ]\l  %48 = phi %\"struct.std::_Rb_tree_node_base\"* [ %56, %46 ], [ %23, %42 ]\l  %49 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %47, i64 0, i32 1\l  %50 = bitcast %\"struct.__gnu_cxx::__aligned_membuf\"* %49 to i64*\l  %51 = load i64, i64* %50, align 8, !tbaa !18\l  %52 = icmp slt i64 %51, %44\l  %53 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %47, i64 0, i32 0, i32 3\l  %54 = getelementptr %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %47, i64 0, i32 0\l  %55 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %47, i64 0, i32 0, i32 2\l  %56 = select i1 %52, %\"struct.std::_Rb_tree_node_base\"* %48,\l... %\"struct.std::_Rb_tree_node_base\"* %54\l  %57 = select i1 %52, %\"struct.std::_Rb_tree_node_base\"** %53,\l... %\"struct.std::_Rb_tree_node_base\"** %55\l  %58 = bitcast %\"struct.std::_Rb_tree_node_base\"** %57 to\l... %\"struct.std::_Rb_tree_node\"**\l  %59 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %58, align 8, !tbaa !3\l  %60 = icmp eq %\"struct.std::_Rb_tree_node\"* %59, null\l  br i1 %60, label %61, label %46, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x55a5d9731560:s0 -> Node0x55a5d9733290;
	Node0x55a5d9731560:s1 -> Node0x55a5d9731560;
	Node0x55a5d9733290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%61:\l61:                                               \l  %62 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %56, %23\l  br i1 %62, label %69, label %63\l|{<s0>T|<s1>F}}"];
	Node0x55a5d9733290:s0 -> Node0x55a5d9731510;
	Node0x55a5d9733290:s1 -> Node0x55a5d97334e0;
	Node0x55a5d97334e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%63:\l63:                                               \l  %64 = select i1 %52, %\"struct.std::_Rb_tree_node_base\"* %48,\l... %\"struct.std::_Rb_tree_node_base\"* %54\l  %65 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %64, i64 1\l  %66 = bitcast %\"struct.std::_Rb_tree_node_base\"* %65 to i64*\l  %67 = load i64, i64* %66, align 8, !tbaa !18\l  %68 = icmp slt i64 %44, %67\l  br i1 %68, label %69, label %109\l|{<s0>T|<s1>F}}"];
	Node0x55a5d97334e0:s0 -> Node0x55a5d9731510;
	Node0x55a5d97334e0:s1 -> Node0x55a5d9730810;
	Node0x55a5d9731510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%69:\l69:                                               \l  %70 = phi %\"struct.std::_Rb_tree_node_base\"* [ %56, %63 ], [ %23, %61 ], [\l... %23, %42 ]\l  %71 = invoke noalias nonnull i8* @_Znwm(i64 48) #14\l          to label %72 unwind label %120\l}"];
	Node0x55a5d9731510 -> Node0x55a5d9733a40;
	Node0x55a5d9731510 -> Node0x55a5d9733a90;
	Node0x55a5d9733a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%72:\l72:                                               \l  %73 = getelementptr inbounds i8, i8* %71, i64 32\l  %74 = bitcast i8* %73 to i64*\l  %75 = load i64, i64* %4, align 8, !tbaa !18\l  store i64 %75, i64* %74, align 8, !tbaa !21\l  %76 = getelementptr inbounds i8, i8* %71, i64 40\l  %77 = bitcast i8* %76 to i64*\l  store i64 0, i64* %77, align 8, !tbaa !23\l  %78 = invoke \{ %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"* \}\l... @_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE29_M_get_ins\l...ert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%\"class.std::_Rb_tree\"\l...* nonnull align 8 dereferenceable(48) %24, %\"struct.std::_Rb_tree_node_base\"*\l... %70, i64* nonnull align 8 dereferenceable(8) %74)\l          to label %79 unwind label %98\l}"];
	Node0x55a5d9733a40 -> Node0x55a5d9734300;
	Node0x55a5d9733a40 -> Node0x55a5d9734390;
	Node0x55a5d9734300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%79:\l79:                                               \l  %80 = extractvalue \{ %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"* \} %78, 0\l  %81 = extractvalue \{ %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"* \} %78, 1\l  %82 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %81, null\l  br i1 %82, label %102, label %83\l|{<s0>T|<s1>F}}"];
	Node0x55a5d9734300:s0 -> Node0x55a5d9734780;
	Node0x55a5d9734300:s1 -> Node0x55a5d97347d0;
	Node0x55a5d97347d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%83:\l83:                                               \l  %84 = icmp ne %\"struct.std::_Rb_tree_node_base\"* %80, null\l  %85 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %81, %23\l  %86 = select i1 %84, i1 true, i1 %85\l  br i1 %86, label %93, label %87\l|{<s0>T|<s1>F}}"];
	Node0x55a5d97347d0:s0 -> Node0x55a5d9734b10;
	Node0x55a5d97347d0:s1 -> Node0x55a5d9734b60;
	Node0x55a5d9734b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%87:\l87:                                               \l  %88 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %81, i64 1\l  %89 = bitcast %\"struct.std::_Rb_tree_node_base\"* %88 to i64*\l  %90 = load i64, i64* %74, align 8, !tbaa !18\l  %91 = load i64, i64* %89, align 8, !tbaa !18\l  %92 = icmp slt i64 %90, %91\l  br label %93\l}"];
	Node0x55a5d9734b60 -> Node0x55a5d9734b10;
	Node0x55a5d9734b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%93:\l93:                                               \l  %94 = phi i1 [ %92, %87 ], [ true, %83 ]\l  %95 = bitcast i8* %71 to %\"struct.std::_Rb_tree_node_base\"*\l  call void\l... @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext\l... %94, %\"struct.std::_Rb_tree_node_base\"* nonnull %95,\l... %\"struct.std::_Rb_tree_node_base\"* nonnull %81,\l... %\"struct.std::_Rb_tree_node_base\"* nonnull align 8 dereferenceable(32) %23)\l... #13\l  %96 = load i64, i64* %20, align 8, !tbaa !17\l  %97 = add i64 %96, 1\l  store i64 %97, i64* %20, align 8, !tbaa !17\l  br label %109\l}"];
	Node0x55a5d9734b10 -> Node0x55a5d9730810;
	Node0x55a5d9734390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%98:\l98:                                               \l  %99 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %100 = extractvalue \{ i8*, i32 \} %99, 0\l  %101 = call i8* @__cxa_begin_catch(i8* %100) #13\l  call void @_ZdlPv(i8* nonnull %71) #13\l  invoke void @__cxa_rethrow() #15\l          to label %108 unwind label %103\l}"];
	Node0x55a5d9734390 -> Node0x55a5d9736180;
	Node0x55a5d9734390 -> Node0x55a5d97361d0;
	Node0x55a5d9734780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%102:\l102:                                              \l  call void @_ZdlPv(i8* nonnull %71) #13\l  br label %109\l}"];
	Node0x55a5d9734780 -> Node0x55a5d9730810;
	Node0x55a5d97361d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%103:\l103:                                              \l  %104 = landingpad \{ i8*, i32 \}\l          cleanup\l  invoke void @__cxa_end_catch()\l          to label %122 unwind label %105\l}"];
	Node0x55a5d97361d0 -> Node0x55a5d9736640;
	Node0x55a5d97361d0 -> Node0x55a5d9736690;
	Node0x55a5d9736690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%105:\l105:                                              \l  %106 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %107 = extractvalue \{ i8*, i32 \} %106, 0\l  call void @__clang_call_terminate(i8* %107) #16\l  unreachable\l}"];
	Node0x55a5d9736180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%108:\l108:                                              \l  unreachable\l}"];
	Node0x55a5d9730810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%109:\l109:                                              \l  %110 = phi %\"struct.std::_Rb_tree_node_base\"* [ %56, %63 ], [ %80, %102 ], [\l... %95, %93 ]\l  %111 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %110, i64 1, i32 1\l  %112 = bitcast %\"struct.std::_Rb_tree_node_base\"** %111 to i64*\l  %113 = load i64, i64* %112, align 8, !tbaa !18\l  %114 = add nsw i64 %113, 1\l  store i64 %114, i64* %112, align 8, !tbaa !18\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13\l  %115 = add nuw nsw i64 %40, 1\l  %116 = load i64, i64* %2, align 8, !tbaa !18\l  %117 = icmp sgt i64 %116, %115\l  br i1 %117, label %39, label %34, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x55a5d9730810:s0 -> Node0x55a5d972fc90;
	Node0x55a5d9730810:s1 -> Node0x55a5d972fd20;
	Node0x55a5d9730bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%118:\l118:                                              \l  %119 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %122\l}"];
	Node0x55a5d9730bb0 -> Node0x55a5d9736640;
	Node0x55a5d9733a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%120:\l120:                                              \l  %121 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %122\l}"];
	Node0x55a5d9733a90 -> Node0x55a5d9736640;
	Node0x55a5d9736640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%122:\l122:                                              \l  %123 = phi \{ i8*, i32 \} [ %119, %118 ], [ %121, %120 ], [ %104, %103 ]\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13\l  br label %186\l}"];
	Node0x55a5d9736640 -> Node0x55a5d9730750;
	Node0x55a5d97305c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%124:\l124:                                              \l  %125 = phi i64 [ %134, %124 ], [ 0, %34 ]\l  %126 = phi %\"struct.std::_Rb_tree_node_base\"* [ %135, %124 ], [ %35, %34 ]\l  %127 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %126, i64 1, i32 1\l  %128 = bitcast %\"struct.std::_Rb_tree_node_base\"** %127 to i64*\l  %129 = load i64, i64* %128, align 8, !tbaa !23\l  %130 = icmp sgt i64 %129, 1\l  %131 = add nsw i64 %129, -1\l  %132 = mul nsw i64 %131, %129\l  %133 = select i1 %130, i64 %132, i64 0\l  %134 = add nsw i64 %133, %125\l  %135 = call %\"struct.std::_Rb_tree_node_base\"*\l... @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%\"struct.std::_Rb_tree_node_\l...base\"* %126) #17\l  %136 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %135, %23\l  br i1 %136, label %137, label %124, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x55a5d97305c0:s0 -> Node0x55a5d9730570;
	Node0x55a5d97305c0:s1 -> Node0x55a5d97305c0;
	Node0x55a5d9730570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%137:\l137:                                              \l  %138 = phi i64 [ 0, %34 ], [ %134, %124 ]\l  %139 = invoke nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"*\l... @_ZNSo9_M_insertIxEERSoT_(%\"class.std::basic_ostream\"* nonnull align 8\l... dereferenceable(8) @_ZSt4cout, i64 %138)\l          to label %140 unwind label %182\l}"];
	Node0x55a5d9730570 -> Node0x55a5d9739340;
	Node0x55a5d9730570 -> Node0x55a5d9739390;
	Node0x55a5d9739340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%140:\l140:                                              \l  %141 = bitcast %\"class.std::basic_ostream\"* %139 to i8**\l  %142 = load i8*, i8** %141, align 8, !tbaa !26\l  %143 = getelementptr i8, i8* %142, i64 -24\l  %144 = bitcast i8* %143 to i64*\l  %145 = load i64, i64* %144, align 8\l  %146 = bitcast %\"class.std::basic_ostream\"* %139 to i8*\l  %147 = add nsw i64 %145, 240\l  %148 = getelementptr inbounds i8, i8* %146, i64 %147\l  %149 = bitcast i8* %148 to %\"class.std::ctype\"**\l  %150 = load %\"class.std::ctype\"*, %\"class.std::ctype\"** %149, align 8, !tbaa\l... !28\l  %151 = icmp eq %\"class.std::ctype\"* %150, null\l  br i1 %151, label %152, label %154\l|{<s0>T|<s1>F}}"];
	Node0x55a5d9739340:s0 -> Node0x55a5d9739dc0;
	Node0x55a5d9739340:s1 -> Node0x55a5d9739e50;
	Node0x55a5d9739dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%152:\l152:                                              \l  invoke void @_ZSt16__throw_bad_castv() #15\l          to label %153 unwind label %184\l}"];
	Node0x55a5d9739dc0 -> Node0x55a5d9739fe0;
	Node0x55a5d9739dc0 -> Node0x55a5d973a030;
	Node0x55a5d9739fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4961d270",label="{%153:\l153:                                              \l  unreachable\l}"];
	Node0x55a5d9739e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%154:\l154:                                              \l  %155 = getelementptr inbounds %\"class.std::ctype\", %\"class.std::ctype\"*\l... %150, i64 0, i32 8\l  %156 = load i8, i8* %155, align 8, !tbaa !31\l  %157 = icmp eq i8 %156, 0\l  br i1 %157, label %161, label %158\l|{<s0>T|<s1>F}}"];
	Node0x55a5d9739e50:s0 -> Node0x55a5d973a5f0;
	Node0x55a5d9739e50:s1 -> Node0x55a5d973a680;
	Node0x55a5d973a680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%158:\l158:                                              \l  %159 = getelementptr inbounds %\"class.std::ctype\", %\"class.std::ctype\"*\l... %150, i64 0, i32 9, i64 10\l  %160 = load i8, i8* %159, align 1, !tbaa !33\l  br label %168\l}"];
	Node0x55a5d973a680 -> Node0x55a5d973a970;
	Node0x55a5d973a5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%161:\l161:                                              \l  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%\"class.std::ctype\"* nonnull\l... align 8 dereferenceable(570) %150)\l          to label %162 unwind label %182\l}"];
	Node0x55a5d973a5f0 -> Node0x55a5d973aaf0;
	Node0x55a5d973a5f0 -> Node0x55a5d9739390;
	Node0x55a5d973aaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%162:\l162:                                              \l  %163 = bitcast %\"class.std::ctype\"* %150 to i8 (%\"class.std::ctype\"*, i8)***\l  %164 = load i8 (%\"class.std::ctype\"*, i8)**, i8 (%\"class.std::ctype\"*,\l... i8)*** %163, align 8, !tbaa !26\l  %165 = getelementptr inbounds i8 (%\"class.std::ctype\"*, i8)*, i8\l... (%\"class.std::ctype\"*, i8)** %164, i64 6\l  %166 = load i8 (%\"class.std::ctype\"*, i8)*, i8 (%\"class.std::ctype\"*, i8)**\l... %165, align 8\l  %167 = invoke signext i8 %166(%\"class.std::ctype\"* nonnull align 8\l... dereferenceable(570) %150, i8 signext 10)\l          to label %168 unwind label %182\l}"];
	Node0x55a5d973aaf0 -> Node0x55a5d973a970;
	Node0x55a5d973aaf0 -> Node0x55a5d9739390;
	Node0x55a5d973a970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%168:\l168:                                              \l  %169 = phi i8 [ %160, %158 ], [ %167, %162 ]\l  %170 = invoke nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSo3putEc(%\"class.std::basic_ostream\"*\l... nonnull align 8 dereferenceable(8) %139, i8 signext %169)\l          to label %171 unwind label %182\l}"];
	Node0x55a5d973a970 -> Node0x55a5d973b750;
	Node0x55a5d973a970 -> Node0x55a5d9739390;
	Node0x55a5d973b750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%171:\l171:                                              \l  %172 = invoke nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSo5flushEv(%\"class.std::basic_ostream\"*\l... nonnull align 8 dereferenceable(8) %170)\l          to label %173 unwind label %182\l}"];
	Node0x55a5d973b750 -> Node0x55a5d973ba10;
	Node0x55a5d973b750 -> Node0x55a5d9739390;
	Node0x55a5d973ba10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%173:\l173:                                              \l  %174 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %22, align 8, !tbaa !14\l  invoke void\l... @_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EE8_M_eraseEPS\l...t13_Rb_tree_nodeIS2_E(%\"class.std::_Rb_tree\"* nonnull align 8\l... dereferenceable(48) %24, %\"struct.std::_Rb_tree_node\"* %174)\l          to label %178 unwind label %175\l}"];
	Node0x55a5d973ba10 -> Node0x55a5d973bd90;
	Node0x55a5d973ba10 -> Node0x55a5d973bde0;
	Node0x55a5d973bde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%175:\l175:                                              \l  %176 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %177 = extractvalue \{ i8*, i32 \} %176, 0\l  call void @__clang_call_terminate(i8* %177) #16\l  unreachable\l}"];
	Node0x55a5d973bd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%178:\l178:                                              \l  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #13\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13\l  %179 = load i32, i32* %1, align 4, !tbaa !7\l  %180 = add nsw i32 %179, -1\l  store i32 %180, i32* %1, align 4, !tbaa !7\l  %181 = icmp eq i32 %179, 0\l  br i1 %181, label %188, label %29, !llvm.loop !34\l|{<s0>T|<s1>F}}"];
	Node0x55a5d973bd90:s0 -> Node0x55a5d972bb80;
	Node0x55a5d973bd90:s1 -> Node0x55a5d972e840;
	Node0x55a5d9739390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%182:\l182:                                              \l  %183 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %186\l}"];
	Node0x55a5d9739390 -> Node0x55a5d9730750;
	Node0x55a5d973a030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%184:\l184:                                              \l  %185 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %186\l}"];
	Node0x55a5d973a030 -> Node0x55a5d9730750;
	Node0x55a5d9730750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%186:\l186:                                              \l  %187 = phi \{ i8*, i32 \} [ %123, %122 ], [ %38, %37 ], [ %183, %182 ], [\l... %185, %184 ]\l  call void\l... @_ZNSt8_Rb_treeIlSt4pairIKllESt10_Select1stIS2_ESt4lessIlESaIS2_EED2Ev(%\"class\l....std::_Rb_tree\"* nonnull align 8 dereferenceable(48) %24) #13\l  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #13\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13\l  resume \{ i8*, i32 \} %187\l}"];
	Node0x55a5d972bb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%188:\l188:                                              \l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13\l  ret i32 0\l}"];
}
