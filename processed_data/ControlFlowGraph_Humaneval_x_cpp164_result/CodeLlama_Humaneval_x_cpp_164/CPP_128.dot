<|im_start|>system
Here is the answer:
<|im_end|>
<|im_start|>user

        ```
        digraph {
            node [shape=box]
            "<?x86_64-pc-linux-gnu" -> "<?x86_64-pc-linux-gnu_1"
            "<?x86_64-pc-linux-gnu_1" -> "<?x86_64-pc-linux-gnu_2"
            "<?x86_64-pc-linux-gnu_1" -> "<?x86_64-pc-linux-gnu_3"
            "<?x86_64-pc-linux-gnu_2" -> "<?x86_64-pc-linux-gnu_4"
            "<?x86_64-pc-linux-gnu_3" -> "<?x86_64-pc-linux-gnu_4"
            "<?x86_64-pc-linux-gnu_4" -> "<?x86_64-pc-linux-gnu_5"
            "<?x86_64-pc-linux-gnu_5" -> "<?x86_64-pc-linux-gnu_6"
            "<?x86_64-pc-linux-gnu_5" -> "<?x86_64-pc-linux-gnu_7"
            "<?x86_64-pc-linux-gnu_6" -> "<?x86_64-pc-linux-gnu_8"
            "<?x86_64-pc-linux-gnu_7" -> "<?x86_64-pc-linux-gnu_8"
        }
        ```
<|im_end|>
<|im_start|>system
The output is a little bit long, so we only show the first few lines.
<|im_end|>

# Web API:

Here is the web API: https://pscweb2.cs.uchicago.edu/

## Usage:

For example, if you want to choose prompt `1`, you can set `url` as `https://pscweb2.cs.uchicago.edu/1`.

`/1` means you choose the first prompt in the [data](data) folder.

If you choose prompt `3`, you need to set `url` as `https://pscweb2.cs.uchicago.edu/3`.

You can also set `url` as `https://pscweb2.cs.uchicago.edu/`. Then, the server will randomly choose a prompt.

## Input:

Input is a string with json format.

For example, if you want to choose prompt `1`, you can set `url` as `https://pscweb2.cs.uchicago.edu/1`. Then, the input can be like this:

```
{
    "input": "I am a student. I love coding"
}
```

The input field should be string.

## Output:

The output is a string with json format.

For example, if you choose prompt `1`, you can set `url` as `https://pscweb2.cs.uchicago.edu/1`. Then, the output can be like this:

```
{
    "output": "I am a student. I love coding."
}
```

The output field is string.

# Citation

Please consider citing our paper if you use data or code in your own work:

```
@inproceedings{liu2022pscweb,
    title = "{PSCWeb}: An {E}xplainable {A}I {C}hallenge on {E}xplainable {C}omputer {V}ision in the {W}eb",
    author = "Liu, Yixin  and
      Zhang, Yunxuan  and
      Li, Shijie  and
      Sharma, Vaibhav  and
      Yu, Liyang  and
      Liu, Yixuan  and
      Liu, Meng  and
      Lu, Hui  and
      Xu, Songcen  and
      Zhang, Yabiao  and
      Zhang, Quanshi  and
      Zhang, Songcen  and
      Yang, Kaiyu  and
      Zhang, Ping  and
      Zhang, Ce  and
      Zhou, Shuchang  and
      Zhou, Yao  and
      Zhang, Yi  and
      Wu, Baoyuan  and
      Sun, Haiyu  and
      Li, Weizhe",
    booktitle = "Proceedings of the Thirty-Sixth AAAI Conference on Artificial Intelligence (AAAI-22)",
    year = "2022",
}
```

# Acknowledgments

Our code is mainly built upon [transformers](https://github.com/huggingface/transformers) and [OpenNMT-py](https://github.com/OpenNMT/OpenNMT-py).

Our visualization tool is based on [Parabel](https://github.com/Unity-Technologies/Parabel).