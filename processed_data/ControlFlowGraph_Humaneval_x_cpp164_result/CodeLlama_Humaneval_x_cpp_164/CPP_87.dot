## Evaluation

The evaluation is based on automated scripts that compare the user's result with the expected result.

### Evaluation Metrics

The evaluation metric used is the exact string match for the generated output. For this purpose, both output files are treated as strings and compared as strings.

### Test Cases

The following folder contains examples of the test cases that will be used to evaluate your solution:

* [Test cases folder](testcases)

### Evaluation Script

The evaluation scripts are available in the evaluation folder.

* [Evaluation scripts](evaluation)

### Submission

The submission procedure is as follows:

1. Ensure your code passes all the test cases.
2. Prepare a zip file that contains all the code files including the runnable script.
3. Submit the zip file on Canvas.

## Project Structure

This is an example of how the structure of your project could look like.

    project
    ├── README.md
    ├── data
    │   ├── input.txt
    │   └── output.txt
    ├── evaluation
    │   └── evaluate.sh
    ├── testcases
    │   └── t0
    │       ├── input
    │       └── output
    └── solution
        └── run_ir2dot.sh

### Running the Evaluation Script

To run the evaluation script:

```
./evaluation/evaluate.sh solution run_ir2dot testcases/t0 input output
```

The evaluation script takes the following arguments:

1. The folder containing the solution: `solution`.
2. The name of the solution script: `run_ir2dot.sh`.
3. The folder containing the test case: `testcases/t0`.
4. The name of the input file: `input`.
5. The name of the output file: `output`.

To run all the test cases, use the following script:

```
./evaluation/evaluate_all.sh
```

The scores for each test case will be printed in the terminal.

## Report

You are required to submit a report describing your solution. The report should be a PDF file and must contain the following:

1. An overview of your implementation including the overall structure of your solution.
2. The design of the data structures used in the solution.
3. A description of how each function/module is implemented.
4. A discussion of the advantages and disadvantages of your solution.
5. A discussion of how you would improve your solution if given more time.

Your report should not exceed 4 pages and should contain at most 2 figures.

## Submission

Please submit your solution and your report using Canvas.

## Grading

The assignment will be graded out of 200 points. The distribution of points is as follows:

* Solution script: 150 points
* Report: 50 points

The grading criteria for the solution script is as follows:

* Correctness: 90 points
* Efficiency: 30 points
* Readability: 15 points
* Submission: 15 points

The grading criteria for the report is as follows:

* Content: 35 points
* Clarity: 5 points
* Evidence: 10 points

The grading criteria for each test case is as follows:

* Passing: 10 points

## Deadline

The deadline for submission is 11:59 PM, 28 October, 2021.