<|im_start|>system
Here is the answer
<|im_end|>
<|im_start|>user
How do you do?
<|im_end|>
<|im_start|>system
How do you do?
<|im_end|>
<|im_start|>user
How do you do?
<|im_end|>
<|im_start|>system
How do you do?
<|im_end|>
```

### 具体配置

```python
# 查看pytorch版本
import torch
print(torch.__version__)
```

```python
# 查看transformers版本
import transformers
print(transformers.__version__)
```

```python
# 查看tensorflow版本
import tensorflow as tf
print(tf.__version__)
```

```python
# 查看当前使用的GPU
!nvidia-smi
```


```python
# 查看当前使用的GPU
import os
os.environ["CUDA_VISIBLE_DEVICES"] = "0"
```

### 恢复训练


```python
from transformers import GPTNeoForCausalLM, GPTNeoConfig

model = GPTNeoForCausalLM.from_pretrained(
    "pretrained_model/",
    from_tf=True,
    pad_token_id=tokenizer.eos_token_id,
    attention_types=[[["global", "local"], 12]],
    max_length=2048,
    num_choices=20,
)
```

### 抽取权重


```python
# 查看权重
model.state_dict()
```

### 训练

```python
from transformers import GPTNeoForCausalLM, GPTNeoConfig

model = GPTNeoForCausalLM(config)

model.train()

```


```python
# 训练

from transformers import GPTNeoForCausalLM, GPTNeoConfig

model = GPTNeoForCausalLM(config)

model.train()

# 在训练模型时，需要调用.train()，以启用Dropout和BatchNorm。

# 恢复训练

from transformers import GPTNeoForCausalLM, GPTNeoConfig

model = GPTNeoForCausalLM.from_pretrained(
    "pretrained_model/",  # 替换为.ckpt文件所在的目录。
    from_tf=True,
    attention_types=[[["global", "local"], 12]],
    max_length=2048,
    num_choices=20,
)

model.train()

# 权重提取

model = GPTNeoForCausalLM.from_pretrained(
    "pretrained_model/",
    from_tf=True,
    attention_types=[[["global", "local"], 12]],
    max_length=2048,
    num_choices=20,
)

# 查看权重
model.state_dict()

```


```python
from transformers import GPTNeoForCausalLM, GPTNeoConfig

model = GPTNeoForCausalLM(config)

model.train()

# 在训练模型时，需要调用.train()，以启用Dropout和BatchNorm。

# 恢复训练

from transformers import GPTNeoForCausalLM, GPTNeoConfig

model = GPTNeoForCausalLM.from_pretrained(
    "pretrained_model/",  # 替换为.ckpt文件所在的目录。
    from_tf=True,
    attention_types=[[["global", "local"], 12]],
    max_length=2048,
    num_choices=20,
)

model.train()

# 权重提取

model = GPTNeoForCausalLM.from_pretrained(
    "pretrained_model/",
    from_tf=True,
    attention_types=[[["global", "local"], 12]],
    max_length=2048,
    num_choices=20,
)

# 查看权重
model.state_dict()

```


```python
# 查看权重
model.state_dict()
```

### 权重提取


```python
# 查看权重
model.state_dict()
```


```python
# 查看权重
model.state_dict()
```


```python
# 查看权重
model.state_dict()
```


```python
# 查看权重
model.state_dict()
```