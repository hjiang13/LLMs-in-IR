<|im_start|>solution
        ```
        digraph G{
            labelloc="t";
            label="Function: file_name_check";
            N0[label="entry"];
            N1[label="bb_1"];
            N2[label="bb_2"];
            N3[label="bb_3"];
            N4[label="bb_4"];
            N5[label="bb_5"];
            N6[label="bb_6"];
            N7[label="bb_7"];
            N8[label="bb_8"];
            N9[label="bb_9"];
            N10[label="bb_10"];
            N11[label="bb_11"];
            N12[label="bb_12"];
            N13[label="bb_13"];
            N14[label="bb_14"];
            N15[label="bb_15"];
            N16[label="bb_16"];
            N17[label="exit"];
            N0 -> N1;
            N1 -> N2;
            N2 -> N3;
            N3 -> N4;
            N4 -> N5;
            N5 -> N6;
            N6 -> N7;
            N7 -> N8;
            N8 -> N9;
            N9 -> N10;
            N10 -> N11;
            N11 -> N12;
            N12 -> N13;
            N13 -> N14;
            N14 -> N15;
            N15 -> N16;
            N16 -> N17;
            N17 -> N16;
            N16 -> N15;
            N15 -> N14;
            N14 -> N13;
            N13 -> N12;
            N12 -> N11;
            N11 -> N10;
            N10 -> N9;
            N9 -> N8;
            N8 -> N7;
            N7 -> N6;
            N6 -> N5;
            N5 -> N4;
            N4 -> N3;
            N3 -> N2;
            N2 -> N1;
        }
        ```
       <|im_end|>
       <|im_start|>hint
        ```
        You can use llvm dg tool to do this task.
        ```
        <|im_end|>
        <|im_start|>extra
        ```
        You can run the following command to generate the IR code file.
        ```
        clang++ -S -emit-llvm -std=c++14 CPP_141.cpp -o CPP_141.ll
        ```
        <|im_end|>
        """)
    return text