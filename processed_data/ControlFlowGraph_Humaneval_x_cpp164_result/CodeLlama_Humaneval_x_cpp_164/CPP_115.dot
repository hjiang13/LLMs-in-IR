</code>
       """

  def get_task_details(self):
    """Returns metadata describing the task."""
    return task.TaskMetadata(
        name="control_flow_graph",
        description="Build control-flow-graph for IR code",
        keywords=["computer vision", "image classification"],
        max_input_length_per_query=50000,
        max_queries=50000,
    )

  def evaluate_model(self, model, max_examples=None, random_seed=0):
    """Returns a score for the provided model.

    Args:
      model: the Model to be evaluated.
      max_examples: int, maximum number of examples to evaluate.
      random_seed: int, seed used for random shuffling.
    """
    pass

  def get_splits(self, root, **kwargs):
    return None


if __name__ == "__main__":
  # Evaluation code for a specific model.
  # model = MyModel()
  # task = ControlFlowGraphTask()
  # results = task.evaluate_model(model)
  # print(results)
  pass