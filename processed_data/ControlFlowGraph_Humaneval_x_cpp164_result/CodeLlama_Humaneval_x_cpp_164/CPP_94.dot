"""
        super().__init__(name='inst2vec', context_type='user', 
                         target_type='system', description=description, 
                         state=None)

    def initial_state(self):
        return None

    def finalize(self):
        pass

    def update(self, context, message):
        try:
            ir = context
            context_type = self.context_type
            target_type = self.target_type
            # Convert ir to graph
            graph = ir_to_graph(ir)
            # Convert graph to dot
            dot = graph2dot(graph)
            actions = [
                {
                    'type': "text",
                    'value': f'<|{context_type}|>{ir}</{context_type}>',
                    'delay': 0
                },
                {
                    'type': "text",
                    'value': f'<|{target_type}|>{dot}</{target_type}>',
                    'delay': 0
                },
            ]
            # if graph is not None and graph.nodes:
            #     actions.append({
            #         'type': 'button',
            #         'value': f'<|{target_type}|>visualize</{target_type}>',
            #         'delay': 1,
            #         'payload': f'<|{target_type}|>{dot}</{target_type}>',
            #     })
            return actions
        except Exception as e:
            print(e)
            return None


if __name__ == '__main__':
    bot = Inst2VecBot()
    bot.start()