; ModuleID = './StrongPassword.cpp'
source_filename = "./StrongPassword.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [11 x i8] c"0123456789\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"abcdefghijklmnopqrstuvwxyz\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZ\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"!@#$%^&*()-+\00", align 1
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str.4 = private unnamed_addr constant [17 x i8] c"Enter password: \00", align 1
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@.str.5 = private unnamed_addr constant [53 x i8] c"Password meets the criteria. Missing characters: %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [61 x i8] c"Password does not meet the criteria. Missing characters: %d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_StrongPassword.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress nounwind uwtable
define dso_local i32 @_Z5checkRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_(%"class.std::__cxx11::basic_string"* nocapture nonnull readonly align 8 dereferenceable(32) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8, !tbaa !3
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !10
  %9 = load i8, i8* %8, align 1, !tbaa !11
  %10 = tail call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %1, i8 signext %9, i64 0) #11
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %25, label %12

12:                                               ; preds = %6, %15
  %13 = phi i64 [ %21, %15 ], [ 1, %6 ]
  %14 = icmp eq i64 %13, %4
  br i1 %14, label %22, label %15, !llvm.loop !12

15:                                               ; preds = %12
  %16 = load i8*, i8** %7, align 8, !tbaa !10
  %17 = getelementptr inbounds i8, i8* %16, i64 %13
  %18 = load i8, i8* %17, align 1, !tbaa !11
  %19 = tail call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %1, i8 signext %18, i64 0) #11
  %20 = icmp eq i64 %19, -1
  %21 = add nuw i64 %13, 1
  br i1 %20, label %22, label %12, !llvm.loop !12

22:                                               ; preds = %12, %15
  %23 = icmp uge i64 %13, %4
  %24 = zext i1 %23 to i32
  br label %25

25:                                               ; preds = %6, %22, %2
  %26 = phi i32 [ 1, %2 ], [ 0, %6 ], [ %24, %22 ]
  ret i32 %26
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8 signext, i64) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 2
  %10 = bitcast %"class.std::__cxx11::basic_string"* %3 to %union.anon**
  store %union.anon* %9, %union.anon** %10, align 8, !tbaa !14
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 1
  store i64 0, i64* %11, align 8, !tbaa !3
  %12 = bitcast %union.anon* %9 to i8*
  store i8 0, i8* %12, align 8, !tbaa !11
  %13 = bitcast %"class.std::__cxx11::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2
  %15 = bitcast %"class.std::__cxx11::basic_string"* %4 to %union.anon**
  store %union.anon* %14, %union.anon** %15, align 8, !tbaa !14
  %16 = bitcast %union.anon* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(10) %16, i8* noundef nonnull align 1 dereferenceable(10) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #11
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 1
  store i64 10, i64* %18, align 8, !tbaa !3
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %4, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %19, align 2, !tbaa !11
  %20 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2
  %22 = bitcast %"class.std::__cxx11::basic_string"* %5 to %union.anon**
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !14
  %23 = bitcast %union.anon* %21 to i8*
  %24 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  store i64 26, i64* %2, align 8, !tbaa !15
  %25 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i64* nonnull align 8 dereferenceable(8) %2, i64 0)
          to label %26 unwind label %195

26:                                               ; preds = %0
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 0, i32 0
  store i8* %25, i8** %27, align 8, !tbaa !10
  %28 = load i64, i64* %2, align 8, !tbaa !15
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 2, i32 0
  store i64 %28, i64* %29, align 8, !tbaa !11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(26) %25, i8* noundef nonnull align 1 dereferenceable(26) getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i64 26, i1 false) #11
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i64 0, i32 1
  store i64 %28, i64* %30, align 8, !tbaa !3
  %31 = load i8*, i8** %27, align 8, !tbaa !10
  %32 = getelementptr inbounds i8, i8* %31, i64 %28
  store i8 0, i8* %32, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %33 = bitcast %"class.std::__cxx11::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2
  %35 = bitcast %"class.std::__cxx11::basic_string"* %6 to %union.anon**
  store %union.anon* %34, %union.anon** %35, align 8, !tbaa !14
  %36 = bitcast %union.anon* %34 to i8*
  %37 = bitcast i64* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  store i64 26, i64* %1, align 8, !tbaa !15
  %38 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i64* nonnull align 8 dereferenceable(8) %1, i64 0)
          to label %39 unwind label %197

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 0, i32 0
  store i8* %38, i8** %40, align 8, !tbaa !10
  %41 = load i64, i64* %1, align 8, !tbaa !15
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 2, i32 0
  store i64 %41, i64* %42, align 8, !tbaa !11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(26) %38, i8* noundef nonnull align 1 dereferenceable(26) getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i64 26, i1 false) #11
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %6, i64 0, i32 1
  store i64 %41, i64* %43, align 8, !tbaa !3
  %44 = load i8*, i8** %40, align 8, !tbaa !10
  %45 = getelementptr inbounds i8, i8* %44, i64 %41
  store i8 0, i8* %45, align 1, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %46 = bitcast %"class.std::__cxx11::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2
  %48 = bitcast %"class.std::__cxx11::basic_string"* %7 to %union.anon**
  store %union.anon* %47, %union.anon** %48, align 8, !tbaa !14
  %49 = bitcast %union.anon* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %49, i8* noundef nonnull align 1 dereferenceable(12) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 12, i1 false) #11
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 1
  store i64 12, i64* %51, align 8, !tbaa !3
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i64 0, i32 2, i32 1, i64 4
  store i8 0, i8* %52, align 4, !tbaa !11
  %53 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i64 16)
          to label %54 unwind label %199

54:                                               ; preds = %39
  %55 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8, !tbaa !16
  %56 = getelementptr i8, i8* %55, i64 -24
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = add nsw i64 %58, 240
  %60 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %59
  %61 = bitcast i8* %60 to %"class.std::ctype"**
  %62 = load %"class.std::ctype"*, %"class.std::ctype"** %61, align 8, !tbaa !18
  %63 = icmp eq %"class.std::ctype"* %62, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %54
  invoke void @_ZSt16__throw_bad_castv() #12
          to label %65 unwind label %199

65:                                               ; preds = %64
  unreachable

66:                                               ; preds = %54
  %67 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %62, i64 0, i32 8
  %68 = load i8, i8* %67, align 8, !tbaa !21
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %62, i64 0, i32 9, i64 10
  %72 = load i8, i8* %71, align 1, !tbaa !11
  br label %80

73:                                               ; preds = %66
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %62)
          to label %74 unwind label %199

74:                                               ; preds = %73
  %75 = bitcast %"class.std::ctype"* %62 to i8 (%"class.std::ctype"*, i8)***
  %76 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %75, align 8, !tbaa !16
  %77 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %76, i64 6
  %78 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %77, align 8
  %79 = invoke signext i8 %78(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %62, i8 signext 10)
          to label %80 unwind label %199

80:                                               ; preds = %74, %70
  %81 = phi i8 [ %72, %70 ], [ %79, %74 ]
  %82 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i8 signext %81)
          to label %83 unwind label %199

83:                                               ; preds = %80
  %84 = load i64, i64* %11, align 8, !tbaa !3
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %182, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8, !tbaa !10
  %89 = load i8, i8* %88, align 1, !tbaa !11
  %90 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i8 signext %89, i64 0) #11
  %91 = icmp eq i64 %90, -1
  br i1 %91, label %104, label %92

92:                                               ; preds = %86, %95
  %93 = phi i64 [ %101, %95 ], [ 1, %86 ]
  %94 = icmp eq i64 %93, %84
  br i1 %94, label %102, label %95, !llvm.loop !12

95:                                               ; preds = %92
  %96 = load i8*, i8** %87, align 8, !tbaa !10
  %97 = getelementptr inbounds i8, i8* %96, i64 %93
  %98 = load i8, i8* %97, align 1, !tbaa !11
  %99 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4, i8 signext %98, i64 0) #11
  %100 = icmp eq i64 %99, -1
  %101 = add nuw i64 %93, 1
  br i1 %100, label %102, label %92, !llvm.loop !12

102:                                              ; preds = %92, %95
  %103 = icmp uge i64 %93, %84
  br label %104

104:                                              ; preds = %102, %86
  %105 = phi i1 [ false, %86 ], [ %103, %102 ]
  %106 = zext i1 %105 to i32
  %107 = load i64, i64* %11, align 8, !tbaa !3
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %182, label %109

109:                                              ; preds = %104
  %110 = load i8*, i8** %87, align 8, !tbaa !10
  %111 = load i8, i8* %110, align 1, !tbaa !11
  %112 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i8 signext %111, i64 0) #11
  %113 = icmp eq i64 %112, -1
  br i1 %113, label %126, label %114

114:                                              ; preds = %109, %117
  %115 = phi i64 [ %123, %117 ], [ 1, %109 ]
  %116 = icmp eq i64 %115, %107
  br i1 %116, label %124, label %117, !llvm.loop !12

117:                                              ; preds = %114
  %118 = load i8*, i8** %87, align 8, !tbaa !10
  %119 = getelementptr inbounds i8, i8* %118, i64 %115
  %120 = load i8, i8* %119, align 1, !tbaa !11
  %121 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5, i8 signext %120, i64 0) #11
  %122 = icmp eq i64 %121, -1
  %123 = add nuw i64 %115, 1
  br i1 %122, label %124, label %114, !llvm.loop !12

124:                                              ; preds = %114, %117
  %125 = icmp uge i64 %115, %107
  br label %126

126:                                              ; preds = %124, %109
  %127 = phi i1 [ false, %109 ], [ %125, %124 ]
  %128 = load i64, i64* %11, align 8, !tbaa !3
  %129 = and i1 %127, %105
  %130 = zext i1 %129 to i32
  %131 = icmp eq i64 %128, 0
  br i1 %131, label %182, label %132

132:                                              ; preds = %126
  %133 = load i8*, i8** %87, align 8, !tbaa !10
  %134 = load i8, i8* %133, align 1, !tbaa !11
  %135 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i8 signext %134, i64 0) #11
  %136 = icmp eq i64 %135, -1
  br i1 %136, label %150, label %137

137:                                              ; preds = %132, %140
  %138 = phi i64 [ %146, %140 ], [ 1, %132 ]
  %139 = icmp eq i64 %138, %128
  br i1 %139, label %147, label %140, !llvm.loop !12

140:                                              ; preds = %137
  %141 = load i8*, i8** %87, align 8, !tbaa !10
  %142 = getelementptr inbounds i8, i8* %141, i64 %138
  %143 = load i8, i8* %142, align 1, !tbaa !11
  %144 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6, i8 signext %143, i64 0) #11
  %145 = icmp eq i64 %144, -1
  %146 = add nuw i64 %138, 1
  br i1 %145, label %147, label %137, !llvm.loop !12

147:                                              ; preds = %140, %137
  %148 = icmp uge i64 %138, %128
  %149 = zext i1 %148 to i32
  br label %150

150:                                              ; preds = %132, %147
  %151 = phi i32 [ 0, %132 ], [ %149, %147 ]
  %152 = load i64, i64* %11, align 8, !tbaa !3
  %153 = and i32 %151, %130
  %154 = icmp eq i64 %152, 0
  br i1 %154, label %182, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8, !tbaa !10
  %158 = load i8, i8* %157, align 1, !tbaa !11
  %159 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i8 signext %158, i64 0) #11
  %160 = icmp eq i64 %159, -1
  br i1 %160, label %174, label %161

161:                                              ; preds = %155, %164
  %162 = phi i64 [ %170, %164 ], [ 1, %155 ]
  %163 = icmp eq i64 %162, %152
  br i1 %163, label %171, label %164, !llvm.loop !12

164:                                              ; preds = %161
  %165 = load i8*, i8** %156, align 8, !tbaa !10
  %166 = getelementptr inbounds i8, i8* %165, i64 %162
  %167 = load i8, i8* %166, align 1, !tbaa !11
  %168 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i8 signext %167, i64 0) #11
  %169 = icmp eq i64 %168, -1
  %170 = add nuw i64 %162, 1
  br i1 %169, label %171, label %161, !llvm.loop !12

171:                                              ; preds = %161, %164
  %172 = icmp uge i64 %162, %152
  %173 = zext i1 %172 to i32
  br label %174

174:                                              ; preds = %171, %155
  %175 = phi i32 [ 0, %155 ], [ %173, %171 ]
  %176 = load i64, i64* %11, align 8, !tbaa !3
  %177 = and i32 %153, %175
  %178 = icmp ugt i64 %176, 5
  br i1 %178, label %179, label %182

179:                                              ; preds = %174
  %180 = trunc i64 %176 to i32
  %181 = sub nsw i32 6, %180
  br label %187

182:                                              ; preds = %83, %104, %126, %150, %174
  %183 = phi i32 [ %177, %174 ], [ %153, %150 ], [ %130, %126 ], [ 1, %83 ], [ %106, %104 ]
  %184 = phi i64 [ %176, %174 ], [ 0, %150 ], [ 0, %126 ], [ 0, %83 ], [ 0, %104 ]
  %185 = trunc i64 %184 to i32
  %186 = add nuw nsw i32 %185, -6
  br label %187

187:                                              ; preds = %182, %179
  %188 = phi i32 [ %177, %179 ], [ %183, %182 ]
  %189 = phi i32 [ %181, %179 ], [ %186, %182 ]
  %190 = icmp eq i32 %188, 0
  %191 = select i1 %190, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i64 0, i64 0)
  %192 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) %191, i32 %189)
  %193 = load i8*, i8** %50, align 8, !tbaa !10
  %194 = icmp eq i8* %193, %49
  br i1 %194, label %205, label %204

195:                                              ; preds = %0
  %196 = landingpad { i8*, i32 }
          cleanup
  br label %232

197:                                              ; preds = %26
  %198 = landingpad { i8*, i32 }
          cleanup
  br label %227

199:                                              ; preds = %80, %74, %73, %64, %39
  %200 = landingpad { i8*, i32 }
          cleanup
  %201 = load i8*, i8** %50, align 8, !tbaa !10
  %202 = icmp eq i8* %201, %49
  br i1 %202, label %223, label %203

203:                                              ; preds = %199
  call void @_ZdlPv(i8* %201) #11
  br label %223

204:                                              ; preds = %187
  call void @_ZdlPv(i8* %193) #11
  br label %205

205:                                              ; preds = %187, %204
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #11
  %206 = load i8*, i8** %40, align 8, !tbaa !10
  %207 = icmp eq i8* %206, %36
  br i1 %207, label %209, label %208

208:                                              ; preds = %205
  call void @_ZdlPv(i8* %206) #11
  br label %209

209:                                              ; preds = %205, %208
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #11
  %210 = load i8*, i8** %27, align 8, !tbaa !10
  %211 = icmp eq i8* %210, %23
  br i1 %211, label %213, label %212

212:                                              ; preds = %209
  call void @_ZdlPv(i8* %210) #11
  br label %213

213:                                              ; preds = %209, %212
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #11
  %214 = load i8*, i8** %17, align 8, !tbaa !10
  %215 = icmp eq i8* %214, %16
  br i1 %215, label %217, label %216

216:                                              ; preds = %213
  call void @_ZdlPv(i8* %214) #11
  br label %217

217:                                              ; preds = %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #11
  %218 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %219 = load i8*, i8** %218, align 8, !tbaa !10
  %220 = icmp eq i8* %219, %12
  br i1 %220, label %222, label %221

221:                                              ; preds = %217
  call void @_ZdlPv(i8* %219) #11
  br label %222

222:                                              ; preds = %217, %221
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret i32 0

223:                                              ; preds = %203, %199
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #11
  %224 = load i8*, i8** %40, align 8, !tbaa !10
  %225 = icmp eq i8* %224, %36
  br i1 %225, label %227, label %226

226:                                              ; preds = %223
  call void @_ZdlPv(i8* %224) #11
  br label %227

227:                                              ; preds = %226, %223, %197
  %228 = phi { i8*, i32 } [ %198, %197 ], [ %200, %223 ], [ %200, %226 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #11
  %229 = load i8*, i8** %27, align 8, !tbaa !10
  %230 = icmp eq i8* %229, %23
  br i1 %230, label %232, label %231

231:                                              ; preds = %227
  call void @_ZdlPv(i8* %229) #11
  br label %232

232:                                              ; preds = %231, %227, %195
  %233 = phi { i8*, i32 } [ %196, %195 ], [ %228, %227 ], [ %228, %231 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #11
  %234 = load i8*, i8** %17, align 8, !tbaa !10
  %235 = icmp eq i8* %234, %16
  br i1 %235, label %237, label %236

236:                                              ; preds = %232
  call void @_ZdlPv(i8* %234) #11
  br label %237

237:                                              ; preds = %236, %232
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #11
  %238 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i64 0, i32 0, i32 0
  %239 = load i8*, i8** %238, align 8, !tbaa !10
  %240 = icmp eq i8* %239, %12
  br i1 %240, label %242, label %241

241:                                              ; preds = %237
  call void @_ZdlPv(i8* %239) #11
  br label %242

242:                                              ; preds = %237, %241
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  resume { i8*, i32 } %233
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #7

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8 signext) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #9

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_StrongPassword.cpp() #10 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #11
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #9 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nounwind }
attributes #12 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!4, !6, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!5, !6, i64 0}
!15 = !{!9, !9, i64 0}
!16 = !{!17, !17, i64 0}
!17 = !{!"vtable pointer", !8, i64 0}
!18 = !{!19, !6, i64 240}
!19 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !6, i64 216, !7, i64 224, !20, i64 225, !6, i64 232, !6, i64 240, !6, i64 248, !6, i64 256}
!20 = !{!"bool", !7, i64 0}
!21 = !{!22, !7, i64 56}
!22 = !{!"_ZTSSt5ctypeIcE", !6, i64 16, !20, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !7, i64 56, !7, i64 57, !7, i64 313, !7, i64 569}
