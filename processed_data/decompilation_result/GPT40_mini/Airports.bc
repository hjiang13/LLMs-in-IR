; ModuleID = './Airports.cpp'
source_filename = "./Airports.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::multiset" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%struct.treap = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::_Rb_tree_node" = type <{ %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf", [4 x i8] }>
%"struct.__gnu_cxx::__aligned_membuf" = type { [4 x i8] }

$_ZNSt8multisetIiSt4lessIiESaIiEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@st = dso_local global %"class.std::multiset" zeroinitializer, align 8
@n = dso_local global i32 0, align 4
@d = dso_local global i32 0, align 4
@tot = dso_local local_unnamed_addr global i32 0, align 4
@rt = dso_local local_unnamed_addr global i32 0, align 4
@rdx = dso_local local_unnamed_addr global i32 0, align 4
@t = dso_local global [888888 x %struct.treap] zeroinitializer, align 16
@.str = private unnamed_addr constant [24 x i8] c"../input_files/Airports\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_Airports.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8multisetIiSt4lessIiESaIiEED2Ev(%"class.std::multiset"* nonnull align 8 dereferenceable(48) %0) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 16
  %5 = bitcast i8* %4 to %"struct.std::_Rb_tree_node"**
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8, !tbaa !3
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %2, %"struct.std::_Rb_tree_node"* %6)
          to label %10 unwind label %7

7:                                                ; preds = %1
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  tail call void @__clang_call_terminate(i8* %9) #15
  unreachable

10:                                               ; preds = %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z6updatei(i32 %0) local_unnamed_addr #4 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %2, i32 0
  %4 = load i32, i32* %3, align 16, !tbaa !11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %2, i32 1
  store i32 1, i32* %7, align 4, !tbaa !14
  %8 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %2, i32 7
  store i32 %4, i32* %8, align 4, !tbaa !15
  %9 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %2, i32 5
  store i32 %4, i32* %9, align 4, !tbaa !16
  %10 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %2, i32 6
  store i32 %4, i32* %10, align 8, !tbaa !17
  %11 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %2, i32 2
  %12 = load i32, i32* %11, align 8, !tbaa !18
  %13 = icmp slt i32 %12, %4
  br i1 %13, label %14, label %17

14:                                               ; preds = %6
  %15 = add nsw i32 %12, 1
  store i32 %15, i32* %7, align 4, !tbaa !14
  %16 = add nsw i32 %12, %4
  store i32 %16, i32* %8, align 4, !tbaa !15
  store i32 %12, i32* %9, align 4, !tbaa !16
  store i32 %4, i32* %10, align 8, !tbaa !17
  br label %17

17:                                               ; preds = %14, %6
  %18 = phi i32 [ %12, %14 ], [ %4, %6 ]
  %19 = phi i32 [ %16, %14 ], [ %4, %6 ]
  %20 = phi i32 [ %15, %14 ], [ 1, %6 ]
  %21 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %2, i32 3
  %22 = load i32, i32* %21, align 4, !tbaa !19
  %23 = icmp slt i32 %22, %4
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  %25 = add nsw i32 %20, %22
  store i32 %25, i32* %7, align 4, !tbaa !14
  %26 = add nsw i32 %19, %22
  store i32 %26, i32* %8, align 4, !tbaa !15
  %27 = icmp slt i32 %22, %18
  %28 = select i1 %27, i32* %21, i32* %9
  %29 = load i32, i32* %28, align 4, !tbaa !20
  store i32 %29, i32* %9, align 4, !tbaa !16
  store i32 %4, i32* %10, align 8, !tbaa !17
  br label %30

30:                                               ; preds = %17, %24, %1
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @_Z5mergeii(i32 %0, i32 %1) local_unnamed_addr #6 {
  %3 = add nsw i32 %1, %0
  ret i32 %3
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local void @_Z5clearv() local_unnamed_addr #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi %struct.treap* [ getelementptr inbounds ([888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 0), %0 ], [ %54, %1 ]
  %3 = bitcast %struct.treap* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i64 32, i1 false)
  %4 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 1
  %5 = bitcast %struct.treap* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %5, i8 0, i64 32, i1 false)
  %6 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 2
  %7 = bitcast %struct.treap* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %7, i8 0, i64 32, i1 false)
  %8 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 3
  %9 = bitcast %struct.treap* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %9, i8 0, i64 32, i1 false)
  %10 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 4
  %11 = bitcast %struct.treap* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %11, i8 0, i64 32, i1 false)
  %12 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 5
  %13 = bitcast %struct.treap* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %13, i8 0, i64 32, i1 false)
  %14 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 6
  %15 = bitcast %struct.treap* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %15, i8 0, i64 32, i1 false)
  %16 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 7
  %17 = bitcast %struct.treap* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %17, i8 0, i64 32, i1 false)
  %18 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 8
  %19 = bitcast %struct.treap* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %19, i8 0, i64 32, i1 false)
  %20 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 9
  %21 = bitcast %struct.treap* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %21, i8 0, i64 32, i1 false)
  %22 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 10
  %23 = bitcast %struct.treap* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %23, i8 0, i64 32, i1 false)
  %24 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 11
  %25 = bitcast %struct.treap* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %25, i8 0, i64 32, i1 false)
  %26 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 12
  %27 = bitcast %struct.treap* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %27, i8 0, i64 32, i1 false)
  %28 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 13
  %29 = bitcast %struct.treap* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %29, i8 0, i64 32, i1 false)
  %30 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 14
  %31 = bitcast %struct.treap* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %31, i8 0, i64 32, i1 false)
  %32 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 15
  %33 = bitcast %struct.treap* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %33, i8 0, i64 32, i1 false)
  %34 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 16
  %35 = bitcast %struct.treap* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %35, i8 0, i64 32, i1 false)
  %36 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 17
  %37 = bitcast %struct.treap* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %37, i8 0, i64 32, i1 false)
  %38 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 18
  %39 = bitcast %struct.treap* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %39, i8 0, i64 32, i1 false)
  %40 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 19
  %41 = bitcast %struct.treap* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %41, i8 0, i64 32, i1 false)
  %42 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 20
  %43 = bitcast %struct.treap* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %43, i8 0, i64 32, i1 false)
  %44 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 21
  %45 = bitcast %struct.treap* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %45, i8 0, i64 32, i1 false)
  %46 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 22
  %47 = bitcast %struct.treap* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %47, i8 0, i64 32, i1 false)
  %48 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 23
  %49 = bitcast %struct.treap* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %49, i8 0, i64 32, i1 false)
  %50 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 24
  %51 = bitcast %struct.treap* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %51, i8 0, i64 32, i1 false)
  %52 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 25
  %53 = bitcast %struct.treap* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %53, i8 0, i64 32, i1 false)
  %54 = getelementptr inbounds %struct.treap, %struct.treap* %2, i64 26
  %55 = icmp eq %struct.treap* %54, getelementptr inbounds ([888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 1, i64 0)
  br i1 %55, label %56, label %1, !llvm.loop !21

56:                                               ; preds = %1
  store i32 0, i32* @n, align 4, !tbaa !20
  store i32 0, i32* @d, align 4, !tbaa !20
  store i32 0, i32* @tot, align 4, !tbaa !20
  store i32 0, i32* @rt, align 4, !tbaa !20
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @_Z5splitii(i32 %0, i32 %1) local_unnamed_addr #6 {
  %3 = icmp eq i32 %0, 0
  %4 = icmp sgt i32 %0, %1
  %5 = select i1 %4, i32 %0, i32 %1
  %6 = select i1 %3, i32 0, i32 %5
  ret i32 %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @_Z5getpiii(i32 %0, i32 %1) local_unnamed_addr #6 {
  %3 = icmp slt i32 %0, %1
  %4 = select i1 %3, i32 %0, i32 %1
  ret i32 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z3addi(i32 %0) local_unnamed_addr #4 {
  %2 = load i32, i32* @rt, align 4, !tbaa !20
  %3 = icmp slt i32 %2, %0
  %4 = select i1 %3, i32 %2, i32 %0
  %5 = load i32, i32* @rdx, align 4, !tbaa !20
  %6 = mul nsw i32 %5, 16807
  %7 = add nsw i32 %6, 1
  %8 = srem i32 %7, 2147483647
  store i32 %8, i32* @rdx, align 4, !tbaa !20
  %9 = load i32, i32* @tot, align 4, !tbaa !20
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* @tot, align 4, !tbaa !20
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %11, i32 0
  store i32 %0, i32* %12, align 16, !tbaa !11
  %13 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %11, i32 1
  store i32 1, i32* %13, align 4, !tbaa !14
  %14 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %11, i32 2
  store i32 0, i32* %14, align 8, !tbaa !18
  %15 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %11, i32 3
  store i32 0, i32* %15, align 4, !tbaa !19
  %16 = add nsw i32 %4, %2
  store i32 %16, i32* @rt, align 4, !tbaa !20
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @_Z5queryii(i32 %0, i32 %1) local_unnamed_addr #6 {
  %3 = add nsw i32 %1, %0
  ret i32 %3
}

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #9 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !23
  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %4)
  %6 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) @n)
  %7 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %6, i32* nonnull align 4 dereferenceable(4) @d)
  %8 = bitcast i32* %1 to i8*
  %9 = load i32, i32* @n, align 4, !tbaa !20
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %15, label %37

11:                                               ; preds = %15
  %12 = bitcast i32* %2 to i8*
  %13 = bitcast i32* %3 to i8*
  %14 = icmp sgt i32 %35, 0
  br i1 %14, label %38, label %37

15:                                               ; preds = %0, %15
  %16 = phi i32 [ %34, %15 ], [ 0, %0 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #16
  %17 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %18 = load i32, i32* %1, align 4, !tbaa !20
  %19 = load i32, i32* @rt, align 4, !tbaa !20
  %20 = icmp slt i32 %19, %18
  %21 = select i1 %20, i32 %19, i32 %18
  %22 = load i32, i32* @rdx, align 4, !tbaa !20
  %23 = mul nsw i32 %22, 16807
  %24 = add nsw i32 %23, 1
  %25 = srem i32 %24, 2147483647
  store i32 %25, i32* @rdx, align 4, !tbaa !20
  %26 = load i32, i32* @tot, align 4, !tbaa !20
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* @tot, align 4, !tbaa !20
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %28, i32 0
  store i32 %18, i32* %29, align 16, !tbaa !11
  %30 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %28, i32 1
  store i32 1, i32* %30, align 4, !tbaa !14
  %31 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %28, i32 2
  store i32 0, i32* %31, align 8, !tbaa !18
  %32 = getelementptr inbounds [888888 x %struct.treap], [888888 x %struct.treap]* @t, i64 0, i64 %28, i32 3
  store i32 0, i32* %32, align 4, !tbaa !19
  %33 = add nsw i32 %21, %19
  store i32 %33, i32* @rt, align 4, !tbaa !20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #16
  %34 = add nuw nsw i32 %16, 1
  %35 = load i32, i32* @n, align 4, !tbaa !20
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %15, label %11, !llvm.loop !24

37:                                               ; preds = %71, %0, %11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(28444416) bitcast ([888888 x %struct.treap]* @t to i8*), i8 0, i64 28444416, i1 false)
  store i32 0, i32* @n, align 4, !tbaa !20
  store i32 0, i32* @d, align 4, !tbaa !20
  store i32 0, i32* @tot, align 4, !tbaa !20
  store i32 0, i32* @rt, align 4, !tbaa !20
  ret i32 0

38:                                               ; preds = %11, %71
  %39 = phi i32 [ %75, %71 ], [ 0, %11 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #16
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #16
  %40 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %2)
  %41 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %40, i32* nonnull align 4 dereferenceable(4) %3)
  %42 = load i32, i32* %2, align 4, !tbaa !20
  %43 = load i32, i32* %3, align 4, !tbaa !20
  %44 = add nsw i32 %43, %42
  %45 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %44)
  %46 = bitcast %"class.std::basic_ostream"* %45 to i8**
  %47 = load i8*, i8** %46, align 8, !tbaa !25
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::basic_ostream"* %45 to i8*
  %52 = add nsw i64 %50, 240
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = bitcast i8* %53 to %"class.std::ctype"**
  %55 = load %"class.std::ctype"*, %"class.std::ctype"** %54, align 8, !tbaa !27
  %56 = icmp eq %"class.std::ctype"* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %38
  call void @_ZSt16__throw_bad_castv() #17
  unreachable

58:                                               ; preds = %38
  %59 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %55, i64 0, i32 8
  %60 = load i8, i8* %59, align 8, !tbaa !30
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %55, i64 0, i32 9, i64 10
  %64 = load i8, i8* %63, align 1, !tbaa !32
  br label %71

65:                                               ; preds = %58
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %55)
  %66 = bitcast %"class.std::ctype"* %55 to i8 (%"class.std::ctype"*, i8)***
  %67 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %66, align 8, !tbaa !25
  %68 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %67, i64 6
  %69 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %68, align 8
  %70 = call signext i8 %69(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %55, i8 signext 10)
  br label %71

71:                                               ; preds = %62, %65
  %72 = phi i8 [ %64, %62 ], [ %70, %65 ]
  %73 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %45, i8 signext %72)
  %74 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %73)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #16
  %75 = add nuw nsw i32 %39, 1
  %76 = load i32, i32* @n, align 4, !tbaa !20
  %77 = icmp slt i32 %75, %76
  br i1 %77, label %38, label %37, !llvm.loop !33
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #10 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #16
  tail call void @_ZSt9terminatev() #15
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %1) local_unnamed_addr #11 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"struct.std::_Rb_tree_node"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"struct.std::_Rb_tree_node"* [ %11, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 3
  %7 = bitcast %"struct.std::_Rb_tree_node_base"** %6 to %"struct.std::_Rb_tree_node"**
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8, !tbaa !34
  tail call void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %8)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 2
  %10 = bitcast %"struct.std::_Rb_tree_node_base"** %9 to %"struct.std::_Rb_tree_node"**
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8, !tbaa !35
  %12 = bitcast %"struct.std::_Rb_tree_node"* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %12) #16
  %13 = icmp eq %"struct.std::_Rb_tree_node"* %11, null
  br i1 %13, label %14, label %4, !llvm.loop !36

14:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #12

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #13

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_Airports.cpp() #14 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #16
  store i32 0, i32* getelementptr inbounds (%"class.std::multiset", %"class.std::multiset"* @st, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0), align 8, !tbaa !37
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::multiset", %"class.std::multiset"* @st, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1), align 8, !tbaa !3
  store i8* bitcast (i32* getelementptr inbounds (%"class.std::multiset", %"class.std::multiset"* @st, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to i8*), i8** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::multiset", %"class.std::multiset"* @st, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2) to i8**), align 8, !tbaa !38
  store i8* bitcast (i32* getelementptr inbounds (%"class.std::multiset", %"class.std::multiset"* @st, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to i8*), i8** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::multiset", %"class.std::multiset"* @st, i64 0, i32 0, i32 0, i32 1, i32 0, i32 3) to i8**), align 8, !tbaa !39
  store i64 0, i64* getelementptr inbounds (%"class.std::multiset", %"class.std::multiset"* @st, i64 0, i32 0, i32 0, i32 1, i32 1), align 8, !tbaa !40
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::multiset"*)* @_ZNSt8multisetIiSt4lessIiESaIiEED2Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::multiset", %"class.std::multiset"* @st, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i8* nonnull @__dso_handle) #16
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #6 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #9 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noinline noreturn nounwind }
attributes #11 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind }
attributes #17 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSSt15_Rb_tree_header", !5, i64 0, !10, i64 32}
!5 = !{!"_ZTSSt18_Rb_tree_node_base", !6, i64 0, !9, i64 8, !9, i64 16, !9, i64 24}
!6 = !{!"_ZTSSt14_Rb_tree_color", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"any pointer", !7, i64 0}
!10 = !{!"long", !7, i64 0}
!11 = !{!12, !13, i64 0}
!12 = !{!"_ZTS5treap", !13, i64 0, !13, i64 4, !13, i64 8, !13, i64 12, !13, i64 16, !13, i64 20, !13, i64 24, !13, i64 28}
!13 = !{!"int", !7, i64 0}
!14 = !{!12, !13, i64 4}
!15 = !{!12, !13, i64 28}
!16 = !{!12, !13, i64 20}
!17 = !{!12, !13, i64 24}
!18 = !{!12, !13, i64 8}
!19 = !{!12, !13, i64 12}
!20 = !{!13, !13, i64 0}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.mustprogress"}
!23 = !{!9, !9, i64 0}
!24 = distinct !{!24, !22}
!25 = !{!26, !26, i64 0}
!26 = !{!"vtable pointer", !8, i64 0}
!27 = !{!28, !9, i64 240}
!28 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !9, i64 216, !7, i64 224, !29, i64 225, !9, i64 232, !9, i64 240, !9, i64 248, !9, i64 256}
!29 = !{!"bool", !7, i64 0}
!30 = !{!31, !7, i64 56}
!31 = !{!"_ZTSSt5ctypeIcE", !9, i64 16, !29, i64 24, !9, i64 32, !9, i64 40, !9, i64 48, !7, i64 56, !7, i64 57, !7, i64 313, !7, i64 569}
!32 = !{!7, !7, i64 0}
!33 = distinct !{!33, !22}
!34 = !{!5, !9, i64 24}
!35 = !{!5, !9, i64 16}
!36 = distinct !{!36, !22}
!37 = !{!4, !6, i64 0}
!38 = !{!4, !9, i64 16}
!39 = !{!4, !9, i64 24}
!40 = !{!4, !10, i64 32}
