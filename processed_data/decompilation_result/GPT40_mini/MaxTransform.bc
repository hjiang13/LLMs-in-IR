; ModuleID = './MaxTransform.cpp'
source_filename = "./MaxTransform.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@used = dso_local local_unnamed_addr global [1100000 x i32] zeroinitializer, align 16
@sum = dso_local local_unnamed_addr global [1100000 x i32] zeroinitializer, align 16
@fa = dso_local local_unnamed_addr global [1100000 x i32] zeroinitializer, align 16
@f = dso_local local_unnamed_addr global [1100000 x i32] zeroinitializer, align 16
@now = dso_local local_unnamed_addr global i32 0, align 4
@ans = dso_local local_unnamed_addr global i32 0, align 4
@T = dso_local local_unnamed_addr global i32 0, align 4
@cc = dso_local local_unnamed_addr global i32 0, align 4
@V = dso_local global [1100000 x %"class.std::vector"] zeroinitializer, align 16
@n = dso_local global i32 0, align 4
@a = dso_local global [1100000 x i32] zeroinitializer, align 16
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_MaxTransform.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor(i8* nocapture readnone %0) #3 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  br label %2

2:                                                ; preds = %10, %1
  %3 = phi %"class.std::vector"* [ getelementptr inbounds ([1100000 x %"class.std::vector"], [1100000 x %"class.std::vector"]* @V, i64 1, i64 0), %1 ], [ %4, %10 ]
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 -1
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8, !tbaa !3
  %7 = icmp eq i32* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast i32* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #15
  br label %10

10:                                               ; preds = %2, %8
  %11 = icmp eq %"class.std::vector"* %4, getelementptr inbounds ([1100000 x %"class.std::vector"], [1100000 x %"class.std::vector"]* @V, i64 0, i64 0)
  br i1 %11, label %12, label %2

12:                                               ; preds = %10
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z3addi(i32 %0) local_unnamed_addr #4 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @used, i64 0, i64 %2
  store i32 1, i32* %3, align 4, !tbaa !8
  %4 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @sum, i64 0, i64 %2
  store i32 1, i32* %4, align 4, !tbaa !8
  %5 = add nsw i32 %0, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @used, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4, !tbaa !8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %1
  %11 = load i32, i32* @now, align 4, !tbaa !8
  %12 = add nsw i32 %11, 1000000007
  %13 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @f, i64 0, i64 %6
  %14 = load i32, i32* %13, align 4, !tbaa !8
  %15 = sub i32 %12, %14
  %16 = srem i32 %15, 1000000007
  store i32 %16, i32* @now, align 4, !tbaa !8
  %17 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @f, i64 0, i64 %2
  %18 = load i32, i32* %17, align 4, !tbaa !8
  %19 = add nsw i32 %18, %16
  %20 = srem i32 %19, 1000000007
  store i32 %20, i32* %17, align 4, !tbaa !8
  %21 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @fa, i64 0, i64 %2
  store i32 %0, i32* %21, align 4, !tbaa !8
  br label %22

22:                                               ; preds = %10, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z5mergeii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = sext i32 %0 to i64
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @sum, i64 0, i64 %3
  %6 = load i32, i32* %5, align 4, !tbaa !8
  %7 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @sum, i64 0, i64 %4
  %8 = load i32, i32* %7, align 4, !tbaa !8
  %9 = add nsw i32 %8, %6
  %10 = srem i32 %9, 1000000007
  store i32 %10, i32* %5, align 4, !tbaa !8
  store i32 %6, i32* %7, align 4, !tbaa !8
  %11 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @fa, i64 0, i64 %4
  store i32 %0, i32* %11, align 4, !tbaa !8
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local i32 @_Z1gi(i32 %0) local_unnamed_addr #5 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @used, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4, !tbaa !8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @sum, i64 0, i64 %2
  %7 = load i32, i32* %6, align 4, !tbaa !8
  br i1 %5, label %8, label %10

8:                                                ; preds = %1
  %9 = tail call i32 @_Z1gi(i32 %7)
  store i32 1, i32* %3, align 4, !tbaa !8
  store i32 %9, i32* %6, align 4, !tbaa !8
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ %7, %1 ]
  ret i32 %11
}

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #6 personality i32 (...)* @__gxx_personality_v0 {
  %1 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) @n)
  %2 = load i32, i32* @n, align 4, !tbaa !8
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %51

4:                                                ; preds = %0
  %5 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 0)
  %6 = bitcast %"class.std::basic_ostream"* %5 to i8**
  %7 = load i8*, i8** %6, align 8, !tbaa !10
  %8 = getelementptr i8, i8* %7, i64 -24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::basic_ostream"* %5 to i8*
  %12 = add nsw i64 %10, 240
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  %14 = bitcast i8* %13 to %"class.std::ctype"**
  %15 = load %"class.std::ctype"*, %"class.std::ctype"** %14, align 8, !tbaa !12
  %16 = icmp eq %"class.std::ctype"* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  tail call void @_ZSt16__throw_bad_castv() #16
  unreachable

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %15, i64 0, i32 8
  %20 = load i8, i8* %19, align 8, !tbaa !15
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %15, i64 0, i32 9, i64 10
  %24 = load i8, i8* %23, align 1, !tbaa !17
  br label %31

25:                                               ; preds = %18
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %15)
  %26 = bitcast %"class.std::ctype"* %15 to i8 (%"class.std::ctype"*, i8)***
  %27 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %26, align 8, !tbaa !10
  %28 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %27, i64 6
  %29 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %28, align 8
  %30 = tail call signext i8 %29(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %15, i8 signext 10)
  br label %31

31:                                               ; preds = %22, %25
  %32 = phi i8 [ %24, %22 ], [ %30, %25 ]
  %33 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %5, i8 signext %32)
  br label %158

34:                                               ; preds = %114
  %35 = icmp sgt i32 %116, 0
  br i1 %35, label %36, label %119

36:                                               ; preds = %34
  %37 = zext i32 %116 to i64
  %38 = load i32, i32* getelementptr ([1100000 x i32], [1100000 x i32]* @used, i64 0, i64 -1), align 4, !tbaa !8
  %39 = icmp eq i32 %38, 0
  store i32 1, i32* getelementptr inbounds ([1100000 x i32], [1100000 x i32]* @used, i64 0, i64 0), align 16, !tbaa !8
  store i32 1, i32* getelementptr inbounds ([1100000 x i32], [1100000 x i32]* @sum, i64 0, i64 0), align 16, !tbaa !8
  br i1 %39, label %40, label %49

40:                                               ; preds = %36
  %41 = load i32, i32* @now, align 4, !tbaa !8
  %42 = add nsw i32 %41, 1000000007
  %43 = load i32, i32* getelementptr inbounds ([1100000 x i32], [1100000 x i32]* @f, i64 0, i64 -1), align 4, !tbaa !8
  %44 = sub i32 %42, %43
  %45 = srem i32 %44, 1000000007
  store i32 %45, i32* @now, align 4, !tbaa !8
  %46 = load i32, i32* getelementptr inbounds ([1100000 x i32], [1100000 x i32]* @f, i64 0, i64 0), align 16, !tbaa !8
  %47 = add nsw i32 %46, %45
  %48 = srem i32 %47, 1000000007
  store i32 %48, i32* getelementptr inbounds ([1100000 x i32], [1100000 x i32]* @f, i64 0, i64 0), align 16, !tbaa !8
  store i32 0, i32* getelementptr inbounds ([1100000 x i32], [1100000 x i32]* @fa, i64 0, i64 0), align 16, !tbaa !8
  br label %49

49:                                               ; preds = %40, %36
  %50 = icmp eq i32 %116, 1
  br i1 %50, label %119, label %152

51:                                               ; preds = %0, %114
  %52 = phi i64 [ %115, %114 ], [ 0, %0 ]
  %53 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @a, i64 0, i64 %52
  %54 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %53)
  %55 = getelementptr inbounds [1100000 x %"class.std::vector"], [1100000 x %"class.std::vector"]* @V, i64 0, i64 %52
  %56 = getelementptr inbounds [1100000 x %"class.std::vector"], [1100000 x %"class.std::vector"]* @V, i64 0, i64 %52, i32 0, i32 0, i32 0, i32 1
  %57 = load i32*, i32** %56, align 8, !tbaa !18
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8, !tbaa !3
  %60 = ptrtoint i32* %57 to i64
  %61 = ptrtoint i32* %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 2
  %64 = icmp ult i64 %63, 3
  br i1 %64, label %65, label %68

65:                                               ; preds = %51
  %66 = sub nuw nsw i64 3, %63
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector"* nonnull align 8 dereferenceable(24) %55, i64 %66)
  %67 = load i32*, i32** %58, align 8, !tbaa !3
  br label %74

68:                                               ; preds = %51
  %69 = icmp eq i64 %62, 12
  br i1 %69, label %74, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds i32, i32* %59, i64 3
  %72 = icmp eq i32* %57, %71
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  store i32* %71, i32** %56, align 8, !tbaa !18
  br label %74

74:                                               ; preds = %65, %68, %70, %73
  %75 = phi i32* [ %67, %65 ], [ %59, %68 ], [ %59, %70 ], [ %59, %73 ]
  store i32 0, i32* %75, align 4, !tbaa !8
  %76 = getelementptr inbounds i32, i32* %75, i64 1
  store i32 0, i32* %76, align 4, !tbaa !8
  %77 = load i32, i32* %53, align 4, !tbaa !8
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [1100000 x %"class.std::vector"], [1100000 x %"class.std::vector"]* @V, i64 0, i64 %78, i32 0, i32 0, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8, !tbaa !3
  %81 = load i32, i32* %80, align 4, !tbaa !8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %103

83:                                               ; preds = %74
  store i32 1, i32* %80, align 4, !tbaa !8
  %84 = getelementptr inbounds i32, i32* %80, i64 1
  store i32 %77, i32* %84, align 4, !tbaa !8
  %85 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @used, i64 0, i64 %78
  store i32 1, i32* %85, align 4, !tbaa !8
  %86 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @sum, i64 0, i64 %78
  store i32 1, i32* %86, align 4, !tbaa !8
  %87 = add nsw i32 %77, -1
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @used, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4, !tbaa !8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %114

92:                                               ; preds = %83
  %93 = load i32, i32* @now, align 4, !tbaa !8
  %94 = add nsw i32 %93, 1000000007
  %95 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @f, i64 0, i64 %88
  %96 = load i32, i32* %95, align 4, !tbaa !8
  %97 = sub i32 %94, %96
  %98 = srem i32 %97, 1000000007
  store i32 %98, i32* @now, align 4, !tbaa !8
  %99 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @f, i64 0, i64 %78
  %100 = load i32, i32* %99, align 4, !tbaa !8
  %101 = add nsw i32 %100, %98
  %102 = srem i32 %101, 1000000007
  store i32 %102, i32* %99, align 4, !tbaa !8
  br label %111

103:                                              ; preds = %74
  %104 = sext i32 %81 to i64
  %105 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @sum, i64 0, i64 %104
  %106 = load i32, i32* %105, align 4, !tbaa !8
  %107 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @sum, i64 0, i64 %78
  %108 = load i32, i32* %107, align 4, !tbaa !8
  %109 = add nsw i32 %108, %106
  %110 = srem i32 %109, 1000000007
  store i32 %110, i32* %105, align 4, !tbaa !8
  store i32 %106, i32* %107, align 4, !tbaa !8
  br label %111

111:                                              ; preds = %103, %92
  %112 = phi i32 [ %77, %92 ], [ %81, %103 ]
  %113 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @fa, i64 0, i64 %78
  store i32 %112, i32* %113, align 4, !tbaa !8
  br label %114

114:                                              ; preds = %111, %83
  %115 = add nuw nsw i64 %52, 1
  %116 = load i32, i32* @n, align 4, !tbaa !8
  %117 = sext i32 %116 to i64
  %118 = icmp slt i64 %115, %117
  br i1 %118, label %51, label %34, !llvm.loop !19

119:                                              ; preds = %49, %152, %34
  %120 = load i32, i32* @ans, align 4, !tbaa !8
  %121 = add nsw i32 %120, 1000000007
  %122 = srem i32 %121, 1000000007
  %123 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %122)
  %124 = bitcast %"class.std::basic_ostream"* %123 to i8**
  %125 = load i8*, i8** %124, align 8, !tbaa !10
  %126 = getelementptr i8, i8* %125, i64 -24
  %127 = bitcast i8* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::basic_ostream"* %123 to i8*
  %130 = add nsw i64 %128, 240
  %131 = getelementptr inbounds i8, i8* %129, i64 %130
  %132 = bitcast i8* %131 to %"class.std::ctype"**
  %133 = load %"class.std::ctype"*, %"class.std::ctype"** %132, align 8, !tbaa !12
  %134 = icmp eq %"class.std::ctype"* %133, null
  br i1 %134, label %135, label %136

135:                                              ; preds = %119
  tail call void @_ZSt16__throw_bad_castv() #16
  unreachable

136:                                              ; preds = %119
  %137 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %133, i64 0, i32 8
  %138 = load i8, i8* %137, align 8, !tbaa !15
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %133, i64 0, i32 9, i64 10
  %142 = load i8, i8* %141, align 1, !tbaa !17
  br label %149

143:                                              ; preds = %136
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %133)
  %144 = bitcast %"class.std::ctype"* %133 to i8 (%"class.std::ctype"*, i8)***
  %145 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %144, align 8, !tbaa !10
  %146 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %145, i64 6
  %147 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %146, align 8
  %148 = tail call signext i8 %147(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %133, i8 signext 10)
  br label %149

149:                                              ; preds = %140, %143
  %150 = phi i8 [ %142, %140 ], [ %148, %143 ]
  %151 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %123, i8 signext %150)
  br label %158

152:                                              ; preds = %49, %152
  %153 = phi i64 [ %156, %152 ], [ 1, %49 ]
  %154 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @used, i64 0, i64 %153
  store i32 1, i32* %154, align 4, !tbaa !8
  %155 = getelementptr inbounds [1100000 x i32], [1100000 x i32]* @sum, i64 0, i64 %153
  store i32 1, i32* %155, align 4, !tbaa !8
  %156 = add nuw nsw i64 %153, 1
  %157 = icmp eq i64 %156, %37
  br i1 %157, label %119, label %152, !llvm.loop !21

158:                                              ; preds = %149, %31
  %159 = phi %"class.std::basic_ostream"* [ %151, %149 ], [ %33, %31 ]
  %160 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %159)
  ret i32 0
}

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #8

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %1) local_unnamed_addr #9 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %65, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8, !tbaa !18
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8, !tbaa !3
  %9 = ptrtoint i32* %6 to i64
  %10 = ptrtoint i32* %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 2
  %13 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32*, i32** %13, align 8, !tbaa !23
  %15 = ptrtoint i32* %14 to i64
  %16 = sub i64 %15, %9
  %17 = ashr exact i64 %16, 2
  %18 = icmp sgt i64 %11, -1
  tail call void @llvm.assume(i1 %18)
  %19 = xor i64 %12, 2305843009213693951
  %20 = icmp ule i64 %17, %19
  tail call void @llvm.assume(i1 %20)
  %21 = icmp ult i64 %17, %1
  br i1 %21, label %26, label %22

22:                                               ; preds = %4
  %23 = bitcast i32* %6 to i8*
  %24 = shl nuw i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 %24, i1 false)
  %25 = getelementptr i32, i32* %6, i64 %1
  store i32* %25, i32** %5, align 8, !tbaa !18
  br label %65

26:                                               ; preds = %4
  %27 = icmp ult i64 %19, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #16
  unreachable

29:                                               ; preds = %26
  %30 = icmp ult i64 %12, %1
  %31 = select i1 %30, i64 %1, i64 %12
  %32 = add i64 %31, %12
  %33 = icmp ult i64 %32, %12
  %34 = icmp ugt i64 %32, 2305843009213693951
  %35 = or i1 %33, %34
  %36 = select i1 %35, i64 2305843009213693951, i64 %32
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %29
  %39 = shl nuw nsw i64 %36, 2
  %40 = tail call noalias nonnull i8* @_Znwm(i64 %39) #17
  %41 = bitcast i8* %40 to i32*
  %42 = load i32*, i32** %7, align 8, !tbaa !3
  %43 = load i32*, i32** %5, align 8, !tbaa !18
  %44 = ptrtoint i32* %43 to i64
  %45 = ptrtoint i32* %42 to i64
  %46 = sub i64 %44, %45
  br label %47

47:                                               ; preds = %38, %29
  %48 = phi i64 [ %46, %38 ], [ %11, %29 ]
  %49 = phi i32* [ %42, %38 ], [ %8, %29 ]
  %50 = phi i32* [ %41, %38 ], [ null, %29 ]
  %51 = getelementptr inbounds i32, i32* %50, i64 %12
  %52 = bitcast i32* %51 to i8*
  %53 = shl nuw i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 %53, i1 false)
  %54 = icmp sgt i64 %48, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %47
  %56 = bitcast i32* %50 to i8*
  %57 = bitcast i32* %49 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 %48, i1 false) #15
  br label %58

58:                                               ; preds = %47, %55
  %59 = icmp eq i32* %49, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* nonnull %61) #15
  br label %62

62:                                               ; preds = %58, %60
  store i32* %50, i32** %7, align 8, !tbaa !3
  %63 = getelementptr inbounds i32, i32* %51, i64 %1
  store i32* %63, i32** %5, align 8, !tbaa !18
  %64 = getelementptr inbounds i32, i32* %50, i64 %36
  store i32* %64, i32** %13, align 8, !tbaa !23
  br label %65

65:                                               ; preds = %22, %62, %2
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #11

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_MaxTransform.cpp() #12 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #15
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(26400000) bitcast ([1100000 x %"class.std::vector"]* @V to i8*), i8 0, i64 26400000, i1 false) #15
  %2 = tail call i32 @__cxa_atexit(void (i8*)* nonnull @__cxx_global_array_dtor, i8* null, i8* nonnull @__dso_handle) #15
  ret void
}

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #13

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #14

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #12 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nounwind }
attributes #16 = { noreturn }
attributes #17 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !9, i64 0}
!9 = !{!"int", !6, i64 0}
!10 = !{!11, !11, i64 0}
!11 = !{!"vtable pointer", !7, i64 0}
!12 = !{!13, !5, i64 240}
!13 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !5, i64 216, !6, i64 224, !14, i64 225, !5, i64 232, !5, i64 240, !5, i64 248, !5, i64 256}
!14 = !{!"bool", !6, i64 0}
!15 = !{!16, !6, i64 56}
!16 = !{!"_ZTSSt5ctypeIcE", !5, i64 16, !14, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !6, i64 56, !6, i64 57, !6, i64 313, !6, i64 569}
!17 = !{!6, !6, i64 0}
!18 = !{!4, !5, i64 8}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.mustprogress"}
!21 = distinct !{!21, !20, !22}
!22 = !{!"llvm.loop.peeled.count", i32 1}
!23 = !{!4, !5, i64 16}
