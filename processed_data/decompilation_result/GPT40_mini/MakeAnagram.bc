; ModuleID = './MakeAnagram.cpp'
source_filename = "./MakeAnagram.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [30 x i8] c"../input_files/MakeAnagram\\00\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_MakeAnagram.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #3 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::__cxx11::basic_string", align 8
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca [26 x i32], align 16
  %4 = alloca [26 x i32], align 16
  %5 = bitcast %"class.std::__cxx11::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %1 to %union.anon**
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !3
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  store i64 0, i64* %8, align 8, !tbaa !8
  %9 = bitcast %union.anon* %6 to i8*
  store i8 0, i8* %9, align 8, !tbaa !11
  %10 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %2 to %union.anon**
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !3
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  store i64 0, i64* %13, align 8, !tbaa !8
  %14 = bitcast %union.anon* %11 to i8*
  store i8 0, i8* %14, align 8, !tbaa !11
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !12
  %16 = invoke %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %15)
          to label %17 unwind label %89

17:                                               ; preds = %0
  %18 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8, !tbaa !13
  %19 = getelementptr i8, i8* %18, i64 -24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i64 %21, 240
  %23 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %22
  %24 = bitcast i8* %23 to %"class.std::ctype"**
  %25 = load %"class.std::ctype"*, %"class.std::ctype"** %24, align 8, !tbaa !15
  %26 = icmp eq %"class.std::ctype"* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  invoke void @_ZSt16__throw_bad_castv() #12
          to label %28 unwind label %89

28:                                               ; preds = %27
  unreachable

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %25, i64 0, i32 8
  %31 = load i8, i8* %30, align 8, !tbaa !18
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %25, i64 0, i32 9, i64 10
  %35 = load i8, i8* %34, align 1, !tbaa !11
  br label %43

36:                                               ; preds = %29
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %25)
          to label %37 unwind label %89

37:                                               ; preds = %36
  %38 = bitcast %"class.std::ctype"* %25 to i8 (%"class.std::ctype"*, i8)***
  %39 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %38, align 8, !tbaa !13
  %40 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %39, i64 6
  %41 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %40, align 8
  %42 = invoke signext i8 %41(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %25, i8 signext 10)
          to label %43 unwind label %89

43:                                               ; preds = %37, %33
  %44 = phi i8 [ %35, %33 ], [ %42, %37 ]
  %45 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %1, i8 signext %44)
          to label %46 unwind label %89

46:                                               ; preds = %43
  %47 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8, !tbaa !13
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = add nsw i64 %50, 240
  %52 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %51
  %53 = bitcast i8* %52 to %"class.std::ctype"**
  %54 = load %"class.std::ctype"*, %"class.std::ctype"** %53, align 8, !tbaa !15
  %55 = icmp eq %"class.std::ctype"* %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %46
  invoke void @_ZSt16__throw_bad_castv() #12
          to label %57 unwind label %89

57:                                               ; preds = %56
  unreachable

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %54, i64 0, i32 8
  %60 = load i8, i8* %59, align 8, !tbaa !18
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %54, i64 0, i32 9, i64 10
  %64 = load i8, i8* %63, align 1, !tbaa !11
  br label %72

65:                                               ; preds = %58
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %54)
          to label %66 unwind label %89

66:                                               ; preds = %65
  %67 = bitcast %"class.std::ctype"* %54 to i8 (%"class.std::ctype"*, i8)***
  %68 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %67, align 8, !tbaa !13
  %69 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %68, i64 6
  %70 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %69, align 8
  %71 = invoke signext i8 %70(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %54, i8 signext 10)
          to label %72 unwind label %89

72:                                               ; preds = %66, %62
  %73 = phi i8 [ %64, %62 ], [ %71, %66 ]
  %74 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2, i8 signext %73)
          to label %75 unwind label %89

75:                                               ; preds = %72
  %76 = bitcast [26 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %76) #11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(104) %76, i8 0, i64 104, i1 false)
  %77 = bitcast [26 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %77) #11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(104) %77, i8 0, i64 104, i1 false)
  %78 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8, !tbaa !20
  %80 = load i64, i64* %8, align 8, !tbaa !8
  %81 = getelementptr inbounds i8, i8* %79, i64 %80
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %83, label %91

83:                                               ; preds = %104, %75
  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8, !tbaa !20
  %86 = load i64, i64* %13, align 8, !tbaa !8
  %87 = getelementptr inbounds i8, i8* %85, i64 %86
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %142, label %308

89:                                               ; preds = %72, %66, %65, %56, %43, %37, %36, %27, %0
  %90 = landingpad { i8*, i32 }
          cleanup
  br label %368

91:                                               ; preds = %75, %104
  %92 = phi i8* [ %105, %104 ], [ %79, %75 ]
  %93 = load i8, i8* %92, align 1, !tbaa !11
  %94 = sext i8 %93 to i32
  %95 = call i32 @isalpha(i32 %94) #13
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %104, label %97

97:                                               ; preds = %91
  %98 = call i32 @tolower(i32 %94) #13
  %99 = add nsw i32 %98, -97
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4, !tbaa !21
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %101, align 4, !tbaa !21
  br label %104

104:                                              ; preds = %97, %91
  %105 = getelementptr inbounds i8, i8* %92, i64 1
  %106 = icmp eq i8* %105, %81
  br i1 %106, label %83, label %91

107:                                              ; preds = %321
  %108 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 0
  %109 = load i32, i32* %108, align 16, !tbaa !21
  %110 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 1
  %111 = load i32, i32* %110, align 4, !tbaa !21
  %112 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 2
  %113 = load i32, i32* %112, align 8, !tbaa !21
  %114 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 3
  %115 = load i32, i32* %114, align 4, !tbaa !21
  %116 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 4
  %117 = load i32, i32* %116, align 16, !tbaa !21
  %118 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 5
  %119 = load i32, i32* %118, align 4, !tbaa !21
  %120 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 6
  %121 = load i32, i32* %120, align 8, !tbaa !21
  %122 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 7
  %123 = load i32, i32* %122, align 4, !tbaa !21
  %124 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 8
  %125 = load i32, i32* %124, align 16, !tbaa !21
  %126 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 9
  %127 = load i32, i32* %126, align 4, !tbaa !21
  %128 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 10
  %129 = load i32, i32* %128, align 8, !tbaa !21
  %130 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 11
  %131 = load i32, i32* %130, align 4, !tbaa !21
  %132 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 12
  %133 = load i32, i32* %132, align 16, !tbaa !21
  %134 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 13
  %135 = load i32, i32* %134, align 4, !tbaa !21
  %136 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 14
  %137 = load i32, i32* %136, align 8, !tbaa !21
  %138 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 15
  %139 = load i32, i32* %138, align 4, !tbaa !21
  %140 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 16
  %141 = load i32, i32* %140, align 16, !tbaa !21
  br label %142

142:                                              ; preds = %107, %83
  %143 = phi i32 [ %141, %107 ], [ 0, %83 ]
  %144 = phi i32 [ %139, %107 ], [ 0, %83 ]
  %145 = phi i32 [ %137, %107 ], [ 0, %83 ]
  %146 = phi i32 [ %135, %107 ], [ 0, %83 ]
  %147 = phi i32 [ %133, %107 ], [ 0, %83 ]
  %148 = phi i32 [ %131, %107 ], [ 0, %83 ]
  %149 = phi i32 [ %129, %107 ], [ 0, %83 ]
  %150 = phi i32 [ %127, %107 ], [ 0, %83 ]
  %151 = phi i32 [ %125, %107 ], [ 0, %83 ]
  %152 = phi i32 [ %123, %107 ], [ 0, %83 ]
  %153 = phi i32 [ %121, %107 ], [ 0, %83 ]
  %154 = phi i32 [ %119, %107 ], [ 0, %83 ]
  %155 = phi i32 [ %117, %107 ], [ 0, %83 ]
  %156 = phi i32 [ %115, %107 ], [ 0, %83 ]
  %157 = phi i32 [ %113, %107 ], [ 0, %83 ]
  %158 = phi i32 [ %111, %107 ], [ 0, %83 ]
  %159 = phi i32 [ %109, %107 ], [ 0, %83 ]
  %160 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 0
  %161 = load i32, i32* %160, align 16, !tbaa !21
  %162 = sub nsw i32 %161, %159
  %163 = call i32 @llvm.abs.i32(i32 %162, i1 true)
  %164 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 1
  %165 = load i32, i32* %164, align 4, !tbaa !21
  %166 = sub nsw i32 %165, %158
  %167 = call i32 @llvm.abs.i32(i32 %166, i1 true)
  %168 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 2
  %169 = load i32, i32* %168, align 8, !tbaa !21
  %170 = sub nsw i32 %169, %157
  %171 = call i32 @llvm.abs.i32(i32 %170, i1 true)
  %172 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 3
  %173 = load i32, i32* %172, align 4, !tbaa !21
  %174 = sub nsw i32 %173, %156
  %175 = call i32 @llvm.abs.i32(i32 %174, i1 true)
  %176 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 4
  %177 = load i32, i32* %176, align 16, !tbaa !21
  %178 = sub nsw i32 %177, %155
  %179 = call i32 @llvm.abs.i32(i32 %178, i1 true)
  %180 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 5
  %181 = load i32, i32* %180, align 4, !tbaa !21
  %182 = sub nsw i32 %181, %154
  %183 = call i32 @llvm.abs.i32(i32 %182, i1 true)
  %184 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 6
  %185 = load i32, i32* %184, align 8, !tbaa !21
  %186 = sub nsw i32 %185, %153
  %187 = call i32 @llvm.abs.i32(i32 %186, i1 true)
  %188 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 7
  %189 = load i32, i32* %188, align 4, !tbaa !21
  %190 = sub nsw i32 %189, %152
  %191 = call i32 @llvm.abs.i32(i32 %190, i1 true)
  %192 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 8
  %193 = load i32, i32* %192, align 16, !tbaa !21
  %194 = sub nsw i32 %193, %151
  %195 = call i32 @llvm.abs.i32(i32 %194, i1 true)
  %196 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 9
  %197 = load i32, i32* %196, align 4, !tbaa !21
  %198 = sub nsw i32 %197, %150
  %199 = call i32 @llvm.abs.i32(i32 %198, i1 true)
  %200 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 10
  %201 = load i32, i32* %200, align 8, !tbaa !21
  %202 = sub nsw i32 %201, %149
  %203 = call i32 @llvm.abs.i32(i32 %202, i1 true)
  %204 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 11
  %205 = load i32, i32* %204, align 4, !tbaa !21
  %206 = sub nsw i32 %205, %148
  %207 = call i32 @llvm.abs.i32(i32 %206, i1 true)
  %208 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 12
  %209 = load i32, i32* %208, align 16, !tbaa !21
  %210 = sub nsw i32 %209, %147
  %211 = call i32 @llvm.abs.i32(i32 %210, i1 true)
  %212 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 13
  %213 = load i32, i32* %212, align 4, !tbaa !21
  %214 = sub nsw i32 %213, %146
  %215 = call i32 @llvm.abs.i32(i32 %214, i1 true)
  %216 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 14
  %217 = load i32, i32* %216, align 8, !tbaa !21
  %218 = sub nsw i32 %217, %145
  %219 = call i32 @llvm.abs.i32(i32 %218, i1 true)
  %220 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 15
  %221 = load i32, i32* %220, align 4, !tbaa !21
  %222 = sub nsw i32 %221, %144
  %223 = call i32 @llvm.abs.i32(i32 %222, i1 true)
  %224 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 16
  %225 = load i32, i32* %224, align 16, !tbaa !21
  %226 = sub nsw i32 %225, %143
  %227 = call i32 @llvm.abs.i32(i32 %226, i1 true)
  %228 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 17
  %229 = load i32, i32* %228, align 4, !tbaa !21
  %230 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 17
  %231 = load i32, i32* %230, align 4, !tbaa !21
  %232 = sub nsw i32 %229, %231
  %233 = call i32 @llvm.abs.i32(i32 %232, i1 true)
  %234 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 18
  %235 = load i32, i32* %234, align 8, !tbaa !21
  %236 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 18
  %237 = load i32, i32* %236, align 8, !tbaa !21
  %238 = sub nsw i32 %235, %237
  %239 = call i32 @llvm.abs.i32(i32 %238, i1 true)
  %240 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 19
  %241 = load i32, i32* %240, align 4, !tbaa !21
  %242 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 19
  %243 = load i32, i32* %242, align 4, !tbaa !21
  %244 = sub nsw i32 %241, %243
  %245 = call i32 @llvm.abs.i32(i32 %244, i1 true)
  %246 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 20
  %247 = load i32, i32* %246, align 16, !tbaa !21
  %248 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 20
  %249 = load i32, i32* %248, align 16, !tbaa !21
  %250 = sub nsw i32 %247, %249
  %251 = call i32 @llvm.abs.i32(i32 %250, i1 true)
  %252 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 21
  %253 = load i32, i32* %252, align 4, !tbaa !21
  %254 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 21
  %255 = load i32, i32* %254, align 4, !tbaa !21
  %256 = sub nsw i32 %253, %255
  %257 = call i32 @llvm.abs.i32(i32 %256, i1 true)
  %258 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 22
  %259 = load i32, i32* %258, align 8, !tbaa !21
  %260 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 22
  %261 = load i32, i32* %260, align 8, !tbaa !21
  %262 = sub nsw i32 %259, %261
  %263 = call i32 @llvm.abs.i32(i32 %262, i1 true)
  %264 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 23
  %265 = load i32, i32* %264, align 4, !tbaa !21
  %266 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 23
  %267 = load i32, i32* %266, align 4, !tbaa !21
  %268 = sub nsw i32 %265, %267
  %269 = call i32 @llvm.abs.i32(i32 %268, i1 true)
  %270 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 24
  %271 = load i32, i32* %270, align 16, !tbaa !21
  %272 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 24
  %273 = load i32, i32* %272, align 16, !tbaa !21
  %274 = sub nsw i32 %271, %273
  %275 = call i32 @llvm.abs.i32(i32 %274, i1 true)
  %276 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 25
  %277 = load i32, i32* %276, align 4, !tbaa !21
  %278 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 25
  %279 = load i32, i32* %278, align 4, !tbaa !21
  %280 = sub nsw i32 %277, %279
  %281 = call i32 @llvm.abs.i32(i32 %280, i1 true)
  %282 = add nuw nsw i32 %167, %163
  %283 = add nuw nsw i32 %171, %282
  %284 = add nuw nsw i32 %175, %283
  %285 = add nuw nsw i32 %179, %284
  %286 = add nuw nsw i32 %183, %285
  %287 = add nuw nsw i32 %187, %286
  %288 = add nuw nsw i32 %191, %287
  %289 = add nuw nsw i32 %195, %288
  %290 = add nuw nsw i32 %199, %289
  %291 = add nuw nsw i32 %203, %290
  %292 = add nuw nsw i32 %207, %291
  %293 = add nuw nsw i32 %211, %292
  %294 = add nuw nsw i32 %215, %293
  %295 = add nuw nsw i32 %219, %294
  %296 = add nuw nsw i32 %223, %295
  %297 = add nuw nsw i32 %227, %296
  %298 = add nuw nsw i32 %233, %297
  %299 = add nuw nsw i32 %239, %298
  %300 = add nuw nsw i32 %245, %299
  %301 = add nuw nsw i32 %251, %300
  %302 = add nuw nsw i32 %257, %301
  %303 = add nuw nsw i32 %263, %302
  %304 = add nuw nsw i32 %269, %303
  %305 = add nuw nsw i32 %275, %304
  %306 = add nuw nsw i32 %281, %305
  %307 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %306)
          to label %324 unwind label %366

308:                                              ; preds = %83, %321
  %309 = phi i8* [ %322, %321 ], [ %85, %83 ]
  %310 = load i8, i8* %309, align 1, !tbaa !11
  %311 = sext i8 %310 to i32
  %312 = call i32 @isalpha(i32 %311) #13
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %321, label %314

314:                                              ; preds = %308
  %315 = call i32 @tolower(i32 %311) #13
  %316 = add nsw i32 %315, -97
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %317
  %319 = load i32, i32* %318, align 4, !tbaa !21
  %320 = add nsw i32 %319, 1
  store i32 %320, i32* %318, align 4, !tbaa !21
  br label %321

321:                                              ; preds = %314, %308
  %322 = getelementptr inbounds i8, i8* %309, i64 1
  %323 = icmp eq i8* %322, %87
  br i1 %323, label %107, label %308

324:                                              ; preds = %142
  %325 = bitcast %"class.std::basic_ostream"* %307 to i8**
  %326 = load i8*, i8** %325, align 8, !tbaa !13
  %327 = getelementptr i8, i8* %326, i64 -24
  %328 = bitcast i8* %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = bitcast %"class.std::basic_ostream"* %307 to i8*
  %331 = add nsw i64 %329, 240
  %332 = getelementptr inbounds i8, i8* %330, i64 %331
  %333 = bitcast i8* %332 to %"class.std::ctype"**
  %334 = load %"class.std::ctype"*, %"class.std::ctype"** %333, align 8, !tbaa !15
  %335 = icmp eq %"class.std::ctype"* %334, null
  br i1 %335, label %336, label %338

336:                                              ; preds = %324
  invoke void @_ZSt16__throw_bad_castv() #12
          to label %337 unwind label %366

337:                                              ; preds = %336
  unreachable

338:                                              ; preds = %324
  %339 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %334, i64 0, i32 8
  %340 = load i8, i8* %339, align 8, !tbaa !18
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %345, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %334, i64 0, i32 9, i64 10
  %344 = load i8, i8* %343, align 1, !tbaa !11
  br label %352

345:                                              ; preds = %338
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %334)
          to label %346 unwind label %366

346:                                              ; preds = %345
  %347 = bitcast %"class.std::ctype"* %334 to i8 (%"class.std::ctype"*, i8)***
  %348 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %347, align 8, !tbaa !13
  %349 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %348, i64 6
  %350 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %349, align 8
  %351 = invoke signext i8 %350(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %334, i8 signext 10)
          to label %352 unwind label %366

352:                                              ; preds = %346, %342
  %353 = phi i8 [ %344, %342 ], [ %351, %346 ]
  %354 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %307, i8 signext %353)
          to label %355 unwind label %366

355:                                              ; preds = %352
  %356 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %354)
          to label %357 unwind label %366

357:                                              ; preds = %355
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %77) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %76) #11
  %358 = load i8*, i8** %84, align 8, !tbaa !20
  %359 = icmp eq i8* %358, %14
  br i1 %359, label %361, label %360

360:                                              ; preds = %357
  call void @_ZdlPv(i8* %358) #11
  br label %361

361:                                              ; preds = %357, %360
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  %362 = load i8*, i8** %78, align 8, !tbaa !20
  %363 = icmp eq i8* %362, %9
  br i1 %363, label %365, label %364

364:                                              ; preds = %361
  call void @_ZdlPv(i8* %362) #11
  br label %365

365:                                              ; preds = %361, %364
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret i32 0

366:                                              ; preds = %355, %352, %346, %345, %336, %142
  %367 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %77) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %76) #11
  br label %368

368:                                              ; preds = %366, %89
  %369 = phi { i8*, i32 } [ %367, %366 ], [ %90, %89 ]
  %370 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %371 = load i8*, i8** %370, align 8, !tbaa !20
  %372 = icmp eq i8* %371, %14
  br i1 %372, label %374, label %373

373:                                              ; preds = %368
  call void @_ZdlPv(i8* %371) #11
  br label %374

374:                                              ; preds = %368, %373
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  %375 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %376 = load i8*, i8** %375, align 8, !tbaa !20
  %377 = icmp eq i8* %376, %9
  br i1 %377, label %379, label %378

378:                                              ; preds = %374
  call void @_ZdlPv(i8* %376) #11
  br label %379

379:                                              ; preds = %374, %378
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  resume { i8*, i32 } %369
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @isalpha(i32) local_unnamed_addr #6

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @tolower(i32) local_unnamed_addr #6

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8 signext) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #8

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_MakeAnagram.cpp() #9 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #11
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #10

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #6 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #11 = { nounwind }
attributes #12 = { noreturn }
attributes #13 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 8}
!9 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !4, i64 0, !10, i64 8, !6, i64 16}
!10 = !{!"long", !6, i64 0}
!11 = !{!6, !6, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"vtable pointer", !7, i64 0}
!15 = !{!16, !5, i64 240}
!16 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !5, i64 216, !6, i64 224, !17, i64 225, !5, i64 232, !5, i64 240, !5, i64 248, !5, i64 256}
!17 = !{!"bool", !6, i64 0}
!18 = !{!19, !6, i64 56}
!19 = !{!"_ZTSSt5ctypeIcE", !5, i64 16, !17, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !6, i64 56, !6, i64 57, !6, i64 313, !6, i64 569}
!20 = !{!9, !5, i64 0}
!21 = !{!22, !22, i64 0}
!22 = !{!"int", !6, i64 0}
