; ModuleID = './TileStackingProblem.cpp'
source_filename = "./TileStackingProblem.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@.str = private unnamed_addr constant [21 x i8] c"n >= 1 && n <= 10000\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"./TileStackingProblem.cpp\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [11 x i8] c"int main()\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"m >= 1 && m <= 1000\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"k >= 1 && k <= 5000\00", align 1
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_TileStackingProblem.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #3 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [10001 x [1001 x i32]], align 16
  %5 = alloca [10001 x [1001 x i32]], align 16
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  %9 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %10 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %9, i32* nonnull align 4 dereferenceable(4) %2)
  %11 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %10, i32* nonnull align 4 dereferenceable(4) %3)
  %12 = load i32, i32* %1, align 4, !tbaa !3
  %13 = add i32 %12, -1
  %14 = icmp ult i32 %13, 10000
  br i1 %14, label %16, label %15

15:                                               ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #10
  unreachable

16:                                               ; preds = %0
  %17 = load i32, i32* %2, align 4, !tbaa !3
  %18 = add i32 %17, -1
  %19 = icmp ult i32 %18, 1000
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #10
  unreachable

21:                                               ; preds = %16
  %22 = load i32, i32* %3, align 4, !tbaa !3
  %23 = add i32 %22, -1
  %24 = icmp ult i32 %23, 5000
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #10
  unreachable

26:                                               ; preds = %21
  %27 = bitcast [10001 x [1001 x i32]]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40044004, i8* nonnull %27) #9
  %28 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 0, i64 8
  %29 = bitcast i32* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40044004) %29, i8 0, i64 40043972, i1 false)
  %30 = bitcast [10001 x [1001 x i32]]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40044004, i8* nonnull %30) #9
  %31 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %5, i64 0, i64 0, i64 8
  %32 = bitcast i32* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(40044004) %32, i8 0, i64 40043972, i1 false)
  %33 = bitcast [10001 x [1001 x i32]]* %4 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %33, align 16, !tbaa !3
  %34 = bitcast [10001 x [1001 x i32]]* %5 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 16, !tbaa !3
  %35 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 0, i64 4
  %36 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %5, i64 0, i64 0, i64 4
  %37 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 16, !tbaa !3
  %38 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 16, !tbaa !3
  %39 = zext i32 %12 to i64
  br label %40

40:                                               ; preds = %26, %57
  %41 = phi i64 [ 1, %26 ], [ %58, %57 ]
  %42 = phi i64 [ 0, %26 ], [ %43, %57 ]
  %43 = add nuw nsw i64 %42, 1
  %44 = getelementptr [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %5, i64 0, i64 %43, i64 0
  %45 = bitcast i32* %44 to i8*
  %46 = add nsw i64 %41, -1
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(4000) %45, i8 0, i64 4000, i1 false)
  br label %60

47:                                               ; preds = %57
  %48 = icmp slt i32 %17, 1
  br i1 %48, label %119, label %49

49:                                               ; preds = %47
  %50 = add i32 %12, 1
  %51 = zext i32 %50 to i64
  %52 = zext i32 %17 to i64
  %53 = and i64 %52, 1
  %54 = icmp eq i32 %17, 1
  %55 = and i64 %52, 4294967294
  %56 = icmp eq i64 %53, 0
  br label %115

57:                                               ; preds = %60
  %58 = add nuw nsw i64 %41, 1
  %59 = icmp eq i64 %43, %39
  br i1 %59, label %47, label %40, !llvm.loop !7

60:                                               ; preds = %40, %60
  %61 = phi i64 [ 0, %40 ], [ %65, %60 ]
  %62 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %41, i64 %61
  %63 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %46, i64 %61
  %64 = load i32, i32* %63, align 4, !tbaa !3
  store i32 %64, i32* %62, align 4, !tbaa !3
  %65 = add nuw nsw i64 %61, 1
  %66 = icmp eq i64 %65, 1000
  %67 = and i64 %65, 4294967295
  %68 = select i1 %66, i64 0, i64 %67
  %69 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %46, i64 %68
  %70 = load i32, i32* %69, align 4, !tbaa !3
  %71 = add nsw i32 %64, %70
  store i32 %71, i32* %62, align 4, !tbaa !3
  %72 = trunc i64 %61 to i32
  %73 = add i32 %72, 2
  %74 = urem i32 %73, 1000
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %46, i64 %75
  %77 = load i32, i32* %76, align 4, !tbaa !3
  %78 = add nsw i32 %71, %77
  store i32 %78, i32* %62, align 4, !tbaa !3
  %79 = trunc i64 %61 to i32
  %80 = add i32 %79, 3
  %81 = urem i32 %80, 1000
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %46, i64 %82
  %84 = load i32, i32* %83, align 4, !tbaa !3
  %85 = add nsw i32 %78, %84
  store i32 %85, i32* %62, align 4, !tbaa !3
  %86 = trunc i64 %61 to i32
  %87 = add i32 %86, 4
  %88 = urem i32 %87, 1000
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %46, i64 %89
  %91 = load i32, i32* %90, align 4, !tbaa !3
  %92 = add nsw i32 %85, %91
  store i32 %92, i32* %62, align 4, !tbaa !3
  %93 = trunc i64 %61 to i32
  %94 = add i32 %93, 5
  %95 = urem i32 %94, 1000
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %46, i64 %96
  %98 = load i32, i32* %97, align 4, !tbaa !3
  %99 = add nsw i32 %92, %98
  store i32 %99, i32* %62, align 4, !tbaa !3
  %100 = trunc i64 %61 to i32
  %101 = add i32 %100, 6
  %102 = urem i32 %101, 1000
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %46, i64 %103
  %105 = load i32, i32* %104, align 4, !tbaa !3
  %106 = add nsw i32 %99, %105
  store i32 %106, i32* %62, align 4, !tbaa !3
  %107 = trunc i64 %61 to i32
  %108 = add i32 %107, 7
  %109 = urem i32 %108, 1000
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %46, i64 %110
  %112 = load i32, i32* %111, align 4, !tbaa !3
  %113 = add nsw i32 %106, %112
  store i32 %113, i32* %62, align 4, !tbaa !3
  %114 = icmp eq i64 %65, 1000
  br i1 %114, label %57, label %60, !llvm.loop !9

115:                                              ; preds = %49, %147
  %116 = phi i64 [ 1, %49 ], [ %148, %147 ]
  %117 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %5, i64 0, i64 %116, i64 0
  %118 = load i32, i32* %117, align 4, !tbaa !3
  br i1 %54, label %138, label %150

119:                                              ; preds = %147, %47
  %120 = icmp sgt i32 %12, 0
  br i1 %120, label %121, label %168

121:                                              ; preds = %119
  %122 = sext i32 %12 to i64
  %123 = sext i32 %22 to i64
  %124 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %5, i64 0, i64 %122, i64 %123
  %125 = load i32, i32* %124, align 4, !tbaa !3
  %126 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %125)
  %127 = bitcast %"class.std::basic_ostream"* %126 to i8**
  %128 = load i8*, i8** %127, align 8, !tbaa !10
  %129 = getelementptr i8, i8* %128, i64 -24
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.std::basic_ostream"* %126 to i8*
  %133 = add nsw i64 %131, 240
  %134 = getelementptr inbounds i8, i8* %132, i64 %133
  %135 = bitcast i8* %134 to %"class.std::ctype"**
  %136 = load %"class.std::ctype"*, %"class.std::ctype"** %135, align 8, !tbaa !12
  %137 = icmp eq %"class.std::ctype"* %136, null
  br i1 %137, label %169, label %170

138:                                              ; preds = %150, %115
  %139 = phi i32 [ %118, %115 ], [ %163, %150 ]
  %140 = phi i64 [ 1, %115 ], [ %165, %150 ]
  br i1 %56, label %147, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %116, i64 %140
  %143 = load i32, i32* %142, align 4, !tbaa !3
  %144 = add nsw i32 %143, %139
  %145 = srem i32 %144, 1000000007
  %146 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %5, i64 0, i64 %116, i64 %140
  store i32 %145, i32* %146, align 4, !tbaa !3
  br label %147

147:                                              ; preds = %138, %141
  %148 = add nuw nsw i64 %116, 1
  %149 = icmp eq i64 %148, %51
  br i1 %149, label %119, label %115, !llvm.loop !16

150:                                              ; preds = %115, %150
  %151 = phi i32 [ %163, %150 ], [ %118, %115 ]
  %152 = phi i64 [ %165, %150 ], [ 1, %115 ]
  %153 = phi i64 [ %166, %150 ], [ %55, %115 ]
  %154 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %116, i64 %152
  %155 = load i32, i32* %154, align 4, !tbaa !3
  %156 = add nsw i32 %155, %151
  %157 = srem i32 %156, 1000000007
  %158 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %5, i64 0, i64 %116, i64 %152
  store i32 %157, i32* %158, align 4, !tbaa !3
  %159 = add nuw nsw i64 %152, 1
  %160 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %4, i64 0, i64 %116, i64 %159
  %161 = load i32, i32* %160, align 4, !tbaa !3
  %162 = add nsw i32 %161, %157
  %163 = srem i32 %162, 1000000007
  %164 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %5, i64 0, i64 %116, i64 %159
  store i32 %163, i32* %164, align 4, !tbaa !3
  %165 = add nuw nsw i64 %152, 2
  %166 = add i64 %153, -2
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %138, label %150, !llvm.loop !17

168:                                              ; preds = %186, %119
  call void @llvm.lifetime.end.p0i8(i64 40044004, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 40044004, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  ret i32 0

169:                                              ; preds = %193, %121
  call void @_ZSt16__throw_bad_castv() #11
  unreachable

170:                                              ; preds = %121, %193
  %171 = phi %"class.std::ctype"* [ %209, %193 ], [ %136, %121 ]
  %172 = phi %"class.std::basic_ostream"* [ %199, %193 ], [ %126, %121 ]
  %173 = phi i32 [ %190, %193 ], [ 0, %121 ]
  %174 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %171, i64 0, i32 8
  %175 = load i8, i8* %174, align 8, !tbaa !18
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %171, i64 0, i32 9, i64 10
  %179 = load i8, i8* %178, align 1, !tbaa !20
  br label %186

180:                                              ; preds = %170
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %171)
  %181 = bitcast %"class.std::ctype"* %171 to i8 (%"class.std::ctype"*, i8)***
  %182 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %181, align 8, !tbaa !10
  %183 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %182, i64 6
  %184 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %183, align 8
  %185 = call signext i8 %184(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %171, i8 signext 10)
  br label %186

186:                                              ; preds = %177, %180
  %187 = phi i8 [ %179, %177 ], [ %185, %180 ]
  %188 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %172, i8 signext %187)
  %189 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %188)
  %190 = add nuw nsw i32 %173, 1
  %191 = load i32, i32* %1, align 4, !tbaa !3
  %192 = icmp slt i32 %190, %191
  br i1 %192, label %193, label %168, !llvm.loop !21

193:                                              ; preds = %186
  %194 = load i32, i32* %3, align 4, !tbaa !3
  %195 = sext i32 %191 to i64
  %196 = sext i32 %194 to i64
  %197 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* %5, i64 0, i64 %195, i64 %196
  %198 = load i32, i32* %197, align 4, !tbaa !3
  %199 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %198)
  %200 = bitcast %"class.std::basic_ostream"* %199 to i8**
  %201 = load i8*, i8** %200, align 8, !tbaa !10
  %202 = getelementptr i8, i8* %201, i64 -24
  %203 = bitcast i8* %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"class.std::basic_ostream"* %199 to i8*
  %206 = add nsw i64 %204, 240
  %207 = getelementptr inbounds i8, i8* %205, i64 %206
  %208 = bitcast i8* %207 to %"class.std::ctype"**
  %209 = load %"class.std::ctype"*, %"class.std::ctype"** %208, align 8, !tbaa !12
  %210 = icmp eq %"class.std::ctype"* %209, null
  br i1 %210, label %169, label %170
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #7

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_TileStackingProblem.cpp() #8 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #9
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { noreturn nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #7 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"int", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.mustprogress"}
!9 = distinct !{!9, !8}
!10 = !{!11, !11, i64 0}
!11 = !{!"vtable pointer", !6, i64 0}
!12 = !{!13, !14, i64 240}
!13 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !14, i64 216, !5, i64 224, !15, i64 225, !14, i64 232, !14, i64 240, !14, i64 248, !14, i64 256}
!14 = !{!"any pointer", !5, i64 0}
!15 = !{!"bool", !5, i64 0}
!16 = distinct !{!16, !8}
!17 = distinct !{!17, !8}
!18 = !{!19, !5, i64 56}
!19 = !{!"_ZTSSt5ctypeIcE", !14, i64 16, !15, i64 24, !14, i64 32, !14, i64 40, !14, i64 48, !5, i64 56, !5, i64 57, !5, i64 313, !5, i64 569}
!20 = !{!5, !5, i64 0}
!21 = distinct !{!21, !8}
