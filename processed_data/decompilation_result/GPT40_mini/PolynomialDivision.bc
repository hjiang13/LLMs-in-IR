; ModuleID = './PolynomialDivision.cpp'
source_filename = "./PolynomialDivision.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::pair" = type { i64, i64 }

@X = dso_local local_unnamed_addr global i64 0, align 8
@seg = dso_local global [262144 x %"struct.std::pair"] zeroinitializer, align 16
@.str = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1

; Function Attrs: mustprogress nofree nosync nounwind readnone uwtable willreturn
define dso_local i64 @_Z5powerxi(i64 %0, i32 %1) local_unnamed_addr #0 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = sdiv i32 %1, 2
  %6 = tail call i64 @_Z5powerxi(i64 %0, i32 %5)
  %7 = mul nsw i64 %6, %6
  %8 = urem i64 %7, 1000000007
  %9 = srem i32 %1, 2
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = mul nsw i64 %8, %0
  %13 = srem i64 %12, 1000000007
  br label %14

14:                                               ; preds = %4, %11, %2
  %15 = phi i64 [ 1, %2 ], [ %13, %11 ], [ %8, %4 ]
  ret i64 %15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: mustprogress nofree nosync nounwind readonly uwtable willreturn
define dso_local { i64, i64 } @_Z9seg_mergeSt4pairIxxES0_(i64 %0, i64 %1, i64 %2, i64 %3) local_unnamed_addr #2 {
  %5 = load i64, i64* getelementptr inbounds ([262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 0, i32 0), align 16, !tbaa !3
  %6 = srem i64 %3, 1000000007
  %7 = trunc i64 %6 to i32
  %8 = tail call i64 @_Z5powerxi(i64 %5, i32 %7)
  %9 = mul nsw i64 %8, %2
  %10 = add nsw i64 %9, %0
  %11 = srem i64 %10, 1000000007
  %12 = add nsw i64 %3, %1
  %13 = insertvalue { i64, i64 } undef, i64 %11, 0
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1
  ret { i64, i64 } %14
}

; Function Attrs: nofree nosync nounwind uwtable
define dso_local { i64, i64 } @_Z3queiiiii(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #3 {
  %6 = icmp sgt i32 %1, %4
  %7 = icmp slt i32 %2, %3
  %8 = select i1 %6, i1 true, i1 %7
  br i1 %8, label %40, label %9

9:                                                ; preds = %5
  %10 = icmp slt i32 %1, %3
  %11 = icmp sgt i32 %2, %4
  %12 = select i1 %10, i1 true, i1 %11
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = sext i32 %0 to i64
  %15 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %14, i32 0
  %16 = load i64, i64* %15, align 16
  %17 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %14, i32 1
  %18 = load i64, i64* %17, align 8
  br label %40

19:                                               ; preds = %9
  %20 = add nsw i32 %2, %1
  %21 = sdiv i32 %20, 2
  %22 = shl nsw i32 %0, 1
  %23 = or i32 %22, 1
  %24 = tail call { i64, i64 } @_Z3queiiiii(i32 %23, i32 %1, i32 %21, i32 %3, i32 %4)
  %25 = extractvalue { i64, i64 } %24, 0
  %26 = extractvalue { i64, i64 } %24, 1
  %27 = add nsw i32 %22, 2
  %28 = add nsw i32 %21, 1
  %29 = tail call { i64, i64 } @_Z3queiiiii(i32 %27, i32 %28, i32 %2, i32 %3, i32 %4)
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  %32 = load i64, i64* getelementptr inbounds ([262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 0, i32 0), align 16, !tbaa !3
  %33 = srem i64 %31, 1000000007
  %34 = trunc i64 %33 to i32
  %35 = tail call i64 @_Z5powerxi(i64 %32, i32 %34) #6
  %36 = mul nsw i64 %35, %30
  %37 = add nsw i64 %36, %25
  %38 = srem i64 %37, 1000000007
  %39 = add nsw i64 %31, %26
  br label %40

40:                                               ; preds = %5, %19, %13
  %41 = phi i64 [ %38, %19 ], [ %16, %13 ], [ 0, %5 ]
  %42 = phi i64 [ %39, %19 ], [ %18, %13 ], [ 0, %5 ]
  %43 = insertvalue { i64, i64 } undef, i64 %41, 0
  %44 = insertvalue { i64, i64 } %43, i64 %42, 1
  ret { i64, i64 } %44
}

; Function Attrs: mustprogress nofree norecurse nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #6
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #6
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #6
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #6
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %12 = load i32, i32* %1, align 4, !tbaa !8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %17, %0
  %15 = load i32, i32* %3, align 4, !tbaa !8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %27, label %26

17:                                               ; preds = %0, %17
  %18 = phi i64 [ %22, %17 ], [ 0, %0 ]
  %19 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %18, i32 0
  %20 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64* nonnull %19)
  %21 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %18, i32 1
  store i64 1, i64* %21, align 8, !tbaa !10
  %22 = add nuw nsw i64 %18, 1
  %23 = load i32, i32* %1, align 4, !tbaa !8
  %24 = sext i32 %23 to i64
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %17, label %14, !llvm.loop !11

26:                                               ; preds = %27, %14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6
  ret i32 0

27:                                               ; preds = %14, %27
  %28 = phi i32 [ %39, %27 ], [ 0, %14 ]
  %29 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %4, i32* nonnull %5)
  %30 = load i32, i32* %1, align 4, !tbaa !8
  %31 = add nsw i32 %30, -1
  %32 = load i32, i32* %4, align 4, !tbaa !8
  %33 = add nsw i32 %32, -1
  %34 = load i32, i32* %5, align 4, !tbaa !8
  %35 = add nsw i32 %34, -1
  %36 = call { i64, i64 } @_Z3queiiiii(i32 0, i32 0, i32 %31, i32 %33, i32 %35)
  %37 = extractvalue { i64, i64 } %36, 0
  %38 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %37)
  %39 = add nuw nsw i32 %28, 1
  %40 = load i32, i32* %3, align 4, !tbaa !8
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %27, label %26, !llvm.loop !13
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

attributes #0 = { mustprogress nofree nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree norecurse nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSSt4pairIxxE", !5, i64 0, !5, i64 8}
!5 = !{!"long long", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !9, i64 0}
!9 = !{!"int", !6, i64 0}
!10 = !{!4, !5, i64 8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = distinct !{!13, !12}
