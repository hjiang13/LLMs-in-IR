; ModuleID = './PrimeNumberandQueries.cpp'
source_filename = "./PrimeNumberandQueries.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@prime = dso_local local_unnamed_addr global [1000005 x i32] zeroinitializer, align 16
@an1 = dso_local local_unnamed_addr global [1000005 x i32] zeroinitializer, align 16
@an2 = dso_local local_unnamed_addr global [1000005 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [40 x i8] c"../input_files/PrimeNumberandQueries\\00\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_PrimeNumberandQueries.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #3 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3
  %6 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %5)
  store i32 1, i32* getelementptr inbounds ([1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 0), align 16, !tbaa !7
  store i32 1, i32* getelementptr inbounds ([1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 1), align 4, !tbaa !7
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(1999996) bitcast (i32* getelementptr inbounds ([1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 2) to i8*), i8 0, i64 1999996, i1 false)
  br label %7

7:                                                ; preds = %61, %0
  %8 = phi i32 [ %63, %61 ], [ 0, %0 ]
  %9 = phi i64 [ %21, %61 ], [ 2, %0 ]
  %10 = icmp eq i32 %8, 0
  %11 = icmp ult i64 %9, 250001
  %12 = select i1 %10, i1 %11, i1 false
  br i1 %12, label %13, label %20

13:                                               ; preds = %7
  %14 = shl nuw nsw i64 %9, 1
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi i64 [ %18, %15 ], [ %14, %13 ]
  %17 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %16
  store i32 1, i32* %17, align 4, !tbaa !7
  %18 = add nuw nsw i64 %16, %9
  %19 = icmp ult i64 %18, 500001
  br i1 %19, label %15, label %20, !llvm.loop !9

20:                                               ; preds = %15, %7
  %21 = add nuw nsw i64 %9, 1
  %22 = icmp eq i64 %21, 500001
  br i1 %22, label %23, label %61, !llvm.loop !11

23:                                               ; preds = %20, %23
  %24 = phi i64 [ %58, %23 ], [ 0, %20 ]
  %25 = phi <4 x i32> [ %59, %23 ], [ <i32 0, i32 1, i32 2, i32 3>, %20 ]
  %26 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %24
  %27 = bitcast i32* %26 to <4 x i32>*
  %28 = load <4 x i32>, <4 x i32>* %27, align 16, !tbaa !7
  %29 = getelementptr inbounds i32, i32* %26, i64 4
  %30 = bitcast i32* %29 to <4 x i32>*
  %31 = load <4 x i32>, <4 x i32>* %30, align 16, !tbaa !7
  %32 = icmp eq <4 x i32> %28, zeroinitializer
  %33 = icmp eq <4 x i32> %31, zeroinitializer
  %34 = add <4 x i32> %25, <i32 4, i32 4, i32 4, i32 4>
  %35 = select <4 x i1> %32, <4 x i32> %25, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %36 = select <4 x i1> %33, <4 x i32> %34, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %37 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an1, i64 0, i64 %24
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> %35, <4 x i32>* %38, align 16
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> %36, <4 x i32>* %40, align 16
  %41 = or i64 %24, 8
  %42 = add <4 x i32> %25, <i32 8, i32 8, i32 8, i32 8>
  %43 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 16, !tbaa !7
  %46 = getelementptr inbounds i32, i32* %43, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  %48 = load <4 x i32>, <4 x i32>* %47, align 16, !tbaa !7
  %49 = icmp eq <4 x i32> %45, zeroinitializer
  %50 = icmp eq <4 x i32> %48, zeroinitializer
  %51 = add <4 x i32> %25, <i32 12, i32 12, i32 12, i32 12>
  %52 = select <4 x i1> %49, <4 x i32> %42, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %53 = select <4 x i1> %50, <4 x i32> %51, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %54 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an1, i64 0, i64 %41
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %55, align 16
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %53, <4 x i32>* %57, align 16
  %58 = add nuw nsw i64 %24, 16
  %59 = add <4 x i32> %25, <i32 16, i32 16, i32 16, i32 16>
  %60 = icmp eq i64 %58, 1000000
  br i1 %60, label %64, label %23, !llvm.loop !12

61:                                               ; preds = %20
  %62 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %21
  %63 = load i32, i32* %62, align 4, !tbaa !7
  br label %7

64:                                               ; preds = %23
  %65 = load i32, i32* getelementptr inbounds ([1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 1000000), align 16, !tbaa !7
  %66 = icmp eq i32 %65, 0
  %67 = select i1 %66, i32 1000000, i32 -1
  store i32 %67, i32* getelementptr inbounds ([1000005 x i32], [1000005 x i32]* @an1, i64 0, i64 1000000), align 16
  br label %68

68:                                               ; preds = %64, %68
  %69 = phi i64 [ %93, %68 ], [ 0, %64 ]
  %70 = phi <4 x i32> [ %94, %68 ], [ <i32 1000000, i32 999999, i32 999998, i32 999997>, %64 ]
  %71 = sub i64 1000000, %69
  %72 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %71
  %73 = getelementptr inbounds i32, i32* %72, i64 -3
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !tbaa !7
  %76 = shufflevector <4 x i32> %75, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %77 = getelementptr inbounds i32, i32* %72, i64 -7
  %78 = bitcast i32* %77 to <4 x i32>*
  %79 = load <4 x i32>, <4 x i32>* %78, align 4, !tbaa !7
  %80 = shufflevector <4 x i32> %79, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %81 = icmp eq <4 x i32> %76, zeroinitializer
  %82 = icmp eq <4 x i32> %80, zeroinitializer
  %83 = add <4 x i32> %70, <i32 -4, i32 -4, i32 -4, i32 -4>
  %84 = select <4 x i1> %81, <4 x i32> %70, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %85 = select <4 x i1> %82, <4 x i32> %83, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %86 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an2, i64 0, i64 %71
  %87 = shufflevector <4 x i32> %84, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, i32* %86, i64 -3
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %87, <4 x i32>* %89, align 4
  %90 = shufflevector <4 x i32> %85, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, i32* %86, i64 -7
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %90, <4 x i32>* %92, align 4
  %93 = add nuw i64 %69, 8
  %94 = add <4 x i32> %70, <i32 -8, i32 -8, i32 -8, i32 -8>
  %95 = icmp eq i64 %93, 1000000
  br i1 %95, label %96, label %68, !llvm.loop !14

96:                                               ; preds = %68
  %97 = load i32, i32* getelementptr inbounds ([1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 0), align 16, !tbaa !7
  %98 = icmp ne i32 %97, 0
  %99 = sext i1 %98 to i32
  store i32 %99, i32* getelementptr inbounds ([1000005 x i32], [1000005 x i32]* @an2, i64 0, i64 0), align 16
  %100 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %101 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %100, i32* nonnull align 4 dereferenceable(4) %2)
  %102 = bitcast %"class.std::basic_istream"* %101 to i8**
  %103 = load i8*, i8** %102, align 8, !tbaa !15
  %104 = getelementptr i8, i8* %103, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.std::basic_istream"* %101 to i8*
  %108 = add nsw i64 %106, 32
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 8, !tbaa !17
  %112 = and i32 %111, 5
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %170

114:                                              ; preds = %96, %152
  %115 = load i32, i32* %1, align 4, !tbaa !7
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an1, i64 0, i64 %116
  %118 = load i32, i32* %117, align 4, !tbaa !7
  %119 = load i32, i32* %2, align 4, !tbaa !7
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an2, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4, !tbaa !7
  %123 = sub nsw i32 %118, %122
  %124 = icmp sgt i32 %123, 0
  %125 = select i1 %124, i32 %123, i32 0
  %126 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %125)
  %127 = bitcast %"class.std::basic_ostream"* %126 to i8**
  %128 = load i8*, i8** %127, align 8, !tbaa !15
  %129 = getelementptr i8, i8* %128, i64 -24
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.std::basic_ostream"* %126 to i8*
  %133 = add nsw i64 %131, 240
  %134 = getelementptr inbounds i8, i8* %132, i64 %133
  %135 = bitcast i8* %134 to %"class.std::ctype"**
  %136 = load %"class.std::ctype"*, %"class.std::ctype"** %135, align 8, !tbaa !24
  %137 = icmp eq %"class.std::ctype"* %136, null
  br i1 %137, label %138, label %139

138:                                              ; preds = %114
  call void @_ZSt16__throw_bad_castv() #9
  unreachable

139:                                              ; preds = %114
  %140 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %136, i64 0, i32 8
  %141 = load i8, i8* %140, align 8, !tbaa !27
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %136, i64 0, i32 9, i64 10
  %145 = load i8, i8* %144, align 1, !tbaa !29
  br label %152

146:                                              ; preds = %139
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %136)
  %147 = bitcast %"class.std::ctype"* %136 to i8 (%"class.std::ctype"*, i8)***
  %148 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %147, align 8, !tbaa !15
  %149 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %148, i64 6
  %150 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %149, align 8
  %151 = call signext i8 %150(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %136, i8 signext 10)
  br label %152

152:                                              ; preds = %143, %146
  %153 = phi i8 [ %145, %143 ], [ %151, %146 ]
  %154 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %126, i8 signext %153)
  %155 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %154)
  %156 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %157 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %156, i32* nonnull align 4 dereferenceable(4) %2)
  %158 = bitcast %"class.std::basic_istream"* %157 to i8**
  %159 = load i8*, i8** %158, align 8, !tbaa !15
  %160 = getelementptr i8, i8* %159, i64 -24
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.std::basic_istream"* %157 to i8*
  %164 = add nsw i64 %162, 32
  %165 = getelementptr inbounds i8, i8* %163, i64 %164
  %166 = bitcast i8* %165 to i32*
  %167 = load i32, i32* %166, align 8, !tbaa !17
  %168 = and i32 %167, 5
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %114, label %170, !llvm.loop !30

170:                                              ; preds = %152, %96
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #5

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_PrimeNumberandQueries.cpp() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly nofree nounwind willreturn writeonly }
attributes #8 = { nounwind }
attributes #9 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !10, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !10, !13}
!15 = !{!16, !16, i64 0}
!16 = !{!"vtable pointer", !6, i64 0}
!17 = !{!18, !21, i64 32}
!18 = !{!"_ZTSSt8ios_base", !19, i64 8, !19, i64 16, !20, i64 24, !21, i64 28, !21, i64 32, !4, i64 40, !22, i64 48, !5, i64 64, !8, i64 192, !4, i64 200, !23, i64 208}
!19 = !{!"long", !5, i64 0}
!20 = !{!"_ZTSSt13_Ios_Fmtflags", !5, i64 0}
!21 = !{!"_ZTSSt12_Ios_Iostate", !5, i64 0}
!22 = !{!"_ZTSNSt8ios_base6_WordsE", !4, i64 0, !19, i64 8}
!23 = !{!"_ZTSSt6locale", !4, i64 0}
!24 = !{!25, !4, i64 240}
!25 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !4, i64 216, !5, i64 224, !26, i64 225, !4, i64 232, !4, i64 240, !4, i64 248, !4, i64 256}
!26 = !{!"bool", !5, i64 0}
!27 = !{!28, !5, i64 56}
!28 = !{!"_ZTSSt5ctypeIcE", !4, i64 16, !26, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !5, i64 56, !5, i64 57, !5, i64 313, !5, i64 569}
!29 = !{!5, !5, i64 0}
!30 = distinct !{!30, !10}
