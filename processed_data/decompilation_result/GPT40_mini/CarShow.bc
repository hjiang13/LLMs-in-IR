; ModuleID = './CarShow.cpp'
source_filename = "./CarShow.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%class.CarShow = type { %"class.std::vector", i32, i32, i32, i32, i64, [100005 x i64] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl_data" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"struct.std::pair" = type { i32, i32 }

$_ZN7CarShow7ProcessEv = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_CarShow.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #3 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.CarShow, align 8
  %2 = bitcast %class.CarShow* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 800088, i8* nonnull %2) #10
  %3 = getelementptr inbounds %class.CarShow, %class.CarShow* %1, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %2, i8 0, i64 32, i1 false) #10
  store i32 100005, i32* %3, align 8, !tbaa !3
  %4 = getelementptr inbounds %class.CarShow, %class.CarShow* %1, i64 0, i32 4
  store i32 0, i32* %4, align 4, !tbaa !10
  %5 = getelementptr inbounds %class.CarShow, %class.CarShow* %1, i64 0, i32 5
  store i64 0, i64* %5, align 8, !tbaa !11
  invoke void @_ZN7CarShow7ProcessEv(%class.CarShow* nonnull align 8 dereferenceable(800088) %1)
          to label %6 unwind label %13

6:                                                ; preds = %0
  %7 = getelementptr inbounds %class.CarShow, %class.CarShow* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8, !tbaa !12
  %9 = icmp eq %"struct.std::pair"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = bitcast %"struct.std::pair"* %8 to i8*
  call void @_ZdlPv(i8* nonnull %11) #10
  br label %12

12:                                               ; preds = %6, %10
  call void @llvm.lifetime.end.p0i8(i64 800088, i8* nonnull %2) #10
  ret i32 0

13:                                               ; preds = %0
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = getelementptr inbounds %class.CarShow, %class.CarShow* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::pair"*, %"struct.std::pair"** %15, align 8, !tbaa !12
  %17 = icmp eq %"struct.std::pair"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = bitcast %"struct.std::pair"* %16 to i8*
  call void @_ZdlPv(i8* nonnull %19) #10
  br label %20

20:                                               ; preds = %13, %18
  call void @llvm.lifetime.end.p0i8(i64 800088, i8* nonnull %2) #10
  resume { i8*, i32 } %14
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN7CarShow7ProcessEv(%class.CarShow* nonnull align 8 dereferenceable(800088) %0) local_unnamed_addr #5 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 1
  %6 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %5)
  %7 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 2
  %8 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %6, i32* nonnull align 4 dereferenceable(4) %7)
  %9 = bitcast i32* %2 to i8*
  %10 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %class.CarShow* %0 to i8**
  %14 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 3
  %15 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 4
  %16 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 5
  %17 = load i32, i32* %5, align 8, !tbaa !15
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %207, %1
  %20 = bitcast i32* %3 to i8*
  %21 = bitcast i32* %4 to i8*
  %22 = load i32, i32* %7, align 4, !tbaa !16
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %214, label %24

24:                                               ; preds = %19
  %25 = load i64, i64* %16, align 8, !tbaa !11
  br label %211

26:                                               ; preds = %1, %207
  %27 = phi i32 [ %208, %207 ], [ 0, %1 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  %28 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %2)
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %10, align 8, !tbaa !17
  %30 = load %"struct.std::pair"*, %"struct.std::pair"** %11, align 8, !tbaa !18
  %31 = icmp eq %"struct.std::pair"* %29, %30
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %29, i64 0, i32 0
  %34 = load i32, i32* %2, align 4, !tbaa !19
  store i32 %34, i32* %33, align 4, !tbaa !20
  %35 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %29, i64 0, i32 1
  store i32 %27, i32* %35, align 4, !tbaa !22
  %36 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %29, i64 1
  store %"struct.std::pair"* %36, %"struct.std::pair"** %10, align 8, !tbaa !17
  br label %181

37:                                               ; preds = %26
  %38 = load %"struct.std::pair"*, %"struct.std::pair"** %12, align 8, !tbaa !12
  %39 = bitcast %"struct.std::pair"* %38 to i8*
  %40 = ptrtoint %"struct.std::pair"* %29 to i64
  %41 = ptrtoint %"struct.std::pair"* %38 to i64
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp eq i64 %42, 9223372036854775800
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

46:                                               ; preds = %37
  %47 = icmp eq i64 %42, 0
  %48 = select i1 %47, i64 1, i64 %43
  %49 = add nsw i64 %48, %43
  %50 = icmp ult i64 %49, %43
  %51 = icmp ugt i64 %49, 1152921504606846975
  %52 = or i1 %50, %51
  %53 = select i1 %52, i64 1152921504606846975, i64 %49
  %54 = shl nuw nsw i64 %53, 3
  %55 = call noalias nonnull i8* @_Znwm(i64 %54) #12
  %56 = bitcast i8* %55 to %"struct.std::pair"*
  %57 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %56, i64 %43, i32 0
  %58 = load i32, i32* %2, align 4, !tbaa !19
  store i32 %58, i32* %57, align 4, !tbaa !20
  %59 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %56, i64 %43, i32 1
  store i32 %27, i32* %59, align 4, !tbaa !22
  %60 = icmp eq %"struct.std::pair"* %38, %29
  br i1 %60, label %173, label %61

61:                                               ; preds = %46
  %62 = add i64 %40, -8
  %63 = sub i64 %62, %41
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = icmp ult i64 %63, 24
  br i1 %66, label %161, label %67

67:                                               ; preds = %61
  %68 = add i64 %40, -8
  %69 = sub i64 %68, %41
  %70 = lshr i64 %69, 3
  %71 = add i64 %69, 8
  %72 = and i64 %71, -8
  %73 = getelementptr i8, i8* %55, i64 %72
  %74 = add nuw nsw i64 %70, 1
  %75 = getelementptr %"struct.std::pair", %"struct.std::pair"* %38, i64 %74
  %76 = bitcast %"struct.std::pair"* %75 to i8*
  %77 = icmp ult i8* %55, %76
  %78 = icmp ugt i8* %73, %39
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %67
  %81 = and i64 %65, 4611686018427387900
  %82 = getelementptr %"struct.std::pair", %"struct.std::pair"* %56, i64 %81
  %83 = getelementptr %"struct.std::pair", %"struct.std::pair"* %38, i64 %81
  %84 = add nsw i64 %81, -4
  %85 = lshr exact i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 12
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = and i64 %86, 9223372036854775804
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr %"struct.std::pair", %"struct.std::pair"* %56, i64 %92
  %95 = getelementptr %"struct.std::pair", %"struct.std::pair"* %38, i64 %92
  %96 = bitcast %"struct.std::pair"* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 4, !alias.scope !23
  %98 = getelementptr %"struct.std::pair", %"struct.std::pair"* %95, i64 2
  %99 = bitcast %"struct.std::pair"* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 4, !alias.scope !23
  %101 = bitcast %"struct.std::pair"* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 4, !alias.scope !26, !noalias !23
  %102 = getelementptr %"struct.std::pair", %"struct.std::pair"* %94, i64 2
  %103 = bitcast %"struct.std::pair"* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 4, !alias.scope !26, !noalias !23
  %104 = or i64 %92, 4
  %105 = getelementptr %"struct.std::pair", %"struct.std::pair"* %56, i64 %104
  %106 = getelementptr %"struct.std::pair", %"struct.std::pair"* %38, i64 %104
  %107 = bitcast %"struct.std::pair"* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 4, !alias.scope !23
  %109 = getelementptr %"struct.std::pair", %"struct.std::pair"* %106, i64 2
  %110 = bitcast %"struct.std::pair"* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 4, !alias.scope !23
  %112 = bitcast %"struct.std::pair"* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 4, !alias.scope !26, !noalias !23
  %113 = getelementptr %"struct.std::pair", %"struct.std::pair"* %105, i64 2
  %114 = bitcast %"struct.std::pair"* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 4, !alias.scope !26, !noalias !23
  %115 = or i64 %92, 8
  %116 = getelementptr %"struct.std::pair", %"struct.std::pair"* %56, i64 %115
  %117 = getelementptr %"struct.std::pair", %"struct.std::pair"* %38, i64 %115
  %118 = bitcast %"struct.std::pair"* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 4, !alias.scope !23
  %120 = getelementptr %"struct.std::pair", %"struct.std::pair"* %117, i64 2
  %121 = bitcast %"struct.std::pair"* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 4, !alias.scope !23
  %123 = bitcast %"struct.std::pair"* %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 4, !alias.scope !26, !noalias !23
  %124 = getelementptr %"struct.std::pair", %"struct.std::pair"* %116, i64 2
  %125 = bitcast %"struct.std::pair"* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 4, !alias.scope !26, !noalias !23
  %126 = or i64 %92, 12
  %127 = getelementptr %"struct.std::pair", %"struct.std::pair"* %56, i64 %126
  %128 = getelementptr %"struct.std::pair", %"struct.std::pair"* %38, i64 %126
  %129 = bitcast %"struct.std::pair"* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 4, !alias.scope !23
  %131 = getelementptr %"struct.std::pair", %"struct.std::pair"* %128, i64 2
  %132 = bitcast %"struct.std::pair"* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 4, !alias.scope !23
  %134 = bitcast %"struct.std::pair"* %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 4, !alias.scope !26, !noalias !23
  %135 = getelementptr %"struct.std::pair", %"struct.std::pair"* %127, i64 2
  %136 = bitcast %"struct.std::pair"* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 4, !alias.scope !26, !noalias !23
  %137 = add nuw i64 %92, 16
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !28

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr %"struct.std::pair", %"struct.std::pair"* %56, i64 %144
  %147 = getelementptr %"struct.std::pair", %"struct.std::pair"* %38, i64 %144
  %148 = bitcast %"struct.std::pair"* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 4, !alias.scope !23
  %150 = getelementptr %"struct.std::pair", %"struct.std::pair"* %147, i64 2
  %151 = bitcast %"struct.std::pair"* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 4, !alias.scope !23
  %153 = bitcast %"struct.std::pair"* %146 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %153, align 4, !alias.scope !26, !noalias !23
  %154 = getelementptr %"struct.std::pair", %"struct.std::pair"* %146, i64 2
  %155 = bitcast %"struct.std::pair"* %154 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %155, align 4, !alias.scope !26, !noalias !23
  %156 = add nuw i64 %144, 4
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !31

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %65, %81
  br i1 %160, label %173, label %161

161:                                              ; preds = %67, %61, %159
  %162 = phi %"struct.std::pair"* [ %56, %67 ], [ %56, %61 ], [ %82, %159 ]
  %163 = phi %"struct.std::pair"* [ %38, %67 ], [ %38, %61 ], [ %83, %159 ]
  br label %164

164:                                              ; preds = %161, %164
  %165 = phi %"struct.std::pair"* [ %171, %164 ], [ %162, %161 ]
  %166 = phi %"struct.std::pair"* [ %170, %164 ], [ %163, %161 ]
  %167 = bitcast %"struct.std::pair"* %166 to i64*
  %168 = bitcast %"struct.std::pair"* %165 to i64*
  %169 = load i64, i64* %167, align 4
  store i64 %169, i64* %168, align 4
  %170 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %166, i64 1
  %171 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %165, i64 1
  %172 = icmp eq %"struct.std::pair"* %170, %29
  br i1 %172, label %173, label %164, !llvm.loop !33

173:                                              ; preds = %164, %159, %46
  %174 = phi %"struct.std::pair"* [ %56, %46 ], [ %82, %159 ], [ %171, %164 ]
  %175 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %174, i64 1
  %176 = icmp eq %"struct.std::pair"* %38, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %173
  %178 = bitcast %"struct.std::pair"* %38 to i8*
  call void @_ZdlPv(i8* nonnull %178) #10
  br label %179

179:                                              ; preds = %173, %177
  store i8* %55, i8** %13, align 8, !tbaa !12
  store %"struct.std::pair"* %175, %"struct.std::pair"** %10, align 8, !tbaa !17
  %180 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %56, i64 %53
  store %"struct.std::pair"* %180, %"struct.std::pair"** %11, align 8, !tbaa !18
  br label %181

181:                                              ; preds = %32, %179
  %182 = load i32, i32* %2, align 4, !tbaa !19
  %183 = load i32, i32* %14, align 8, !tbaa !3
  %184 = icmp eq i32 %183, 100005
  br i1 %184, label %185, label %188

185:                                              ; preds = %181
  %186 = load i64, i64* %16, align 8, !tbaa !11
  %187 = add nsw i64 %186, 1
  store i64 %187, i64* %16, align 8, !tbaa !11
  store i32 %182, i32* %15, align 4, !tbaa !10
  store i32 %182, i32* %14, align 8, !tbaa !3
  br label %207

188:                                              ; preds = %181
  %189 = add nsw i32 %182, 1
  %190 = icmp eq i32 %189, %183
  br i1 %190, label %191, label %202

191:                                              ; preds = %188
  %192 = add nsw i32 %183, -1
  store i32 %192, i32* %14, align 8, !tbaa !3
  %193 = load i32, i32* %15, align 4, !tbaa !10
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %15, align 4, !tbaa !10
  %195 = sext i32 %183 to i64
  %196 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 6, i64 %195
  %197 = load i64, i64* %196, align 8, !tbaa !34
  %198 = sext i32 %182 to i64
  %199 = sub i64 %197, %198
  %200 = load i64, i64* %16, align 8, !tbaa !11
  %201 = add nsw i64 %199, %200
  store i64 %201, i64* %16, align 8, !tbaa !11
  br label %207

202:                                              ; preds = %188
  %203 = load i32, i32* %15, align 4, !tbaa !10
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %15, align 4, !tbaa !10
  %205 = load i64, i64* %16, align 8, !tbaa !11
  %206 = add nsw i64 %205, 1
  store i64 %206, i64* %16, align 8, !tbaa !11
  br label %207

207:                                              ; preds = %185, %191, %202
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  %208 = add nuw nsw i32 %27, 1
  %209 = load i32, i32* %5, align 8, !tbaa !15
  %210 = icmp slt i32 %208, %209
  br i1 %210, label %26, label %19, !llvm.loop !35

211:                                              ; preds = %260, %24
  %212 = phi i64 [ %25, %24 ], [ %261, %260 ]
  %213 = icmp sgt i64 %212, 0
  br i1 %213, label %266, label %265

214:                                              ; preds = %19, %260
  %215 = phi i32 [ %262, %260 ], [ 0, %19 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #10
  %216 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %3)
  %217 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %216, i32* nonnull align 4 dereferenceable(4) %4)
  %218 = load i32, i32* %3, align 4, !tbaa !19
  %219 = load i32, i32* %4, align 4, !tbaa !19
  %220 = icmp sgt i32 %218, %219
  br i1 %220, label %221, label %222

221:                                              ; preds = %214
  store i32 %219, i32* %3, align 4, !tbaa !19
  store i32 %218, i32* %4, align 4, !tbaa !19
  br label %222

222:                                              ; preds = %221, %214
  %223 = phi i32 [ %218, %221 ], [ %219, %214 ]
  %224 = phi i32 [ %219, %221 ], [ %218, %214 ]
  %225 = load i32, i32* %14, align 8, !tbaa !3
  %226 = load i32, i32* %15, align 4, !tbaa !10
  %227 = icmp eq i32 %225, %226
  br i1 %227, label %228, label %231

228:                                              ; preds = %222
  %229 = load i64, i64* %16, align 8, !tbaa !11
  %230 = add nsw i64 %229, -1
  br label %243

231:                                              ; preds = %222
  %232 = icmp eq i32 %225, %224
  br i1 %232, label %233, label %235

233:                                              ; preds = %231
  %234 = add nsw i32 %224, 1
  store i32 %234, i32* %14, align 8, !tbaa !3
  br label %237

235:                                              ; preds = %231
  %236 = add nsw i32 %226, -1
  br label %237

237:                                              ; preds = %233, %235
  %238 = phi i32 [ %236, %235 ], [ %226, %233 ]
  %239 = phi i32 [ %225, %235 ], [ %234, %233 ]
  %240 = load i64, i64* %16, align 8, !tbaa !11
  %241 = add nsw i64 %240, -1
  store i64 %241, i64* %16, align 8, !tbaa !11
  %242 = icmp eq i32 %239, 100005
  br i1 %242, label %243, label %246

243:                                              ; preds = %228, %237
  %244 = phi i64 [ %230, %228 ], [ %241, %237 ]
  %245 = add nsw i64 %244, 1
  store i64 %245, i64* %16, align 8, !tbaa !11
  store i32 %223, i32* %15, align 4, !tbaa !10
  store i32 %223, i32* %14, align 8, !tbaa !3
  br label %260

246:                                              ; preds = %237
  %247 = add nsw i32 %223, 1
  %248 = icmp eq i32 %247, %239
  br i1 %248, label %249, label %258

249:                                              ; preds = %246
  %250 = add nsw i32 %239, -1
  store i32 %250, i32* %14, align 8, !tbaa !3
  %251 = add nsw i32 %238, 1
  store i32 %251, i32* %15, align 4, !tbaa !10
  %252 = sext i32 %239 to i64
  %253 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 6, i64 %252
  %254 = load i64, i64* %253, align 8, !tbaa !34
  %255 = sext i32 %223 to i64
  %256 = sub i64 %254, %255
  %257 = add nsw i64 %256, %241
  store i64 %257, i64* %16, align 8, !tbaa !11
  br label %260

258:                                              ; preds = %246
  %259 = add nsw i32 %238, 1
  store i32 %259, i32* %15, align 4, !tbaa !10
  store i64 %240, i64* %16, align 8, !tbaa !11
  br label %260

260:                                              ; preds = %243, %249, %258
  %261 = phi i64 [ %245, %243 ], [ %257, %249 ], [ %240, %258 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #10
  %262 = add nuw nsw i32 %215, 1
  %263 = load i32, i32* %7, align 4, !tbaa !16
  %264 = icmp slt i32 %262, %263
  br i1 %264, label %214, label %211, !llvm.loop !36

265:                                              ; preds = %296, %211
  ret void

266:                                              ; preds = %211, %296
  %267 = phi i64 [ %300, %296 ], [ 0, %211 ]
  %268 = getelementptr inbounds %class.CarShow, %class.CarShow* %0, i64 0, i32 6, i64 %267
  %269 = load i64, i64* %268, align 8, !tbaa !34
  %270 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIxEERSoT_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 %269)
  %271 = bitcast %"class.std::basic_ostream"* %270 to i8**
  %272 = load i8*, i8** %271, align 8, !tbaa !37
  %273 = getelementptr i8, i8* %272, i64 -24
  %274 = bitcast i8* %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"class.std::basic_ostream"* %270 to i8*
  %277 = add nsw i64 %275, 240
  %278 = getelementptr inbounds i8, i8* %276, i64 %277
  %279 = bitcast i8* %278 to %"class.std::ctype"**
  %280 = load %"class.std::ctype"*, %"class.std::ctype"** %279, align 8, !tbaa !39
  %281 = icmp eq %"class.std::ctype"* %280, null
  br i1 %281, label %282, label %283

282:                                              ; preds = %266
  call void @_ZSt16__throw_bad_castv() #11
  unreachable

283:                                              ; preds = %266
  %284 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %280, i64 0, i32 8
  %285 = load i8, i8* %284, align 8, !tbaa !42
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %290, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %280, i64 0, i32 9, i64 10
  %289 = load i8, i8* %288, align 1, !tbaa !44
  br label %296

290:                                              ; preds = %283
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %280)
  %291 = bitcast %"class.std::ctype"* %280 to i8 (%"class.std::ctype"*, i8)***
  %292 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %291, align 8, !tbaa !37
  %293 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %292, i64 6
  %294 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %293, align 8
  %295 = call signext i8 %294(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %280, i8 signext 10)
  br label %296

296:                                              ; preds = %287, %290
  %297 = phi i8 [ %289, %287 ], [ %295, %290 ]
  %298 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %270, i8 signext %297)
  %299 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %298)
  %300 = add nuw nsw i64 %267, 1
  %301 = load i64, i64* %16, align 8, !tbaa !11
  %302 = icmp sgt i64 %301, %300
  br i1 %302, label %266, label %265, !llvm.loop !45
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #8

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIxEERSoT_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #6

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_CarShow.cpp() #5 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { argmemonly nofree nounwind willreturn writeonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn }
attributes #12 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !6, i64 32}
!4 = !{!"_ZTS7CarShow", !5, i64 0, !6, i64 24, !6, i64 28, !6, i64 32, !6, i64 36, !9, i64 40, !7, i64 48}
!5 = !{!"_ZTSSt6vectorISt4pairIiiESaIS1_EE"}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long long", !7, i64 0}
!10 = !{!4, !6, i64 36}
!11 = !{!4, !9, i64 40}
!12 = !{!13, !14, i64 0}
!13 = !{!"_ZTSNSt12_Vector_baseISt4pairIiiESaIS1_EE17_Vector_impl_dataE", !14, i64 0, !14, i64 8, !14, i64 16}
!14 = !{!"any pointer", !7, i64 0}
!15 = !{!4, !6, i64 24}
!16 = !{!4, !6, i64 28}
!17 = !{!13, !14, i64 8}
!18 = !{!13, !14, i64 16}
!19 = !{!6, !6, i64 0}
!20 = !{!21, !6, i64 0}
!21 = !{!"_ZTSSt4pairIiiE", !6, i64 0, !6, i64 4}
!22 = !{!21, !6, i64 4}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !29, !30}
!29 = !{!"llvm.loop.mustprogress"}
!30 = !{!"llvm.loop.isvectorized", i32 1}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.unroll.disable"}
!33 = distinct !{!33, !29, !30}
!34 = !{!9, !9, i64 0}
!35 = distinct !{!35, !29}
!36 = distinct !{!36, !29}
!37 = !{!38, !38, i64 0}
!38 = !{!"vtable pointer", !8, i64 0}
!39 = !{!40, !14, i64 240}
!40 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !14, i64 216, !7, i64 224, !41, i64 225, !14, i64 232, !14, i64 240, !14, i64 248, !14, i64 256}
!41 = !{!"bool", !7, i64 0}
!42 = !{!43, !7, i64 56}
!43 = !{!"_ZTSSt5ctypeIcE", !14, i64 16, !41, i64 24, !14, i64 32, !14, i64 40, !14, i64 48, !7, i64 56, !7, i64 57, !7, i64 313, !7, i64 569}
!44 = !{!7, !7, i64 0}
!45 = distinct !{!45, !29}
