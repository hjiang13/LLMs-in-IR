; ModuleID = './GameOfThrones1.cpp'
source_filename = "./GameOfThrones1.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [17 x i8] c"Enter a string: \00", align 1
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"YES\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"NO\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_GameOfThrones1.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nosync nounwind readonly uwtable
define dso_local zeroext i1 @_Z21isAnagramOfPalindromeRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nocapture nonnull readonly align 8 dereferenceable(32) %0) local_unnamed_addr #3 {
  %2 = alloca [256 x i32], align 16
  %3 = bitcast [256 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %3) #11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1024) %3, i8 0, i64 1024, i1 false)
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !tbaa !3
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8, !tbaa !10
  %8 = getelementptr inbounds i8, i8* %5, i64 %7
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %28, label %10

10:                                               ; preds = %1
  %11 = add i64 %7, -1
  %12 = and i64 %7, 3
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %10, %14
  %15 = phi i8* [ %22, %14 ], [ %5, %10 ]
  %16 = phi i64 [ %23, %14 ], [ %12, %10 ]
  %17 = load i8, i8* %15, align 1, !tbaa !11
  %18 = zext i8 %17 to i64
  %19 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4, !tbaa !12
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %19, align 4, !tbaa !12
  %22 = getelementptr inbounds i8, i8* %15, i64 1
  %23 = add i64 %16, -1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %14, !llvm.loop !14

25:                                               ; preds = %14, %10
  %26 = phi i8* [ %5, %10 ], [ %22, %14 ]
  %27 = icmp ult i64 %11, 3
  br i1 %27, label %28, label %349

28:                                               ; preds = %1, %349, %25
  %29 = bitcast [256 x i32]* %2 to <4 x i32>*
  %30 = load <4 x i32>, <4 x i32>* %29, align 16, !tbaa !12
  %31 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 4
  %32 = bitcast i32* %31 to <4 x i32>*
  %33 = load <4 x i32>, <4 x i32>* %32, align 16, !tbaa !12
  %34 = and <4 x i32> %30, <i32 1, i32 1, i32 1, i32 1>
  %35 = and <4 x i32> %33, <i32 1, i32 1, i32 1, i32 1>
  %36 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 8
  %37 = bitcast i32* %36 to <4 x i32>*
  %38 = load <4 x i32>, <4 x i32>* %37, align 16, !tbaa !12
  %39 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 12
  %40 = bitcast i32* %39 to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 16, !tbaa !12
  %42 = and <4 x i32> %38, <i32 1, i32 1, i32 1, i32 1>
  %43 = and <4 x i32> %41, <i32 1, i32 1, i32 1, i32 1>
  %44 = add nuw nsw <4 x i32> %42, %34
  %45 = add nuw nsw <4 x i32> %43, %35
  %46 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 16
  %47 = bitcast i32* %46 to <4 x i32>*
  %48 = load <4 x i32>, <4 x i32>* %47, align 16, !tbaa !12
  %49 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 20
  %50 = bitcast i32* %49 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 16, !tbaa !12
  %52 = and <4 x i32> %48, <i32 1, i32 1, i32 1, i32 1>
  %53 = and <4 x i32> %51, <i32 1, i32 1, i32 1, i32 1>
  %54 = add nuw nsw <4 x i32> %52, %44
  %55 = add nuw nsw <4 x i32> %53, %45
  %56 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 24
  %57 = bitcast i32* %56 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 16, !tbaa !12
  %59 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 28
  %60 = bitcast i32* %59 to <4 x i32>*
  %61 = load <4 x i32>, <4 x i32>* %60, align 16, !tbaa !12
  %62 = and <4 x i32> %58, <i32 1, i32 1, i32 1, i32 1>
  %63 = and <4 x i32> %61, <i32 1, i32 1, i32 1, i32 1>
  %64 = add nuw nsw <4 x i32> %62, %54
  %65 = add nuw nsw <4 x i32> %63, %55
  %66 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 32
  %67 = bitcast i32* %66 to <4 x i32>*
  %68 = load <4 x i32>, <4 x i32>* %67, align 16, !tbaa !12
  %69 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 36
  %70 = bitcast i32* %69 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 16, !tbaa !12
  %72 = and <4 x i32> %68, <i32 1, i32 1, i32 1, i32 1>
  %73 = and <4 x i32> %71, <i32 1, i32 1, i32 1, i32 1>
  %74 = add nuw nsw <4 x i32> %72, %64
  %75 = add nuw nsw <4 x i32> %73, %65
  %76 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 40
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 16, !tbaa !12
  %79 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 44
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 16, !tbaa !12
  %82 = and <4 x i32> %78, <i32 1, i32 1, i32 1, i32 1>
  %83 = and <4 x i32> %81, <i32 1, i32 1, i32 1, i32 1>
  %84 = add nuw nsw <4 x i32> %82, %74
  %85 = add nuw nsw <4 x i32> %83, %75
  %86 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 48
  %87 = bitcast i32* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 16, !tbaa !12
  %89 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 52
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 16, !tbaa !12
  %92 = and <4 x i32> %88, <i32 1, i32 1, i32 1, i32 1>
  %93 = and <4 x i32> %91, <i32 1, i32 1, i32 1, i32 1>
  %94 = add nuw nsw <4 x i32> %92, %84
  %95 = add nuw nsw <4 x i32> %93, %85
  %96 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 56
  %97 = bitcast i32* %96 to <4 x i32>*
  %98 = load <4 x i32>, <4 x i32>* %97, align 16, !tbaa !12
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 60
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 16, !tbaa !12
  %102 = and <4 x i32> %98, <i32 1, i32 1, i32 1, i32 1>
  %103 = and <4 x i32> %101, <i32 1, i32 1, i32 1, i32 1>
  %104 = add <4 x i32> %102, %94
  %105 = add <4 x i32> %103, %95
  %106 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 64
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 16, !tbaa !12
  %109 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 68
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 16, !tbaa !12
  %112 = and <4 x i32> %108, <i32 1, i32 1, i32 1, i32 1>
  %113 = and <4 x i32> %111, <i32 1, i32 1, i32 1, i32 1>
  %114 = add <4 x i32> %112, %104
  %115 = add <4 x i32> %113, %105
  %116 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 72
  %117 = bitcast i32* %116 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 16, !tbaa !12
  %119 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 76
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 16, !tbaa !12
  %122 = and <4 x i32> %118, <i32 1, i32 1, i32 1, i32 1>
  %123 = and <4 x i32> %121, <i32 1, i32 1, i32 1, i32 1>
  %124 = add <4 x i32> %122, %114
  %125 = add <4 x i32> %123, %115
  %126 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 80
  %127 = bitcast i32* %126 to <4 x i32>*
  %128 = load <4 x i32>, <4 x i32>* %127, align 16, !tbaa !12
  %129 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 84
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 16, !tbaa !12
  %132 = and <4 x i32> %128, <i32 1, i32 1, i32 1, i32 1>
  %133 = and <4 x i32> %131, <i32 1, i32 1, i32 1, i32 1>
  %134 = add <4 x i32> %132, %124
  %135 = add <4 x i32> %133, %125
  %136 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 88
  %137 = bitcast i32* %136 to <4 x i32>*
  %138 = load <4 x i32>, <4 x i32>* %137, align 16, !tbaa !12
  %139 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 92
  %140 = bitcast i32* %139 to <4 x i32>*
  %141 = load <4 x i32>, <4 x i32>* %140, align 16, !tbaa !12
  %142 = and <4 x i32> %138, <i32 1, i32 1, i32 1, i32 1>
  %143 = and <4 x i32> %141, <i32 1, i32 1, i32 1, i32 1>
  %144 = add <4 x i32> %142, %134
  %145 = add <4 x i32> %143, %135
  %146 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 96
  %147 = bitcast i32* %146 to <4 x i32>*
  %148 = load <4 x i32>, <4 x i32>* %147, align 16, !tbaa !12
  %149 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 100
  %150 = bitcast i32* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 16, !tbaa !12
  %152 = and <4 x i32> %148, <i32 1, i32 1, i32 1, i32 1>
  %153 = and <4 x i32> %151, <i32 1, i32 1, i32 1, i32 1>
  %154 = add <4 x i32> %152, %144
  %155 = add <4 x i32> %153, %145
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 104
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 16, !tbaa !12
  %159 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 108
  %160 = bitcast i32* %159 to <4 x i32>*
  %161 = load <4 x i32>, <4 x i32>* %160, align 16, !tbaa !12
  %162 = and <4 x i32> %158, <i32 1, i32 1, i32 1, i32 1>
  %163 = and <4 x i32> %161, <i32 1, i32 1, i32 1, i32 1>
  %164 = add <4 x i32> %162, %154
  %165 = add <4 x i32> %163, %155
  %166 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 112
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 16, !tbaa !12
  %169 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 116
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 16, !tbaa !12
  %172 = and <4 x i32> %168, <i32 1, i32 1, i32 1, i32 1>
  %173 = and <4 x i32> %171, <i32 1, i32 1, i32 1, i32 1>
  %174 = add <4 x i32> %172, %164
  %175 = add <4 x i32> %173, %165
  %176 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 120
  %177 = bitcast i32* %176 to <4 x i32>*
  %178 = load <4 x i32>, <4 x i32>* %177, align 16, !tbaa !12
  %179 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 124
  %180 = bitcast i32* %179 to <4 x i32>*
  %181 = load <4 x i32>, <4 x i32>* %180, align 16, !tbaa !12
  %182 = and <4 x i32> %178, <i32 1, i32 1, i32 1, i32 1>
  %183 = and <4 x i32> %181, <i32 1, i32 1, i32 1, i32 1>
  %184 = add <4 x i32> %182, %174
  %185 = add <4 x i32> %183, %175
  %186 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 128
  %187 = bitcast i32* %186 to <4 x i32>*
  %188 = load <4 x i32>, <4 x i32>* %187, align 16, !tbaa !12
  %189 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 132
  %190 = bitcast i32* %189 to <4 x i32>*
  %191 = load <4 x i32>, <4 x i32>* %190, align 16, !tbaa !12
  %192 = and <4 x i32> %188, <i32 1, i32 1, i32 1, i32 1>
  %193 = and <4 x i32> %191, <i32 1, i32 1, i32 1, i32 1>
  %194 = add <4 x i32> %192, %184
  %195 = add <4 x i32> %193, %185
  %196 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 136
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 16, !tbaa !12
  %199 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 140
  %200 = bitcast i32* %199 to <4 x i32>*
  %201 = load <4 x i32>, <4 x i32>* %200, align 16, !tbaa !12
  %202 = and <4 x i32> %198, <i32 1, i32 1, i32 1, i32 1>
  %203 = and <4 x i32> %201, <i32 1, i32 1, i32 1, i32 1>
  %204 = add <4 x i32> %202, %194
  %205 = add <4 x i32> %203, %195
  %206 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 144
  %207 = bitcast i32* %206 to <4 x i32>*
  %208 = load <4 x i32>, <4 x i32>* %207, align 16, !tbaa !12
  %209 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 148
  %210 = bitcast i32* %209 to <4 x i32>*
  %211 = load <4 x i32>, <4 x i32>* %210, align 16, !tbaa !12
  %212 = and <4 x i32> %208, <i32 1, i32 1, i32 1, i32 1>
  %213 = and <4 x i32> %211, <i32 1, i32 1, i32 1, i32 1>
  %214 = add <4 x i32> %212, %204
  %215 = add <4 x i32> %213, %205
  %216 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 152
  %217 = bitcast i32* %216 to <4 x i32>*
  %218 = load <4 x i32>, <4 x i32>* %217, align 16, !tbaa !12
  %219 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 156
  %220 = bitcast i32* %219 to <4 x i32>*
  %221 = load <4 x i32>, <4 x i32>* %220, align 16, !tbaa !12
  %222 = and <4 x i32> %218, <i32 1, i32 1, i32 1, i32 1>
  %223 = and <4 x i32> %221, <i32 1, i32 1, i32 1, i32 1>
  %224 = add <4 x i32> %222, %214
  %225 = add <4 x i32> %223, %215
  %226 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 160
  %227 = bitcast i32* %226 to <4 x i32>*
  %228 = load <4 x i32>, <4 x i32>* %227, align 16, !tbaa !12
  %229 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 164
  %230 = bitcast i32* %229 to <4 x i32>*
  %231 = load <4 x i32>, <4 x i32>* %230, align 16, !tbaa !12
  %232 = and <4 x i32> %228, <i32 1, i32 1, i32 1, i32 1>
  %233 = and <4 x i32> %231, <i32 1, i32 1, i32 1, i32 1>
  %234 = add <4 x i32> %232, %224
  %235 = add <4 x i32> %233, %225
  %236 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 168
  %237 = bitcast i32* %236 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 16, !tbaa !12
  %239 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 172
  %240 = bitcast i32* %239 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 16, !tbaa !12
  %242 = and <4 x i32> %238, <i32 1, i32 1, i32 1, i32 1>
  %243 = and <4 x i32> %241, <i32 1, i32 1, i32 1, i32 1>
  %244 = add <4 x i32> %242, %234
  %245 = add <4 x i32> %243, %235
  %246 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 176
  %247 = bitcast i32* %246 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 16, !tbaa !12
  %249 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 180
  %250 = bitcast i32* %249 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 16, !tbaa !12
  %252 = and <4 x i32> %248, <i32 1, i32 1, i32 1, i32 1>
  %253 = and <4 x i32> %251, <i32 1, i32 1, i32 1, i32 1>
  %254 = add <4 x i32> %252, %244
  %255 = add <4 x i32> %253, %245
  %256 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 184
  %257 = bitcast i32* %256 to <4 x i32>*
  %258 = load <4 x i32>, <4 x i32>* %257, align 16, !tbaa !12
  %259 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 188
  %260 = bitcast i32* %259 to <4 x i32>*
  %261 = load <4 x i32>, <4 x i32>* %260, align 16, !tbaa !12
  %262 = and <4 x i32> %258, <i32 1, i32 1, i32 1, i32 1>
  %263 = and <4 x i32> %261, <i32 1, i32 1, i32 1, i32 1>
  %264 = add <4 x i32> %262, %254
  %265 = add <4 x i32> %263, %255
  %266 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 192
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 16, !tbaa !12
  %269 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 196
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 16, !tbaa !12
  %272 = and <4 x i32> %268, <i32 1, i32 1, i32 1, i32 1>
  %273 = and <4 x i32> %271, <i32 1, i32 1, i32 1, i32 1>
  %274 = add <4 x i32> %272, %264
  %275 = add <4 x i32> %273, %265
  %276 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 200
  %277 = bitcast i32* %276 to <4 x i32>*
  %278 = load <4 x i32>, <4 x i32>* %277, align 16, !tbaa !12
  %279 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 204
  %280 = bitcast i32* %279 to <4 x i32>*
  %281 = load <4 x i32>, <4 x i32>* %280, align 16, !tbaa !12
  %282 = and <4 x i32> %278, <i32 1, i32 1, i32 1, i32 1>
  %283 = and <4 x i32> %281, <i32 1, i32 1, i32 1, i32 1>
  %284 = add <4 x i32> %282, %274
  %285 = add <4 x i32> %283, %275
  %286 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 208
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 16, !tbaa !12
  %289 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 212
  %290 = bitcast i32* %289 to <4 x i32>*
  %291 = load <4 x i32>, <4 x i32>* %290, align 16, !tbaa !12
  %292 = and <4 x i32> %288, <i32 1, i32 1, i32 1, i32 1>
  %293 = and <4 x i32> %291, <i32 1, i32 1, i32 1, i32 1>
  %294 = add <4 x i32> %292, %284
  %295 = add <4 x i32> %293, %285
  %296 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 216
  %297 = bitcast i32* %296 to <4 x i32>*
  %298 = load <4 x i32>, <4 x i32>* %297, align 16, !tbaa !12
  %299 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 220
  %300 = bitcast i32* %299 to <4 x i32>*
  %301 = load <4 x i32>, <4 x i32>* %300, align 16, !tbaa !12
  %302 = and <4 x i32> %298, <i32 1, i32 1, i32 1, i32 1>
  %303 = and <4 x i32> %301, <i32 1, i32 1, i32 1, i32 1>
  %304 = add <4 x i32> %302, %294
  %305 = add <4 x i32> %303, %295
  %306 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 224
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 16, !tbaa !12
  %309 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 228
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 16, !tbaa !12
  %312 = and <4 x i32> %308, <i32 1, i32 1, i32 1, i32 1>
  %313 = and <4 x i32> %311, <i32 1, i32 1, i32 1, i32 1>
  %314 = add <4 x i32> %312, %304
  %315 = add <4 x i32> %313, %305
  %316 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 232
  %317 = bitcast i32* %316 to <4 x i32>*
  %318 = load <4 x i32>, <4 x i32>* %317, align 16, !tbaa !12
  %319 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 236
  %320 = bitcast i32* %319 to <4 x i32>*
  %321 = load <4 x i32>, <4 x i32>* %320, align 16, !tbaa !12
  %322 = and <4 x i32> %318, <i32 1, i32 1, i32 1, i32 1>
  %323 = and <4 x i32> %321, <i32 1, i32 1, i32 1, i32 1>
  %324 = add <4 x i32> %322, %314
  %325 = add <4 x i32> %323, %315
  %326 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 240
  %327 = bitcast i32* %326 to <4 x i32>*
  %328 = load <4 x i32>, <4 x i32>* %327, align 16, !tbaa !12
  %329 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 244
  %330 = bitcast i32* %329 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 16, !tbaa !12
  %332 = and <4 x i32> %328, <i32 1, i32 1, i32 1, i32 1>
  %333 = and <4 x i32> %331, <i32 1, i32 1, i32 1, i32 1>
  %334 = add <4 x i32> %332, %324
  %335 = add <4 x i32> %333, %325
  %336 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 248
  %337 = bitcast i32* %336 to <4 x i32>*
  %338 = load <4 x i32>, <4 x i32>* %337, align 16, !tbaa !12
  %339 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 252
  %340 = bitcast i32* %339 to <4 x i32>*
  %341 = load <4 x i32>, <4 x i32>* %340, align 16, !tbaa !12
  %342 = and <4 x i32> %338, <i32 1, i32 1, i32 1, i32 1>
  %343 = and <4 x i32> %341, <i32 1, i32 1, i32 1, i32 1>
  %344 = add <4 x i32> %342, %334
  %345 = add <4 x i32> %343, %335
  %346 = add <4 x i32> %345, %344
  %347 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %346)
  %348 = icmp ult i32 %347, 2
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %3) #11
  ret i1 %348

349:                                              ; preds = %25, %349
  %350 = phi i8* [ %374, %349 ], [ %26, %25 ]
  %351 = load i8, i8* %350, align 1, !tbaa !11
  %352 = zext i8 %351 to i64
  %353 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %352
  %354 = load i32, i32* %353, align 4, !tbaa !12
  %355 = add nsw i32 %354, 1
  store i32 %355, i32* %353, align 4, !tbaa !12
  %356 = getelementptr inbounds i8, i8* %350, i64 1
  %357 = load i8, i8* %356, align 1, !tbaa !11
  %358 = zext i8 %357 to i64
  %359 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %358
  %360 = load i32, i32* %359, align 4, !tbaa !12
  %361 = add nsw i32 %360, 1
  store i32 %361, i32* %359, align 4, !tbaa !12
  %362 = getelementptr inbounds i8, i8* %350, i64 2
  %363 = load i8, i8* %362, align 1, !tbaa !11
  %364 = zext i8 %363 to i64
  %365 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %364
  %366 = load i32, i32* %365, align 4, !tbaa !12
  %367 = add nsw i32 %366, 1
  store i32 %367, i32* %365, align 4, !tbaa !12
  %368 = getelementptr inbounds i8, i8* %350, i64 3
  %369 = load i8, i8* %368, align 1, !tbaa !11
  %370 = zext i8 %369 to i64
  %371 = getelementptr inbounds [256 x i32], [256 x i32]* %2, i64 0, i64 %370
  %372 = load i32, i32* %371, align 4, !tbaa !12
  %373 = add nsw i32 %372, 1
  store i32 %373, i32* %371, align 4, !tbaa !12
  %374 = getelementptr inbounds i8, i8* %350, i64 4
  %375 = icmp eq i8* %374, %8
  br i1 %375, label %28, label %349
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #6 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca [256 x i32], align 16
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %2 to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !16
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  store i64 0, i64* %6, align 8, !tbaa !10
  %7 = bitcast %union.anon* %4 to i8*
  store i8 0, i8* %7, align 8, !tbaa !11
  %8 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16)
          to label %9 unwind label %444

9:                                                ; preds = %0
  %10 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8, !tbaa !17
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, 240
  %15 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %14
  %16 = bitcast i8* %15 to %"class.std::ctype"**
  %17 = load %"class.std::ctype"*, %"class.std::ctype"** %16, align 8, !tbaa !19
  %18 = icmp eq %"class.std::ctype"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %9
  invoke void @_ZSt16__throw_bad_castv() #12
          to label %20 unwind label %444

20:                                               ; preds = %19
  unreachable

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %17, i64 0, i32 8
  %23 = load i8, i8* %22, align 8, !tbaa !22
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %17, i64 0, i32 9, i64 10
  %27 = load i8, i8* %26, align 1, !tbaa !11
  br label %35

28:                                               ; preds = %21
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %17)
          to label %29 unwind label %444

29:                                               ; preds = %28
  %30 = bitcast %"class.std::ctype"* %17 to i8 (%"class.std::ctype"*, i8)***
  %31 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %30, align 8, !tbaa !17
  %32 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %31, i64 6
  %33 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %32, align 8
  %34 = invoke signext i8 %33(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %17, i8 signext 10)
          to label %35 unwind label %444

35:                                               ; preds = %29, %25
  %36 = phi i8 [ %27, %25 ], [ %34, %29 ]
  %37 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2, i8 signext %36)
          to label %38 unwind label %444

38:                                               ; preds = %35
  %39 = bitcast [256 x i32]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %39) #11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1024) %39, i8 0, i64 1024, i1 false) #11
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8, !tbaa !3
  %42 = load i64, i64* %6, align 8, !tbaa !10
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %63, label %45

45:                                               ; preds = %38
  %46 = add i64 %42, -1
  %47 = and i64 %42, 3
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %45, %49
  %50 = phi i8* [ %57, %49 ], [ %41, %45 ]
  %51 = phi i64 [ %58, %49 ], [ %47, %45 ]
  %52 = load i8, i8* %50, align 1, !tbaa !11
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %53
  %55 = load i32, i32* %54, align 4, !tbaa !12
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %54, align 4, !tbaa !12
  %57 = getelementptr inbounds i8, i8* %50, i64 1
  %58 = add i64 %51, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %49, !llvm.loop !24

60:                                               ; preds = %49, %45
  %61 = phi i8* [ %41, %45 ], [ %57, %49 ]
  %62 = icmp ult i64 %46, 3
  br i1 %62, label %63, label %384

63:                                               ; preds = %38, %384, %60
  %64 = bitcast [256 x i32]* %1 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 16, !tbaa !12
  %66 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  %68 = load <4 x i32>, <4 x i32>* %67, align 16, !tbaa !12
  %69 = and <4 x i32> %65, <i32 1, i32 1, i32 1, i32 1>
  %70 = and <4 x i32> %68, <i32 1, i32 1, i32 1, i32 1>
  %71 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 8
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 16, !tbaa !12
  %74 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 12
  %75 = bitcast i32* %74 to <4 x i32>*
  %76 = load <4 x i32>, <4 x i32>* %75, align 16, !tbaa !12
  %77 = and <4 x i32> %73, <i32 1, i32 1, i32 1, i32 1>
  %78 = and <4 x i32> %76, <i32 1, i32 1, i32 1, i32 1>
  %79 = add nuw nsw <4 x i32> %77, %69
  %80 = add nuw nsw <4 x i32> %78, %70
  %81 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 16
  %82 = bitcast i32* %81 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 16, !tbaa !12
  %84 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 20
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 16, !tbaa !12
  %87 = and <4 x i32> %83, <i32 1, i32 1, i32 1, i32 1>
  %88 = and <4 x i32> %86, <i32 1, i32 1, i32 1, i32 1>
  %89 = add nuw nsw <4 x i32> %87, %79
  %90 = add nuw nsw <4 x i32> %88, %80
  %91 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 24
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 16, !tbaa !12
  %94 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 28
  %95 = bitcast i32* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 16, !tbaa !12
  %97 = and <4 x i32> %93, <i32 1, i32 1, i32 1, i32 1>
  %98 = and <4 x i32> %96, <i32 1, i32 1, i32 1, i32 1>
  %99 = add nuw nsw <4 x i32> %97, %89
  %100 = add nuw nsw <4 x i32> %98, %90
  %101 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 32
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 16, !tbaa !12
  %104 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 36
  %105 = bitcast i32* %104 to <4 x i32>*
  %106 = load <4 x i32>, <4 x i32>* %105, align 16, !tbaa !12
  %107 = and <4 x i32> %103, <i32 1, i32 1, i32 1, i32 1>
  %108 = and <4 x i32> %106, <i32 1, i32 1, i32 1, i32 1>
  %109 = add nuw nsw <4 x i32> %107, %99
  %110 = add nuw nsw <4 x i32> %108, %100
  %111 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 40
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 16, !tbaa !12
  %114 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 44
  %115 = bitcast i32* %114 to <4 x i32>*
  %116 = load <4 x i32>, <4 x i32>* %115, align 16, !tbaa !12
  %117 = and <4 x i32> %113, <i32 1, i32 1, i32 1, i32 1>
  %118 = and <4 x i32> %116, <i32 1, i32 1, i32 1, i32 1>
  %119 = add nuw nsw <4 x i32> %117, %109
  %120 = add nuw nsw <4 x i32> %118, %110
  %121 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 48
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 16, !tbaa !12
  %124 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 52
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 16, !tbaa !12
  %127 = and <4 x i32> %123, <i32 1, i32 1, i32 1, i32 1>
  %128 = and <4 x i32> %126, <i32 1, i32 1, i32 1, i32 1>
  %129 = add nuw nsw <4 x i32> %127, %119
  %130 = add nuw nsw <4 x i32> %128, %120
  %131 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 56
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 16, !tbaa !12
  %134 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 60
  %135 = bitcast i32* %134 to <4 x i32>*
  %136 = load <4 x i32>, <4 x i32>* %135, align 16, !tbaa !12
  %137 = and <4 x i32> %133, <i32 1, i32 1, i32 1, i32 1>
  %138 = and <4 x i32> %136, <i32 1, i32 1, i32 1, i32 1>
  %139 = add <4 x i32> %137, %129
  %140 = add <4 x i32> %138, %130
  %141 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 64
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 16, !tbaa !12
  %144 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 68
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 16, !tbaa !12
  %147 = and <4 x i32> %143, <i32 1, i32 1, i32 1, i32 1>
  %148 = and <4 x i32> %146, <i32 1, i32 1, i32 1, i32 1>
  %149 = add <4 x i32> %147, %139
  %150 = add <4 x i32> %148, %140
  %151 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 72
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 16, !tbaa !12
  %154 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 76
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 16, !tbaa !12
  %157 = and <4 x i32> %153, <i32 1, i32 1, i32 1, i32 1>
  %158 = and <4 x i32> %156, <i32 1, i32 1, i32 1, i32 1>
  %159 = add <4 x i32> %157, %149
  %160 = add <4 x i32> %158, %150
  %161 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 80
  %162 = bitcast i32* %161 to <4 x i32>*
  %163 = load <4 x i32>, <4 x i32>* %162, align 16, !tbaa !12
  %164 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 84
  %165 = bitcast i32* %164 to <4 x i32>*
  %166 = load <4 x i32>, <4 x i32>* %165, align 16, !tbaa !12
  %167 = and <4 x i32> %163, <i32 1, i32 1, i32 1, i32 1>
  %168 = and <4 x i32> %166, <i32 1, i32 1, i32 1, i32 1>
  %169 = add <4 x i32> %167, %159
  %170 = add <4 x i32> %168, %160
  %171 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 88
  %172 = bitcast i32* %171 to <4 x i32>*
  %173 = load <4 x i32>, <4 x i32>* %172, align 16, !tbaa !12
  %174 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 92
  %175 = bitcast i32* %174 to <4 x i32>*
  %176 = load <4 x i32>, <4 x i32>* %175, align 16, !tbaa !12
  %177 = and <4 x i32> %173, <i32 1, i32 1, i32 1, i32 1>
  %178 = and <4 x i32> %176, <i32 1, i32 1, i32 1, i32 1>
  %179 = add <4 x i32> %177, %169
  %180 = add <4 x i32> %178, %170
  %181 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 96
  %182 = bitcast i32* %181 to <4 x i32>*
  %183 = load <4 x i32>, <4 x i32>* %182, align 16, !tbaa !12
  %184 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 100
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 16, !tbaa !12
  %187 = and <4 x i32> %183, <i32 1, i32 1, i32 1, i32 1>
  %188 = and <4 x i32> %186, <i32 1, i32 1, i32 1, i32 1>
  %189 = add <4 x i32> %187, %179
  %190 = add <4 x i32> %188, %180
  %191 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 104
  %192 = bitcast i32* %191 to <4 x i32>*
  %193 = load <4 x i32>, <4 x i32>* %192, align 16, !tbaa !12
  %194 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 108
  %195 = bitcast i32* %194 to <4 x i32>*
  %196 = load <4 x i32>, <4 x i32>* %195, align 16, !tbaa !12
  %197 = and <4 x i32> %193, <i32 1, i32 1, i32 1, i32 1>
  %198 = and <4 x i32> %196, <i32 1, i32 1, i32 1, i32 1>
  %199 = add <4 x i32> %197, %189
  %200 = add <4 x i32> %198, %190
  %201 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 112
  %202 = bitcast i32* %201 to <4 x i32>*
  %203 = load <4 x i32>, <4 x i32>* %202, align 16, !tbaa !12
  %204 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 116
  %205 = bitcast i32* %204 to <4 x i32>*
  %206 = load <4 x i32>, <4 x i32>* %205, align 16, !tbaa !12
  %207 = and <4 x i32> %203, <i32 1, i32 1, i32 1, i32 1>
  %208 = and <4 x i32> %206, <i32 1, i32 1, i32 1, i32 1>
  %209 = add <4 x i32> %207, %199
  %210 = add <4 x i32> %208, %200
  %211 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 120
  %212 = bitcast i32* %211 to <4 x i32>*
  %213 = load <4 x i32>, <4 x i32>* %212, align 16, !tbaa !12
  %214 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 124
  %215 = bitcast i32* %214 to <4 x i32>*
  %216 = load <4 x i32>, <4 x i32>* %215, align 16, !tbaa !12
  %217 = and <4 x i32> %213, <i32 1, i32 1, i32 1, i32 1>
  %218 = and <4 x i32> %216, <i32 1, i32 1, i32 1, i32 1>
  %219 = add <4 x i32> %217, %209
  %220 = add <4 x i32> %218, %210
  %221 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 128
  %222 = bitcast i32* %221 to <4 x i32>*
  %223 = load <4 x i32>, <4 x i32>* %222, align 16, !tbaa !12
  %224 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 132
  %225 = bitcast i32* %224 to <4 x i32>*
  %226 = load <4 x i32>, <4 x i32>* %225, align 16, !tbaa !12
  %227 = and <4 x i32> %223, <i32 1, i32 1, i32 1, i32 1>
  %228 = and <4 x i32> %226, <i32 1, i32 1, i32 1, i32 1>
  %229 = add <4 x i32> %227, %219
  %230 = add <4 x i32> %228, %220
  %231 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 136
  %232 = bitcast i32* %231 to <4 x i32>*
  %233 = load <4 x i32>, <4 x i32>* %232, align 16, !tbaa !12
  %234 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 140
  %235 = bitcast i32* %234 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 16, !tbaa !12
  %237 = and <4 x i32> %233, <i32 1, i32 1, i32 1, i32 1>
  %238 = and <4 x i32> %236, <i32 1, i32 1, i32 1, i32 1>
  %239 = add <4 x i32> %237, %229
  %240 = add <4 x i32> %238, %230
  %241 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 144
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 16, !tbaa !12
  %244 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 148
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 16, !tbaa !12
  %247 = and <4 x i32> %243, <i32 1, i32 1, i32 1, i32 1>
  %248 = and <4 x i32> %246, <i32 1, i32 1, i32 1, i32 1>
  %249 = add <4 x i32> %247, %239
  %250 = add <4 x i32> %248, %240
  %251 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 152
  %252 = bitcast i32* %251 to <4 x i32>*
  %253 = load <4 x i32>, <4 x i32>* %252, align 16, !tbaa !12
  %254 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 156
  %255 = bitcast i32* %254 to <4 x i32>*
  %256 = load <4 x i32>, <4 x i32>* %255, align 16, !tbaa !12
  %257 = and <4 x i32> %253, <i32 1, i32 1, i32 1, i32 1>
  %258 = and <4 x i32> %256, <i32 1, i32 1, i32 1, i32 1>
  %259 = add <4 x i32> %257, %249
  %260 = add <4 x i32> %258, %250
  %261 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 160
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 16, !tbaa !12
  %264 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 164
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 16, !tbaa !12
  %267 = and <4 x i32> %263, <i32 1, i32 1, i32 1, i32 1>
  %268 = and <4 x i32> %266, <i32 1, i32 1, i32 1, i32 1>
  %269 = add <4 x i32> %267, %259
  %270 = add <4 x i32> %268, %260
  %271 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 168
  %272 = bitcast i32* %271 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 16, !tbaa !12
  %274 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 172
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 16, !tbaa !12
  %277 = and <4 x i32> %273, <i32 1, i32 1, i32 1, i32 1>
  %278 = and <4 x i32> %276, <i32 1, i32 1, i32 1, i32 1>
  %279 = add <4 x i32> %277, %269
  %280 = add <4 x i32> %278, %270
  %281 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 176
  %282 = bitcast i32* %281 to <4 x i32>*
  %283 = load <4 x i32>, <4 x i32>* %282, align 16, !tbaa !12
  %284 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 180
  %285 = bitcast i32* %284 to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 16, !tbaa !12
  %287 = and <4 x i32> %283, <i32 1, i32 1, i32 1, i32 1>
  %288 = and <4 x i32> %286, <i32 1, i32 1, i32 1, i32 1>
  %289 = add <4 x i32> %287, %279
  %290 = add <4 x i32> %288, %280
  %291 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 184
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 16, !tbaa !12
  %294 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 188
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 16, !tbaa !12
  %297 = and <4 x i32> %293, <i32 1, i32 1, i32 1, i32 1>
  %298 = and <4 x i32> %296, <i32 1, i32 1, i32 1, i32 1>
  %299 = add <4 x i32> %297, %289
  %300 = add <4 x i32> %298, %290
  %301 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 192
  %302 = bitcast i32* %301 to <4 x i32>*
  %303 = load <4 x i32>, <4 x i32>* %302, align 16, !tbaa !12
  %304 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 196
  %305 = bitcast i32* %304 to <4 x i32>*
  %306 = load <4 x i32>, <4 x i32>* %305, align 16, !tbaa !12
  %307 = and <4 x i32> %303, <i32 1, i32 1, i32 1, i32 1>
  %308 = and <4 x i32> %306, <i32 1, i32 1, i32 1, i32 1>
  %309 = add <4 x i32> %307, %299
  %310 = add <4 x i32> %308, %300
  %311 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 200
  %312 = bitcast i32* %311 to <4 x i32>*
  %313 = load <4 x i32>, <4 x i32>* %312, align 16, !tbaa !12
  %314 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 204
  %315 = bitcast i32* %314 to <4 x i32>*
  %316 = load <4 x i32>, <4 x i32>* %315, align 16, !tbaa !12
  %317 = and <4 x i32> %313, <i32 1, i32 1, i32 1, i32 1>
  %318 = and <4 x i32> %316, <i32 1, i32 1, i32 1, i32 1>
  %319 = add <4 x i32> %317, %309
  %320 = add <4 x i32> %318, %310
  %321 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 208
  %322 = bitcast i32* %321 to <4 x i32>*
  %323 = load <4 x i32>, <4 x i32>* %322, align 16, !tbaa !12
  %324 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 212
  %325 = bitcast i32* %324 to <4 x i32>*
  %326 = load <4 x i32>, <4 x i32>* %325, align 16, !tbaa !12
  %327 = and <4 x i32> %323, <i32 1, i32 1, i32 1, i32 1>
  %328 = and <4 x i32> %326, <i32 1, i32 1, i32 1, i32 1>
  %329 = add <4 x i32> %327, %319
  %330 = add <4 x i32> %328, %320
  %331 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 216
  %332 = bitcast i32* %331 to <4 x i32>*
  %333 = load <4 x i32>, <4 x i32>* %332, align 16, !tbaa !12
  %334 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 220
  %335 = bitcast i32* %334 to <4 x i32>*
  %336 = load <4 x i32>, <4 x i32>* %335, align 16, !tbaa !12
  %337 = and <4 x i32> %333, <i32 1, i32 1, i32 1, i32 1>
  %338 = and <4 x i32> %336, <i32 1, i32 1, i32 1, i32 1>
  %339 = add <4 x i32> %337, %329
  %340 = add <4 x i32> %338, %330
  %341 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 224
  %342 = bitcast i32* %341 to <4 x i32>*
  %343 = load <4 x i32>, <4 x i32>* %342, align 16, !tbaa !12
  %344 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 228
  %345 = bitcast i32* %344 to <4 x i32>*
  %346 = load <4 x i32>, <4 x i32>* %345, align 16, !tbaa !12
  %347 = and <4 x i32> %343, <i32 1, i32 1, i32 1, i32 1>
  %348 = and <4 x i32> %346, <i32 1, i32 1, i32 1, i32 1>
  %349 = add <4 x i32> %347, %339
  %350 = add <4 x i32> %348, %340
  %351 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 232
  %352 = bitcast i32* %351 to <4 x i32>*
  %353 = load <4 x i32>, <4 x i32>* %352, align 16, !tbaa !12
  %354 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 236
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 16, !tbaa !12
  %357 = and <4 x i32> %353, <i32 1, i32 1, i32 1, i32 1>
  %358 = and <4 x i32> %356, <i32 1, i32 1, i32 1, i32 1>
  %359 = add <4 x i32> %357, %349
  %360 = add <4 x i32> %358, %350
  %361 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 240
  %362 = bitcast i32* %361 to <4 x i32>*
  %363 = load <4 x i32>, <4 x i32>* %362, align 16, !tbaa !12
  %364 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 244
  %365 = bitcast i32* %364 to <4 x i32>*
  %366 = load <4 x i32>, <4 x i32>* %365, align 16, !tbaa !12
  %367 = and <4 x i32> %363, <i32 1, i32 1, i32 1, i32 1>
  %368 = and <4 x i32> %366, <i32 1, i32 1, i32 1, i32 1>
  %369 = add <4 x i32> %367, %359
  %370 = add <4 x i32> %368, %360
  %371 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 248
  %372 = bitcast i32* %371 to <4 x i32>*
  %373 = load <4 x i32>, <4 x i32>* %372, align 16, !tbaa !12
  %374 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 252
  %375 = bitcast i32* %374 to <4 x i32>*
  %376 = load <4 x i32>, <4 x i32>* %375, align 16, !tbaa !12
  %377 = and <4 x i32> %373, <i32 1, i32 1, i32 1, i32 1>
  %378 = and <4 x i32> %376, <i32 1, i32 1, i32 1, i32 1>
  %379 = add <4 x i32> %377, %369
  %380 = add <4 x i32> %378, %370
  %381 = add <4 x i32> %380, %379
  %382 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %381)
  %383 = icmp ult i32 %382, 2
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %39) #11
  br i1 %383, label %411, label %451

384:                                              ; preds = %60, %384
  %385 = phi i8* [ %409, %384 ], [ %61, %60 ]
  %386 = load i8, i8* %385, align 1, !tbaa !11
  %387 = zext i8 %386 to i64
  %388 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %387
  %389 = load i32, i32* %388, align 4, !tbaa !12
  %390 = add nsw i32 %389, 1
  store i32 %390, i32* %388, align 4, !tbaa !12
  %391 = getelementptr inbounds i8, i8* %385, i64 1
  %392 = load i8, i8* %391, align 1, !tbaa !11
  %393 = zext i8 %392 to i64
  %394 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %393
  %395 = load i32, i32* %394, align 4, !tbaa !12
  %396 = add nsw i32 %395, 1
  store i32 %396, i32* %394, align 4, !tbaa !12
  %397 = getelementptr inbounds i8, i8* %385, i64 2
  %398 = load i8, i8* %397, align 1, !tbaa !11
  %399 = zext i8 %398 to i64
  %400 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %399
  %401 = load i32, i32* %400, align 4, !tbaa !12
  %402 = add nsw i32 %401, 1
  store i32 %402, i32* %400, align 4, !tbaa !12
  %403 = getelementptr inbounds i8, i8* %385, i64 3
  %404 = load i8, i8* %403, align 1, !tbaa !11
  %405 = zext i8 %404 to i64
  %406 = getelementptr inbounds [256 x i32], [256 x i32]* %1, i64 0, i64 %405
  %407 = load i32, i32* %406, align 4, !tbaa !12
  %408 = add nsw i32 %407, 1
  store i32 %408, i32* %406, align 4, !tbaa !12
  %409 = getelementptr inbounds i8, i8* %385, i64 4
  %410 = icmp eq i8* %409, %43
  br i1 %410, label %63, label %384

411:                                              ; preds = %63
  %412 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3)
          to label %413 unwind label %444

413:                                              ; preds = %411
  %414 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !17
  %415 = getelementptr i8, i8* %414, i64 -24
  %416 = bitcast i8* %415 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = add nsw i64 %417, 240
  %419 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %418
  %420 = bitcast i8* %419 to %"class.std::ctype"**
  %421 = load %"class.std::ctype"*, %"class.std::ctype"** %420, align 8, !tbaa !19
  %422 = icmp eq %"class.std::ctype"* %421, null
  br i1 %422, label %423, label %425

423:                                              ; preds = %413
  invoke void @_ZSt16__throw_bad_castv() #12
          to label %424 unwind label %444

424:                                              ; preds = %423
  unreachable

425:                                              ; preds = %413
  %426 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %421, i64 0, i32 8
  %427 = load i8, i8* %426, align 8, !tbaa !22
  %428 = icmp eq i8 %427, 0
  br i1 %428, label %432, label %429

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %421, i64 0, i32 9, i64 10
  %431 = load i8, i8* %430, align 1, !tbaa !11
  br label %439

432:                                              ; preds = %425
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %421)
          to label %433 unwind label %444

433:                                              ; preds = %432
  %434 = bitcast %"class.std::ctype"* %421 to i8 (%"class.std::ctype"*, i8)***
  %435 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %434, align 8, !tbaa !17
  %436 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %435, i64 6
  %437 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %436, align 8
  %438 = invoke signext i8 %437(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %421, i8 signext 10)
          to label %439 unwind label %444

439:                                              ; preds = %433, %429
  %440 = phi i8 [ %431, %429 ], [ %438, %433 ]
  %441 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 signext %440)
          to label %442 unwind label %444

442:                                              ; preds = %439
  %443 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %441)
          to label %484 unwind label %444

444:                                              ; preds = %482, %479, %473, %472, %463, %442, %439, %433, %432, %423, %451, %411, %35, %29, %28, %19, %0
  %445 = landingpad { i8*, i32 }
          cleanup
  %446 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %447 = load i8*, i8** %446, align 8, !tbaa !3
  %448 = icmp eq i8* %447, %7
  br i1 %448, label %450, label %449

449:                                              ; preds = %444
  call void @_ZdlPv(i8* %447) #11
  br label %450

450:                                              ; preds = %444, %449
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #11
  resume { i8*, i32 } %445

451:                                              ; preds = %63
  %452 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2)
          to label %453 unwind label %444

453:                                              ; preds = %451
  %454 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !17
  %455 = getelementptr i8, i8* %454, i64 -24
  %456 = bitcast i8* %455 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = add nsw i64 %457, 240
  %459 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %458
  %460 = bitcast i8* %459 to %"class.std::ctype"**
  %461 = load %"class.std::ctype"*, %"class.std::ctype"** %460, align 8, !tbaa !19
  %462 = icmp eq %"class.std::ctype"* %461, null
  br i1 %462, label %463, label %465

463:                                              ; preds = %453
  invoke void @_ZSt16__throw_bad_castv() #12
          to label %464 unwind label %444

464:                                              ; preds = %463
  unreachable

465:                                              ; preds = %453
  %466 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %461, i64 0, i32 8
  %467 = load i8, i8* %466, align 8, !tbaa !22
  %468 = icmp eq i8 %467, 0
  br i1 %468, label %472, label %469

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %461, i64 0, i32 9, i64 10
  %471 = load i8, i8* %470, align 1, !tbaa !11
  br label %479

472:                                              ; preds = %465
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %461)
          to label %473 unwind label %444

473:                                              ; preds = %472
  %474 = bitcast %"class.std::ctype"* %461 to i8 (%"class.std::ctype"*, i8)***
  %475 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %474, align 8, !tbaa !17
  %476 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %475, i64 6
  %477 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %476, align 8
  %478 = invoke signext i8 %477(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %461, i8 signext 10)
          to label %479 unwind label %444

479:                                              ; preds = %473, %469
  %480 = phi i8 [ %471, %469 ], [ %478, %473 ]
  %481 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 signext %480)
          to label %482 unwind label %444

482:                                              ; preds = %479
  %483 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %481)
          to label %484 unwind label %444

484:                                              ; preds = %482, %442
  %485 = load i8*, i8** %40, align 8, !tbaa !3
  %486 = icmp eq i8* %485, %7
  br i1 %486, label %488, label %487

487:                                              ; preds = %484
  call void @_ZdlPv(i8* %485) #11
  br label %488

488:                                              ; preds = %484, %487
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #11
  ret i32 0
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8 signext) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #8

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_GameOfThrones1.cpp() #9 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #11
  ret void
}

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #10

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { nofree nosync nounwind readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #6 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree nosync nounwind readnone willreturn }
attributes #11 = { nounwind }
attributes #12 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !6, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!4, !9, i64 8}
!11 = !{!7, !7, i64 0}
!12 = !{!13, !13, i64 0}
!13 = !{!"int", !7, i64 0}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!5, !6, i64 0}
!17 = !{!18, !18, i64 0}
!18 = !{!"vtable pointer", !8, i64 0}
!19 = !{!20, !6, i64 240}
!20 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !6, i64 216, !7, i64 224, !21, i64 225, !6, i64 232, !6, i64 240, !6, i64 248, !6, i64 256}
!21 = !{!"bool", !7, i64 0}
!22 = !{!23, !7, i64 56}
!23 = !{!"_ZTSSt5ctypeIcE", !6, i64 16, !21, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !7, i64 56, !7, i64 57, !7, i64 313, !7, i64 569}
!24 = distinct !{!24, !15}
