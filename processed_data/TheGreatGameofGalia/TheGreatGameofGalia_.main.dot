digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x557fc67e4cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%0:\l  %1 = alloca i64, align 8\l  %2 = alloca i64, align 8\l  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %4 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([35 x\l... i8], [35 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %3)\l  %5 = bitcast i64* %1 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11\l  %6 = call nonnull align 8 dereferenceable(16) %\"class.std::basic_istream\"*\l... @_ZNSi10_M_extractIxEERSiRT_(%\"class.std::basic_istream\"* nonnull align 8\l... dereferenceable(16) @_ZSt3cin, i64* nonnull align 8 dereferenceable(8) %1)\l  %7 = bitcast i64* %2 to i8*\l  %8 = load i64, i64* %1, align 8, !tbaa !7\l  %9 = add nsw i64 %8, -1\l  store i64 %9, i64* %1, align 8, !tbaa !7\l  %10 = icmp eq i64 %8, 0\l  br i1 %10, label %153, label %11\l|{<s0>T|<s1>F}}"];
	Node0x557fc67e4cb0:s0 -> Node0x557fc67e5420;
	Node0x557fc67e4cb0:s1 -> Node0x557fc67e63f0;
	Node0x557fc67e63f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%11:\l11:                                               \l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11\l  %12 = call nonnull align 8 dereferenceable(16) %\"class.std::basic_istream\"*\l... @_ZNSi10_M_extractIxEERSiRT_(%\"class.std::basic_istream\"* nonnull align 8\l... dereferenceable(16) @_ZSt3cin, i64* nonnull align 8 dereferenceable(8) %2)\l  %13 = load i64, i64* %2, align 8, !tbaa !7\l  %14 = icmp slt i64 %13, 1\l  br i1 %14, label %22, label %15\l|{<s0>T|<s1>F}}"];
	Node0x557fc67e63f0:s0 -> Node0x557fc67e68f0;
	Node0x557fc67e63f0:s1 -> Node0x557fc67e6940;
	Node0x557fc67e6940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = phi i64 [ %19, %15 ], [ 1, %11 ]\l  %17 = getelementptr inbounds [50009 x i64], [50009 x i64]* @a, i64 0, i64 %16\l  %18 = call nonnull align 8 dereferenceable(16) %\"class.std::basic_istream\"*\l... @_ZNSi10_M_extractIxEERSiRT_(%\"class.std::basic_istream\"* nonnull align 8\l... dereferenceable(16) @_ZSt3cin, i64* nonnull align 8 dereferenceable(8) %17)\l  %19 = add nuw nsw i64 %16, 1\l  %20 = load i64, i64* %2, align 8, !tbaa !7\l  %21 = icmp slt i64 %16, %20\l  br i1 %21, label %15, label %22, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x557fc67e6940:s0 -> Node0x557fc67e6940;
	Node0x557fc67e6940:s1 -> Node0x557fc67e68f0;
	Node0x557fc67e68f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%22:\l22:                                               \l  %23 = phi i64 [ %13, %11 ], [ %20, %15 ]\l  %24 = getelementptr inbounds [50009 x i64], [50009 x i64]* @a, i64 0, i64 %23\l  %25 = getelementptr inbounds i64, i64* %24, i64 1\l  %26 = icmp eq i64* %25, getelementptr inbounds ([50009 x i64], [50009 x\l... i64]* @a, i64 0, i64 1)\l  br i1 %26, label %35, label %27\l|{<s0>T|<s1>F}}"];
	Node0x557fc67e68f0:s0 -> Node0x557fc67e72d0;
	Node0x557fc67e68f0:s1 -> Node0x557fc67e7320;
	Node0x557fc67e7320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%27:\l27:                                               \l  %28 = ptrtoint i64* %25 to i64\l  %29 = sub i64 %28, ptrtoint (i64* getelementptr inbounds ([50009 x i64],\l... [50009 x i64]* @a, i64 0, i64 1) to i64)\l  %30 = ashr exact i64 %29, 3\l  %31 = call i64 @llvm.ctlz.i64(i64 %30, i1 true) #11, !range !11\l  %32 = shl nuw nsw i64 %31, 1\l  %33 = xor i64 %32, 126\l  call void\l... @_ZSt16__introsort_loopIPxlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_(i6\l...4* getelementptr inbounds ([50009 x i64], [50009 x i64]* @a, i64 0, i64 1),\l... i64* nonnull %25, i64 %33)\l  call void\l... @_ZSt22__final_insertion_sortIPxN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_(\l...i64* getelementptr inbounds ([50009 x i64], [50009 x i64]* @a, i64 0, i64 1),\l... i64* nonnull %25)\l  %34 = load i64, i64* %2, align 8, !tbaa !7\l  br label %35\l}"];
	Node0x557fc67e7320 -> Node0x557fc67e72d0;
	Node0x557fc67e72d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%35:\l35:                                               \l  %36 = phi i64 [ %23, %22 ], [ %34, %27 ]\l  %37 = icmp eq i64 %36, 1\l  br i1 %37, label %111, label %38\l|{<s0>T|<s1>F}}"];
	Node0x557fc67e72d0:s0 -> Node0x557fc67e8330;
	Node0x557fc67e72d0:s1 -> Node0x557fc67e8380;
	Node0x557fc67e8380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%38:\l38:                                               \l  %39 = icmp sgt i64 %36, 2\l  br i1 %39, label %40, label %123\l|{<s0>T|<s1>F}}"];
	Node0x557fc67e8380:s0 -> Node0x557fc67e8550;
	Node0x557fc67e8380:s1 -> Node0x557fc67e85a0;
	Node0x557fc67e8550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%40:\l40:                                               \l  %41 = add i64 %36, -2\l  %42 = icmp ult i64 %41, 4\l  br i1 %42, label %108, label %43\l|{<s0>T|<s1>F}}"];
	Node0x557fc67e8550:s0 -> Node0x557fc67e8860;
	Node0x557fc67e8550:s1 -> Node0x557fc67e88b0;
	Node0x557fc67e88b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%43:\l43:                                               \l  %44 = and i64 %41, -4\l  %45 = or i64 %44, 2\l  %46 = add i64 %44, -4\l  %47 = lshr exact i64 %46, 2\l  %48 = add nuw nsw i64 %47, 1\l  %49 = and i64 %48, 1\l  %50 = icmp eq i64 %46, 0\l  br i1 %50, label %83, label %51\l|{<s0>T|<s1>F}}"];
	Node0x557fc67e88b0:s0 -> Node0x557fc67e8e10;
	Node0x557fc67e88b0:s1 -> Node0x557fc67e8e60;
	Node0x557fc67e8e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%51:\l51:                                               \l  %52 = and i64 %48, 9223372036854775806\l  br label %53\l}"];
	Node0x557fc67e8e60 -> Node0x557fc67e9060;
	Node0x557fc67e9060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%53:\l53:                                               \l  %54 = phi i64 [ 0, %51 ], [ %80, %53 ]\l  %55 = phi \<2 x i64\> [ zeroinitializer, %51 ], [ %78, %53 ]\l  %56 = phi \<2 x i64\> [ zeroinitializer, %51 ], [ %79, %53 ]\l  %57 = phi i64 [ %52, %51 ], [ %81, %53 ]\l  %58 = or i64 %54, 2\l  %59 = getelementptr inbounds [50009 x i64], [50009 x i64]* @a, i64 0, i64 %58\l  %60 = bitcast i64* %59 to \<2 x i64\>*\l  %61 = load \<2 x i64\>, \<2 x i64\>* %60, align 16, !tbaa !7\l  %62 = getelementptr inbounds i64, i64* %59, i64 2\l  %63 = bitcast i64* %62 to \<2 x i64\>*\l  %64 = load \<2 x i64\>, \<2 x i64\>* %63, align 16, !tbaa !7\l  %65 = shl nsw \<2 x i64\> %61, \<i64 1, i64 1\>\l  %66 = shl nsw \<2 x i64\> %64, \<i64 1, i64 1\>\l  %67 = add \<2 x i64\> %65, %55\l  %68 = add \<2 x i64\> %66, %56\l  %69 = or i64 %54, 6\l  %70 = getelementptr inbounds [50009 x i64], [50009 x i64]* @a, i64 0, i64 %69\l  %71 = bitcast i64* %70 to \<2 x i64\>*\l  %72 = load \<2 x i64\>, \<2 x i64\>* %71, align 16, !tbaa !7\l  %73 = getelementptr inbounds i64, i64* %70, i64 2\l  %74 = bitcast i64* %73 to \<2 x i64\>*\l  %75 = load \<2 x i64\>, \<2 x i64\>* %74, align 16, !tbaa !7\l  %76 = shl nsw \<2 x i64\> %72, \<i64 1, i64 1\>\l  %77 = shl nsw \<2 x i64\> %75, \<i64 1, i64 1\>\l  %78 = add \<2 x i64\> %76, %67\l  %79 = add \<2 x i64\> %77, %68\l  %80 = add nuw i64 %54, 8\l  %81 = add i64 %57, -2\l  %82 = icmp eq i64 %81, 0\l  br i1 %82, label %83, label %53, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x557fc67e9060:s0 -> Node0x557fc67e8e10;
	Node0x557fc67e9060:s1 -> Node0x557fc67e9060;
	Node0x557fc67e8e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%83:\l83:                                               \l  %84 = phi \<2 x i64\> [ undef, %43 ], [ %78, %53 ]\l  %85 = phi \<2 x i64\> [ undef, %43 ], [ %79, %53 ]\l  %86 = phi i64 [ 0, %43 ], [ %80, %53 ]\l  %87 = phi \<2 x i64\> [ zeroinitializer, %43 ], [ %78, %53 ]\l  %88 = phi \<2 x i64\> [ zeroinitializer, %43 ], [ %79, %53 ]\l  %89 = icmp eq i64 %49, 0\l  br i1 %89, label %102, label %90\l|{<s0>T|<s1>F}}"];
	Node0x557fc67e8e10:s0 -> Node0x557fc67eb710;
	Node0x557fc67e8e10:s1 -> Node0x557fc67eb760;
	Node0x557fc67eb760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%90:\l90:                                               \l  %91 = or i64 %86, 2\l  %92 = getelementptr inbounds [50009 x i64], [50009 x i64]* @a, i64 0, i64 %91\l  %93 = getelementptr inbounds i64, i64* %92, i64 2\l  %94 = bitcast i64* %93 to \<2 x i64\>*\l  %95 = load \<2 x i64\>, \<2 x i64\>* %94, align 16, !tbaa !7\l  %96 = shl nsw \<2 x i64\> %95, \<i64 1, i64 1\>\l  %97 = add \<2 x i64\> %96, %88\l  %98 = bitcast i64* %92 to \<2 x i64\>*\l  %99 = load \<2 x i64\>, \<2 x i64\>* %98, align 16, !tbaa !7\l  %100 = shl nsw \<2 x i64\> %99, \<i64 1, i64 1\>\l  %101 = add \<2 x i64\> %100, %87\l  br label %102\l}"];
	Node0x557fc67eb760 -> Node0x557fc67eb710;
	Node0x557fc67eb710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%102:\l102:                                              \l  %103 = phi \<2 x i64\> [ %84, %83 ], [ %101, %90 ]\l  %104 = phi \<2 x i64\> [ %85, %83 ], [ %97, %90 ]\l  %105 = add \<2 x i64\> %104, %103\l  %106 = call i64 @llvm.vector.reduce.add.v2i64(\<2 x i64\> %105)\l  %107 = icmp eq i64 %41, %44\l  br i1 %107, label %123, label %108\l|{<s0>T|<s1>F}}"];
	Node0x557fc67eb710:s0 -> Node0x557fc67e85a0;
	Node0x557fc67eb710:s1 -> Node0x557fc67e8860;
	Node0x557fc67e8860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%108:\l108:                                              \l  %109 = phi i64 [ 2, %40 ], [ %45, %102 ]\l  %110 = phi i64 [ 0, %40 ], [ %106, %102 ]\l  br label %114\l}"];
	Node0x557fc67e8860 -> Node0x557fc67ec550;
	Node0x557fc67e8330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%111:\l111:                                              \l  %112 = load i64, i64* getelementptr inbounds ([50009 x i64], [50009 x i64]*\l... @a, i64 0, i64 1), align 8, !tbaa !7\l  %113 = call nonnull align 8 dereferenceable(8) %\"class.std::basic_ostream\"*\l... @_ZNSo9_M_insertIxEERSoT_(%\"class.std::basic_ostream\"* nonnull align 8\l... dereferenceable(8) @_ZSt4cout, i64 %112)\l  br label %147\l}"];
	Node0x557fc67e8330 -> Node0x557fc67ec8d0;
	Node0x557fc67ec550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%114:\l114:                                              \l  %115 = phi i64 [ %121, %114 ], [ %109, %108 ]\l  %116 = phi i64 [ %120, %114 ], [ %110, %108 ]\l  %117 = getelementptr inbounds [50009 x i64], [50009 x i64]* @a, i64 0, i64\l... %115\l  %118 = load i64, i64* %117, align 8, !tbaa !7\l  %119 = shl nsw i64 %118, 1\l  %120 = add nsw i64 %119, %116\l  %121 = add nuw nsw i64 %115, 1\l  %122 = icmp eq i64 %121, %36\l  br i1 %122, label %123, label %114, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x557fc67ec550:s0 -> Node0x557fc67e85a0;
	Node0x557fc67ec550:s1 -> Node0x557fc67ec550;
	Node0x557fc67e85a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%123:\l123:                                              \l  %124 = phi i64 [ 0, %38 ], [ %106, %102 ], [ %120, %114 ]\l  %125 = load i64, i64* getelementptr inbounds ([50009 x i64], [50009 x i64]*\l... @a, i64 0, i64 1), align 8, !tbaa !7\l  %126 = getelementptr inbounds [50009 x i64], [50009 x i64]* @a, i64 0, i64\l... %36\l  %127 = load i64, i64* %126, align 8, !tbaa !7\l  %128 = add i64 %127, %125\l  %129 = mul i64 %128, 3\l  %130 = add nsw i64 %129, %124\l  br label %131\l}"];
	Node0x557fc67e85a0 -> Node0x557fc67edbf0;
	Node0x557fc67edbf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%131:\l131:                                              \l  %132 = phi i64 [ %133, %131 ], [ %130, %123 ]\l  %133 = phi i64 [ %134, %131 ], [ 6, %123 ]\l  %134 = srem i64 %132, %133\l  %135 = icmp eq i64 %134, 0\l  br i1 %135, label %136, label %131, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x557fc67edbf0:s0 -> Node0x557fc67edf30;
	Node0x557fc67edbf0:s1 -> Node0x557fc67edbf0;
	Node0x557fc67edf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%136:\l136:                                              \l  %137 = icmp eq i64 %133, 6\l  br i1 %137, label %138, label %141\l|{<s0>T|<s1>F}}"];
	Node0x557fc67edf30:s0 -> Node0x557fc67ee140;
	Node0x557fc67edf30:s1 -> Node0x557fc67ee190;
	Node0x557fc67ee140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%138:\l138:                                              \l  %139 = sdiv i64 %130, 6\l  %140 = call nonnull align 8 dereferenceable(8) %\"class.std::basic_ostream\"*\l... @_ZNSo9_M_insertIxEERSoT_(%\"class.std::basic_ostream\"* nonnull align 8\l... dereferenceable(8) @_ZSt4cout, i64 %139)\l  br label %147\l}"];
	Node0x557fc67ee140 -> Node0x557fc67ec8d0;
	Node0x557fc67ee190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%141:\l141:                                              \l  %142 = sdiv i64 %130, %133\l  %143 = call nonnull align 8 dereferenceable(8) %\"class.std::basic_ostream\"*\l... @_ZNSo9_M_insertIxEERSoT_(%\"class.std::basic_ostream\"* nonnull align 8\l... dereferenceable(8) @_ZSt4cout, i64 %142)\l  %144 = call nonnull align 8 dereferenceable(8) %\"class.std::basic_ostream\"*\l...\l... @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l\l...(%\"class.std::basic_ostream\"* nonnull align 8 dereferenceable(8) %143, i8*\l... nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0),\l... i64 1)\l  %145 = sdiv i64 6, %133\l  %146 = call nonnull align 8 dereferenceable(8) %\"class.std::basic_ostream\"*\l... @_ZNSo9_M_insertIxEERSoT_(%\"class.std::basic_ostream\"* nonnull align 8\l... dereferenceable(8) %143, i64 %145)\l  br label %147\l}"];
	Node0x557fc67ee190 -> Node0x557fc67ec8d0;
	Node0x557fc67ec8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%147:\l147:                                              \l  %148 = phi %\"class.std::basic_ostream\"* [ %140, %138 ], [ %146, %141 ], [\l... %113, %111 ]\l  %149 = call nonnull align 8 dereferenceable(8) %\"class.std::basic_ostream\"*\l...\l... @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l\l...(%\"class.std::basic_ostream\"* nonnull align 8 dereferenceable(8) %148, i8*\l... nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0),\l... i64 1)\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11\l  %150 = load i64, i64* %1, align 8, !tbaa !7\l  %151 = add nsw i64 %150, -1\l  store i64 %151, i64* %1, align 8, !tbaa !7\l  %152 = icmp eq i64 %150, 0\l  br i1 %152, label %153, label %11, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x557fc67ec8d0:s0 -> Node0x557fc67e5420;
	Node0x557fc67ec8d0:s1 -> Node0x557fc67e63f0;
	Node0x557fc67e5420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%153:\l153:                                              \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11\l  ret i32 0\l}"];
}
