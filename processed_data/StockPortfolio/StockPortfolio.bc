; ModuleID = '../../Benchmarks/StockPortfolio/StockPortfolio.cpp'
source_filename = "../../Benchmarks/StockPortfolio/StockPortfolio.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::pair<std::pair<long long, long long>, long long>, std::pair<std::pair<long long, long long>, long long>, std::_Identity<std::pair<std::pair<long long, long long>, long long>>, std::less<std::pair<std::pair<long long, long long>, long long>>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::pair<std::pair<long long, long long>, long long>, std::pair<std::pair<long long, long long>, long long>, std::_Identity<std::pair<std::pair<long long, long long>, long long>>, std::less<std::pair<std::pair<long long, long long>, long long>>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair" = type { %"struct.std::pair.0", i64 }
%"struct.std::pair.0" = type { i64, i64 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [24 x i8] }

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EED2Ev = comdat any

$_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@strength = dso_local global [200005 x i64] zeroinitializer, align 16
@tree = dso_local local_unnamed_addr global [600005 x i64] zeroinitializer, align 16
@lef = dso_local global [200005 x i64] zeroinitializer, align 16
@righ = dso_local global [200005 x i64] zeroinitializer, align 16
@dp = dso_local local_unnamed_addr global [200005 x i64] zeroinitializer, align 16
@.str = private unnamed_addr constant [30 x i8] c"../input_files/StockPortfolio\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_StockPortfolio.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local void @_Z6updatexxxxxx(i64 %0, i64 %1, i64 %2, i64 %3, i64 %4, i64 %5) local_unnamed_addr #3 {
  %7 = icmp sgt i64 %3, %2
  %8 = icmp sgt i64 %1, %4
  %9 = select i1 %7, i1 true, i1 %8
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = icmp slt i64 %1, %3
  %12 = icmp sgt i64 %2, %4
  %13 = select i1 %11, i1 true, i1 %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %10, %18
  %15 = phi i64 [ %29, %18 ], [ %5, %10 ]
  %16 = getelementptr inbounds [600005 x i64], [600005 x i64]* @tree, i64 0, i64 %0
  store i64 %15, i64* %16, align 8, !tbaa !3
  br label %17

17:                                               ; preds = %14, %6
  ret void

18:                                               ; preds = %10
  %19 = shl nsw i64 %0, 1
  %20 = add nsw i64 %2, %1
  %21 = sdiv i64 %20, 2
  tail call void @_Z6updatexxxxxx(i64 %19, i64 %1, i64 %21, i64 %3, i64 %4, i64 %5)
  %22 = or i64 %19, 1
  %23 = add nsw i64 %21, 1
  tail call void @_Z6updatexxxxxx(i64 %22, i64 %23, i64 %2, i64 %3, i64 %4, i64 %5)
  %24 = getelementptr inbounds [600005 x i64], [600005 x i64]* @tree, i64 0, i64 %19
  %25 = getelementptr inbounds [600005 x i64], [600005 x i64]* @tree, i64 0, i64 %22
  %26 = load i64, i64* %24, align 16
  %27 = load i64, i64* %25, align 8
  %28 = icmp slt i64 %26, %27
  %29 = select i1 %28, i64 %27, i64 %26
  br label %14
}

; Function Attrs: mustprogress nofree nosync nounwind readonly uwtable willreturn
define dso_local i64 @_Z5queryxxxxx(i64 %0, i64 %1, i64 %2, i64 %3, i64 %4) local_unnamed_addr #4 {
  %6 = icmp sgt i64 %3, %2
  %7 = icmp sgt i64 %1, %4
  %8 = select i1 %6, i1 true, i1 %7
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = icmp slt i64 %1, %3
  %11 = icmp sgt i64 %2, %4
  %12 = select i1 %10, i1 true, i1 %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds [600005 x i64], [600005 x i64]* @tree, i64 0, i64 %0
  %15 = load i64, i64* %14, align 8, !tbaa !3
  br label %16

16:                                               ; preds = %13, %5, %18
  %17 = phi i64 [ %27, %18 ], [ %15, %13 ], [ 0, %5 ]
  ret i64 %17

18:                                               ; preds = %9
  %19 = shl nsw i64 %0, 1
  %20 = add nsw i64 %2, %1
  %21 = sdiv i64 %20, 2
  %22 = tail call i64 @_Z5queryxxxxx(i64 %19, i64 %1, i64 %21, i64 %3, i64 %4)
  %23 = or i64 %19, 1
  %24 = add nsw i64 %21, 1
  %25 = tail call i64 @_Z5queryxxxxx(i64 %23, i64 %24, i64 %2, i64 %3, i64 %4)
  %26 = icmp slt i64 %22, %25
  %27 = select i1 %26, i64 %25, i64 %22
  br label %16
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #6 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i64, align 8
  %2 = alloca %"class.std::set", align 8
  %3 = alloca %"struct.std::pair", align 8
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !7
  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %4)
  %6 = bitcast i64* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64* nonnull %1)
  %8 = load i64, i64* %1, align 8, !tbaa !3
  %9 = icmp slt i64 %8, 1
  br i1 %9, label %35, label %12

10:                                               ; preds = %12
  %11 = icmp slt i64 %17, 1
  br i1 %11, label %35, label %21

12:                                               ; preds = %0, %12
  %13 = phi i64 [ %16, %12 ], [ 1, %0 ]
  %14 = getelementptr inbounds [200005 x i64], [200005 x i64]* @strength, i64 0, i64 %13
  %15 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64* nonnull %14)
  %16 = add nuw nsw i64 %13, 1
  %17 = load i64, i64* %1, align 8, !tbaa !3
  %18 = icmp slt i64 %13, %17
  br i1 %18, label %12, label %10, !llvm.loop !9

19:                                               ; preds = %21
  %20 = icmp slt i64 %26, 1
  br i1 %20, label %35, label %28

21:                                               ; preds = %10, %21
  %22 = phi i64 [ %25, %21 ], [ 1, %10 ]
  %23 = getelementptr inbounds [200005 x i64], [200005 x i64]* @lef, i64 0, i64 %22
  %24 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64* nonnull %23)
  %25 = add nuw nsw i64 %22, 1
  %26 = load i64, i64* %1, align 8, !tbaa !3
  %27 = icmp slt i64 %22, %26
  br i1 %27, label %21, label %19, !llvm.loop !11

28:                                               ; preds = %19, %28
  %29 = phi i64 [ %32, %28 ], [ 1, %19 ]
  %30 = getelementptr inbounds [200005 x i64], [200005 x i64]* @righ, i64 0, i64 %29
  %31 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64* nonnull %30)
  %32 = add nuw nsw i64 %29, 1
  %33 = load i64, i64* %1, align 8, !tbaa !3
  %34 = icmp slt i64 %29, %33
  br i1 %34, label %28, label %35, !llvm.loop !12

35:                                               ; preds = %28, %0, %10, %19
  %36 = phi i64 [ %26, %19 ], [ %17, %10 ], [ %8, %0 ], [ %33, %28 ]
  %37 = getelementptr inbounds %"class.std::set", %"class.std::set"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #16
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 8, !tbaa !13
  %40 = getelementptr inbounds i8, i8* %37, i64 16
  %41 = bitcast i8* %40 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %41, align 8, !tbaa !18
  %42 = getelementptr inbounds i8, i8* %37, i64 24
  %43 = bitcast i8* %42 to i8**
  store i8* %38, i8** %43, align 8, !tbaa !19
  %44 = getelementptr inbounds i8, i8* %37, i64 32
  %45 = bitcast i8* %44 to i8**
  store i8* %38, i8** %45, align 8, !tbaa !20
  %46 = getelementptr inbounds i8, i8* %37, i64 40
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8, !tbaa !21
  %48 = bitcast i8* %42 to %"struct.std::_Rb_tree_node"**
  %49 = bitcast i8* %42 to %"struct.std::_Rb_tree_node_base"**
  %50 = bitcast i8* %38 to %"struct.std::_Rb_tree_node_base"*
  %51 = bitcast %"struct.std::pair"* %3 to i8*
  %52 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1
  %55 = getelementptr inbounds %"class.std::set", %"class.std::set"* %2, i64 0, i32 0
  %56 = icmp slt i64 %36, 1
  br i1 %56, label %161, label %65

57:                                               ; preds = %112
  %58 = icmp slt i64 %113, 1
  br i1 %58, label %161, label %59

59:                                               ; preds = %57
  %60 = add i64 %113, -1
  %61 = and i64 %113, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %145, label %63

63:                                               ; preds = %59
  %64 = and i64 %113, -4
  br label %119

65:                                               ; preds = %35, %115
  %66 = phi i64 [ %116, %115 ], [ 0, %35 ]
  %67 = phi i64 [ %109, %115 ], [ 1, %35 ]
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %89, label %69

69:                                               ; preds = %65, %78
  %70 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %48, align 8, !tbaa !19
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %70, i64 0, i32 1
  %72 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %70, i64 0, i32 1, i32 0, i64 16
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %73, %67
  br i1 %77, label %78, label %89

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %70, i64 0, i32 1, i32 0, i64 8
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = load i64, i64* %1, align 8, !tbaa !3
  call void @_Z6updatexxxxxx(i64 1, i64 1, i64 %82, i64 %76, i64 %76, i64 %81)
  %83 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %49, align 8, !tbaa !19
  %84 = call %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"* %83, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %50) #16
  %85 = bitcast %"struct.std::_Rb_tree_node_base"* %84 to i8*
  call void @_ZdlPv(i8* %85) #16
  %86 = load i64, i64* %47, align 8, !tbaa !21
  %87 = add i64 %86, -1
  store i64 %87, i64* %47, align 8, !tbaa !21
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %69, !llvm.loop !22

89:                                               ; preds = %78, %69, %65
  %90 = getelementptr inbounds [200005 x i64], [200005 x i64]* @lef, i64 0, i64 %67
  %91 = load i64, i64* %90, align 8, !tbaa !3
  %92 = xor i64 %91, -1
  %93 = add i64 %67, %92
  %94 = icmp sgt i64 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  %96 = load i64, i64* %1, align 8, !tbaa !3
  %97 = call i64 @_Z5queryxxxxx(i64 1, i64 1, i64 %96, i64 1, i64 %93)
  %98 = getelementptr inbounds [200005 x i64], [200005 x i64]* @strength, i64 0, i64 %67
  %99 = load i64, i64* %98, align 8, !tbaa !3
  %100 = add nsw i64 %99, %97
  br label %104

101:                                              ; preds = %89
  %102 = getelementptr inbounds [200005 x i64], [200005 x i64]* @strength, i64 0, i64 %67
  %103 = load i64, i64* %102, align 8, !tbaa !3
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i64 [ %100, %95 ], [ %103, %101 ]
  %106 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0, i64 %67
  store i64 %105, i64* %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #16
  %107 = getelementptr inbounds [200005 x i64], [200005 x i64]* @righ, i64 0, i64 %67
  %108 = load i64, i64* %107, align 8, !tbaa !3
  %109 = add nuw i64 %67, 1
  %110 = add i64 %109, %108
  store i64 %110, i64* %52, align 8
  store i64 %105, i64* %53, align 8
  store i64 %67, i64* %54, align 8, !tbaa !23, !alias.scope !26
  %111 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %55, %"struct.std::pair"* nonnull align 8 dereferenceable(24) %3)
          to label %112 unwind label %117

112:                                              ; preds = %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #16
  %113 = load i64, i64* %1, align 8, !tbaa !3
  %114 = icmp slt i64 %67, %113
  br i1 %114, label %115, label %57, !llvm.loop !29

115:                                              ; preds = %112
  %116 = load i64, i64* %47, align 8, !tbaa !21
  br label %65

117:                                              ; preds = %104
  %118 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #16
  call void @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EED2Ev(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %55) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  resume { i8*, i32 } %118

119:                                              ; preds = %119, %63
  %120 = phi i64 [ 1, %63 ], [ %142, %119 ]
  %121 = phi i64 [ 0, %63 ], [ %141, %119 ]
  %122 = phi i64 [ %64, %63 ], [ %143, %119 ]
  %123 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0, i64 %120
  %124 = load i64, i64* %123, align 8, !tbaa !3
  %125 = icmp slt i64 %121, %124
  %126 = select i1 %125, i64 %124, i64 %121
  %127 = add nuw nsw i64 %120, 1
  %128 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0, i64 %127
  %129 = load i64, i64* %128, align 8, !tbaa !3
  %130 = icmp slt i64 %126, %129
  %131 = select i1 %130, i64 %129, i64 %126
  %132 = add nuw nsw i64 %120, 2
  %133 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0, i64 %132
  %134 = load i64, i64* %133, align 8, !tbaa !3
  %135 = icmp slt i64 %131, %134
  %136 = select i1 %135, i64 %134, i64 %131
  %137 = add nuw i64 %120, 3
  %138 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0, i64 %137
  %139 = load i64, i64* %138, align 8, !tbaa !3
  %140 = icmp slt i64 %136, %139
  %141 = select i1 %140, i64 %139, i64 %136
  %142 = add nuw i64 %120, 4
  %143 = add i64 %122, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %119, !llvm.loop !30

145:                                              ; preds = %119, %59
  %146 = phi i64 [ undef, %59 ], [ %141, %119 ]
  %147 = phi i64 [ 1, %59 ], [ %142, %119 ]
  %148 = phi i64 [ 0, %59 ], [ %141, %119 ]
  %149 = icmp eq i64 %61, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %145, %150
  %151 = phi i64 [ %158, %150 ], [ %147, %145 ]
  %152 = phi i64 [ %157, %150 ], [ %148, %145 ]
  %153 = phi i64 [ %159, %150 ], [ %61, %145 ]
  %154 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0, i64 %151
  %155 = load i64, i64* %154, align 8, !tbaa !3
  %156 = icmp slt i64 %152, %155
  %157 = select i1 %156, i64 %155, i64 %152
  %158 = add nuw i64 %151, 1
  %159 = add i64 %153, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !31

161:                                              ; preds = %145, %150, %35, %57
  %162 = phi i64 [ 0, %57 ], [ 0, %35 ], [ %146, %145 ], [ %157, %150 ]
  %163 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %162)
  %164 = bitcast i8* %40 to %"struct.std::_Rb_tree_node"**
  %165 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %164, align 8, !tbaa !18
  invoke void @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %55, %"struct.std::_Rb_tree_node"* %165)
          to label %169 unwind label %166

166:                                              ; preds = %161
  %167 = landingpad { i8*, i32 }
          catch i8* null
  %168 = extractvalue { i8*, i32 } %167, 0
  call void @__clang_call_terminate(i8* %168) #17
  unreachable

169:                                              ; preds = %161
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  ret i32 0
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #7

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #7

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #9 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #16
  tail call void @_ZSt9terminatev() #17
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EED2Ev(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0) unnamed_addr #10 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to %"struct.std::_Rb_tree_node"**
  %5 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8, !tbaa !18
  invoke void @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %5)
          to label %6 unwind label %7

6:                                                ; preds = %1
  ret void

7:                                                ; preds = %1
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  tail call void @__clang_call_terminate(i8* %9) #17
  unreachable
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %1) local_unnamed_addr #11 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"struct.std::_Rb_tree_node"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"struct.std::_Rb_tree_node"* [ %11, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 3
  %7 = bitcast %"struct.std::_Rb_tree_node_base"** %6 to %"struct.std::_Rb_tree_node"**
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8, !tbaa !33
  tail call void @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %8)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 2
  %10 = bitcast %"struct.std::_Rb_tree_node_base"** %9 to %"struct.std::_Rb_tree_node"**
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8, !tbaa !34
  %12 = bitcast %"struct.std::_Rb_tree_node"* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %12) #16
  %13 = icmp eq %"struct.std::_Rb_tree_node"* %11, null
  br i1 %13, label %14, label %4, !llvm.loop !35

14:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::pair"* nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 16
  %5 = bitcast i8* %4 to %"struct.std::_Rb_tree_node"**
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to %"struct.std::_Rb_tree_node_base"*
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8, !tbaa !7
  %15 = icmp eq %"struct.std::_Rb_tree_node"* %14, null
  br i1 %15, label %52, label %16

16:                                               ; preds = %2, %46
  %17 = phi %"struct.std::_Rb_tree_node"* [ %47, %46 ], [ %14, %2 ]
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %17, i64 0, i32 1
  %19 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !36
  %21 = icmp slt i64 %9, %20
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = icmp slt i64 %20, %9
  br i1 %23, label %41, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %17, i64 0, i32 1, i32 0, i64 8
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !37
  %28 = icmp slt i64 %11, %27
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = icmp slt i64 %27, %11
  br i1 %30, label %41, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %17, i64 0, i32 1, i32 0, i64 16
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !23
  %35 = icmp slt i64 %13, %34
  br i1 %35, label %36, label %41

36:                                               ; preds = %31, %24, %16
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %17, i64 0, i32 0, i32 2
  %38 = bitcast %"struct.std::_Rb_tree_node_base"** %37 to %"struct.std::_Rb_tree_node"**
  %39 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %38, align 8, !tbaa !7
  %40 = icmp eq %"struct.std::_Rb_tree_node"* %39, null
  br i1 %40, label %50, label %46

41:                                               ; preds = %31, %29, %22
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %17, i64 0, i32 0, i32 3
  %43 = bitcast %"struct.std::_Rb_tree_node_base"** %42 to %"struct.std::_Rb_tree_node"**
  %44 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %43, align 8, !tbaa !7
  %45 = icmp eq %"struct.std::_Rb_tree_node"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %41, %36
  %47 = phi %"struct.std::_Rb_tree_node"* [ %39, %36 ], [ %44, %41 ]
  br label %16, !llvm.loop !38

48:                                               ; preds = %41
  %49 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %17, i64 0, i32 0
  br label %60

50:                                               ; preds = %36
  %51 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %17, i64 0, i32 0
  br label %52

52:                                               ; preds = %50, %2
  %53 = phi %"struct.std::_Rb_tree_node_base"* [ %51, %50 ], [ %7, %2 ]
  %54 = getelementptr inbounds i8, i8* %3, i64 24
  %55 = bitcast i8* %54 to %"struct.std::_Rb_tree_node_base"**
  %56 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %55, align 8, !tbaa !19
  %57 = icmp eq %"struct.std::_Rb_tree_node_base"* %53, %56
  br i1 %57, label %81, label %58

58:                                               ; preds = %52
  %59 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %53) #18
  br label %60

60:                                               ; preds = %58, %48
  %61 = phi %"struct.std::_Rb_tree_node_base"* [ %53, %58 ], [ %49, %48 ]
  %62 = phi %"struct.std::_Rb_tree_node_base"* [ %59, %58 ], [ %49, %48 ]
  %63 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %62, i64 1
  %64 = bitcast %"struct.std::_Rb_tree_node_base"* %63 to i64*
  %65 = load i64, i64* %64, align 8, !tbaa !36
  %66 = icmp slt i64 %65, %9
  br i1 %66, label %81, label %67

67:                                               ; preds = %60
  %68 = icmp slt i64 %9, %65
  br i1 %68, label %115, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %62, i64 1, i32 1
  %71 = bitcast %"struct.std::_Rb_tree_node_base"** %70 to i64*
  %72 = load i64, i64* %71, align 8, !tbaa !37
  %73 = icmp slt i64 %72, %11
  br i1 %73, label %81, label %74

74:                                               ; preds = %69
  %75 = icmp slt i64 %11, %72
  br i1 %75, label %115, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %62, i64 1, i32 2
  %78 = bitcast %"struct.std::_Rb_tree_node_base"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !tbaa !23
  %80 = icmp slt i64 %79, %13
  br i1 %80, label %81, label %115

81:                                               ; preds = %60, %69, %76, %52
  %82 = phi %"struct.std::_Rb_tree_node_base"* [ %53, %52 ], [ %61, %76 ], [ %61, %69 ], [ %61, %60 ]
  %83 = icmp eq %"struct.std::_Rb_tree_node_base"* %82, null
  br i1 %83, label %115, label %84

84:                                               ; preds = %81
  %85 = icmp eq %"struct.std::_Rb_tree_node_base"* %82, %7
  br i1 %85, label %105, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %82, i64 1
  %88 = bitcast %"struct.std::_Rb_tree_node_base"* %87 to i64*
  %89 = load i64, i64* %88, align 8, !tbaa !36
  %90 = icmp slt i64 %9, %89
  br i1 %90, label %105, label %91

91:                                               ; preds = %86
  %92 = icmp slt i64 %89, %9
  br i1 %92, label %105, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %82, i64 1, i32 1
  %95 = bitcast %"struct.std::_Rb_tree_node_base"** %94 to i64*
  %96 = load i64, i64* %95, align 8, !tbaa !37
  %97 = icmp slt i64 %11, %96
  br i1 %97, label %105, label %98

98:                                               ; preds = %93
  %99 = icmp slt i64 %96, %11
  br i1 %99, label %105, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %82, i64 1, i32 2
  %102 = bitcast %"struct.std::_Rb_tree_node_base"** %101 to i64*
  %103 = load i64, i64* %102, align 8, !tbaa !23
  %104 = icmp slt i64 %13, %103
  br label %105

105:                                              ; preds = %84, %86, %91, %93, %98, %100
  %106 = phi i1 [ true, %84 ], [ true, %93 ], [ false, %98 ], [ %104, %100 ], [ true, %86 ], [ false, %91 ]
  %107 = tail call noalias nonnull i8* @_Znwm(i64 56) #19
  %108 = getelementptr inbounds i8, i8* %107, i64 32
  %109 = bitcast %"struct.std::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %108, i8* noundef nonnull align 8 dereferenceable(24) %109, i64 24, i1 false) #16
  %110 = bitcast i8* %107 to %"struct.std::_Rb_tree_node_base"*
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %106, %"struct.std::_Rb_tree_node_base"* nonnull %110, %"struct.std::_Rb_tree_node_base"* nonnull %82, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %7) #16
  %111 = getelementptr inbounds i8, i8* %3, i64 40
  %112 = bitcast i8* %111 to i64*
  %113 = load i64, i64* %112, align 8, !tbaa !21
  %114 = add i64 %113, 1
  store i64 %114, i64* %112, align 8, !tbaa !21
  br label %115

115:                                              ; preds = %81, %76, %74, %67, %105
  %116 = phi %"struct.std::_Rb_tree_node_base"* [ %110, %105 ], [ null, %81 ], [ %62, %76 ], [ %62, %74 ], [ %62, %67 ]
  %117 = phi i8 [ 1, %105 ], [ 0, %81 ], [ 0, %76 ], [ 0, %74 ], [ 0, %67 ]
  %118 = insertvalue { %"struct.std::_Rb_tree_node_base"*, i8 } undef, %"struct.std::_Rb_tree_node_base"* %116, 0
  %119 = insertvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %118, i8 %117, 1
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %119
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #14

; Function Attrs: nounwind
declare dso_local void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #15

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_StockPortfolio.cpp() #13 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #16
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #6 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #9 = { noinline noreturn nounwind }
attributes #10 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind readonly willreturn }
attributes #19 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"long long", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"any pointer", !5, i64 0}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !10}
!13 = !{!14, !16, i64 0}
!14 = !{!"_ZTSSt15_Rb_tree_header", !15, i64 0, !17, i64 32}
!15 = !{!"_ZTSSt18_Rb_tree_node_base", !16, i64 0, !8, i64 8, !8, i64 16, !8, i64 24}
!16 = !{!"_ZTSSt14_Rb_tree_color", !5, i64 0}
!17 = !{!"long", !5, i64 0}
!18 = !{!14, !8, i64 8}
!19 = !{!14, !8, i64 16}
!20 = !{!14, !8, i64 24}
!21 = !{!14, !17, i64 32}
!22 = distinct !{!22, !10}
!23 = !{!24, !4, i64 16}
!24 = !{!"_ZTSSt4pairIS_IxxExE", !25, i64 0, !4, i64 16}
!25 = !{!"_ZTSSt4pairIxxE", !4, i64 0, !4, i64 8}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZSt9make_pairISt4pairIxxERxES0_INSt17__decay_and_stripIT_E6__typeENS3_IT0_E6__typeEEOS4_OS7_: argument 0"}
!28 = distinct !{!28, !"_ZSt9make_pairISt4pairIxxERxES0_INSt17__decay_and_stripIT_E6__typeENS3_IT0_E6__typeEEOS4_OS7_"}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.unroll.disable"}
!33 = !{!15, !8, i64 24}
!34 = !{!15, !8, i64 16}
!35 = distinct !{!35, !10}
!36 = !{!25, !4, i64 0}
!37 = !{!25, !4, i64 8}
!38 = distinct !{!38, !10}
