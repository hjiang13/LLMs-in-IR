digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55cbb4ec31c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%0:\l  %1 = alloca i64, align 8\l  %2 = alloca %\"class.std::set\", align 8\l  %3 = alloca %\"struct.std::pair\", align 8\l  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([30 x\l... i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %4)\l  %6 = bitcast i64* %1 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16\l  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @.str.2, i64 0, i64 0), i64* nonnull %1)\l  %8 = load i64, i64* %1, align 8, !tbaa !7\l  %9 = icmp slt i64 %8, 1\l  br i1 %9, label %35, label %12\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec31c0:s0 -> Node0x55cbb4ec3550;
	Node0x55cbb4ec31c0:s1 -> Node0x55cbb4ec3ef0;
	Node0x55cbb4ec4030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%10:\l10:                                               \l  %11 = icmp slt i64 %17, 1\l  br i1 %11, label %35, label %21\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec4030:s0 -> Node0x55cbb4ec3550;
	Node0x55cbb4ec4030:s1 -> Node0x55cbb4ec4150;
	Node0x55cbb4ec3ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%12:\l12:                                               \l  %13 = phi i64 [ %16, %12 ], [ 1, %0 ]\l  %14 = getelementptr inbounds [200005 x i64], [200005 x i64]* @strength, i64\l... 0, i64 %13\l  %15 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @.str.2, i64 0, i64 0), i64* nonnull %14)\l  %16 = add nuw nsw i64 %13, 1\l  %17 = load i64, i64* %1, align 8, !tbaa !7\l  %18 = icmp slt i64 %13, %17\l  br i1 %18, label %12, label %10, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec3ef0:s0 -> Node0x55cbb4ec3ef0;
	Node0x55cbb4ec3ef0:s1 -> Node0x55cbb4ec4030;
	Node0x55cbb4ec4770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%19:\l19:                                               \l  %20 = icmp slt i64 %26, 1\l  br i1 %20, label %35, label %28\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec4770:s0 -> Node0x55cbb4ec3550;
	Node0x55cbb4ec4770:s1 -> Node0x55cbb4ec4890;
	Node0x55cbb4ec4150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%21:\l21:                                               \l  %22 = phi i64 [ %25, %21 ], [ 1, %10 ]\l  %23 = getelementptr inbounds [200005 x i64], [200005 x i64]* @lef, i64 0,\l... i64 %22\l  %24 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @.str.2, i64 0, i64 0), i64* nonnull %23)\l  %25 = add nuw nsw i64 %22, 1\l  %26 = load i64, i64* %1, align 8, !tbaa !7\l  %27 = icmp slt i64 %22, %26\l  br i1 %27, label %21, label %19, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec4150:s0 -> Node0x55cbb4ec4150;
	Node0x55cbb4ec4150:s1 -> Node0x55cbb4ec4770;
	Node0x55cbb4ec4890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%28:\l28:                                               \l  %29 = phi i64 [ %32, %28 ], [ 1, %19 ]\l  %30 = getelementptr inbounds [200005 x i64], [200005 x i64]* @righ, i64 0,\l... i64 %29\l  %31 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @.str.2, i64 0, i64 0), i64* nonnull %30)\l  %32 = add nuw nsw i64 %29, 1\l  %33 = load i64, i64* %1, align 8, !tbaa !7\l  %34 = icmp slt i64 %29, %33\l  br i1 %34, label %28, label %35, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec4890:s0 -> Node0x55cbb4ec4890;
	Node0x55cbb4ec4890:s1 -> Node0x55cbb4ec3550;
	Node0x55cbb4ec3550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%35:\l35:                                               \l  %36 = phi i64 [ %26, %19 ], [ %17, %10 ], [ %8, %0 ], [ %33, %28 ]\l  %37 = getelementptr inbounds %\"class.std::set\", %\"class.std::set\"* %2, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i32 0\l  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #16\l  %38 = getelementptr inbounds i8, i8* %37, i64 8\l  %39 = bitcast i8* %38 to i32*\l  store i32 0, i32* %39, align 8, !tbaa !13\l  %40 = getelementptr inbounds i8, i8* %37, i64 16\l  %41 = bitcast i8* %40 to %\"struct.std::_Rb_tree_node_base\"**\l  store %\"struct.std::_Rb_tree_node_base\"* null,\l... %\"struct.std::_Rb_tree_node_base\"** %41, align 8, !tbaa !18\l  %42 = getelementptr inbounds i8, i8* %37, i64 24\l  %43 = bitcast i8* %42 to i8**\l  store i8* %38, i8** %43, align 8, !tbaa !19\l  %44 = getelementptr inbounds i8, i8* %37, i64 32\l  %45 = bitcast i8* %44 to i8**\l  store i8* %38, i8** %45, align 8, !tbaa !20\l  %46 = getelementptr inbounds i8, i8* %37, i64 40\l  %47 = bitcast i8* %46 to i64*\l  store i64 0, i64* %47, align 8, !tbaa !21\l  %48 = bitcast i8* %42 to %\"struct.std::_Rb_tree_node\"**\l  %49 = bitcast i8* %42 to %\"struct.std::_Rb_tree_node_base\"**\l  %50 = bitcast i8* %38 to %\"struct.std::_Rb_tree_node_base\"*\l  %51 = bitcast %\"struct.std::pair\"* %3 to i8*\l  %52 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"* %3,\l... i64 0, i32 0, i32 0\l  %53 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"* %3,\l... i64 0, i32 0, i32 1\l  %54 = getelementptr inbounds %\"struct.std::pair\", %\"struct.std::pair\"* %3,\l... i64 0, i32 1\l  %55 = getelementptr inbounds %\"class.std::set\", %\"class.std::set\"* %2, i64\l... 0, i32 0\l  %56 = icmp slt i64 %36, 1\l  br i1 %56, label %161, label %65\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec3550:s0 -> Node0x55cbb4ec7070;
	Node0x55cbb4ec3550:s1 -> Node0x55cbb4ec7100;
	Node0x55cbb4ec7240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%57:\l57:                                               \l  %58 = icmp slt i64 %113, 1\l  br i1 %58, label %161, label %59\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec7240:s0 -> Node0x55cbb4ec7070;
	Node0x55cbb4ec7240:s1 -> Node0x55cbb4ec7390;
	Node0x55cbb4ec7390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%59:\l59:                                               \l  %60 = add i64 %113, -1\l  %61 = and i64 %113, 3\l  %62 = icmp ult i64 %60, 3\l  br i1 %62, label %145, label %63\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec7390:s0 -> Node0x55cbb4ec76e0;
	Node0x55cbb4ec7390:s1 -> Node0x55cbb4ec7730;
	Node0x55cbb4ec7730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%63:\l63:                                               \l  %64 = and i64 %113, -4\l  br label %119\l}"];
	Node0x55cbb4ec7730 -> Node0x55cbb4ec7930;
	Node0x55cbb4ec7100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%65:\l65:                                               \l  %66 = phi i64 [ %116, %115 ], [ 0, %35 ]\l  %67 = phi i64 [ %109, %115 ], [ 1, %35 ]\l  %68 = icmp eq i64 %66, 0\l  br i1 %68, label %89, label %69\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec7100:s0 -> Node0x55cbb4ec7d10;
	Node0x55cbb4ec7100:s1 -> Node0x55cbb4ec7da0;
	Node0x55cbb4ec7da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %48, align 8, !tbaa !19\l  %71 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %70, i64 0, i32 1\l  %72 = bitcast %\"struct.__gnu_cxx::__aligned_membuf\"* %71 to i64*\l  %73 = load i64, i64* %72, align 8\l  %74 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %70, i64 0, i32 1, i32 0, i64 16\l  %75 = bitcast i8* %74 to i64*\l  %76 = load i64, i64* %75, align 8\l  %77 = icmp eq i64 %73, %67\l  br i1 %77, label %78, label %89\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec7da0:s0 -> Node0x55cbb4ec8970;
	Node0x55cbb4ec7da0:s1 -> Node0x55cbb4ec7d10;
	Node0x55cbb4ec8970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  %79 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %70, i64 0, i32 1, i32 0, i64 8\l  %80 = bitcast i8* %79 to i64*\l  %81 = load i64, i64* %80, align 8\l  %82 = load i64, i64* %1, align 8, !tbaa !7\l  call void @_Z6updatexxxxxx(i64 1, i64 1, i64 %82, i64 %76, i64 %76, i64 %81)\l  %83 = load %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"** %49, align 8, !tbaa !19\l  %84 = call %\"struct.std::_Rb_tree_node_base\"*\l... @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%\"struct.std::_R\l...b_tree_node_base\"* %83, %\"struct.std::_Rb_tree_node_base\"* nonnull align 8\l... dereferenceable(32) %50) #16\l  %85 = bitcast %\"struct.std::_Rb_tree_node_base\"* %84 to i8*\l  call void @_ZdlPv(i8* %85) #16\l  %86 = load i64, i64* %47, align 8, !tbaa !21\l  %87 = add i64 %86, -1\l  store i64 %87, i64* %47, align 8, !tbaa !21\l  %88 = icmp eq i64 %87, 0\l  br i1 %88, label %89, label %69, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec8970:s0 -> Node0x55cbb4ec7d10;
	Node0x55cbb4ec8970:s1 -> Node0x55cbb4ec7da0;
	Node0x55cbb4ec7d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%89:\l89:                                               \l  %90 = getelementptr inbounds [200005 x i64], [200005 x i64]* @lef, i64 0,\l... i64 %67\l  %91 = load i64, i64* %90, align 8, !tbaa !7\l  %92 = xor i64 %91, -1\l  %93 = add i64 %67, %92\l  %94 = icmp sgt i64 %93, 0\l  br i1 %94, label %95, label %101\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec7d10:s0 -> Node0x55cbb4eca0f0;
	Node0x55cbb4ec7d10:s1 -> Node0x55cbb4eca140;
	Node0x55cbb4eca0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%95:\l95:                                               \l  %96 = load i64, i64* %1, align 8, !tbaa !7\l  %97 = call i64 @_Z5queryxxxxx(i64 1, i64 1, i64 %96, i64 1, i64 %93)\l  %98 = getelementptr inbounds [200005 x i64], [200005 x i64]* @strength, i64\l... 0, i64 %67\l  %99 = load i64, i64* %98, align 8, !tbaa !7\l  %100 = add nsw i64 %99, %97\l  br label %104\l}"];
	Node0x55cbb4eca0f0 -> Node0x55cbb4eca690;
	Node0x55cbb4eca140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%101:\l101:                                              \l  %102 = getelementptr inbounds [200005 x i64], [200005 x i64]* @strength, i64\l... 0, i64 %67\l  %103 = load i64, i64* %102, align 8, !tbaa !7\l  br label %104\l}"];
	Node0x55cbb4eca140 -> Node0x55cbb4eca690;
	Node0x55cbb4eca690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%104:\l104:                                              \l  %105 = phi i64 [ %100, %95 ], [ %103, %101 ]\l  %106 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0,\l... i64 %67\l  store i64 %105, i64* %106, align 8\l  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #16\l  %107 = getelementptr inbounds [200005 x i64], [200005 x i64]* @righ, i64 0,\l... i64 %67\l  %108 = load i64, i64* %107, align 8, !tbaa !7\l  %109 = add nuw i64 %67, 1\l  %110 = add i64 %109, %108\l  store i64 %110, i64* %52, align 8\l  store i64 %105, i64* %53, align 8\l  store i64 %67, i64* %54, align 8, !tbaa !23, !alias.scope !26\l  %111 = invoke \{ %\"struct.std::_Rb_tree_node_base\"*, i8 \}\l... @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_\l...insert_uniqueIS2_EES0_ISt17_Rb_tree_iteratorIS2_EbEOT_(%\"class.std::_Rb_tree\"*\l... nonnull align 8 dereferenceable(48) %55, %\"struct.std::pair\"* nonnull align 8\l... dereferenceable(24) %3)\l          to label %112 unwind label %117\l}"];
	Node0x55cbb4eca690 -> Node0x55cbb4ecc310;
	Node0x55cbb4eca690 -> Node0x55cbb4ecc3a0;
	Node0x55cbb4ecc310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%112:\l112:                                              \l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #16\l  %113 = load i64, i64* %1, align 8, !tbaa !7\l  %114 = icmp slt i64 %67, %113\l  br i1 %114, label %115, label %57, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ecc310:s0 -> Node0x55cbb4ec7a20;
	Node0x55cbb4ecc310:s1 -> Node0x55cbb4ec7240;
	Node0x55cbb4ec7a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%115:\l115:                                              \l  %116 = load i64, i64* %47, align 8, !tbaa !21\l  br label %65\l}"];
	Node0x55cbb4ec7a20 -> Node0x55cbb4ec7100;
	Node0x55cbb4ecc3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%117:\l117:                                              \l  %118 = landingpad \{ i8*, i32 \}\l          cleanup\l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #16\l  call void\l... @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EED2Ev(\l...%\"class.std::_Rb_tree\"* nonnull align 8 dereferenceable(48) %55) #16\l  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #16\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16\l  resume \{ i8*, i32 \} %118\l}"];
	Node0x55cbb4ec7930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%119:\l119:                                              \l  %120 = phi i64 [ 1, %63 ], [ %142, %119 ]\l  %121 = phi i64 [ 0, %63 ], [ %141, %119 ]\l  %122 = phi i64 [ %64, %63 ], [ %143, %119 ]\l  %123 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0,\l... i64 %120\l  %124 = load i64, i64* %123, align 8, !tbaa !7\l  %125 = icmp slt i64 %121, %124\l  %126 = select i1 %125, i64 %124, i64 %121\l  %127 = add nuw nsw i64 %120, 1\l  %128 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0,\l... i64 %127\l  %129 = load i64, i64* %128, align 8, !tbaa !7\l  %130 = icmp slt i64 %126, %129\l  %131 = select i1 %130, i64 %129, i64 %126\l  %132 = add nuw nsw i64 %120, 2\l  %133 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0,\l... i64 %132\l  %134 = load i64, i64* %133, align 8, !tbaa !7\l  %135 = icmp slt i64 %131, %134\l  %136 = select i1 %135, i64 %134, i64 %131\l  %137 = add nuw i64 %120, 3\l  %138 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0,\l... i64 %137\l  %139 = load i64, i64* %138, align 8, !tbaa !7\l  %140 = icmp slt i64 %136, %139\l  %141 = select i1 %140, i64 %139, i64 %136\l  %142 = add nuw i64 %120, 4\l  %143 = add i64 %122, -4\l  %144 = icmp eq i64 %143, 0\l  br i1 %144, label %145, label %119, !llvm.loop !30\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec7930:s0 -> Node0x55cbb4ec76e0;
	Node0x55cbb4ec7930:s1 -> Node0x55cbb4ec7930;
	Node0x55cbb4ec76e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%145:\l145:                                              \l  %146 = phi i64 [ undef, %59 ], [ %141, %119 ]\l  %147 = phi i64 [ 1, %59 ], [ %142, %119 ]\l  %148 = phi i64 [ 0, %59 ], [ %141, %119 ]\l  %149 = icmp eq i64 %61, 0\l  br i1 %149, label %161, label %150\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ec76e0:s0 -> Node0x55cbb4ec7070;
	Node0x55cbb4ec76e0:s1 -> Node0x55cbb4ececf0;
	Node0x55cbb4ececf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%150:\l150:                                              \l  %151 = phi i64 [ %158, %150 ], [ %147, %145 ]\l  %152 = phi i64 [ %157, %150 ], [ %148, %145 ]\l  %153 = phi i64 [ %159, %150 ], [ %61, %145 ]\l  %154 = getelementptr inbounds [200005 x i64], [200005 x i64]* @dp, i64 0,\l... i64 %151\l  %155 = load i64, i64* %154, align 8, !tbaa !7\l  %156 = icmp slt i64 %152, %155\l  %157 = select i1 %156, i64 %155, i64 %152\l  %158 = add nuw i64 %151, 1\l  %159 = add i64 %153, -1\l  %160 = icmp eq i64 %159, 0\l  br i1 %160, label %161, label %150, !llvm.loop !31\l|{<s0>T|<s1>F}}"];
	Node0x55cbb4ececf0:s0 -> Node0x55cbb4ec7070;
	Node0x55cbb4ececf0:s1 -> Node0x55cbb4ececf0;
	Node0x55cbb4ec7070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%161:\l161:                                              \l  %162 = phi i64 [ 0, %57 ], [ 0, %35 ], [ %146, %145 ], [ %157, %150 ]\l  %163 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1)\l... getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %162)\l  %164 = bitcast i8* %40 to %\"struct.std::_Rb_tree_node\"**\l  %165 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %164, align 8, !tbaa !18\l  invoke void\l... @_ZNSt8_Rb_treeISt4pairIS0_IxxExES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_e\l...raseEPSt13_Rb_tree_nodeIS2_E(%\"class.std::_Rb_tree\"* nonnull align 8\l... dereferenceable(48) %55, %\"struct.std::_Rb_tree_node\"* %165)\l          to label %169 unwind label %166\l}"];
	Node0x55cbb4ec7070 -> Node0x55cbb4ed0110;
	Node0x55cbb4ec7070 -> Node0x55cbb4ed0160;
	Node0x55cbb4ed0160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%166:\l166:                                              \l  %167 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %168 = extractvalue \{ i8*, i32 \} %167, 0\l  call void @__clang_call_terminate(i8* %168) #17\l  unreachable\l}"];
	Node0x55cbb4ed0110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%169:\l169:                                              \l  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #16\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16\l  ret i32 0\l}"];
}
