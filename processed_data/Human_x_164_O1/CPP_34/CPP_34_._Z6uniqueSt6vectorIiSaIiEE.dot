digraph "CFG for '_Z6uniqueSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z6uniqueSt6vectorIiSaIiEE' function";

	Node0x55e52d336560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %8 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %8, i8 0, i64 24, i1 false)\l  %9 = load i32*, i32** %3, align 8, !tbaa !3\l  %10 = load i32*, i32** %4, align 8, !tbaa !8\l  %11 = icmp eq i32* %9, %10\l  br i1 %11, label %12, label %27\l|{<s0>T|<s1>F}}"];
	Node0x55e52d336560:s0 -> Node0x55e52d338420;
	Node0x55e52d336560:s1 -> Node0x55e52d3384b0;
	Node0x55e52d338420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%12:\l12:                                               \l  %13 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %14 = load i32*, i32** %13, align 8, !tbaa !9\l  %15 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %16 = load i32*, i32** %15, align 8, !tbaa !9\l  %17 = icmp eq i32* %14, %16\l  br i1 %17, label %114, label %18\l|{<s0>T|<s1>F}}"];
	Node0x55e52d338420:s0 -> Node0x55e52d339000;
	Node0x55e52d338420:s1 -> Node0x55e52d339090;
	Node0x55e52d339090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%18:\l18:                                               \l  %19 = ptrtoint i32* %16 to i64\l  %20 = ptrtoint i32* %14 to i64\l  %21 = sub i64 %19, %20\l  %22 = ashr exact i64 %21, 2\l  %23 = call i64 @llvm.ctlz.i64(i64 %22, i1 true) #7, !range !10\l  %24 = shl nuw nsw i64 %23, 1\l  %25 = xor i64 %24, 126\l  invoke void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %14, i32* %16, i64 %25)\l          to label %26 unwind label %112\l}"];
	Node0x55e52d339090 -> Node0x55e52d339950;
	Node0x55e52d339090 -> Node0x55e52d3399e0;
	Node0x55e52d339950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%26:\l26:                                               \l  invoke void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIi\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %14, i32* %16)\l          to label %114 unwind label %112\l}"];
	Node0x55e52d339950 -> Node0x55e52d339000;
	Node0x55e52d339950 -> Node0x55e52d3399e0;
	Node0x55e52d3384b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%27:\l27:                                               \l  %28 = phi i64 [ %104, %103 ], [ 0, %2 ]\l  %29 = phi i32* [ %106, %103 ], [ %10, %2 ]\l  %30 = load i32*, i32** %5, align 8, !tbaa !9\l  %31 = load i32*, i32** %6, align 8, !tbaa !9\l  %32 = getelementptr inbounds i32, i32* %29, i64 %28\l  %33 = ptrtoint i32* %31 to i64\l  %34 = ptrtoint i32* %30 to i64\l  %35 = sub i64 %33, %34\l  %36 = icmp sgt i64 %35, 15\l  br i1 %36, label %37, label %61\l|{<s0>T|<s1>F}}"];
	Node0x55e52d3384b0:s0 -> Node0x55e52d33a8a0;
	Node0x55e52d3384b0:s1 -> Node0x55e52d33a930;
	Node0x55e52d33a8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%37:\l37:                                               \l  %38 = ashr i64 %35, 4\l  %39 = load i32, i32* %32, align 4, !tbaa !11\l  br label %40\l}"];
	Node0x55e52d33a8a0 -> Node0x55e52d33abe0;
	Node0x55e52d33abe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i64 [ %38, %37 ], [ %59, %57 ]\l  %42 = phi i32* [ %30, %37 ], [ %58, %57 ]\l  %43 = load i32, i32* %42, align 4, !tbaa !11\l  %44 = icmp eq i32 %43, %39\l  br i1 %44, label %91, label %45\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33abe0:s0 -> Node0x55e52d33b680;
	Node0x55e52d33abe0:s1 -> Node0x55e52d33b710;
	Node0x55e52d33b710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds i32, i32* %42, i64 1\l  %47 = load i32, i32* %46, align 4, !tbaa !11\l  %48 = icmp eq i32 %47, %39\l  br i1 %48, label %89, label %49\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33b710:s0 -> Node0x55e52d33b9f0;
	Node0x55e52d33b710:s1 -> Node0x55e52d33ba40;
	Node0x55e52d33ba40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = getelementptr inbounds i32, i32* %42, i64 2\l  %51 = load i32, i32* %50, align 4, !tbaa !11\l  %52 = icmp eq i32 %51, %39\l  br i1 %52, label %87, label %53\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33ba40:s0 -> Node0x55e52d33bd20;
	Node0x55e52d33ba40:s1 -> Node0x55e52d33bd70;
	Node0x55e52d33bd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = getelementptr inbounds i32, i32* %42, i64 3\l  %55 = load i32, i32* %54, align 4, !tbaa !11\l  %56 = icmp eq i32 %55, %39\l  br i1 %56, label %85, label %57\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33bd70:s0 -> Node0x55e52d33c080;
	Node0x55e52d33bd70:s1 -> Node0x55e52d33ad10;
	Node0x55e52d33ad10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds i32, i32* %42, i64 4\l  %59 = add nsw i64 %41, -1\l  %60 = icmp sgt i64 %41, 1\l  br i1 %60, label %40, label %61, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33ad10:s0 -> Node0x55e52d33abe0;
	Node0x55e52d33ad10:s1 -> Node0x55e52d33a930;
	Node0x55e52d33a930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%61:\l61:                                               \l  %62 = phi i32* [ %30, %27 ], [ %58, %57 ]\l  %63 = ptrtoint i32* %62 to i64\l  %64 = sub i64 %33, %63\l  %65 = ashr exact i64 %64, 2\l  switch i64 %65, label %84 [\l    i64 3, label %66\l    i64 2, label %72\l    i64 1, label %79\l  ]\l|{<s0>def|<s1>3|<s2>2|<s3>1}}"];
	Node0x55e52d33a930:s0 -> Node0x55e52d33cac0;
	Node0x55e52d33a930:s1 -> Node0x55e52d33cb10;
	Node0x55e52d33a930:s2 -> Node0x55e52d33cb60;
	Node0x55e52d33a930:s3 -> Node0x55e52d33cbf0;
	Node0x55e52d33cb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%66:\l66:                                               \l  %67 = load i32, i32* %62, align 4, !tbaa !11\l  %68 = load i32, i32* %32, align 4, !tbaa !11\l  %69 = icmp eq i32 %67, %68\l  br i1 %69, label %91, label %70\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33cb10:s0 -> Node0x55e52d33b680;
	Node0x55e52d33cb10:s1 -> Node0x55e52d33ce40;
	Node0x55e52d33ce40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%70:\l70:                                               \l  %71 = getelementptr inbounds i32, i32* %62, i64 1\l  br label %72\l}"];
	Node0x55e52d33ce40 -> Node0x55e52d33cb60;
	Node0x55e52d33cb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%72:\l72:                                               \l  %73 = phi i32* [ %62, %61 ], [ %71, %70 ]\l  %74 = load i32, i32* %73, align 4, !tbaa !11\l  %75 = load i32, i32* %32, align 4, !tbaa !11\l  %76 = icmp eq i32 %74, %75\l  br i1 %76, label %91, label %77\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33cb60:s0 -> Node0x55e52d33b680;
	Node0x55e52d33cb60:s1 -> Node0x55e52d33d270;
	Node0x55e52d33d270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%77:\l77:                                               \l  %78 = getelementptr inbounds i32, i32* %73, i64 1\l  br label %79\l}"];
	Node0x55e52d33d270 -> Node0x55e52d33cbf0;
	Node0x55e52d33cbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%79:\l79:                                               \l  %80 = phi i32* [ %62, %61 ], [ %78, %77 ]\l  %81 = load i32, i32* %80, align 4, !tbaa !11\l  %82 = load i32, i32* %32, align 4, !tbaa !11\l  %83 = icmp eq i32 %81, %82\l  br i1 %83, label %91, label %84\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33cbf0:s0 -> Node0x55e52d33b680;
	Node0x55e52d33cbf0:s1 -> Node0x55e52d33cac0;
	Node0x55e52d33cac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%84:\l84:                                               \l  br label %91\l}"];
	Node0x55e52d33cac0 -> Node0x55e52d33b680;
	Node0x55e52d33c080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%85:\l85:                                               \l  %86 = getelementptr inbounds i32, i32* %42, i64 3\l  br label %91\l}"];
	Node0x55e52d33c080 -> Node0x55e52d33b680;
	Node0x55e52d33bd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%87:\l87:                                               \l  %88 = getelementptr inbounds i32, i32* %42, i64 2\l  br label %91\l}"];
	Node0x55e52d33bd20 -> Node0x55e52d33b680;
	Node0x55e52d33b9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%89:\l89:                                               \l  %90 = getelementptr inbounds i32, i32* %42, i64 1\l  br label %91\l}"];
	Node0x55e52d33b9f0 -> Node0x55e52d33b680;
	Node0x55e52d33b680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%91:\l91:                                               \l  %92 = phi i32* [ %31, %84 ], [ %62, %66 ], [ %73, %72 ], [ %80, %79 ], [\l... %86, %85 ], [ %88, %87 ], [ %90, %89 ], [ %42, %40 ]\l  %93 = icmp eq i32* %92, %31\l  br i1 %93, label %94, label %103\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33b680:s0 -> Node0x55e52d33dd20;
	Node0x55e52d33b680:s1 -> Node0x55e52d33a0c0;
	Node0x55e52d33dd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%94:\l94:                                               \l  %95 = load i32*, i32** %7, align 8, !tbaa !16\l  %96 = icmp eq i32* %31, %95\l  br i1 %96, label %100, label %97\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33dd20:s0 -> Node0x55e52d33dfc0;
	Node0x55e52d33dd20:s1 -> Node0x55e52d33e010;
	Node0x55e52d33e010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%97:\l97:                                               \l  %98 = load i32, i32* %32, align 4, !tbaa !11\l  store i32 %98, i32* %31, align 4, !tbaa !11\l  %99 = getelementptr inbounds i32, i32* %31, i64 1\l  store i32* %99, i32** %6, align 8, !tbaa !3\l  br label %103\l}"];
	Node0x55e52d33e010 -> Node0x55e52d33a0c0;
	Node0x55e52d33dfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%100:\l100:                                              \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %31, i32* nonnull align 4 dereferenceable(4) %32)\l          to label %103 unwind label %101\l}"];
	Node0x55e52d33dfc0 -> Node0x55e52d33a0c0;
	Node0x55e52d33dfc0 -> Node0x55e52d33ead0;
	Node0x55e52d33ead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%101:\l101:                                              \l  %102 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %115\l}"];
	Node0x55e52d33ead0 -> Node0x55e52d33ee40;
	Node0x55e52d33a0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%103:\l103:                                              \l  %104 = add nuw i64 %28, 1\l  %105 = load i32*, i32** %3, align 8, !tbaa !3\l  %106 = load i32*, i32** %4, align 8, !tbaa !8\l  %107 = ptrtoint i32* %105 to i64\l  %108 = ptrtoint i32* %106 to i64\l  %109 = sub i64 %107, %108\l  %110 = ashr exact i64 %109, 2\l  %111 = icmp ugt i64 %110, %104\l  br i1 %111, label %27, label %12, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33a0c0:s0 -> Node0x55e52d3384b0;
	Node0x55e52d33a0c0:s1 -> Node0x55e52d338420;
	Node0x55e52d3399e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%112:\l112:                                              \l  %113 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %115\l}"];
	Node0x55e52d3399e0 -> Node0x55e52d33ee40;
	Node0x55e52d339000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%114:\l114:                                              \l  ret void\l}"];
	Node0x55e52d33ee40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%115:\l115:                                              \l  %116 = phi \{ i8*, i32 \} [ %113, %112 ], [ %102, %101 ]\l  %117 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"*\l... %0, i64 0, i32 0, i32 0, i32 0, i32 0\l  %118 = load i32*, i32** %117, align 8, !tbaa !8\l  %119 = icmp eq i32* %118, null\l  br i1 %119, label %122, label %120\l|{<s0>T|<s1>F}}"];
	Node0x55e52d33ee40:s0 -> Node0x55e52d33fdf0;
	Node0x55e52d33ee40:s1 -> Node0x55e52d33fe40;
	Node0x55e52d33fe40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%120:\l120:                                              \l  %121 = bitcast i32* %118 to i8*\l  call void @_ZdlPv(i8* nonnull %121) #7\l  br label %122\l}"];
	Node0x55e52d33fe40 -> Node0x55e52d33fdf0;
	Node0x55e52d33fdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%122:\l122:                                              \l  resume \{ i8*, i32 \} %116\l}"];
}
