digraph "CFG for '_Z25count_distinct_charactersNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z25count_distinct_charactersNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x55ddc2e8e990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %3 = load i8*, i8** %2, align 8, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %5 = load i64, i64* %4, align 8, !tbaa !10\l  %6 = getelementptr inbounds i8, i8* %3, i64 %5\l  %7 = icmp eq i64 %5, 0\l  br i1 %7, label %16, label %8\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e8e990:s0 -> Node0x55ddc2e8ffe0;
	Node0x55ddc2e8e990:s1 -> Node0x55ddc2e90070;
	Node0x55ddc2e90070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%8:\l8:                                                \l  %9 = phi i8* [ %14, %8 ], [ %3, %1 ]\l  %10 = load i8, i8* %9, align 1, !tbaa !11\l  %11 = sext i8 %10 to i32\l  %12 = call i32 @tolower(i32 %11)\l  %13 = trunc i32 %12 to i8\l  store i8 %13, i8* %9, align 1, !tbaa !11\l  %14 = getelementptr inbounds i8, i8* %9, i64 1\l  %15 = icmp eq i8* %14, %6\l  br i1 %15, label %16, label %8, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e90070:s0 -> Node0x55ddc2e8ffe0;
	Node0x55ddc2e90070:s1 -> Node0x55ddc2e90070;
	Node0x55ddc2e8ffe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%16:\l16:                                               \l  %17 = load i64, i64* %4, align 8, !tbaa !10\l  %18 = icmp eq i64 %17, 0\l  br i1 %18, label %32, label %19\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e8ffe0:s0 -> Node0x55ddc2e916d0;
	Node0x55ddc2e8ffe0:s1 -> Node0x55ddc2e91720;
	Node0x55ddc2e91720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%19:\l19:                                               \l  %20 = phi i64 [ %104, %100 ], [ 0, %16 ]\l  %21 = phi i8* [ %103, %100 ], [ null, %16 ]\l  %22 = phi i8* [ %102, %100 ], [ null, %16 ]\l  %23 = phi i8* [ %101, %100 ], [ null, %16 ]\l  %24 = ptrtoint i8* %22 to i64\l  %25 = ptrtoint i8* %23 to i64\l  %26 = sub i64 %24, %25\l  %27 = icmp eq i64 %26, 0\l  br i1 %27, label %42, label %28\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e91720:s0 -> Node0x55ddc2e91f20;
	Node0x55ddc2e91720:s1 -> Node0x55ddc2e91fb0;
	Node0x55ddc2e91fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%28:\l28:                                               \l  %29 = load i8*, i8** %2, align 8, !tbaa !3\l  %30 = getelementptr inbounds i8, i8* %29, i64 %20\l  %31 = load i8, i8* %30, align 1, !tbaa !11\l  br label %46\l}"];
	Node0x55ddc2e91fb0 -> Node0x55ddc2e92880;
	Node0x55ddc2e916d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%32:\l32:                                               \l  %33 = phi i8* [ null, %16 ], [ %101, %100 ]\l  %34 = phi i8* [ null, %16 ], [ %102, %100 ]\l  %35 = icmp eq i8* %33, null\l  br i1 %35, label %37, label %36\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e916d0:s0 -> Node0x55ddc2e92d40;
	Node0x55ddc2e916d0:s1 -> Node0x55ddc2e92d90;
	Node0x55ddc2e92d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%36:\l36:                                               \l  call void @_ZdlPv(i8* nonnull %33) #6\l  br label %37\l}"];
	Node0x55ddc2e92d90 -> Node0x55ddc2e92d40;
	Node0x55ddc2e92d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%37:\l37:                                               \l  %38 = ptrtoint i8* %34 to i64\l  %39 = ptrtoint i8* %33 to i64\l  %40 = sub i64 %38, %39\l  %41 = trunc i64 %40 to i32\l  ret i32 %41\l}"];
	Node0x55ddc2e91f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%42:\l42:                                               \l  %43 = phi i8 [ 0, %19 ], [ %52, %46 ]\l  %44 = and i8 %43, 1\l  %45 = icmp eq i8 %44, 0\l  br i1 %45, label %55, label %100\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e91f20:s0 -> Node0x55ddc2e93640;
	Node0x55ddc2e91f20:s1 -> Node0x55ddc2e91860;
	Node0x55ddc2e92880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i64 [ 0, %28 ], [ %53, %46 ]\l  %48 = phi i8 [ 0, %28 ], [ %52, %46 ]\l  %49 = getelementptr inbounds i8, i8* %23, i64 %47\l  %50 = load i8, i8* %49, align 1, !tbaa !11\l  %51 = icmp eq i8 %50, %31\l  %52 = select i1 %51, i8 1, i8 %48\l  %53 = add nuw nsw i64 %47, 1\l  %54 = icmp eq i64 %53, %26\l  br i1 %54, label %42, label %46, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e92880:s0 -> Node0x55ddc2e91f20;
	Node0x55ddc2e92880:s1 -> Node0x55ddc2e92880;
	Node0x55ddc2e93640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%55:\l55:                                               \l  %56 = load i8*, i8** %2, align 8, !tbaa !3\l  %57 = getelementptr inbounds i8, i8* %56, i64 %20\l  %58 = icmp eq i8* %22, %21\l  br i1 %58, label %62, label %59\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e93640:s0 -> Node0x55ddc2e93f10;
	Node0x55ddc2e93640:s1 -> Node0x55ddc2e93f60;
	Node0x55ddc2e93f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%59:\l59:                                               \l  %60 = load i8, i8* %57, align 1, !tbaa !11\l  store i8 %60, i8* %22, align 1, !tbaa !11\l  %61 = getelementptr inbounds i8, i8* %22, i64 1\l  br label %100\l}"];
	Node0x55ddc2e93f60 -> Node0x55ddc2e91860;
	Node0x55ddc2e93f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%62:\l62:                                               \l  %63 = icmp eq i64 %26, 9223372036854775807\l  br i1 %63, label %64, label %66\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e93f10:s0 -> Node0x55ddc2e94360;
	Node0x55ddc2e93f10:s1 -> Node0x55ddc2e943b0;
	Node0x55ddc2e94360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%64:\l64:                                               \l  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str, i64 0, i64 0)) #7\l          to label %65 unwind label %95\l}"];
	Node0x55ddc2e94360 -> Node0x55ddc2e94950;
	Node0x55ddc2e94360 -> Node0x55ddc2e949a0;
	Node0x55ddc2e94950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4f69d970",label="{%65:\l65:                                               \l  unreachable\l}"];
	Node0x55ddc2e943b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%66:\l66:                                               \l  %67 = icmp eq i64 %26, 0\l  %68 = select i1 %67, i64 1, i64 %26\l  %69 = add i64 %68, %26\l  %70 = icmp ult i64 %69, %26\l  %71 = icmp slt i64 %69, 0\l  %72 = or i1 %70, %71\l  %73 = select i1 %72, i64 9223372036854775807, i64 %69\l  %74 = icmp eq i64 %73, 0\l  br i1 %74, label %81, label %75\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e943b0:s0 -> Node0x55ddc2e95100;
	Node0x55ddc2e943b0:s1 -> Node0x55ddc2e95150;
	Node0x55ddc2e95150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%75:\l75:                                               \l  %76 = icmp slt i64 %73, 0\l  br i1 %76, label %77, label %79\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e95150:s0 -> Node0x55ddc2e952e0;
	Node0x55ddc2e95150:s1 -> Node0x55ddc2e95330;
	Node0x55ddc2e952e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%77:\l77:                                               \l  invoke void @_ZSt17__throw_bad_allocv() #7\l          to label %78 unwind label %95\l}"];
	Node0x55ddc2e952e0 -> Node0x55ddc2e95470;
	Node0x55ddc2e952e0 -> Node0x55ddc2e949a0;
	Node0x55ddc2e95470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%78:\l78:                                               \l  unreachable\l}"];
	Node0x55ddc2e95330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%79:\l79:                                               \l  %80 = invoke noalias nonnull i8* @_Znwm(i64 %73) #8\l          to label %81 unwind label %93\l}"];
	Node0x55ddc2e95330 -> Node0x55ddc2e95100;
	Node0x55ddc2e95330 -> Node0x55ddc2e95790;
	Node0x55ddc2e95100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%81:\l81:                                               \l  %82 = phi i8* [ null, %66 ], [ %80, %79 ]\l  %83 = getelementptr inbounds i8, i8* %82, i64 %26\l  %84 = load i8, i8* %57, align 1, !tbaa !11\l  store i8 %84, i8* %83, align 1, !tbaa !11\l  %85 = icmp sgt i64 %26, 0\l  br i1 %85, label %86, label %87\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e95100:s0 -> Node0x55ddc2e95c70;
	Node0x55ddc2e95100:s1 -> Node0x55ddc2e95cc0;
	Node0x55ddc2e95c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%86:\l86:                                               \l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %82, i8* align 1 %23, i64\l... %26, i1 false) #6\l  br label %87\l}"];
	Node0x55ddc2e95c70 -> Node0x55ddc2e95cc0;
	Node0x55ddc2e95cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%87:\l87:                                               \l  %88 = getelementptr inbounds i8, i8* %83, i64 1\l  %89 = icmp eq i8* %23, null\l  br i1 %89, label %91, label %90\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e95cc0:s0 -> Node0x55ddc2e962a0;
	Node0x55ddc2e95cc0:s1 -> Node0x55ddc2e962f0;
	Node0x55ddc2e962f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%90:\l90:                                               \l  call void @_ZdlPv(i8* nonnull %23) #6\l  br label %91\l}"];
	Node0x55ddc2e962f0 -> Node0x55ddc2e962a0;
	Node0x55ddc2e962a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%91:\l91:                                               \l  %92 = getelementptr inbounds i8, i8* %82, i64 %73\l  br label %100\l}"];
	Node0x55ddc2e962a0 -> Node0x55ddc2e91860;
	Node0x55ddc2e95790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%93:\l93:                                               \l  %94 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %97\l}"];
	Node0x55ddc2e95790 -> Node0x55ddc2e966f0;
	Node0x55ddc2e949a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%95:\l95:                                               \l  %96 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %97\l}"];
	Node0x55ddc2e949a0 -> Node0x55ddc2e966f0;
	Node0x55ddc2e966f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%97:\l97:                                               \l  %98 = phi \{ i8*, i32 \} [ %94, %93 ], [ %96, %95 ]\l  %99 = icmp eq i8* %23, null\l  br i1 %99, label %108, label %107\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e966f0:s0 -> Node0x55ddc2e969d0;
	Node0x55ddc2e966f0:s1 -> Node0x55ddc2e96a20;
	Node0x55ddc2e91860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%100:\l100:                                              \l  %101 = phi i8* [ %23, %42 ], [ %82, %91 ], [ %23, %59 ]\l  %102 = phi i8* [ %22, %42 ], [ %88, %91 ], [ %61, %59 ]\l  %103 = phi i8* [ %21, %42 ], [ %92, %91 ], [ %21, %59 ]\l  %104 = add nuw i64 %20, 1\l  %105 = load i64, i64* %4, align 8, !tbaa !10\l  %106 = icmp ugt i64 %105, %104\l  br i1 %106, label %19, label %32, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x55ddc2e91860:s0 -> Node0x55ddc2e91720;
	Node0x55ddc2e91860:s1 -> Node0x55ddc2e916d0;
	Node0x55ddc2e96a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%107:\l107:                                              \l  call void @_ZdlPv(i8* nonnull %23) #6\l  br label %108\l}"];
	Node0x55ddc2e96a20 -> Node0x55ddc2e969d0;
	Node0x55ddc2e969d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%108:\l108:                                              \l  resume \{ i8*, i32 \} %98\l}"];
}
