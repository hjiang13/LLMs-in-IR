digraph "CFG for '_Z17strange_sort_listSt6vectorIiSaIiEE' function" {
	label="CFG for '_Z17strange_sort_listSt6vectorIiSaIiEE' function";

	Node0x564c0fd8b560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %4 = bitcast %\"class.std::vector\"* %0 to i8*\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %4, i8 0, i64 24, i1 false)\l  %5 = load i32*, i32** %3, align 8, !tbaa !3\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %7 = load i32*, i32** %6, align 8, !tbaa !3\l  %8 = icmp eq i32* %5, %7\l  br i1 %8, label %18, label %9\l|{<s0>T|<s1>F}}"];
	Node0x564c0fd8b560:s0 -> Node0x564c0fd8bdf0;
	Node0x564c0fd8b560:s1 -> Node0x564c0fd8d5e0;
	Node0x564c0fd8d5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%9:\l9:                                                \l  %10 = ptrtoint i32* %7 to i64\l  %11 = ptrtoint i32* %5 to i64\l  %12 = sub i64 %10, %11\l  %13 = ashr exact i64 %12, 2\l  %14 = call i64 @llvm.ctlz.i64(i64 %13, i1 true) #7, !range !7\l  %15 = shl nuw nsw i64 %14, 1\l  %16 = xor i64 %15, 126\l  invoke void\l... @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElN\l...S0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %5, i32* %7, i64 %16)\l          to label %17 unwind label %61\l}"];
	Node0x564c0fd8d5e0 -> Node0x564c0fd8ded0;
	Node0x564c0fd8d5e0 -> Node0x564c0fd8df60;
	Node0x564c0fd8ded0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%17:\l17:                                               \l  invoke void\l... @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIi\l...EEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %5, i32* %7)\l          to label %18 unwind label %61\l}"];
	Node0x564c0fd8ded0 -> Node0x564c0fd8bdf0;
	Node0x564c0fd8ded0 -> Node0x564c0fd8df60;
	Node0x564c0fd8bdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%18:\l18:                                               \l  %19 = load i32*, i32** %6, align 8, !tbaa !8\l  %20 = load i32*, i32** %3, align 8, !tbaa !10\l  %21 = ptrtoint i32* %19 to i64\l  %22 = ptrtoint i32* %20 to i64\l  %23 = sub i64 %21, %22\l  %24 = lshr exact i64 %23, 2\l  %25 = trunc i64 %24 to i32\l  %26 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %27 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %28 = add i32 %25, -1\l  %29 = icmp sgt i32 %28, 0\l  br i1 %29, label %30, label %69\l|{<s0>T|<s1>F}}"];
	Node0x564c0fd8bdf0:s0 -> Node0x564c0fd8ed90;
	Node0x564c0fd8bdf0:s1 -> Node0x564c0fd8ee20;
	Node0x564c0fd8ed90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%30:\l30:                                               \l  %31 = sext i32 %28 to i64\l  br label %32\l}"];
	Node0x564c0fd8ed90 -> Node0x564c0fd8efd0;
	Node0x564c0fd8efd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i64 [ 0, %30 ], [ %56, %55 ]\l  %34 = phi i64 [ %31, %30 ], [ %60, %55 ]\l  %35 = phi i32 [ %28, %30 ], [ %57, %55 ]\l  %36 = load i32*, i32** %3, align 8, !tbaa !10\l  %37 = getelementptr inbounds i32, i32* %36, i64 %33\l  %38 = load i32*, i32** %26, align 8, !tbaa !8\l  %39 = load i32*, i32** %27, align 8, !tbaa !11\l  %40 = icmp eq i32* %38, %39\l  br i1 %40, label %44, label %41\l|{<s0>T|<s1>F}}"];
	Node0x564c0fd8efd0:s0 -> Node0x564c0fd90610;
	Node0x564c0fd8efd0:s1 -> Node0x564c0fd906a0;
	Node0x564c0fd906a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%41:\l41:                                               \l  %42 = load i32, i32* %37, align 4, !tbaa !12\l  store i32 %42, i32* %38, align 4, !tbaa !12\l  %43 = getelementptr inbounds i32, i32* %38, i64 1\l  store i32* %43, i32** %26, align 8, !tbaa !8\l  br label %45\l}"];
	Node0x564c0fd906a0 -> Node0x564c0fd91100;
	Node0x564c0fd90610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%44:\l44:                                               \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %38, i32* nonnull align 4 dereferenceable(4) %37)\l          to label %45 unwind label %63\l}"];
	Node0x564c0fd90610 -> Node0x564c0fd91100;
	Node0x564c0fd90610 -> Node0x564c0fd91310;
	Node0x564c0fd91100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = load i32*, i32** %3, align 8, !tbaa !10\l  %47 = getelementptr inbounds i32, i32* %46, i64 %34\l  %48 = load i32*, i32** %26, align 8, !tbaa !8\l  %49 = load i32*, i32** %27, align 8, !tbaa !11\l  %50 = icmp eq i32* %48, %49\l  br i1 %50, label %54, label %51\l|{<s0>T|<s1>F}}"];
	Node0x564c0fd91100:s0 -> Node0x564c0fd91ec0;
	Node0x564c0fd91100:s1 -> Node0x564c0fd91f10;
	Node0x564c0fd91f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%51:\l51:                                               \l  %52 = load i32, i32* %47, align 4, !tbaa !12\l  store i32 %52, i32* %48, align 4, !tbaa !12\l  %53 = getelementptr inbounds i32, i32* %48, i64 1\l  store i32* %53, i32** %26, align 8, !tbaa !8\l  br label %55\l}"];
	Node0x564c0fd91f10 -> Node0x564c0fd8f2d0;
	Node0x564c0fd91ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%54:\l54:                                               \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %48, i32* nonnull align 4 dereferenceable(4) %47)\l          to label %55 unwind label %63\l}"];
	Node0x564c0fd91ec0 -> Node0x564c0fd8f2d0;
	Node0x564c0fd91ec0 -> Node0x564c0fd91310;
	Node0x564c0fd8f2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = add nuw nsw i64 %33, 1\l  %57 = add i32 %35, -1\l  %58 = sext i32 %57 to i64\l  %59 = icmp slt i64 %56, %58\l  %60 = add nsw i64 %34, -1\l  br i1 %59, label %32, label %67, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x564c0fd8f2d0:s0 -> Node0x564c0fd8efd0;
	Node0x564c0fd8f2d0:s1 -> Node0x564c0fd927b0;
	Node0x564c0fd8df60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%61:\l61:                                               \l  %62 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %87\l}"];
	Node0x564c0fd8df60 -> Node0x564c0fd92b90;
	Node0x564c0fd91310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%63:\l63:                                               \l  %64 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %87\l}"];
	Node0x564c0fd91310 -> Node0x564c0fd92b90;
	Node0x564c0fd930d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5b7ae570",label="{%65:\l65:                                               \l  %66 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %87\l}"];
	Node0x564c0fd930d0 -> Node0x564c0fd92b90;
	Node0x564c0fd927b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%67:\l67:                                               \l  %68 = trunc i64 %56 to i32\l  br label %69\l}"];
	Node0x564c0fd927b0 -> Node0x564c0fd8ee20;
	Node0x564c0fd8ee20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%69:\l69:                                               \l  %70 = phi i32 [ 0, %18 ], [ %68, %67 ]\l  %71 = phi i32 [ %28, %18 ], [ %57, %67 ]\l  %72 = icmp eq i32 %70, %71\l  br i1 %72, label %73, label %86\l|{<s0>T|<s1>F}}"];
	Node0x564c0fd8ee20:s0 -> Node0x564c0fd934d0;
	Node0x564c0fd8ee20:s1 -> Node0x564c0fd93520;
	Node0x564c0fd934d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%73:\l73:                                               \l  %74 = zext i32 %70 to i64\l  %75 = load i32*, i32** %3, align 8, !tbaa !10\l  %76 = getelementptr inbounds i32, i32* %75, i64 %74\l  %77 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %78 = load i32*, i32** %77, align 8, !tbaa !8\l  %79 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %80 = load i32*, i32** %79, align 8, !tbaa !11\l  %81 = icmp eq i32* %78, %80\l  br i1 %81, label %85, label %82\l|{<s0>T|<s1>F}}"];
	Node0x564c0fd934d0:s0 -> Node0x564c0fd93b50;
	Node0x564c0fd934d0:s1 -> Node0x564c0fd93ba0;
	Node0x564c0fd93ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%82:\l82:                                               \l  %83 = load i32, i32* %76, align 4, !tbaa !12\l  store i32 %83, i32* %78, align 4, !tbaa !12\l  %84 = getelementptr inbounds i32, i32* %78, i64 1\l  store i32* %84, i32** %77, align 8, !tbaa !8\l  br label %86\l}"];
	Node0x564c0fd93ba0 -> Node0x564c0fd93520;
	Node0x564c0fd93b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%85:\l85:                                               \l  invoke void\l... @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iterato\l...rIPiS1_EEDpOT_(%\"class.std::vector\"* nonnull align 8 dereferenceable(24) %0,\l... i32* %78, i32* nonnull align 4 dereferenceable(4) %76)\l          to label %86 unwind label %65\l}"];
	Node0x564c0fd93b50 -> Node0x564c0fd93520;
	Node0x564c0fd93b50 -> Node0x564c0fd930d0;
	Node0x564c0fd93520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%86:\l86:                                               \l  ret void\l}"];
	Node0x564c0fd92b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%87:\l87:                                               \l  %88 = phi \{ i8*, i32 \} [ %62, %61 ], [ %64, %63 ], [ %66, %65 ]\l  %89 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %90 = load i32*, i32** %89, align 8, !tbaa !10\l  %91 = icmp eq i32* %90, null\l  br i1 %91, label %94, label %92\l|{<s0>T|<s1>F}}"];
	Node0x564c0fd92b90:s0 -> Node0x564c0fd944a0;
	Node0x564c0fd92b90:s1 -> Node0x564c0fd944f0;
	Node0x564c0fd944f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%92:\l92:                                               \l  %93 = bitcast i32* %90 to i8*\l  call void @_ZdlPv(i8* nonnull %93) #7\l  br label %94\l}"];
	Node0x564c0fd944f0 -> Node0x564c0fd944a0;
	Node0x564c0fd944a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%94:\l94:                                               \l  resume \{ i8*, i32 \} %88\l}"];
}
