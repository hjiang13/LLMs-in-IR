; ModuleID = '../../Benchmarks/DefiniteRandomWalks/DefiniteRandomWalks.cpp'
source_filename = "../../Benchmarks/DefiniteRandomWalks/DefiniteRandomWalks.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl_data" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"struct.std::pair" = type { i32, i32 }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"struct.std::piecewise_construct_t" = type { i8 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [8 x i8] }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i32* }
%"class.std::tuple.12" = type { i8 }
%"struct.std::pair.8" = type { i32, i32 }
%"class.std::tuple.18" = type { %"struct.std::_Tuple_impl.19" }
%"struct.std::_Tuple_impl.19" = type { %"struct.std::_Head_base.20" }
%"struct.std::_Head_base.20" = type { i32* }

$_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOiEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_ = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@n = dso_local global i32 0, align 4
@m = dso_local global i32 0, align 4
@k = dso_local global i32 0, align 4
@cnt = dso_local local_unnamed_addr global i32 0, align 4
@macnt = dso_local local_unnamed_addr global i32 0, align 4
@f = dso_local global [60009 x i32] zeroinitializer, align 16
@p = dso_local global [100009 x i32] zeroinitializer, align 16
@vis = dso_local local_unnamed_addr global [60009 x i32] zeroinitializer, align 16
@pa = dso_local local_unnamed_addr global [60009 x i32] zeroinitializer, align 16
@siz = dso_local global [60009 x i32] zeroinitializer, align 16
@y = dso_local global [300000 x i64] zeroinitializer, align 16
@x = dso_local global [300000 x i64] zeroinitializer, align 16
@z = dso_local global [300000 x i64] zeroinitializer, align 16
@inz = dso_local local_unnamed_addr global [300000 x i64] zeroinitializer, align 16
@nz = dso_local local_unnamed_addr global [300000 x i64] zeroinitializer, align 16
@ans = dso_local local_unnamed_addr global [60009 x i64] zeroinitializer, align 16
@maxlen = dso_local local_unnamed_addr global [400 x i32] zeroinitializer, align 16
@idid = dso_local local_unnamed_addr global [400 x i32] zeroinitializer, align 16
@qq = dso_local local_unnamed_addr global [400 x [60009 x i64]] zeroinitializer, align 16
@vv = dso_local local_unnamed_addr global [60009 x i32] zeroinitializer, align 16
@nuv = dso_local local_unnamed_addr global [60009 x i32] zeroinitializer, align 16
@v = dso_local local_unnamed_addr global [60009 x i8] zeroinitializer, align 16
@vc = dso_local local_unnamed_addr global [60009 x i8] zeroinitializer, align 16
@QWQ = dso_local global [60009 x %"class.std::vector"] zeroinitializer, align 16
@G = dso_local global [60009 x %"class.std::vector.0"] zeroinitializer, align 16
@maa = dso_local global %"class.std::map" zeroinitializer, align 8
@.str = private unnamed_addr constant [35 x i8] c"../input_files/DefiniteRandomWalks\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.6 = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_DefiniteRandomWalks.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor(i8* nocapture readnone %0) #3 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  br label %2

2:                                                ; preds = %10, %1
  %3 = phi %"class.std::vector"* [ getelementptr inbounds ([60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 1, i64 0), %1 ], [ %4, %10 ]
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 -1
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8, !tbaa !3
  %7 = icmp eq %"struct.std::pair"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.std::pair"* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #20
  br label %10

10:                                               ; preds = %2, %8
  %11 = icmp eq %"class.std::vector"* %4, getelementptr inbounds ([60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 0)
  br i1 %11, label %12, label %2

12:                                               ; preds = %10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor.3(i8* nocapture readnone %0) #3 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  br label %2

2:                                                ; preds = %10, %1
  %3 = phi %"class.std::vector.0"* [ getelementptr inbounds ([60009 x %"class.std::vector.0"], [60009 x %"class.std::vector.0"]* @G, i64 1, i64 0), %1 ], [ %4, %10 ]
  %4 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %3, i64 -1
  %5 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8, !tbaa !8
  %7 = icmp eq i32* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast i32* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #20
  br label %10

10:                                               ; preds = %2, %8
  %11 = icmp eq %"class.std::vector.0"* %4, getelementptr inbounds ([60009 x %"class.std::vector.0"], [60009 x %"class.std::vector.0"]* @G, i64 0, i64 0)
  br i1 %11, label %12, label %2

12:                                               ; preds = %10
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev(%"class.std::map"* nonnull align 8 dereferenceable(48) %0) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::map", %"class.std::map"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.std::map", %"class.std::map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 16
  %5 = bitcast i8* %4 to %"struct.std::_Rb_tree_node"**
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8, !tbaa !10
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %2, %"struct.std::_Rb_tree_node"* %6)
          to label %10 unwind label %7

7:                                                ; preds = %1
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  tail call void @__clang_call_terminate(i8* %9) #21
  unreachable

10:                                               ; preds = %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i64 @_Z2poxi(i64 %0, i32 %1) local_unnamed_addr #4 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %19, label %4

4:                                                ; preds = %2, %13
  %5 = phi i64 [ %14, %13 ], [ 1, %2 ]
  %6 = phi i32 [ %15, %13 ], [ %1, %2 ]
  %7 = phi i64 [ %17, %13 ], [ %0, %2 ]
  %8 = and i32 %6, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = mul nsw i64 %5, %7
  %12 = srem i64 %11, 998244353
  br label %13

13:                                               ; preds = %10, %4
  %14 = phi i64 [ %12, %10 ], [ %5, %4 ]
  %15 = ashr i32 %6, 1
  %16 = mul nsw i64 %7, %7
  %17 = urem i64 %16, 998244353
  %18 = icmp ult i32 %6, 2
  br i1 %18, label %19, label %4, !llvm.loop !15

19:                                               ; preds = %13, %2
  %20 = phi i64 [ 1, %2 ], [ %14, %13 ]
  ret i64 %20
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable
define dso_local void @_Z6changePxi(i64* nocapture %0, i32 %1) local_unnamed_addr #6 {
  %3 = sdiv i32 %1, 2
  %4 = icmp sgt i32 %1, 2
  br i1 %4, label %5, label %32

5:                                                ; preds = %2
  %6 = add nsw i32 %1, -1
  %7 = zext i32 %6 to i64
  br label %8

8:                                                ; preds = %5, %26
  %9 = phi i64 [ 1, %5 ], [ %30, %26 ]
  %10 = phi i32 [ %3, %5 ], [ %29, %26 ]
  %11 = sext i32 %10 to i64
  %12 = icmp slt i64 %9, %11
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds i64, i64* %0, i64 %9
  %15 = getelementptr inbounds i64, i64* %0, i64 %11
  %16 = load i64, i64* %14, align 8, !tbaa !17
  %17 = load i64, i64* %15, align 8, !tbaa !17
  store i64 %17, i64* %14, align 8, !tbaa !17
  store i64 %16, i64* %15, align 8, !tbaa !17
  br label %18

18:                                               ; preds = %13, %8
  %19 = icmp slt i32 %10, %3
  br i1 %19, label %26, label %20

20:                                               ; preds = %18, %20
  %21 = phi i32 [ %24, %20 ], [ %3, %18 ]
  %22 = phi i32 [ %23, %20 ], [ %10, %18 ]
  %23 = sub nsw i32 %22, %21
  %24 = sdiv i32 %21, 2
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %20, !llvm.loop !19

26:                                               ; preds = %20, %18
  %27 = phi i32 [ %10, %18 ], [ %23, %20 ]
  %28 = phi i32 [ %3, %18 ], [ %24, %20 ]
  %29 = add nsw i32 %28, %27
  %30 = add nuw nsw i64 %9, 1
  %31 = icmp eq i64 %30, %7
  br i1 %31, label %32, label %8, !llvm.loop !20

32:                                               ; preds = %26, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable
define dso_local void @_Z3nttPxii(i64* nocapture %0, i32 %1, i32 %2) local_unnamed_addr #6 {
  %4 = sdiv i32 %1, 2
  %5 = icmp sgt i32 %1, 2
  br i1 %5, label %6, label %33

6:                                                ; preds = %3
  %7 = add nsw i32 %1, -1
  %8 = zext i32 %7 to i64
  br label %9

9:                                                ; preds = %27, %6
  %10 = phi i64 [ 1, %6 ], [ %31, %27 ]
  %11 = phi i32 [ %4, %6 ], [ %30, %27 ]
  %12 = sext i32 %11 to i64
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %9
  %15 = getelementptr inbounds i64, i64* %0, i64 %10
  %16 = getelementptr inbounds i64, i64* %0, i64 %12
  %17 = load i64, i64* %15, align 8, !tbaa !17
  %18 = load i64, i64* %16, align 8, !tbaa !17
  store i64 %18, i64* %15, align 8, !tbaa !17
  store i64 %17, i64* %16, align 8, !tbaa !17
  br label %19

19:                                               ; preds = %14, %9
  %20 = icmp slt i32 %11, %4
  br i1 %20, label %27, label %21

21:                                               ; preds = %19, %21
  %22 = phi i32 [ %25, %21 ], [ %4, %19 ]
  %23 = phi i32 [ %24, %21 ], [ %11, %19 ]
  %24 = sub nsw i32 %23, %22
  %25 = sdiv i32 %22, 2
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %21, !llvm.loop !19

27:                                               ; preds = %21, %19
  %28 = phi i32 [ %11, %19 ], [ %24, %21 ]
  %29 = phi i32 [ %4, %19 ], [ %25, %21 ]
  %30 = add nsw i32 %29, %28
  %31 = add nuw nsw i64 %10, 1
  %32 = icmp eq i64 %31, %8
  br i1 %32, label %33, label %9, !llvm.loop !20

33:                                               ; preds = %27, %3
  %34 = icmp eq i32 %2, 1
  %35 = icmp sgt i32 %1, 0
  %36 = icmp slt i32 %1, 2
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = zext i32 %1 to i64
  br label %41

39:                                               ; preds = %87, %33
  %40 = icmp eq i32 %2, -1
  br i1 %40, label %112, label %159

41:                                               ; preds = %37, %87
  %42 = phi i32 [ %88, %87 ], [ 2, %37 ]
  %43 = sdiv i32 998244352, %42
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %41, %54
  %46 = phi i64 [ %55, %54 ], [ 1, %41 ]
  %47 = phi i32 [ %56, %54 ], [ %43, %41 ]
  %48 = phi i64 [ %58, %54 ], [ 3, %41 ]
  %49 = and i32 %47, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = mul nsw i64 %48, %46
  %53 = srem i64 %52, 998244353
  br label %54

54:                                               ; preds = %51, %45
  %55 = phi i64 [ %53, %51 ], [ %46, %45 ]
  %56 = ashr i32 %47, 1
  %57 = mul nuw nsw i64 %48, %48
  %58 = urem i64 %57, 998244353
  %59 = icmp ult i32 %47, 2
  br i1 %59, label %60, label %45, !llvm.loop !15

60:                                               ; preds = %54, %41
  %61 = phi i64 [ 1, %41 ], [ %55, %54 ]
  br i1 %34, label %62, label %77

62:                                               ; preds = %60, %71
  %63 = phi i64 [ %72, %71 ], [ 1, %60 ]
  %64 = phi i32 [ %73, %71 ], [ 998244351, %60 ]
  %65 = phi i64 [ %75, %71 ], [ %61, %60 ]
  %66 = and i32 %64, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = mul nsw i64 %65, %63
  %70 = srem i64 %69, 998244353
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi i64 [ %70, %68 ], [ %63, %62 ]
  %73 = lshr i32 %64, 1
  %74 = mul nsw i64 %65, %65
  %75 = urem i64 %74, 998244353
  %76 = icmp ult i32 %64, 2
  br i1 %76, label %77, label %62, !llvm.loop !15

77:                                               ; preds = %71, %60
  %78 = phi i64 [ %61, %60 ], [ %72, %71 ]
  br i1 %35, label %79, label %87

79:                                               ; preds = %77
  %80 = sdiv i32 %42, 2
  %81 = sext i32 %42 to i64
  %82 = sext i32 %80 to i64
  %83 = icmp sgt i32 %42, 1
  br label %84

84:                                               ; preds = %79, %90
  %85 = phi i64 [ 0, %79 ], [ %91, %90 ]
  %86 = add nsw i64 %85, %82
  br i1 %83, label %93, label %90

87:                                               ; preds = %90, %77
  %88 = shl i32 %42, 1
  %89 = icmp sgt i32 %88, %1
  br i1 %89, label %39, label %41, !llvm.loop !21

90:                                               ; preds = %93, %84
  %91 = add i64 %85, %81
  %92 = icmp slt i64 %91, %38
  br i1 %92, label %84, label %87, !llvm.loop !22

93:                                               ; preds = %84, %93
  %94 = phi i64 [ %110, %93 ], [ %85, %84 ]
  %95 = phi i64 [ %109, %93 ], [ 1, %84 ]
  %96 = getelementptr inbounds i64, i64* %0, i64 %94
  %97 = load i64, i64* %96, align 8, !tbaa !17
  %98 = add nsw i64 %94, %82
  %99 = getelementptr inbounds i64, i64* %0, i64 %98
  %100 = load i64, i64* %99, align 8, !tbaa !17
  %101 = mul nsw i64 %100, %95
  %102 = srem i64 %101, 998244353
  %103 = add nsw i64 %102, %97
  %104 = srem i64 %103, 998244353
  store i64 %104, i64* %96, align 8, !tbaa !17
  %105 = add i64 %97, 998244353
  %106 = sub i64 %105, %102
  %107 = srem i64 %106, 998244353
  store i64 %107, i64* %99, align 8, !tbaa !17
  %108 = mul nsw i64 %95, %78
  %109 = srem i64 %108, 998244353
  %110 = add nsw i64 %94, 1
  %111 = icmp slt i64 %110, %86
  br i1 %111, label %93, label %90, !llvm.loop !23

112:                                              ; preds = %39
  %113 = sext i32 %1 to i64
  br label %114

114:                                              ; preds = %123, %112
  %115 = phi i64 [ %124, %123 ], [ 1, %112 ]
  %116 = phi i32 [ %125, %123 ], [ 998244351, %112 ]
  %117 = phi i64 [ %127, %123 ], [ %113, %112 ]
  %118 = and i32 %116, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = mul nsw i64 %117, %115
  %122 = srem i64 %121, 998244353
  br label %123

123:                                              ; preds = %120, %114
  %124 = phi i64 [ %122, %120 ], [ %115, %114 ]
  %125 = lshr i32 %116, 1
  %126 = mul nsw i64 %117, %117
  %127 = urem i64 %126, 998244353
  %128 = icmp ult i32 %116, 2
  br i1 %128, label %129, label %114, !llvm.loop !15

129:                                              ; preds = %123
  br i1 %35, label %130, label %159

130:                                              ; preds = %129
  %131 = zext i32 %1 to i64
  %132 = and i64 %131, 1
  %133 = icmp eq i32 %1, 1
  br i1 %133, label %151, label %134

134:                                              ; preds = %130
  %135 = and i64 %131, 4294967294
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %148, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %149, %136 ]
  %139 = getelementptr inbounds i64, i64* %0, i64 %137
  %140 = load i64, i64* %139, align 8, !tbaa !17
  %141 = mul nsw i64 %140, %124
  %142 = srem i64 %141, 998244353
  store i64 %142, i64* %139, align 8, !tbaa !17
  %143 = or i64 %137, 1
  %144 = getelementptr inbounds i64, i64* %0, i64 %143
  %145 = load i64, i64* %144, align 8, !tbaa !17
  %146 = mul nsw i64 %145, %124
  %147 = srem i64 %146, 998244353
  store i64 %147, i64* %144, align 8, !tbaa !17
  %148 = add nuw nsw i64 %137, 2
  %149 = add i64 %138, -2
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %136, !llvm.loop !24

151:                                              ; preds = %136, %130
  %152 = phi i64 [ 0, %130 ], [ %148, %136 ]
  %153 = icmp eq i64 %132, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds i64, i64* %0, i64 %152
  %156 = load i64, i64* %155, align 8, !tbaa !17
  %157 = mul nsw i64 %156, %124
  %158 = srem i64 %157, 998244353
  store i64 %158, i64* %155, align 8, !tbaa !17
  br label %159

159:                                              ; preds = %154, %151, %129, %39
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @n, align 4, !tbaa !25
  %2 = shl nsw i32 %1, 1
  br label %3

3:                                                ; preds = %3, %0
  %4 = phi i32 [ 1, %0 ], [ %6, %3 ]
  %5 = icmp slt i32 %4, %2
  %6 = shl i32 %4, 1
  br i1 %5, label %3, label %7, !llvm.loop !27

7:                                                ; preds = %3
  %8 = icmp sgt i32 %4, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %7
  %10 = load i32, i32* @m, align 4
  %11 = zext i32 %4 to i64
  %12 = shl nuw nsw i64 %11, 3
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([300000 x i64]* @x to i8*), i8 0, i64 %12, i1 false)
  %13 = sext i32 %1 to i64
  %14 = sext i32 %10 to i64
  %15 = and i64 %11, 1
  %16 = icmp eq i32 %4, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = and i64 %11, 4294967294
  br label %48

19:                                               ; preds = %206, %9
  %20 = phi i64 [ 0, %9 ], [ %210, %206 ]
  %21 = icmp eq i64 %15, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %19
  %23 = icmp slt i64 %20, %14
  %24 = icmp slt i64 %20, %13
  %25 = select i1 %23, i1 %24, i1 false
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds [100009 x i32], [100009 x i32]* @p, i64 0, i64 %20
  %28 = load i32, i32* %27, align 4, !tbaa !25
  %29 = sext i32 %28 to i64
  br label %30

30:                                               ; preds = %26, %22
  %31 = phi i64 [ %29, %26 ], [ 0, %22 ]
  %32 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %20
  store i64 %31, i64* %32, align 8, !tbaa !17
  br label %33

33:                                               ; preds = %30, %19, %7
  store i64 1, i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @x, i64 0, i64 0), align 16, !tbaa !17
  %34 = load i32, i32* @k, align 4, !tbaa !25
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %65, label %36

36:                                               ; preds = %33
  %37 = add i32 %4, -1
  %38 = zext i32 %4 to i64
  %39 = add nsw i64 %38, -1
  %40 = and i64 %38, 1
  %41 = icmp eq i64 %39, 0
  %42 = and i64 %38, 4294967294
  %43 = icmp eq i64 %40, 0
  %44 = and i64 %38, 1
  %45 = icmp eq i64 %39, 0
  %46 = and i64 %38, 4294967294
  %47 = icmp eq i64 %44, 0
  br label %82

48:                                               ; preds = %206, %17
  %49 = phi i64 [ 0, %17 ], [ %210, %206 ]
  %50 = phi i64 [ %18, %17 ], [ %211, %206 ]
  %51 = icmp slt i64 %49, %14
  %52 = icmp slt i64 %49, %13
  %53 = select i1 %51, i1 %52, i1 false
  br i1 %53, label %54, label %57

54:                                               ; preds = %48
  %55 = getelementptr inbounds [100009 x i32], [100009 x i32]* @p, i64 0, i64 %49
  %56 = load i32, i32* %55, align 8, !tbaa !25
  br label %57

57:                                               ; preds = %48, %54
  %58 = phi i32 [ %56, %54 ], [ 0, %48 ]
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %49
  store i64 %59, i64* %60, align 16, !tbaa !17
  %61 = or i64 %49, 1
  %62 = icmp slt i64 %61, %14
  %63 = icmp slt i64 %61, %13
  %64 = select i1 %62, i1 %63, i1 false
  br i1 %64, label %203, label %206

65:                                               ; preds = %128, %167, %33
  %66 = phi i32 [ %1, %33 ], [ %129, %128 ], [ %142, %167 ]
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %180

68:                                               ; preds = %65
  %69 = zext i32 %66 to i64
  %70 = shl nuw nsw i64 %69, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([300000 x i64]* @inz to i8*), i8* align 16 bitcast ([300000 x i64]* @x to i8*), i64 %70, i1 false)
  %71 = load i64, i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @x, i64 0, i64 0), align 16, !tbaa !17
  %72 = icmp sgt i64 %71, 998244352
  %73 = add nsw i64 %71, -998244353
  %74 = select i1 %72, i64 %73, i64 %71
  store i64 %74, i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @nz, i64 0, i64 0), align 16, !tbaa !17
  %75 = icmp eq i32 %66, 1
  br i1 %75, label %180, label %76

76:                                               ; preds = %68
  %77 = add nsw i64 %69, -1
  %78 = and i64 %77, 1
  %79 = icmp eq i32 %66, 2
  br i1 %79, label %168, label %80

80:                                               ; preds = %76
  %81 = and i64 %77, -2
  br label %181

82:                                               ; preds = %36, %167
  %83 = phi i32 [ %142, %167 ], [ %1, %36 ]
  %84 = phi i32 [ %130, %167 ], [ %34, %36 ]
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %128, label %87

87:                                               ; preds = %82
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @x, i64 0, i64 0), i32 %4, i32 1)
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @y, i64 0, i64 0), i32 %4, i32 1)
  br i1 %8, label %88, label %98

88:                                               ; preds = %87
  br i1 %41, label %89, label %109

89:                                               ; preds = %109, %88
  %90 = phi i64 [ 0, %88 ], [ %125, %109 ]
  br i1 %43, label %98, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %90
  %93 = load i64, i64* %92, align 8, !tbaa !17
  %94 = getelementptr inbounds [300000 x i64], [300000 x i64]* @x, i64 0, i64 %90
  %95 = load i64, i64* %94, align 8, !tbaa !17
  %96 = mul nsw i64 %95, %93
  %97 = srem i64 %96, 998244353
  store i64 %97, i64* %94, align 8, !tbaa !17
  br label %98

98:                                               ; preds = %91, %89, %87
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @x, i64 0, i64 0), i32 %4, i32 -1)
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @y, i64 0, i64 0), i32 %4, i32 -1)
  %99 = load i32, i32* @n, align 4, !tbaa !25
  %100 = icmp slt i32 %99, %4
  br i1 %100, label %101, label %128

101:                                              ; preds = %98
  %102 = sext i32 %99 to i64
  %103 = getelementptr [300000 x i64], [300000 x i64]* @x, i64 0, i64 %102
  %104 = bitcast i64* %103 to i8*
  %105 = sub i32 %37, %99
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  %108 = add nuw nsw i64 %107, 8
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(1) %104, i8 0, i64 %108, i1 false)
  br label %128

109:                                              ; preds = %88, %109
  %110 = phi i64 [ %125, %109 ], [ 0, %88 ]
  %111 = phi i64 [ %126, %109 ], [ %42, %88 ]
  %112 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %110
  %113 = load i64, i64* %112, align 16, !tbaa !17
  %114 = getelementptr inbounds [300000 x i64], [300000 x i64]* @x, i64 0, i64 %110
  %115 = load i64, i64* %114, align 16, !tbaa !17
  %116 = mul nsw i64 %115, %113
  %117 = srem i64 %116, 998244353
  store i64 %117, i64* %114, align 16, !tbaa !17
  %118 = or i64 %110, 1
  %119 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %118
  %120 = load i64, i64* %119, align 8, !tbaa !17
  %121 = getelementptr inbounds [300000 x i64], [300000 x i64]* @x, i64 0, i64 %118
  %122 = load i64, i64* %121, align 8, !tbaa !17
  %123 = mul nsw i64 %122, %120
  %124 = srem i64 %123, 998244353
  store i64 %124, i64* %121, align 8, !tbaa !17
  %125 = add nuw nsw i64 %110, 2
  %126 = add i64 %111, -2
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %89, label %109, !llvm.loop !28

128:                                              ; preds = %101, %98, %82
  %129 = phi i32 [ %99, %101 ], [ %99, %98 ], [ %83, %82 ]
  %130 = ashr i32 %84, 1
  %131 = icmp ult i32 %84, 2
  br i1 %131, label %65, label %132

132:                                              ; preds = %128
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @y, i64 0, i64 0), i32 %4, i32 1)
  br i1 %8, label %133, label %141

133:                                              ; preds = %132
  br i1 %45, label %134, label %152

134:                                              ; preds = %152, %133
  %135 = phi i64 [ 0, %133 ], [ %164, %152 ]
  br i1 %47, label %141, label %136

136:                                              ; preds = %134
  %137 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %135
  %138 = load i64, i64* %137, align 8, !tbaa !17
  %139 = mul nsw i64 %138, %138
  %140 = urem i64 %139, 998244353
  store i64 %140, i64* %137, align 8, !tbaa !17
  br label %141

141:                                              ; preds = %136, %134, %132
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @y, i64 0, i64 0), i32 %4, i32 -1)
  %142 = load i32, i32* @n, align 4, !tbaa !25
  %143 = icmp slt i32 %142, %4
  br i1 %143, label %144, label %167

144:                                              ; preds = %141
  %145 = sext i32 %142 to i64
  %146 = getelementptr [300000 x i64], [300000 x i64]* @y, i64 0, i64 %145
  %147 = bitcast i64* %146 to i8*
  %148 = sub i32 %37, %142
  %149 = zext i32 %148 to i64
  %150 = shl nuw nsw i64 %149, 3
  %151 = add nuw nsw i64 %150, 8
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(1) %147, i8 0, i64 %151, i1 false)
  br label %167

152:                                              ; preds = %133, %152
  %153 = phi i64 [ %164, %152 ], [ 0, %133 ]
  %154 = phi i64 [ %165, %152 ], [ %46, %133 ]
  %155 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %153
  %156 = load i64, i64* %155, align 16, !tbaa !17
  %157 = mul nsw i64 %156, %156
  %158 = urem i64 %157, 998244353
  store i64 %158, i64* %155, align 16, !tbaa !17
  %159 = or i64 %153, 1
  %160 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %159
  %161 = load i64, i64* %160, align 8, !tbaa !17
  %162 = mul nsw i64 %161, %161
  %163 = urem i64 %162, 998244353
  store i64 %163, i64* %160, align 8, !tbaa !17
  %164 = add nuw nsw i64 %153, 2
  %165 = add i64 %154, -2
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %134, label %152, !llvm.loop !29

167:                                              ; preds = %144, %141
  br i1 %131, label %65, label %82, !llvm.loop !30

168:                                              ; preds = %181, %76
  %169 = phi i64 [ %74, %76 ], [ %199, %181 ]
  %170 = phi i64 [ 1, %76 ], [ %200, %181 ]
  %171 = icmp eq i64 %78, 0
  br i1 %171, label %180, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds [300000 x i64], [300000 x i64]* @x, i64 0, i64 %170
  %174 = load i64, i64* %173, align 8, !tbaa !17
  %175 = add nsw i64 %169, %174
  %176 = getelementptr inbounds [300000 x i64], [300000 x i64]* @nz, i64 0, i64 %170
  %177 = icmp sgt i64 %175, 998244352
  %178 = add nsw i64 %175, -998244353
  %179 = select i1 %177, i64 %178, i64 %175
  store i64 %179, i64* %176, align 8, !tbaa !17
  br label %180

180:                                              ; preds = %172, %168, %68, %65
  ret void

181:                                              ; preds = %181, %80
  %182 = phi i64 [ %74, %80 ], [ %199, %181 ]
  %183 = phi i64 [ 1, %80 ], [ %200, %181 ]
  %184 = phi i64 [ %81, %80 ], [ %201, %181 ]
  %185 = getelementptr inbounds [300000 x i64], [300000 x i64]* @x, i64 0, i64 %183
  %186 = load i64, i64* %185, align 8, !tbaa !17
  %187 = add nsw i64 %182, %186
  %188 = getelementptr inbounds [300000 x i64], [300000 x i64]* @nz, i64 0, i64 %183
  %189 = icmp sgt i64 %187, 998244352
  %190 = add nsw i64 %187, -998244353
  %191 = select i1 %189, i64 %190, i64 %187
  store i64 %191, i64* %188, align 8, !tbaa !17
  %192 = add nuw nsw i64 %183, 1
  %193 = getelementptr inbounds [300000 x i64], [300000 x i64]* @x, i64 0, i64 %192
  %194 = load i64, i64* %193, align 8, !tbaa !17
  %195 = add nsw i64 %191, %194
  %196 = getelementptr inbounds [300000 x i64], [300000 x i64]* @nz, i64 0, i64 %192
  %197 = icmp sgt i64 %195, 998244352
  %198 = add nsw i64 %195, -998244353
  %199 = select i1 %197, i64 %198, i64 %195
  store i64 %199, i64* %196, align 8, !tbaa !17
  %200 = add nuw nsw i64 %183, 2
  %201 = add i64 %184, -2
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %168, label %181, !llvm.loop !31

203:                                              ; preds = %57
  %204 = getelementptr inbounds [100009 x i32], [100009 x i32]* @p, i64 0, i64 %61
  %205 = load i32, i32* %204, align 4, !tbaa !25
  br label %206

206:                                              ; preds = %203, %57
  %207 = phi i32 [ %205, %203 ], [ 0, %57 ]
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %61
  store i64 %208, i64* %209, align 8, !tbaa !17
  %210 = add nuw nsw i64 %49, 2
  %211 = add i64 %50, -2
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %19, label %48, !llvm.loop !33
}

; Function Attrs: uwtable
define dso_local void @_Z5solvei(i32 %0) local_unnamed_addr #7 personality i32 (...)* @__gxx_personality_v0 {
  %2 = load i32, i32* @cnt, align 4, !tbaa !25
  %3 = add nsw i32 %2, 1
  store i32 %3, i32* @cnt, align 4, !tbaa !25
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [60009 x i32], [60009 x i32]* @nuv, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4, !tbaa !25
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %427

8:                                                ; preds = %1, %251
  %9 = phi i64 [ %204, %251 ], [ %4, %1 ]
  %10 = load i64, i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @inz, i64 0, i64 0), align 16, !tbaa !17
  %11 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64 %9
  %12 = load i64, i64* %11, align 8, !tbaa !17
  %13 = add nsw i64 %12, %10
  store i64 %13, i64* %11, align 8, !tbaa !17
  %14 = getelementptr inbounds [60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 %9, i32 0, i32 0, i32 0, i32 1
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %14, align 8, !tbaa !34
  %16 = getelementptr inbounds [60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 %9, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %16, align 8, !tbaa !3
  %18 = bitcast %"struct.std::pair"* %17 to i8*
  %19 = ptrtoint %"struct.std::pair"* %15 to i64
  %20 = ptrtoint %"struct.std::pair"* %17 to i64
  %21 = sub i64 %19, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %24, label %162

24:                                               ; preds = %8
  %25 = getelementptr inbounds [60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 %9, i32 0, i32 0, i32 0, i32 2
  %26 = load %"struct.std::pair"*, %"struct.std::pair"** %25, align 8, !tbaa !35
  %27 = icmp eq %"struct.std::pair"* %15, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::pair"* %15 to i64*
  store i64 4294967295, i64* %29, align 4
  %30 = load %"struct.std::pair"*, %"struct.std::pair"** %14, align 8, !tbaa !34
  %31 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %30, i64 1
  store %"struct.std::pair"* %31, %"struct.std::pair"** %14, align 8, !tbaa !34
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %16, align 8, !tbaa !3
  br label %177

33:                                               ; preds = %24
  %34 = add nuw nsw i64 %22, 1
  %35 = shl nuw nsw i64 %34, 3
  %36 = tail call noalias nonnull i8* @_Znwm(i64 %35) #22
  %37 = bitcast i8* %36 to %"struct.std::pair"*
  %38 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %37, i64 %22
  %39 = bitcast %"struct.std::pair"* %38 to i64*
  store i64 4294967295, i64* %39, align 4
  %40 = icmp eq %"struct.std::pair"* %17, %15
  br i1 %40, label %153, label %41

41:                                               ; preds = %33
  %42 = add i64 %19, -8
  %43 = sub i64 %42, %20
  %44 = lshr i64 %43, 3
  %45 = add nuw nsw i64 %44, 1
  %46 = icmp ult i64 %43, 24
  br i1 %46, label %141, label %47

47:                                               ; preds = %41
  %48 = add i64 %19, -8
  %49 = sub i64 %48, %20
  %50 = lshr i64 %49, 3
  %51 = add i64 %49, 8
  %52 = and i64 %51, -8
  %53 = getelementptr i8, i8* %36, i64 %52
  %54 = add nuw nsw i64 %50, 1
  %55 = getelementptr %"struct.std::pair", %"struct.std::pair"* %17, i64 %54
  %56 = bitcast %"struct.std::pair"* %55 to i8*
  %57 = icmp ult i8* %36, %56
  %58 = icmp ugt i8* %53, %18
  %59 = and i1 %57, %58
  br i1 %59, label %141, label %60

60:                                               ; preds = %47
  %61 = and i64 %45, 4611686018427387900
  %62 = getelementptr %"struct.std::pair", %"struct.std::pair"* %37, i64 %61
  %63 = getelementptr %"struct.std::pair", %"struct.std::pair"* %17, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = and i64 %66, 9223372036854775804
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"struct.std::pair", %"struct.std::pair"* %37, i64 %72
  %75 = getelementptr %"struct.std::pair", %"struct.std::pair"* %17, i64 %72
  %76 = bitcast %"struct.std::pair"* %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 4, !alias.scope !36
  %78 = getelementptr %"struct.std::pair", %"struct.std::pair"* %75, i64 2
  %79 = bitcast %"struct.std::pair"* %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 4, !alias.scope !36
  %81 = bitcast %"struct.std::pair"* %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 4, !alias.scope !39, !noalias !36
  %82 = getelementptr %"struct.std::pair", %"struct.std::pair"* %74, i64 2
  %83 = bitcast %"struct.std::pair"* %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 4, !alias.scope !39, !noalias !36
  %84 = or i64 %72, 4
  %85 = getelementptr %"struct.std::pair", %"struct.std::pair"* %37, i64 %84
  %86 = getelementptr %"struct.std::pair", %"struct.std::pair"* %17, i64 %84
  %87 = bitcast %"struct.std::pair"* %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 4, !alias.scope !36
  %89 = getelementptr %"struct.std::pair", %"struct.std::pair"* %86, i64 2
  %90 = bitcast %"struct.std::pair"* %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 4, !alias.scope !36
  %92 = bitcast %"struct.std::pair"* %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 4, !alias.scope !39, !noalias !36
  %93 = getelementptr %"struct.std::pair", %"struct.std::pair"* %85, i64 2
  %94 = bitcast %"struct.std::pair"* %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 4, !alias.scope !39, !noalias !36
  %95 = or i64 %72, 8
  %96 = getelementptr %"struct.std::pair", %"struct.std::pair"* %37, i64 %95
  %97 = getelementptr %"struct.std::pair", %"struct.std::pair"* %17, i64 %95
  %98 = bitcast %"struct.std::pair"* %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 4, !alias.scope !36
  %100 = getelementptr %"struct.std::pair", %"struct.std::pair"* %97, i64 2
  %101 = bitcast %"struct.std::pair"* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 4, !alias.scope !36
  %103 = bitcast %"struct.std::pair"* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 4, !alias.scope !39, !noalias !36
  %104 = getelementptr %"struct.std::pair", %"struct.std::pair"* %96, i64 2
  %105 = bitcast %"struct.std::pair"* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 4, !alias.scope !39, !noalias !36
  %106 = or i64 %72, 12
  %107 = getelementptr %"struct.std::pair", %"struct.std::pair"* %37, i64 %106
  %108 = getelementptr %"struct.std::pair", %"struct.std::pair"* %17, i64 %106
  %109 = bitcast %"struct.std::pair"* %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 4, !alias.scope !36
  %111 = getelementptr %"struct.std::pair", %"struct.std::pair"* %108, i64 2
  %112 = bitcast %"struct.std::pair"* %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 4, !alias.scope !36
  %114 = bitcast %"struct.std::pair"* %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 4, !alias.scope !39, !noalias !36
  %115 = getelementptr %"struct.std::pair", %"struct.std::pair"* %107, i64 2
  %116 = bitcast %"struct.std::pair"* %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 4, !alias.scope !39, !noalias !36
  %117 = add nuw i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !41

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"struct.std::pair", %"struct.std::pair"* %37, i64 %124
  %127 = getelementptr %"struct.std::pair", %"struct.std::pair"* %17, i64 %124
  %128 = bitcast %"struct.std::pair"* %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 4, !alias.scope !36
  %130 = getelementptr %"struct.std::pair", %"struct.std::pair"* %127, i64 2
  %131 = bitcast %"struct.std::pair"* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 4, !alias.scope !36
  %133 = bitcast %"struct.std::pair"* %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 4, !alias.scope !39, !noalias !36
  %134 = getelementptr %"struct.std::pair", %"struct.std::pair"* %126, i64 2
  %135 = bitcast %"struct.std::pair"* %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 4, !alias.scope !39, !noalias !36
  %136 = add nuw i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !43

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %45, %61
  br i1 %140, label %153, label %141

141:                                              ; preds = %47, %41, %139
  %142 = phi %"struct.std::pair"* [ %37, %47 ], [ %37, %41 ], [ %62, %139 ]
  %143 = phi %"struct.std::pair"* [ %17, %47 ], [ %17, %41 ], [ %63, %139 ]
  br label %144

144:                                              ; preds = %141, %144
  %145 = phi %"struct.std::pair"* [ %151, %144 ], [ %142, %141 ]
  %146 = phi %"struct.std::pair"* [ %150, %144 ], [ %143, %141 ]
  %147 = bitcast %"struct.std::pair"* %146 to i64*
  %148 = bitcast %"struct.std::pair"* %145 to i64*
  %149 = load i64, i64* %147, align 4
  store i64 %149, i64* %148, align 4
  %150 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %146, i64 1
  %151 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %145, i64 1
  %152 = icmp eq %"struct.std::pair"* %150, %15
  br i1 %152, label %153, label %144, !llvm.loop !45

153:                                              ; preds = %144, %139, %33
  %154 = phi %"struct.std::pair"* [ %37, %33 ], [ %62, %139 ], [ %151, %144 ]
  %155 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %154, i64 1
  %156 = icmp eq %"struct.std::pair"* %17, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = bitcast %"struct.std::pair"* %17 to i8*
  tail call void @_ZdlPv(i8* nonnull %158) #20
  br label %159

159:                                              ; preds = %153, %157
  %160 = bitcast %"struct.std::pair"** %16 to i8**
  store i8* %36, i8** %160, align 8, !tbaa !3
  store %"struct.std::pair"* %155, %"struct.std::pair"** %14, align 8, !tbaa !34
  %161 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %37, i64 %34
  store %"struct.std::pair"* %161, %"struct.std::pair"** %25, align 8, !tbaa !35
  br label %177

162:                                              ; preds = %8
  %163 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 0, i32 1
  %164 = load i32, i32* %163, align 4, !tbaa !46
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [300000 x i64], [300000 x i64]* @nz, i64 0, i64 %165
  %167 = load i64, i64* %166, align 8, !tbaa !17
  %168 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 0, i32 0
  %169 = load i32, i32* %168, align 4, !tbaa !48
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [300000 x i64], [300000 x i64]* @nz, i64 0, i64 %170
  %172 = load i64, i64* %171, align 8, !tbaa !17
  %173 = add i64 %13, 998244353
  %174 = add i64 %173, %167
  %175 = sub i64 %174, %172
  store i64 %175, i64* %11, align 8, !tbaa !17
  %176 = add nsw i32 %169, -1
  store i32 %176, i32* %168, align 4, !tbaa !48
  br label %177

177:                                              ; preds = %159, %28, %162
  %178 = phi %"struct.std::pair"* [ %37, %159 ], [ %32, %28 ], [ %17, %162 ]
  %179 = phi %"struct.std::pair"* [ %155, %159 ], [ %31, %28 ], [ %15, %162 ]
  %180 = load i32, i32* @cnt, align 4, !tbaa !25
  %181 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64 %9
  store i32 %180, i32* %181, align 4, !tbaa !25
  %182 = getelementptr inbounds [60009 x i32], [60009 x i32]* @f, i64 0, i64 %9
  %183 = load i32, i32* %182, align 4, !tbaa !25
  %184 = ptrtoint %"struct.std::pair"* %179 to i64
  %185 = ptrtoint %"struct.std::pair"* %178 to i64
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 3
  %188 = icmp eq i64 %186, 0
  br i1 %188, label %203, label %189

189:                                              ; preds = %177
  %190 = call i64 @llvm.umax.i64(i64 %187, i64 1)
  %191 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %178, i64 0, i32 0
  %192 = load i32, i32* %191, align 4, !tbaa !48
  %193 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %178, i64 0, i32 1
  %194 = load i32, i32* %193, align 4, !tbaa !46
  %195 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %178, i64 0, i32 0
  %196 = add nsw i32 %192, 1
  store i32 %196, i32* %195, align 4, !tbaa !48
  %197 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %178, i64 0, i32 1
  %198 = add nsw i32 %194, 1
  store i32 %198, i32* %197, align 4, !tbaa !46
  %199 = icmp ult i64 %187, 2
  br i1 %199, label %203, label %200

200:                                              ; preds = %189
  %201 = load i64, i64* %11, align 8, !tbaa !17
  br label %214

202:                                              ; preds = %214
  store i64 %229, i64* %11, align 8, !tbaa !17
  br label %203

203:                                              ; preds = %202, %189, %177
  %204 = sext i32 %183 to i64
  %205 = getelementptr inbounds [60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 %204, i32 0, i32 0, i32 0, i32 1
  %206 = load %"struct.std::pair"*, %"struct.std::pair"** %205, align 8, !tbaa !34
  %207 = getelementptr inbounds [60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 %204, i32 0, i32 0, i32 0, i32 0
  %208 = load %"struct.std::pair"*, %"struct.std::pair"** %207, align 8, !tbaa !3
  %209 = ptrtoint %"struct.std::pair"* %206 to i64
  %210 = ptrtoint %"struct.std::pair"* %208 to i64
  %211 = sub i64 %209, %210
  %212 = ashr exact i64 %211, 3
  %213 = icmp ult i64 %212, %187
  br i1 %213, label %236, label %241

214:                                              ; preds = %200, %214
  %215 = phi i64 [ %201, %200 ], [ %229, %214 ]
  %216 = phi i64 [ 1, %200 ], [ %234, %214 ]
  %217 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %178, i64 %216, i32 1
  %218 = load i32, i32* %217, align 4, !tbaa !46
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds [300000 x i64], [300000 x i64]* @nz, i64 0, i64 %219
  %221 = load i64, i64* %220, align 8, !tbaa !17
  %222 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %178, i64 %216, i32 0
  %223 = load i32, i32* %222, align 4, !tbaa !48
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [300000 x i64], [300000 x i64]* @nz, i64 0, i64 %224
  %226 = load i64, i64* %225, align 8, !tbaa !17
  %227 = add i64 %221, 998244353
  %228 = sub i64 %227, %226
  %229 = add i64 %228, %215
  %230 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %178, i64 %216, i32 0
  %231 = add nsw i32 %223, 1
  store i32 %231, i32* %230, align 4, !tbaa !48
  %232 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %178, i64 %216, i32 1
  %233 = add nsw i32 %218, 1
  store i32 %233, i32* %232, align 4, !tbaa !46
  %234 = add nuw nsw i64 %216, 1
  %235 = icmp eq i64 %234, %190
  br i1 %235, label %202, label %214, !llvm.loop !49

236:                                              ; preds = %203
  %237 = getelementptr inbounds [60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 %204, i32 0, i32 0, i32 0, i32 2
  %238 = load %"struct.std::pair"*, %"struct.std::pair"** %237, align 8, !tbaa !35
  store %"struct.std::pair"* %178, %"struct.std::pair"** %207, align 8, !tbaa !3
  store %"struct.std::pair"* %179, %"struct.std::pair"** %205, align 8, !tbaa !34
  %239 = getelementptr inbounds [60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 %9, i32 0, i32 0, i32 0, i32 2
  %240 = load %"struct.std::pair"*, %"struct.std::pair"** %239, align 8, !tbaa !35
  store %"struct.std::pair"* %240, %"struct.std::pair"** %237, align 8, !tbaa !35
  store %"struct.std::pair"* %208, %"struct.std::pair"** %16, align 8, !tbaa !3
  store %"struct.std::pair"* %206, %"struct.std::pair"** %14, align 8, !tbaa !34
  store %"struct.std::pair"* %238, %"struct.std::pair"** %239, align 8, !tbaa !35
  br label %241

241:                                              ; preds = %236, %203
  %242 = phi %"struct.std::pair"* [ %208, %236 ], [ %178, %203 ]
  %243 = phi %"struct.std::pair"* [ %206, %236 ], [ %179, %203 ]
  %244 = getelementptr inbounds [60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 %204, i32 0, i32 0, i32 0, i32 2
  %245 = icmp eq %"struct.std::pair"* %243, %242
  br i1 %245, label %251, label %246

246:                                              ; preds = %241
  %247 = load %"struct.std::pair"*, %"struct.std::pair"** %205, align 8, !tbaa !34
  br label %256

248:                                              ; preds = %417
  %249 = icmp eq %"struct.std::pair"* %420, %421
  br i1 %249, label %251, label %250

250:                                              ; preds = %248
  store %"struct.std::pair"* %421, %"struct.std::pair"** %14, align 8, !tbaa !34
  br label %251

251:                                              ; preds = %241, %248, %250
  %252 = getelementptr inbounds [60009 x i32], [60009 x i32]* @nuv, i64 0, i64 %204
  %253 = load i32, i32* %252, align 4, !tbaa !25
  %254 = add nsw i32 %253, -1
  store i32 %254, i32* %252, align 4, !tbaa !25
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %8, label %427, !llvm.loop !50

256:                                              ; preds = %246, %417
  %257 = phi %"struct.std::pair"* [ %247, %246 ], [ %418, %417 ]
  %258 = phi i64 [ 0, %246 ], [ %419, %417 ]
  %259 = phi %"struct.std::pair"* [ %242, %246 ], [ %421, %417 ]
  %260 = ptrtoint %"struct.std::pair"* %257 to i64
  %261 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %259, i64 %258
  %262 = load %"struct.std::pair"*, %"struct.std::pair"** %244, align 8, !tbaa !35
  %263 = icmp eq %"struct.std::pair"* %257, %262
  br i1 %263, label %270, label %264

264:                                              ; preds = %256
  %265 = bitcast %"struct.std::pair"* %261 to i64*
  %266 = bitcast %"struct.std::pair"* %257 to i64*
  %267 = load i64, i64* %265, align 4
  store i64 %267, i64* %266, align 4
  %268 = load %"struct.std::pair"*, %"struct.std::pair"** %205, align 8, !tbaa !34
  %269 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %268, i64 1
  store %"struct.std::pair"* %269, %"struct.std::pair"** %205, align 8, !tbaa !34
  br label %417

270:                                              ; preds = %256
  %271 = load %"struct.std::pair"*, %"struct.std::pair"** %207, align 8, !tbaa !3
  %272 = ptrtoint %"struct.std::pair"* %271 to i64
  %273 = ptrtoint %"struct.std::pair"* %257 to i64
  %274 = ptrtoint %"struct.std::pair"* %271 to i64
  %275 = sub i64 %273, %274
  %276 = ashr exact i64 %275, 3
  %277 = icmp eq i64 %275, 9223372036854775800
  br i1 %277, label %278, label %279

278:                                              ; preds = %270
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0)) #23
  unreachable

279:                                              ; preds = %270
  %280 = icmp eq i64 %275, 0
  %281 = select i1 %280, i64 1, i64 %276
  %282 = add nsw i64 %281, %276
  %283 = icmp ult i64 %282, %276
  %284 = icmp ugt i64 %282, 1152921504606846975
  %285 = or i1 %283, %284
  %286 = select i1 %285, i64 1152921504606846975, i64 %282
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %292, label %288

288:                                              ; preds = %279
  %289 = shl nuw nsw i64 %286, 3
  %290 = tail call noalias nonnull i8* @_Znwm(i64 %289) #22
  %291 = bitcast i8* %290 to %"struct.std::pair"*
  br label %292

292:                                              ; preds = %288, %279
  %293 = phi %"struct.std::pair"* [ %291, %288 ], [ null, %279 ]
  %294 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %293, i64 %276
  %295 = bitcast %"struct.std::pair"* %261 to i64*
  %296 = bitcast %"struct.std::pair"* %294 to i64*
  %297 = load i64, i64* %295, align 4
  store i64 %297, i64* %296, align 4
  %298 = icmp eq %"struct.std::pair"* %271, %257
  br i1 %298, label %409, label %299

299:                                              ; preds = %292
  %300 = add i64 %260, -8
  %301 = sub i64 %300, %272
  %302 = lshr i64 %301, 3
  %303 = add nuw nsw i64 %302, 1
  %304 = icmp ult i64 %301, 24
  br i1 %304, label %397, label %305

305:                                              ; preds = %299
  %306 = add i64 %260, -8
  %307 = sub i64 %306, %272
  %308 = lshr i64 %307, 3
  %309 = add nuw nsw i64 %308, 1
  %310 = getelementptr %"struct.std::pair", %"struct.std::pair"* %293, i64 %309
  %311 = add nuw nsw i64 %308, 1
  %312 = getelementptr %"struct.std::pair", %"struct.std::pair"* %271, i64 %311
  %313 = icmp ult %"struct.std::pair"* %293, %312
  %314 = icmp ult %"struct.std::pair"* %271, %310
  %315 = and i1 %313, %314
  br i1 %315, label %397, label %316

316:                                              ; preds = %305
  %317 = and i64 %303, 4611686018427387900
  %318 = getelementptr %"struct.std::pair", %"struct.std::pair"* %293, i64 %317
  %319 = getelementptr %"struct.std::pair", %"struct.std::pair"* %271, i64 %317
  %320 = add nsw i64 %317, -4
  %321 = lshr exact i64 %320, 2
  %322 = add nuw nsw i64 %321, 1
  %323 = and i64 %322, 3
  %324 = icmp ult i64 %320, 12
  br i1 %324, label %376, label %325

325:                                              ; preds = %316
  %326 = and i64 %322, 9223372036854775804
  br label %327

327:                                              ; preds = %327, %325
  %328 = phi i64 [ 0, %325 ], [ %373, %327 ]
  %329 = phi i64 [ %326, %325 ], [ %374, %327 ]
  %330 = getelementptr %"struct.std::pair", %"struct.std::pair"* %293, i64 %328
  %331 = getelementptr %"struct.std::pair", %"struct.std::pair"* %271, i64 %328
  %332 = bitcast %"struct.std::pair"* %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 4, !alias.scope !51
  %334 = getelementptr %"struct.std::pair", %"struct.std::pair"* %331, i64 2
  %335 = bitcast %"struct.std::pair"* %334 to <2 x i64>*
  %336 = load <2 x i64>, <2 x i64>* %335, align 4, !alias.scope !51
  %337 = bitcast %"struct.std::pair"* %330 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %337, align 4, !alias.scope !54, !noalias !51
  %338 = getelementptr %"struct.std::pair", %"struct.std::pair"* %330, i64 2
  %339 = bitcast %"struct.std::pair"* %338 to <2 x i64>*
  store <2 x i64> %336, <2 x i64>* %339, align 4, !alias.scope !54, !noalias !51
  %340 = or i64 %328, 4
  %341 = getelementptr %"struct.std::pair", %"struct.std::pair"* %293, i64 %340
  %342 = getelementptr %"struct.std::pair", %"struct.std::pair"* %271, i64 %340
  %343 = bitcast %"struct.std::pair"* %342 to <2 x i64>*
  %344 = load <2 x i64>, <2 x i64>* %343, align 4, !alias.scope !51
  %345 = getelementptr %"struct.std::pair", %"struct.std::pair"* %342, i64 2
  %346 = bitcast %"struct.std::pair"* %345 to <2 x i64>*
  %347 = load <2 x i64>, <2 x i64>* %346, align 4, !alias.scope !51
  %348 = bitcast %"struct.std::pair"* %341 to <2 x i64>*
  store <2 x i64> %344, <2 x i64>* %348, align 4, !alias.scope !54, !noalias !51
  %349 = getelementptr %"struct.std::pair", %"struct.std::pair"* %341, i64 2
  %350 = bitcast %"struct.std::pair"* %349 to <2 x i64>*
  store <2 x i64> %347, <2 x i64>* %350, align 4, !alias.scope !54, !noalias !51
  %351 = or i64 %328, 8
  %352 = getelementptr %"struct.std::pair", %"struct.std::pair"* %293, i64 %351
  %353 = getelementptr %"struct.std::pair", %"struct.std::pair"* %271, i64 %351
  %354 = bitcast %"struct.std::pair"* %353 to <2 x i64>*
  %355 = load <2 x i64>, <2 x i64>* %354, align 4, !alias.scope !51
  %356 = getelementptr %"struct.std::pair", %"struct.std::pair"* %353, i64 2
  %357 = bitcast %"struct.std::pair"* %356 to <2 x i64>*
  %358 = load <2 x i64>, <2 x i64>* %357, align 4, !alias.scope !51
  %359 = bitcast %"struct.std::pair"* %352 to <2 x i64>*
  store <2 x i64> %355, <2 x i64>* %359, align 4, !alias.scope !54, !noalias !51
  %360 = getelementptr %"struct.std::pair", %"struct.std::pair"* %352, i64 2
  %361 = bitcast %"struct.std::pair"* %360 to <2 x i64>*
  store <2 x i64> %358, <2 x i64>* %361, align 4, !alias.scope !54, !noalias !51
  %362 = or i64 %328, 12
  %363 = getelementptr %"struct.std::pair", %"struct.std::pair"* %293, i64 %362
  %364 = getelementptr %"struct.std::pair", %"struct.std::pair"* %271, i64 %362
  %365 = bitcast %"struct.std::pair"* %364 to <2 x i64>*
  %366 = load <2 x i64>, <2 x i64>* %365, align 4, !alias.scope !51
  %367 = getelementptr %"struct.std::pair", %"struct.std::pair"* %364, i64 2
  %368 = bitcast %"struct.std::pair"* %367 to <2 x i64>*
  %369 = load <2 x i64>, <2 x i64>* %368, align 4, !alias.scope !51
  %370 = bitcast %"struct.std::pair"* %363 to <2 x i64>*
  store <2 x i64> %366, <2 x i64>* %370, align 4, !alias.scope !54, !noalias !51
  %371 = getelementptr %"struct.std::pair", %"struct.std::pair"* %363, i64 2
  %372 = bitcast %"struct.std::pair"* %371 to <2 x i64>*
  store <2 x i64> %369, <2 x i64>* %372, align 4, !alias.scope !54, !noalias !51
  %373 = add nuw i64 %328, 16
  %374 = add i64 %329, -4
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %376, label %327, !llvm.loop !56

376:                                              ; preds = %327, %316
  %377 = phi i64 [ 0, %316 ], [ %373, %327 ]
  %378 = icmp eq i64 %323, 0
  br i1 %378, label %395, label %379

379:                                              ; preds = %376, %379
  %380 = phi i64 [ %392, %379 ], [ %377, %376 ]
  %381 = phi i64 [ %393, %379 ], [ %323, %376 ]
  %382 = getelementptr %"struct.std::pair", %"struct.std::pair"* %293, i64 %380
  %383 = getelementptr %"struct.std::pair", %"struct.std::pair"* %271, i64 %380
  %384 = bitcast %"struct.std::pair"* %383 to <2 x i64>*
  %385 = load <2 x i64>, <2 x i64>* %384, align 4, !alias.scope !51
  %386 = getelementptr %"struct.std::pair", %"struct.std::pair"* %383, i64 2
  %387 = bitcast %"struct.std::pair"* %386 to <2 x i64>*
  %388 = load <2 x i64>, <2 x i64>* %387, align 4, !alias.scope !51
  %389 = bitcast %"struct.std::pair"* %382 to <2 x i64>*
  store <2 x i64> %385, <2 x i64>* %389, align 4, !alias.scope !54, !noalias !51
  %390 = getelementptr %"struct.std::pair", %"struct.std::pair"* %382, i64 2
  %391 = bitcast %"struct.std::pair"* %390 to <2 x i64>*
  store <2 x i64> %388, <2 x i64>* %391, align 4, !alias.scope !54, !noalias !51
  %392 = add nuw i64 %380, 4
  %393 = add i64 %381, -1
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %395, label %379, !llvm.loop !57

395:                                              ; preds = %379, %376
  %396 = icmp eq i64 %303, %317
  br i1 %396, label %409, label %397

397:                                              ; preds = %305, %299, %395
  %398 = phi %"struct.std::pair"* [ %293, %305 ], [ %293, %299 ], [ %318, %395 ]
  %399 = phi %"struct.std::pair"* [ %271, %305 ], [ %271, %299 ], [ %319, %395 ]
  br label %400

400:                                              ; preds = %397, %400
  %401 = phi %"struct.std::pair"* [ %407, %400 ], [ %398, %397 ]
  %402 = phi %"struct.std::pair"* [ %406, %400 ], [ %399, %397 ]
  %403 = bitcast %"struct.std::pair"* %402 to i64*
  %404 = bitcast %"struct.std::pair"* %401 to i64*
  %405 = load i64, i64* %403, align 4
  store i64 %405, i64* %404, align 4
  %406 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %402, i64 1
  %407 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %401, i64 1
  %408 = icmp eq %"struct.std::pair"* %406, %257
  br i1 %408, label %409, label %400, !llvm.loop !58

409:                                              ; preds = %400, %395, %292
  %410 = phi %"struct.std::pair"* [ %293, %292 ], [ %318, %395 ], [ %407, %400 ]
  %411 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %410, i64 1
  %412 = icmp eq %"struct.std::pair"* %271, null
  br i1 %412, label %415, label %413

413:                                              ; preds = %409
  %414 = bitcast %"struct.std::pair"* %271 to i8*
  tail call void @_ZdlPv(i8* nonnull %414) #20
  br label %415

415:                                              ; preds = %413, %409
  store %"struct.std::pair"* %293, %"struct.std::pair"** %207, align 8, !tbaa !3
  store %"struct.std::pair"* %411, %"struct.std::pair"** %205, align 8, !tbaa !34
  %416 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %293, i64 %286
  store %"struct.std::pair"* %416, %"struct.std::pair"** %244, align 8, !tbaa !35
  br label %417

417:                                              ; preds = %264, %415
  %418 = phi %"struct.std::pair"* [ %269, %264 ], [ %411, %415 ]
  %419 = add nuw i64 %258, 1
  %420 = load %"struct.std::pair"*, %"struct.std::pair"** %14, align 8, !tbaa !34
  %421 = load %"struct.std::pair"*, %"struct.std::pair"** %16, align 8, !tbaa !3
  %422 = ptrtoint %"struct.std::pair"* %420 to i64
  %423 = ptrtoint %"struct.std::pair"* %421 to i64
  %424 = sub i64 %422, %423
  %425 = ashr exact i64 %424, 3
  %426 = icmp ugt i64 %425, %419
  br i1 %426, label %256, label %248, !llvm.loop !59

427:                                              ; preds = %251, %1
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z3dfsi(i32 %0) local_unnamed_addr #7 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca %"class.std::tuple", align 8
  %3 = alloca %"class.std::tuple.12", align 1
  %4 = alloca i32, align 4
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [60009 x i8], [60009 x i8]* @vc, i64 0, i64 %5
  %7 = load i8, i8* %6, align 1, !tbaa !60, !range !62
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %141

9:                                                ; preds = %14
  %10 = trunc i64 %19 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %141, label %12

12:                                               ; preds = %9
  %13 = and i64 %19, 4294967295
  br label %27

14:                                               ; preds = %1, %14
  %15 = phi i64 [ %19, %14 ], [ 0, %1 ]
  %16 = phi i8* [ %24, %14 ], [ %6, %1 ]
  %17 = phi i64 [ %23, %14 ], [ %5, %1 ]
  %18 = phi i32 [ %22, %14 ], [ %0, %1 ]
  %19 = add nuw i64 %15, 1
  %20 = getelementptr inbounds [60009 x i32], [60009 x i32]* @pa, i64 0, i64 %15
  store i32 %18, i32* %20, align 4, !tbaa !25
  store i8 1, i8* %16, align 1, !tbaa !60
  %21 = getelementptr inbounds [60009 x i32], [60009 x i32]* @f, i64 0, i64 %17
  %22 = load i32, i32* %21, align 4, !tbaa !25
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [60009 x i8], [60009 x i8]* @vc, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1, !tbaa !60, !range !62
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %14, label %9, !llvm.loop !63

27:                                               ; preds = %12, %32
  %28 = phi i64 [ 0, %12 ], [ %33, %32 ]
  %29 = getelementptr inbounds [60009 x i32], [60009 x i32]* @pa, i64 0, i64 %28
  %30 = load i32, i32* %29, align 4, !tbaa !25
  %31 = icmp eq i32 %30, %22
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = add nuw nsw i64 %28, 1
  %34 = icmp eq i64 %33, %13
  br i1 %34, label %141, label %27, !llvm.loop !64

35:                                               ; preds = %27
  %36 = trunc i64 %28 to i32
  %37 = sub nsw i32 %10, %36
  %38 = icmp ugt i32 %10, %36
  br i1 %38, label %39, label %62

39:                                               ; preds = %35
  %40 = sext i32 %22 to i64
  %41 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64 %40
  store i32 %37, i32* %41, align 4, !tbaa !25
  %42 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64 %40
  store i64 1, i64* %42, align 8, !tbaa !17
  %43 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64 %40
  store i32 -1, i32* %43, align 4, !tbaa !25
  %44 = add nuw nsw i64 %28, 1
  %45 = icmp eq i64 %44, %13
  br i1 %45, label %62, label %46, !llvm.loop !65

46:                                               ; preds = %39
  %47 = sub i64 %15, %28
  %48 = add nsw i64 %13, -2
  %49 = and i64 %47, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds [60009 x i32], [60009 x i32]* @pa, i64 0, i64 %44
  %53 = load i32, i32* %52, align 4, !tbaa !25
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64 %54
  store i32 %37, i32* %55, align 4, !tbaa !25
  %56 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64 %54
  store i64 1, i64* %56, align 8, !tbaa !17
  %57 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64 %54
  store i32 -1, i32* %57, align 4, !tbaa !25
  %58 = add nuw nsw i64 %28, 2
  br label %59

59:                                               ; preds = %51, %46
  %60 = phi i64 [ %44, %46 ], [ %58, %51 ]
  %61 = icmp eq i64 %48, %28
  br i1 %61, label %62, label %86

62:                                               ; preds = %59, %86, %39, %35
  %63 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1) to %"struct.std::_Rb_tree_node"**), align 8, !tbaa !10
  %64 = icmp eq %"struct.std::_Rb_tree_node"* %63, null
  br i1 %64, label %103, label %65

65:                                               ; preds = %62, %65
  %66 = phi %"struct.std::_Rb_tree_node"* [ %78, %65 ], [ %63, %62 ]
  %67 = phi %"struct.std::_Rb_tree_node_base"* [ %75, %65 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %62 ]
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %66, i64 0, i32 1
  %69 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %68 to i32*
  %70 = load i32, i32* %69, align 4, !tbaa !25
  %71 = icmp slt i32 %70, %37
  %72 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %66, i64 0, i32 0, i32 3
  %73 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %66, i64 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %66, i64 0, i32 0, i32 2
  %75 = select i1 %71, %"struct.std::_Rb_tree_node_base"* %67, %"struct.std::_Rb_tree_node_base"* %73
  %76 = select i1 %71, %"struct.std::_Rb_tree_node_base"** %72, %"struct.std::_Rb_tree_node_base"** %74
  %77 = bitcast %"struct.std::_Rb_tree_node_base"** %76 to %"struct.std::_Rb_tree_node"**
  %78 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %77, align 8, !tbaa !66
  %79 = icmp eq %"struct.std::_Rb_tree_node"* %78, null
  br i1 %79, label %80, label %65, !llvm.loop !67

80:                                               ; preds = %65
  %81 = icmp eq %"struct.std::_Rb_tree_node_base"* %75, bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)
  br i1 %81, label %103, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %75, i64 1, i32 0
  %84 = load i32, i32* %83, align 4, !tbaa !25
  %85 = icmp slt i32 %37, %84
  br i1 %85, label %103, label %141

86:                                               ; preds = %59, %86
  %87 = phi i64 [ %101, %86 ], [ %60, %59 ]
  %88 = getelementptr inbounds [60009 x i32], [60009 x i32]* @pa, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4, !tbaa !25
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64 %90
  store i32 %37, i32* %91, align 4, !tbaa !25
  %92 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64 %90
  store i64 1, i64* %92, align 8, !tbaa !17
  %93 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64 %90
  store i32 -1, i32* %93, align 4, !tbaa !25
  %94 = add nuw nsw i64 %87, 1
  %95 = getelementptr inbounds [60009 x i32], [60009 x i32]* @pa, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4, !tbaa !25
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64 %97
  store i32 %37, i32* %98, align 4, !tbaa !25
  %99 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64 %97
  store i64 1, i64* %99, align 8, !tbaa !17
  %100 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64 %97
  store i32 -1, i32* %100, align 4, !tbaa !25
  %101 = add nuw nsw i64 %87, 2
  %102 = icmp eq i64 %101, %13
  br i1 %102, label %62, label %86, !llvm.loop !65

103:                                              ; preds = %82, %80, %62
  %104 = load i32, i32* @macnt, align 4, !tbaa !25
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [400 x i32], [400 x i32]* @idid, i64 0, i64 %105
  store i32 %37, i32* %106, align 4, !tbaa !25
  %107 = add nsw i32 %104, 1
  store i32 %107, i32* @macnt, align 4, !tbaa !25
  %108 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #20
  store i32 %37, i32* %4, align 4, !tbaa !25
  br i1 %64, label %130, label %109

109:                                              ; preds = %103, %109
  %110 = phi %"struct.std::_Rb_tree_node"* [ %122, %109 ], [ %63, %103 ]
  %111 = phi %"struct.std::_Rb_tree_node_base"* [ %119, %109 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %103 ]
  %112 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %110, i64 0, i32 1
  %113 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %112 to i32*
  %114 = load i32, i32* %113, align 4, !tbaa !25
  %115 = icmp slt i32 %114, %37
  %116 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %110, i64 0, i32 0, i32 3
  %117 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %110, i64 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %110, i64 0, i32 0, i32 2
  %119 = select i1 %115, %"struct.std::_Rb_tree_node_base"* %111, %"struct.std::_Rb_tree_node_base"* %117
  %120 = select i1 %115, %"struct.std::_Rb_tree_node_base"** %116, %"struct.std::_Rb_tree_node_base"** %118
  %121 = bitcast %"struct.std::_Rb_tree_node_base"** %120 to %"struct.std::_Rb_tree_node"**
  %122 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %121, align 8, !tbaa !66
  %123 = icmp eq %"struct.std::_Rb_tree_node"* %122, null
  br i1 %123, label %124, label %109, !llvm.loop !67

124:                                              ; preds = %109
  %125 = icmp eq %"struct.std::_Rb_tree_node_base"* %119, bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)
  br i1 %125, label %130, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %119, i64 1, i32 0
  %128 = load i32, i32* %127, align 4, !tbaa !25
  %129 = icmp slt i32 %37, %128
  br i1 %129, label %130, label %136

130:                                              ; preds = %126, %124, %103
  %131 = phi %"struct.std::_Rb_tree_node_base"* [ %119, %126 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %124 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %103 ]
  %132 = bitcast %"class.std::tuple"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #20
  %133 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  store i32* %4, i32** %133, align 8, !tbaa !66, !alias.scope !68
  %134 = getelementptr inbounds %"class.std::tuple.12", %"class.std::tuple.12"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %134) #20
  %135 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOiEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0), %"struct.std::_Rb_tree_node_base"* %131, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* nonnull align 8 dereferenceable(8) %2, %"class.std::tuple.12"* nonnull align 1 dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %134) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #20
  br label %136

136:                                              ; preds = %126, %130
  %137 = phi %"struct.std::_Rb_tree_node_base"* [ %135, %130 ], [ %119, %126 ]
  %138 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %137, i64 1
  %139 = bitcast %"struct.std::_Rb_tree_node_base"* %138 to %"struct.std::pair.8"*
  %140 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %139, i64 0, i32 1
  store i32 %104, i32* %140, align 4, !tbaa !25
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #20
  br label %141

141:                                              ; preds = %32, %1, %9, %82, %136
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readonly uwtable willreturn
define dso_local i32 @_Z4dfs2i(i32 %0) local_unnamed_addr #8 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [60009 x %"class.std::vector.0"], [60009 x %"class.std::vector.0"]* @G, i64 0, i64 %2, i32 0, i32 0, i32 0, i32 1
  %4 = load i32*, i32** %3, align 8, !tbaa !71
  %5 = getelementptr inbounds [60009 x %"class.std::vector.0"], [60009 x %"class.std::vector.0"]* @G, i64 0, i64 %2, i32 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8, !tbaa !8
  %7 = ptrtoint i32* %4 to i64
  %8 = ptrtoint i32* %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %1
  %12 = ashr exact i64 %9, 2
  %13 = call i64 @llvm.umax.i64(i64 %12, i64 1)
  br label %16

14:                                               ; preds = %16
  %15 = add i32 %23, 1
  br label %26

16:                                               ; preds = %11, %16
  %17 = phi i64 [ 0, %11 ], [ %24, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %23, %16 ]
  %19 = getelementptr inbounds i32, i32* %6, i64 %17
  %20 = load i32, i32* %19, align 4, !tbaa !25
  %21 = tail call i32 @_Z4dfs2i(i32 %20)
  %22 = icmp slt i32 %18, %21
  %23 = select i1 %22, i32 %21, i32 %18
  %24 = add nuw nsw i64 %17, 1
  %25 = icmp eq i64 %24, %13
  br i1 %25, label %14, label %16, !llvm.loop !72

26:                                               ; preds = %1, %14
  %27 = phi i32 [ %15, %14 ], [ 1, %1 ]
  ret i32 %27
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable
define dso_local void @_Z5init2i(i32 %0) local_unnamed_addr #6 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [400 x i32], [400 x i32]* @maxlen, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4, !tbaa !25
  %5 = getelementptr inbounds [400 x i32], [400 x i32]* @idid, i64 0, i64 %2
  %6 = load i32, i32* %5, align 4, !tbaa !25
  %7 = shl nsw i32 %4, 1
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi i32 [ 1, %1 ], [ %11, %8 ]
  %10 = icmp slt i32 %9, %7
  %11 = shl i32 %9, 1
  br i1 %10, label %8, label %12, !llvm.loop !73

12:                                               ; preds = %8
  %13 = sub nsw i32 %4, %6
  %14 = icmp sgt i32 %9, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = zext i32 %9 to i64
  %17 = shl nuw nsw i64 %16, 3
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([300000 x i64]* @z to i8*), i8 0, i64 %17, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([300000 x i64]* @y to i8*), i8 0, i64 %17, i1 false)
  br label %18

18:                                               ; preds = %15, %12
  store i64 1, i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @y, i64 0, i64 0), align 16, !tbaa !17
  %19 = load i32, i32* @m, align 4, !tbaa !25
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = sext i32 %4 to i64
  %23 = zext i32 %19 to i64
  br label %42

24:                                               ; preds = %50, %18
  %25 = load i32, i32* @k, align 4, !tbaa !25
  %26 = icmp slt i32 %4, %9
  %27 = icmp eq i32 %25, 0
  br i1 %27, label %64, label %28

28:                                               ; preds = %24
  %29 = sext i32 %4 to i64
  %30 = zext i32 %9 to i64
  %31 = sext i32 %9 to i64
  %32 = sext i32 %9 to i64
  %33 = add nsw i64 %30, -1
  %34 = and i64 %30, 1
  %35 = icmp eq i64 %33, 0
  %36 = and i64 %30, 4294967294
  %37 = icmp eq i64 %34, 0
  %38 = and i64 %30, 1
  %39 = icmp eq i64 %33, 0
  %40 = and i64 %30, 4294967294
  %41 = icmp eq i64 %38, 0
  br label %69

42:                                               ; preds = %21, %50
  %43 = phi i64 [ 0, %21 ], [ %62, %50 ]
  %44 = icmp slt i64 %43, %22
  %45 = trunc i64 %43 to i32
  br i1 %44, label %50, label %46

46:                                               ; preds = %42
  %47 = sub nsw i32 %45, %4
  %48 = srem i32 %47, %6
  %49 = add nsw i32 %48, %13
  br label %50

50:                                               ; preds = %42, %46
  %51 = phi i32 [ %49, %46 ], [ %45, %42 ]
  %52 = getelementptr inbounds [100009 x i32], [100009 x i32]* @p, i64 0, i64 %43
  %53 = load i32, i32* %52, align 4, !tbaa !25
  %54 = sext i32 %53 to i64
  %55 = sext i32 %51 to i64
  %56 = getelementptr inbounds [300000 x i64], [300000 x i64]* @z, i64 0, i64 %55
  %57 = load i64, i64* %56, align 8, !tbaa !17
  %58 = add nsw i64 %57, %54
  %59 = icmp sgt i64 %58, 998244352
  %60 = add nsw i64 %58, -998244353
  %61 = select i1 %59, i64 %60, i64 %58
  store i64 %61, i64* %56, align 8, !tbaa !17
  %62 = add nuw nsw i64 %43, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %24, label %42, !llvm.loop !74

64:                                               ; preds = %121, %166, %24
  %65 = icmp sgt i32 %4, 0
  br i1 %65, label %66, label %205

66:                                               ; preds = %64
  %67 = zext i32 %4 to i64
  %68 = sext i32 %6 to i64
  br label %177

69:                                               ; preds = %28, %166
  %70 = phi i32 [ %122, %166 ], [ %25, %28 ]
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %121, label %73

73:                                               ; preds = %69
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @z, i64 0, i64 0), i32 %9, i32 1)
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @y, i64 0, i64 0), i32 %9, i32 1)
  br i1 %14, label %74, label %84

74:                                               ; preds = %73
  br i1 %35, label %75, label %85

75:                                               ; preds = %85, %74
  %76 = phi i64 [ 0, %74 ], [ %101, %85 ]
  br i1 %37, label %84, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %76
  %79 = load i64, i64* %78, align 8, !tbaa !17
  %80 = getelementptr inbounds [300000 x i64], [300000 x i64]* @z, i64 0, i64 %76
  %81 = load i64, i64* %80, align 8, !tbaa !17
  %82 = mul nsw i64 %81, %79
  %83 = srem i64 %82, 998244353
  store i64 %83, i64* %78, align 8, !tbaa !17
  br label %84

84:                                               ; preds = %77, %75, %73
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @z, i64 0, i64 0), i32 %9, i32 -1)
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @y, i64 0, i64 0), i32 %9, i32 -1)
  br i1 %26, label %104, label %121

85:                                               ; preds = %74, %85
  %86 = phi i64 [ %101, %85 ], [ 0, %74 ]
  %87 = phi i64 [ %102, %85 ], [ %36, %74 ]
  %88 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %86
  %89 = load i64, i64* %88, align 16, !tbaa !17
  %90 = getelementptr inbounds [300000 x i64], [300000 x i64]* @z, i64 0, i64 %86
  %91 = load i64, i64* %90, align 16, !tbaa !17
  %92 = mul nsw i64 %91, %89
  %93 = srem i64 %92, 998244353
  store i64 %93, i64* %88, align 16, !tbaa !17
  %94 = or i64 %86, 1
  %95 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %94
  %96 = load i64, i64* %95, align 8, !tbaa !17
  %97 = getelementptr inbounds [300000 x i64], [300000 x i64]* @z, i64 0, i64 %94
  %98 = load i64, i64* %97, align 8, !tbaa !17
  %99 = mul nsw i64 %98, %96
  %100 = srem i64 %99, 998244353
  store i64 %100, i64* %95, align 8, !tbaa !17
  %101 = add nuw nsw i64 %86, 2
  %102 = add i64 %87, -2
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %75, label %85, !llvm.loop !75

104:                                              ; preds = %84, %104
  %105 = phi i64 [ %119, %104 ], [ %29, %84 ]
  %106 = trunc i64 %105 to i32
  %107 = sub i32 %106, %4
  %108 = srem i32 %107, %6
  %109 = add nsw i32 %108, %13
  %110 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %105
  %111 = load i64, i64* %110, align 8, !tbaa !17
  %112 = sext i32 %109 to i64
  %113 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %112
  %114 = load i64, i64* %113, align 8, !tbaa !17
  %115 = add nsw i64 %114, %111
  %116 = icmp sgt i64 %115, 998244352
  %117 = add nsw i64 %115, -998244353
  %118 = select i1 %116, i64 %117, i64 %115
  store i64 %118, i64* %113, align 8, !tbaa !17
  store i64 0, i64* %110, align 8, !tbaa !17
  %119 = add nsw i64 %105, 1
  %120 = icmp eq i64 %119, %31
  br i1 %120, label %121, label %104, !llvm.loop !76

121:                                              ; preds = %104, %84, %69
  %122 = ashr i32 %70, 1
  %123 = icmp ult i32 %70, 2
  br i1 %123, label %64, label %124

124:                                              ; preds = %121
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @z, i64 0, i64 0), i32 %9, i32 1)
  br i1 %14, label %125, label %133

125:                                              ; preds = %124
  br i1 %39, label %126, label %134

126:                                              ; preds = %134, %125
  %127 = phi i64 [ 0, %125 ], [ %146, %134 ]
  br i1 %41, label %133, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds [300000 x i64], [300000 x i64]* @z, i64 0, i64 %127
  %130 = load i64, i64* %129, align 8, !tbaa !17
  %131 = mul nsw i64 %130, %130
  %132 = urem i64 %131, 998244353
  store i64 %132, i64* %129, align 8, !tbaa !17
  br label %133

133:                                              ; preds = %128, %126, %124
  tail call void @_Z3nttPxii(i64* getelementptr inbounds ([300000 x i64], [300000 x i64]* @z, i64 0, i64 0), i32 %9, i32 -1)
  br i1 %26, label %149, label %166

134:                                              ; preds = %125, %134
  %135 = phi i64 [ %146, %134 ], [ 0, %125 ]
  %136 = phi i64 [ %147, %134 ], [ %40, %125 ]
  %137 = getelementptr inbounds [300000 x i64], [300000 x i64]* @z, i64 0, i64 %135
  %138 = load i64, i64* %137, align 16, !tbaa !17
  %139 = mul nsw i64 %138, %138
  %140 = urem i64 %139, 998244353
  store i64 %140, i64* %137, align 16, !tbaa !17
  %141 = or i64 %135, 1
  %142 = getelementptr inbounds [300000 x i64], [300000 x i64]* @z, i64 0, i64 %141
  %143 = load i64, i64* %142, align 8, !tbaa !17
  %144 = mul nsw i64 %143, %143
  %145 = urem i64 %144, 998244353
  store i64 %145, i64* %142, align 8, !tbaa !17
  %146 = add nuw nsw i64 %135, 2
  %147 = add i64 %136, -2
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %126, label %134, !llvm.loop !77

149:                                              ; preds = %133, %149
  %150 = phi i64 [ %164, %149 ], [ %29, %133 ]
  %151 = trunc i64 %150 to i32
  %152 = sub i32 %151, %4
  %153 = srem i32 %152, %6
  %154 = add nsw i32 %153, %13
  %155 = getelementptr inbounds [300000 x i64], [300000 x i64]* @z, i64 0, i64 %150
  %156 = load i64, i64* %155, align 8, !tbaa !17
  %157 = sext i32 %154 to i64
  %158 = getelementptr inbounds [300000 x i64], [300000 x i64]* @z, i64 0, i64 %157
  %159 = load i64, i64* %158, align 8, !tbaa !17
  %160 = add nsw i64 %159, %156
  %161 = icmp sgt i64 %160, 998244352
  %162 = add nsw i64 %160, -998244353
  %163 = select i1 %161, i64 %162, i64 %160
  store i64 %163, i64* %158, align 8, !tbaa !17
  store i64 0, i64* %155, align 8, !tbaa !17
  %164 = add nsw i64 %150, 1
  %165 = icmp eq i64 %164, %32
  br i1 %165, label %166, label %149, !llvm.loop !78

166:                                              ; preds = %149, %133
  br i1 %123, label %64, label %69, !llvm.loop !79

167:                                              ; preds = %192
  %168 = icmp sgt i32 %4, 1
  br i1 %168, label %169, label %205

169:                                              ; preds = %167
  %170 = getelementptr inbounds [400 x [60009 x i64]], [400 x [60009 x i64]]* @qq, i64 0, i64 %2, i64 0
  %171 = load i64, i64* %170, align 8, !tbaa !17
  %172 = add nsw i64 %67, -1
  %173 = and i64 %172, 1
  %174 = icmp eq i32 %4, 2
  br i1 %174, label %194, label %175

175:                                              ; preds = %169
  %176 = and i64 %172, -2
  br label %206

177:                                              ; preds = %66, %192
  %178 = phi i64 [ %67, %66 ], [ %179, %192 ]
  %179 = add nsw i64 %178, -1
  %180 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %179
  %181 = load i64, i64* %180, align 8, !tbaa !17
  %182 = getelementptr inbounds [400 x [60009 x i64]], [400 x [60009 x i64]]* @qq, i64 0, i64 %2, i64 %179
  store i64 %181, i64* %182, align 8, !tbaa !17
  %183 = icmp sgt i64 %178, %68
  br i1 %183, label %184, label %192

184:                                              ; preds = %177
  %185 = sub nsw i64 %179, %68
  %186 = getelementptr inbounds [300000 x i64], [300000 x i64]* @y, i64 0, i64 %185
  %187 = load i64, i64* %186, align 8, !tbaa !17
  %188 = add nsw i64 %187, %181
  store i64 %188, i64* %186, align 8, !tbaa !17
  %189 = icmp sgt i64 %188, 998244352
  br i1 %189, label %190, label %192

190:                                              ; preds = %184
  %191 = add nsw i64 %188, -998244353
  store i64 %191, i64* %186, align 8, !tbaa !17
  br label %192

192:                                              ; preds = %177, %190, %184
  %193 = icmp sgt i64 %178, 1
  br i1 %193, label %177, label %167, !llvm.loop !80

194:                                              ; preds = %206, %169
  %195 = phi i64 [ %171, %169 ], [ %222, %206 ]
  %196 = phi i64 [ 1, %169 ], [ %223, %206 ]
  %197 = icmp eq i64 %173, 0
  br i1 %197, label %205, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds [400 x [60009 x i64]], [400 x [60009 x i64]]* @qq, i64 0, i64 %2, i64 %196
  %200 = load i64, i64* %199, align 8, !tbaa !17
  %201 = add nsw i64 %200, %195
  %202 = icmp sgt i64 %201, 998244352
  %203 = add nsw i64 %201, -998244353
  %204 = select i1 %202, i64 %203, i64 %201
  store i64 %204, i64* %199, align 8, !tbaa !17
  br label %205

205:                                              ; preds = %198, %194, %64, %167
  ret void

206:                                              ; preds = %206, %175
  %207 = phi i64 [ %171, %175 ], [ %222, %206 ]
  %208 = phi i64 [ 1, %175 ], [ %223, %206 ]
  %209 = phi i64 [ %176, %175 ], [ %224, %206 ]
  %210 = getelementptr inbounds [400 x [60009 x i64]], [400 x [60009 x i64]]* @qq, i64 0, i64 %2, i64 %208
  %211 = load i64, i64* %210, align 8, !tbaa !17
  %212 = add nsw i64 %211, %207
  %213 = icmp sgt i64 %212, 998244352
  %214 = add nsw i64 %212, -998244353
  %215 = select i1 %213, i64 %214, i64 %212
  store i64 %215, i64* %210, align 8, !tbaa !17
  %216 = add nuw nsw i64 %208, 1
  %217 = getelementptr inbounds [400 x [60009 x i64]], [400 x [60009 x i64]]* @qq, i64 0, i64 %2, i64 %216
  %218 = load i64, i64* %217, align 8, !tbaa !17
  %219 = add nsw i64 %218, %215
  %220 = icmp sgt i64 %219, 998244352
  %221 = add nsw i64 %219, -998244353
  %222 = select i1 %220, i64 %221, i64 %219
  store i64 %222, i64* %217, align 8, !tbaa !17
  %223 = add nuw nsw i64 %208, 2
  %224 = add i64 %209, -2
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %194, label %206, !llvm.loop !81
}

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #9 {
  %1 = alloca %"class.std::tuple.18", align 8
  %2 = alloca %"class.std::tuple.12", align 1
  %3 = alloca %"class.std::tuple.18", align 8
  %4 = alloca %"class.std::tuple.12", align 1
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !66
  %6 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), %struct._IO_FILE* %5)
  %7 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32* nonnull @n, i32* nonnull @m, i32* nonnull @k)
  %8 = load i32, i32* @n, align 4, !tbaa !25
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %69, %0
  %11 = load i32, i32* @m, align 4, !tbaa !25
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %77, label %74

13:                                               ; preds = %0, %69
  %14 = phi i64 [ %70, %69 ], [ 0, %0 ]
  %15 = getelementptr inbounds [60009 x i32], [60009 x i32]* @f, i64 0, i64 %14
  %16 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i32* nonnull %15)
  %17 = load i32, i32* %15, align 4, !tbaa !25
  %18 = add nsw i32 %17, -1
  store i32 %18, i32* %15, align 4, !tbaa !25
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [60009 x i8], [60009 x i8]* @v, i64 0, i64 %19
  store i8 1, i8* %20, align 1, !tbaa !60
  %21 = getelementptr inbounds [60009 x i32], [60009 x i32]* @nuv, i64 0, i64 %19
  %22 = load i32, i32* %21, align 4, !tbaa !25
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %21, align 4, !tbaa !25
  %24 = getelementptr inbounds [60009 x %"class.std::vector.0"], [60009 x %"class.std::vector.0"]* @G, i64 0, i64 %19, i32 0, i32 0, i32 0, i32 1
  %25 = load i32*, i32** %24, align 8, !tbaa !71
  %26 = getelementptr inbounds [60009 x %"class.std::vector.0"], [60009 x %"class.std::vector.0"]* @G, i64 0, i64 %19, i32 0, i32 0, i32 0, i32 2
  %27 = load i32*, i32** %26, align 8, !tbaa !82
  %28 = icmp eq i32* %25, %27
  br i1 %28, label %32, label %29

29:                                               ; preds = %13
  %30 = trunc i64 %14 to i32
  store i32 %30, i32* %25, align 4, !tbaa !25
  %31 = getelementptr inbounds i32, i32* %25, i64 1
  store i32* %31, i32** %24, align 8, !tbaa !71
  br label %69

32:                                               ; preds = %13
  %33 = getelementptr inbounds [60009 x %"class.std::vector.0"], [60009 x %"class.std::vector.0"]* @G, i64 0, i64 %19, i32 0, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8, !tbaa !8
  %35 = ptrtoint i32* %25 to i64
  %36 = ptrtoint i32* %34 to i64
  %37 = sub i64 %35, %36
  %38 = ashr exact i64 %37, 2
  %39 = icmp eq i64 %37, 9223372036854775804
  br i1 %39, label %40, label %41

40:                                               ; preds = %32
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0)) #23
  unreachable

41:                                               ; preds = %32
  %42 = icmp eq i64 %37, 0
  %43 = select i1 %42, i64 1, i64 %38
  %44 = add nsw i64 %43, %38
  %45 = icmp ult i64 %44, %38
  %46 = icmp ugt i64 %44, 2305843009213693951
  %47 = or i1 %45, %46
  %48 = select i1 %47, i64 2305843009213693951, i64 %44
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %41
  %51 = shl nuw nsw i64 %48, 2
  %52 = tail call noalias nonnull i8* @_Znwm(i64 %51) #22
  %53 = bitcast i8* %52 to i32*
  br label %54

54:                                               ; preds = %50, %41
  %55 = phi i32* [ %53, %50 ], [ null, %41 ]
  %56 = getelementptr inbounds i32, i32* %55, i64 %38
  %57 = trunc i64 %14 to i32
  store i32 %57, i32* %56, align 4, !tbaa !25
  %58 = icmp sgt i64 %37, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = bitcast i32* %55 to i8*
  %61 = bitcast i32* %34 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 %37, i1 false) #20
  br label %62

62:                                               ; preds = %54, %59
  %63 = getelementptr inbounds i32, i32* %56, i64 1
  %64 = icmp eq i32* %34, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = bitcast i32* %34 to i8*
  tail call void @_ZdlPv(i8* nonnull %66) #20
  br label %67

67:                                               ; preds = %62, %65
  store i32* %55, i32** %33, align 8, !tbaa !8
  store i32* %63, i32** %24, align 8, !tbaa !71
  %68 = getelementptr inbounds i32, i32* %55, i64 %48
  store i32* %68, i32** %26, align 8, !tbaa !82
  br label %69

69:                                               ; preds = %29, %67
  %70 = add nuw nsw i64 %14, 1
  %71 = load i32, i32* @n, align 4, !tbaa !25
  %72 = sext i32 %71 to i64
  %73 = icmp slt i64 %70, %72
  br i1 %73, label %13, label %10, !llvm.loop !83

74:                                               ; preds = %77, %10
  tail call void @_Z4initv()
  %75 = load i32, i32* @n, align 4, !tbaa !25
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %90, label %104

77:                                               ; preds = %10, %77
  %78 = phi i64 [ %81, %77 ], [ 0, %10 ]
  %79 = getelementptr inbounds [100009 x i32], [100009 x i32]* @p, i64 0, i64 %78
  %80 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i32* nonnull %79)
  %81 = add nuw nsw i64 %78, 1
  %82 = load i32, i32* @m, align 4, !tbaa !25
  %83 = sext i32 %82 to i64
  %84 = icmp slt i64 %81, %83
  br i1 %84, label %77, label %74, !llvm.loop !84

85:                                               ; preds = %99
  %86 = bitcast %"class.std::tuple.18"* %3 to i8*
  %87 = getelementptr inbounds %"class.std::tuple.18", %"class.std::tuple.18"* %3, i64 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.std::tuple.12", %"class.std::tuple.12"* %4, i64 0, i32 0
  %89 = icmp sgt i32 %100, 0
  br i1 %89, label %108, label %104

90:                                               ; preds = %74, %99
  %91 = phi i32 [ %100, %99 ], [ %75, %74 ]
  %92 = phi i64 [ %101, %99 ], [ 0, %74 ]
  %93 = getelementptr inbounds [60009 x i8], [60009 x i8]* @v, i64 0, i64 %92
  %94 = load i8, i8* %93, align 1, !tbaa !60, !range !62
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = trunc i64 %92 to i32
  tail call void @_Z3dfsi(i32 %97)
  %98 = load i32, i32* @n, align 4, !tbaa !25
  br label %99

99:                                               ; preds = %90, %96
  %100 = phi i32 [ %91, %90 ], [ %98, %96 ]
  %101 = add nuw nsw i64 %92, 1
  %102 = sext i32 %100 to i64
  %103 = icmp slt i64 %101, %102
  br i1 %103, label %90, label %85, !llvm.loop !85

104:                                              ; preds = %185, %74, %85
  %105 = phi i32 [ %100, %85 ], [ %75, %74 ], [ %186, %185 ]
  %106 = load i32, i32* @macnt, align 4, !tbaa !25
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %196, label %193

108:                                              ; preds = %85, %185
  %109 = phi i32 [ %186, %185 ], [ %100, %85 ]
  %110 = phi i64 [ %188, %185 ], [ 0, %85 ]
  %111 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64 %110
  %112 = load i32, i32* %111, align 4, !tbaa !25
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %185, label %114

114:                                              ; preds = %108
  %115 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1) to %"struct.std::_Rb_tree_node"**), align 8, !tbaa !10
  %116 = icmp eq %"struct.std::_Rb_tree_node"* %115, null
  br i1 %116, label %138, label %117

117:                                              ; preds = %114, %117
  %118 = phi %"struct.std::_Rb_tree_node"* [ %130, %117 ], [ %115, %114 ]
  %119 = phi %"struct.std::_Rb_tree_node_base"* [ %127, %117 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %114 ]
  %120 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %118, i64 0, i32 1
  %121 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %120 to i32*
  %122 = load i32, i32* %121, align 4, !tbaa !25
  %123 = icmp slt i32 %122, %112
  %124 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %118, i64 0, i32 0, i32 3
  %125 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %118, i64 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %118, i64 0, i32 0, i32 2
  %127 = select i1 %123, %"struct.std::_Rb_tree_node_base"* %119, %"struct.std::_Rb_tree_node_base"* %125
  %128 = select i1 %123, %"struct.std::_Rb_tree_node_base"** %124, %"struct.std::_Rb_tree_node_base"** %126
  %129 = bitcast %"struct.std::_Rb_tree_node_base"** %128 to %"struct.std::_Rb_tree_node"**
  %130 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %129, align 8, !tbaa !66
  %131 = icmp eq %"struct.std::_Rb_tree_node"* %130, null
  br i1 %131, label %132, label %117, !llvm.loop !67

132:                                              ; preds = %117
  %133 = icmp eq %"struct.std::_Rb_tree_node_base"* %127, bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)
  br i1 %133, label %138, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %127, i64 1, i32 0
  %136 = load i32, i32* %135, align 4, !tbaa !25
  %137 = icmp slt i32 %112, %136
  br i1 %137, label %138, label %141

138:                                              ; preds = %134, %132, %114
  %139 = phi %"struct.std::_Rb_tree_node_base"* [ %127, %134 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %132 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %114 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #20
  store i32* %111, i32** %87, align 8, !tbaa !66
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %88) #20
  %140 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0), %"struct.std::_Rb_tree_node_base"* %139, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.18"* nonnull align 8 dereferenceable(8) %3, %"class.std::tuple.12"* nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %88) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #20
  br label %141

141:                                              ; preds = %134, %138
  %142 = phi %"struct.std::_Rb_tree_node_base"* [ %140, %138 ], [ %127, %134 ]
  %143 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %142, i64 1
  %144 = bitcast %"struct.std::_Rb_tree_node_base"* %143 to %"struct.std::pair.8"*
  %145 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %144, i64 0, i32 1
  %146 = load i32, i32* %145, align 4, !tbaa !25
  %147 = getelementptr inbounds [60009 x %"class.std::vector.0"], [60009 x %"class.std::vector.0"]* @G, i64 0, i64 %110, i32 0, i32 0, i32 0, i32 1
  %148 = load i32*, i32** %147, align 8, !tbaa !71
  %149 = getelementptr inbounds [60009 x %"class.std::vector.0"], [60009 x %"class.std::vector.0"]* @G, i64 0, i64 %110, i32 0, i32 0, i32 0, i32 0
  %150 = load i32*, i32** %149, align 8, !tbaa !8
  %151 = ptrtoint i32* %148 to i64
  %152 = ptrtoint i32* %150 to i64
  %153 = sub i64 %151, %152
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %141
  %156 = ashr exact i64 %153, 2
  %157 = call i64 @llvm.umax.i64(i64 %156, i64 1)
  br label %168

158:                                              ; preds = %181, %141
  %159 = phi i32 [ 0, %141 ], [ %182, %181 ]
  %160 = sext i32 %146 to i64
  %161 = getelementptr inbounds [400 x i32], [400 x i32]* @maxlen, i64 0, i64 %160
  %162 = load i32, i32* %111, align 4, !tbaa !25
  %163 = add nsw i32 %162, %159
  %164 = load i32, i32* %161, align 4, !tbaa !25
  %165 = icmp slt i32 %164, %163
  %166 = select i1 %165, i32 %163, i32 %164
  store i32 %166, i32* %161, align 4, !tbaa !25
  %167 = load i32, i32* @n, align 4, !tbaa !25
  br label %185

168:                                              ; preds = %155, %181
  %169 = phi i64 [ 0, %155 ], [ %183, %181 ]
  %170 = phi i32 [ 0, %155 ], [ %182, %181 ]
  %171 = getelementptr inbounds i32, i32* %150, i64 %169
  %172 = load i32, i32* %171, align 4, !tbaa !25
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64 %173
  %175 = load i32, i32* %174, align 4, !tbaa !25
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %181

177:                                              ; preds = %168
  %178 = call i32 @_Z4dfs2i(i32 %172)
  %179 = icmp slt i32 %170, %178
  %180 = select i1 %179, i32 %178, i32 %170
  br label %181

181:                                              ; preds = %168, %177
  %182 = phi i32 [ %180, %177 ], [ %170, %168 ]
  %183 = add nuw nsw i64 %169, 1
  %184 = icmp eq i64 %183, %157
  br i1 %184, label %158, label %168, !llvm.loop !86

185:                                              ; preds = %158, %108
  %186 = phi i32 [ %167, %158 ], [ %109, %108 ]
  %187 = getelementptr inbounds [60009 x i8], [60009 x i8]* @vc, i64 0, i64 %110
  store i8 0, i8* %187, align 1, !tbaa !60
  %188 = add nuw nsw i64 %110, 1
  %189 = sext i32 %186 to i64
  %190 = icmp slt i64 %188, %189
  br i1 %190, label %108, label %104, !llvm.loop !87

191:                                              ; preds = %196
  %192 = load i32, i32* @n, align 4, !tbaa !25
  br label %193

193:                                              ; preds = %191, %104
  %194 = phi i32 [ %192, %191 ], [ %105, %104 ]
  %195 = icmp sgt i32 %194, 0
  br i1 %195, label %206, label %331

196:                                              ; preds = %104, %196
  %197 = phi i32 [ %198, %196 ], [ 0, %104 ]
  call void @_Z5init2i(i32 %197)
  %198 = add nuw nsw i32 %197, 1
  %199 = load i32, i32* @macnt, align 4, !tbaa !25
  %200 = icmp slt i32 %198, %199
  br i1 %200, label %196, label %191, !llvm.loop !88

201:                                              ; preds = %215
  %202 = bitcast %"class.std::tuple.18"* %1 to i8*
  %203 = getelementptr inbounds %"class.std::tuple.18", %"class.std::tuple.18"* %1, i64 0, i32 0, i32 0, i32 0
  %204 = getelementptr inbounds %"class.std::tuple.12", %"class.std::tuple.12"* %2, i64 0, i32 0
  %205 = icmp sgt i32 %216, 0
  br i1 %205, label %228, label %331

206:                                              ; preds = %193, %215
  %207 = phi i32 [ %216, %215 ], [ %194, %193 ]
  %208 = phi i64 [ %217, %215 ], [ 0, %193 ]
  %209 = getelementptr inbounds [60009 x i8], [60009 x i8]* @v, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1, !tbaa !60, !range !62
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %206
  %213 = trunc i64 %208 to i32
  call void @_Z5solvei(i32 %213)
  %214 = load i32, i32* @n, align 4, !tbaa !25
  br label %215

215:                                              ; preds = %206, %212
  %216 = phi i32 [ %207, %206 ], [ %214, %212 ]
  %217 = add nuw nsw i64 %208, 1
  %218 = sext i32 %216 to i64
  %219 = icmp slt i64 %217, %218
  br i1 %219, label %206, label %201, !llvm.loop !89

220:                                              ; preds = %317
  %221 = icmp sgt i32 %319, 0
  br i1 %221, label %222, label %331

222:                                              ; preds = %220
  %223 = zext i32 %319 to i64
  %224 = and i64 %223, 1
  %225 = icmp eq i32 %319, 1
  br i1 %225, label %322, label %226

226:                                              ; preds = %222
  %227 = and i64 %223, 4294967294
  br label %351

228:                                              ; preds = %201, %317
  %229 = phi i64 [ %318, %317 ], [ 0, %201 ]
  %230 = getelementptr inbounds [60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 %229, i32 0, i32 0, i32 0, i32 1
  %231 = load %"struct.std::pair"*, %"struct.std::pair"** %230, align 8, !tbaa !34
  %232 = getelementptr inbounds [60009 x %"class.std::vector"], [60009 x %"class.std::vector"]* @QWQ, i64 0, i64 %229, i32 0, i32 0, i32 0, i32 0
  %233 = load %"struct.std::pair"*, %"struct.std::pair"** %232, align 8, !tbaa !3
  %234 = icmp eq %"struct.std::pair"* %231, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64 %229
  %237 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1) to %"struct.std::_Rb_tree_node"**), align 8, !tbaa !10
  %238 = load i32, i32* %236, align 4
  %239 = icmp eq %"struct.std::_Rb_tree_node"* %237, null
  br i1 %239, label %261, label %240

240:                                              ; preds = %235, %240
  %241 = phi %"struct.std::_Rb_tree_node"* [ %253, %240 ], [ %237, %235 ]
  %242 = phi %"struct.std::_Rb_tree_node_base"* [ %250, %240 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %235 ]
  %243 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %241, i64 0, i32 1
  %244 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %243 to i32*
  %245 = load i32, i32* %244, align 4, !tbaa !25
  %246 = icmp slt i32 %245, %238
  %247 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %241, i64 0, i32 0, i32 3
  %248 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %241, i64 0, i32 0
  %249 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %241, i64 0, i32 0, i32 2
  %250 = select i1 %246, %"struct.std::_Rb_tree_node_base"* %242, %"struct.std::_Rb_tree_node_base"* %248
  %251 = select i1 %246, %"struct.std::_Rb_tree_node_base"** %247, %"struct.std::_Rb_tree_node_base"** %249
  %252 = bitcast %"struct.std::_Rb_tree_node_base"** %251 to %"struct.std::_Rb_tree_node"**
  %253 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %252, align 8, !tbaa !66
  %254 = icmp eq %"struct.std::_Rb_tree_node"* %253, null
  br i1 %254, label %255, label %240, !llvm.loop !67

255:                                              ; preds = %240
  %256 = icmp eq %"struct.std::_Rb_tree_node_base"* %250, bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)
  br i1 %256, label %261, label %257

257:                                              ; preds = %255
  %258 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %250, i64 1, i32 0
  %259 = load i32, i32* %258, align 4, !tbaa !25
  %260 = icmp slt i32 %238, %259
  br i1 %260, label %261, label %266

261:                                              ; preds = %257, %255, %235
  %262 = phi %"struct.std::_Rb_tree_node_base"* [ %250, %257 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %255 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %235 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #20
  store i32* %236, i32** %203, align 8, !tbaa !66
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %204) #20
  %263 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0), %"struct.std::_Rb_tree_node_base"* %262, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.18"* nonnull align 8 dereferenceable(8) %1, %"class.std::tuple.12"* nonnull align 1 dereferenceable(1) %2)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %204) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #20
  %264 = load %"struct.std::pair"*, %"struct.std::pair"** %230, align 8, !tbaa !34
  %265 = load %"struct.std::pair"*, %"struct.std::pair"** %232, align 8, !tbaa !3
  br label %266

266:                                              ; preds = %257, %261
  %267 = phi %"struct.std::pair"* [ %265, %261 ], [ %233, %257 ]
  %268 = phi %"struct.std::pair"* [ %264, %261 ], [ %231, %257 ]
  %269 = phi %"struct.std::_Rb_tree_node_base"* [ %263, %261 ], [ %250, %257 ]
  %270 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %269, i64 1
  %271 = bitcast %"struct.std::_Rb_tree_node_base"* %270 to %"struct.std::pair.8"*
  %272 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %271, i64 0, i32 1
  %273 = load i32, i32* %272, align 4, !tbaa !25
  %274 = ptrtoint %"struct.std::pair"* %268 to i64
  %275 = ptrtoint %"struct.std::pair"* %267 to i64
  %276 = sub i64 %274, %275
  %277 = ashr exact i64 %276, 3
  %278 = sext i32 %273 to i64
  %279 = icmp eq i64 %276, 0
  br i1 %279, label %317, label %280

280:                                              ; preds = %266
  %281 = load i32, i32* %236, align 4, !tbaa !25
  %282 = icmp sgt i32 %281, 0
  br i1 %282, label %283, label %317

283:                                              ; preds = %280
  %284 = call i64 @llvm.umax.i64(i64 %277, i64 1)
  %285 = trunc i64 %229 to i32
  %286 = zext i32 %281 to i64
  br label %287

287:                                              ; preds = %283, %314
  %288 = phi i64 [ 0, %283 ], [ %315, %314 ]
  %289 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %267, i64 %288, i32 0
  %290 = load i32, i32* %289, align 4, !tbaa !48
  %291 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %267, i64 %288, i32 1
  %292 = load i32, i32* %291, align 4, !tbaa !46
  %293 = sext i32 %292 to i64
  %294 = sext i32 %290 to i64
  br label %295

295:                                              ; preds = %287, %295
  %296 = phi i64 [ 0, %287 ], [ %310, %295 ]
  %297 = phi i32 [ %285, %287 ], [ %312, %295 ]
  %298 = add nsw i64 %296, %293
  %299 = getelementptr inbounds [400 x [60009 x i64]], [400 x [60009 x i64]]* @qq, i64 0, i64 %278, i64 %298
  %300 = load i64, i64* %299, align 8, !tbaa !17
  %301 = add nsw i64 %296, %294
  %302 = getelementptr inbounds [400 x [60009 x i64]], [400 x [60009 x i64]]* @qq, i64 0, i64 %278, i64 %301
  %303 = load i64, i64* %302, align 8, !tbaa !17
  %304 = sext i32 %297 to i64
  %305 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64 %304
  %306 = load i64, i64* %305, align 8, !tbaa !17
  %307 = add i64 %300, 998244353
  %308 = sub i64 %307, %303
  %309 = add i64 %308, %306
  store i64 %309, i64* %305, align 8, !tbaa !17
  %310 = add nuw nsw i64 %296, 1
  %311 = getelementptr inbounds [60009 x i32], [60009 x i32]* @f, i64 0, i64 %304
  %312 = load i32, i32* %311, align 4, !tbaa !25
  %313 = icmp eq i64 %310, %286
  br i1 %313, label %314, label %295, !llvm.loop !90

314:                                              ; preds = %295
  %315 = add nuw nsw i64 %288, 1
  %316 = icmp eq i64 %315, %284
  br i1 %316, label %317, label %287, !llvm.loop !91

317:                                              ; preds = %314, %280, %266, %228
  %318 = add nuw nsw i64 %229, 1
  %319 = load i32, i32* @n, align 4, !tbaa !25
  %320 = sext i32 %319 to i64
  %321 = icmp slt i64 %318, %320
  br i1 %321, label %228, label %220, !llvm.loop !92

322:                                              ; preds = %379, %222
  %323 = phi i64 [ 0, %222 ], [ %380, %379 ]
  %324 = icmp eq i64 %224, 0
  br i1 %324, label %331, label %325

325:                                              ; preds = %322
  %326 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64 %323
  %327 = load i32, i32* %326, align 4, !tbaa !25
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %331

329:                                              ; preds = %325
  %330 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64 %323
  store i64 1, i64* %330, align 8, !tbaa !17
  br label %331

331:                                              ; preds = %322, %325, %329, %193, %201, %220
  %332 = phi i1 [ false, %220 ], [ false, %201 ], [ false, %193 ], [ %221, %329 ], [ %221, %325 ], [ %221, %322 ]
  %333 = phi i32 [ %319, %220 ], [ %216, %201 ], [ %194, %193 ], [ %319, %329 ], [ %319, %325 ], [ %319, %322 ]
  %334 = sext i32 %333 to i64
  br label %335

335:                                              ; preds = %344, %331
  %336 = phi i64 [ %345, %344 ], [ 1, %331 ]
  %337 = phi i32 [ %346, %344 ], [ 998244351, %331 ]
  %338 = phi i64 [ %348, %344 ], [ %334, %331 ]
  %339 = and i32 %337, 1
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %344, label %341

341:                                              ; preds = %335
  %342 = mul nsw i64 %338, %336
  %343 = srem i64 %342, 998244353
  br label %344

344:                                              ; preds = %341, %335
  %345 = phi i64 [ %343, %341 ], [ %336, %335 ]
  %346 = lshr i32 %337, 1
  %347 = mul nsw i64 %338, %338
  %348 = urem i64 %347, 998244353
  %349 = icmp ult i32 %337, 2
  br i1 %349, label %350, label %335, !llvm.loop !15

350:                                              ; preds = %344
  br i1 %332, label %365, label %364

351:                                              ; preds = %379, %226
  %352 = phi i64 [ 0, %226 ], [ %380, %379 ]
  %353 = phi i64 [ %227, %226 ], [ %381, %379 ]
  %354 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64 %352
  %355 = load i32, i32* %354, align 8, !tbaa !25
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %359

357:                                              ; preds = %351
  %358 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64 %352
  store i64 1, i64* %358, align 16, !tbaa !17
  br label %359

359:                                              ; preds = %351, %357
  %360 = or i64 %352, 1
  %361 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64 %360
  %362 = load i32, i32* %361, align 4, !tbaa !25
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %377, label %379

364:                                              ; preds = %365, %350
  ret i32 0

365:                                              ; preds = %350, %365
  %366 = phi i64 [ %373, %365 ], [ 0, %350 ]
  %367 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64 %366
  %368 = load i64, i64* %367, align 8, !tbaa !17
  %369 = srem i64 %368, 998244353
  %370 = mul nsw i64 %369, %345
  %371 = srem i64 %370, 998244353
  %372 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 %371)
  %373 = add nuw nsw i64 %366, 1
  %374 = load i32, i32* @n, align 4, !tbaa !25
  %375 = sext i32 %374 to i64
  %376 = icmp slt i64 %373, %375
  br i1 %376, label %365, label %364, !llvm.loop !93

377:                                              ; preds = %359
  %378 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64 %360
  store i64 1, i64* %378, align 8, !tbaa !17
  br label %379

379:                                              ; preds = %377, %359
  %380 = add nuw nsw i64 %352, 2
  %381 = add i64 %353, -2
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %322, label %351, !llvm.loop !94
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #10

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #11 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #20
  tail call void @_ZSt9terminatev() #21
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %1) local_unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"struct.std::_Rb_tree_node"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"struct.std::_Rb_tree_node"* [ %11, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 3
  %7 = bitcast %"struct.std::_Rb_tree_node_base"** %6 to %"struct.std::_Rb_tree_node"**
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8, !tbaa !95
  tail call void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %8)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 2
  %10 = bitcast %"struct.std::_Rb_tree_node_base"** %9 to %"struct.std::_Rb_tree_node"**
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8, !tbaa !96
  %12 = bitcast %"struct.std::_Rb_tree_node"* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %12) #20
  %13 = icmp eq %"struct.std::_Rb_tree_node"* %11, null
  br i1 %13, label %14, label %4, !llvm.loop !97

14:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #14

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #15

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #16

; Function Attrs: uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOiEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) %2, %"class.std::tuple"* nonnull align 8 dereferenceable(8) %3, %"class.std::tuple.12"* nonnull align 1 dereferenceable(1) %4) local_unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = tail call noalias nonnull i8* @_Znwm(i64 40) #22
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  %8 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8, !tbaa !98
  %10 = bitcast i8* %7 to i32*
  %11 = load i32, i32* %9, align 4, !tbaa !25
  store i32 %11, i32* %10, align 4, !tbaa !100
  %12 = getelementptr inbounds i8, i8* %6, i64 36
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4, !tbaa !102
  %14 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, i32* nonnull align 4 dereferenceable(4) %10)
          to label %15 unwind label %41

15:                                               ; preds = %5
  %16 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %14, 0
  %17 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %14, 1
  %18 = icmp eq %"struct.std::_Rb_tree_node_base"* %17, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %15
  %20 = icmp eq %"struct.std::_Rb_tree_node_base"* %16, null
  br i1 %20, label %21, label %31

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = bitcast i8* %23 to %"struct.std::_Rb_tree_node_base"*
  %25 = icmp eq %"struct.std::_Rb_tree_node_base"* %17, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %17, i64 1, i32 0
  %28 = load i32, i32* %10, align 4, !tbaa !25
  %29 = load i32, i32* %27, align 4, !tbaa !25
  %30 = icmp slt i32 %28, %29
  br label %31

31:                                               ; preds = %19, %26, %21
  %32 = phi i1 [ true, %21 ], [ %30, %26 ], [ true, %19 ]
  %33 = bitcast i8* %6 to %"struct.std::_Rb_tree_node_base"*
  %34 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i8* %35 to %"struct.std::_Rb_tree_node_base"*
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %32, %"struct.std::_Rb_tree_node_base"* nonnull %33, %"struct.std::_Rb_tree_node_base"* nonnull %17, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %36) #20
  %37 = getelementptr inbounds i8, i8* %34, i64 40
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !103
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8, !tbaa !103
  br label %46

41:                                               ; preds = %5
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  %44 = tail call i8* @__cxa_begin_catch(i8* %43) #20
  tail call void @_ZdlPv(i8* nonnull %6) #20
  invoke void @__cxa_rethrow() #23
          to label %54 unwind label %48

45:                                               ; preds = %15
  tail call void @_ZdlPv(i8* nonnull %6) #20
  br label %46

46:                                               ; preds = %45, %31
  %47 = phi %"struct.std::_Rb_tree_node_base"* [ %16, %45 ], [ %33, %31 ]
  ret %"struct.std::_Rb_tree_node_base"* %47

48:                                               ; preds = %41
  %49 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %50 unwind label %51

50:                                               ; preds = %48
  resume { i8*, i32 } %49

51:                                               ; preds = %48
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  tail call void @__clang_call_terminate(i8* %53) #21
  unreachable

54:                                               ; preds = %41
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, i32* nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #7 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Rb_tree_node_base"*
  %7 = icmp eq %"struct.std::_Rb_tree_node_base"* %6, %1
  br i1 %7, label %8, label %59

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %4, i64 40
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !103
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = load i32, i32* %2, align 4
  br label %23

15:                                               ; preds = %8
  %16 = getelementptr inbounds i8, i8* %4, i64 32
  %17 = bitcast i8* %16 to %"struct.std::_Rb_tree_node_base"**
  %18 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %17, align 8, !tbaa !66
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %18, i64 1, i32 0
  %20 = load i32, i32* %19, align 4, !tbaa !25
  %21 = load i32, i32* %2, align 4, !tbaa !25
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %167, label %23

23:                                               ; preds = %13, %15
  %24 = phi i32 [ %14, %13 ], [ %21, %15 ]
  %25 = getelementptr inbounds i8, i8* %4, i64 16
  %26 = bitcast i8* %25 to %"struct.std::_Rb_tree_node"**
  %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %26, align 8, !tbaa !66
  %28 = icmp eq %"struct.std::_Rb_tree_node"* %27, null
  br i1 %28, label %43, label %29

29:                                               ; preds = %23, %29
  %30 = phi %"struct.std::_Rb_tree_node"* [ %39, %29 ], [ %27, %23 ]
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %30, i64 0, i32 1
  %32 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %31 to i32*
  %33 = load i32, i32* %32, align 4, !tbaa !25
  %34 = icmp slt i32 %24, %33
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %30, i64 0, i32 0, i32 2
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %30, i64 0, i32 0, i32 3
  %37 = select i1 %34, %"struct.std::_Rb_tree_node_base"** %35, %"struct.std::_Rb_tree_node_base"** %36
  %38 = bitcast %"struct.std::_Rb_tree_node_base"** %37 to %"struct.std::_Rb_tree_node"**
  %39 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %38, align 8, !tbaa !66
  %40 = icmp eq %"struct.std::_Rb_tree_node"* %39, null
  br i1 %40, label %41, label %29, !llvm.loop !104

41:                                               ; preds = %29
  %42 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %30, i64 0, i32 0
  br i1 %34, label %43, label %51

43:                                               ; preds = %41, %23
  %44 = phi %"struct.std::_Rb_tree_node_base"* [ %42, %41 ], [ %1, %23 ]
  %45 = getelementptr inbounds i8, i8* %4, i64 24
  %46 = bitcast i8* %45 to %"struct.std::_Rb_tree_node_base"**
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8, !tbaa !105
  %48 = icmp eq %"struct.std::_Rb_tree_node_base"* %44, %47
  br i1 %48, label %167, label %49

49:                                               ; preds = %43
  %50 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %44) #24
  br label %51

51:                                               ; preds = %49, %41
  %52 = phi %"struct.std::_Rb_tree_node_base"* [ %44, %49 ], [ %42, %41 ]
  %53 = phi %"struct.std::_Rb_tree_node_base"* [ %50, %49 ], [ %42, %41 ]
  %54 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %53, i64 1, i32 0
  %55 = load i32, i32* %54, align 4, !tbaa !25
  %56 = icmp slt i32 %55, %24
  %57 = select i1 %56, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %53
  %58 = select i1 %56, %"struct.std::_Rb_tree_node_base"* %52, %"struct.std::_Rb_tree_node_base"* null
  br label %167

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %1, i64 1, i32 0
  %61 = load i32, i32* %2, align 4, !tbaa !25
  %62 = load i32, i32* %60, align 4, !tbaa !25
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %64, label %113

64:                                               ; preds = %59
  %65 = getelementptr inbounds i8, i8* %4, i64 24
  %66 = bitcast i8* %65 to %"struct.std::_Rb_tree_node_base"**
  %67 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %66, align 8, !tbaa !66
  %68 = icmp eq %"struct.std::_Rb_tree_node_base"* %67, %1
  br i1 %68, label %167, label %69

69:                                               ; preds = %64
  %70 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* nonnull %1) #24
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %70, i64 1, i32 0
  %72 = load i32, i32* %71, align 4, !tbaa !25
  %73 = icmp slt i32 %72, %61
  br i1 %73, label %74, label %81

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %70, i64 0, i32 3
  %76 = bitcast %"struct.std::_Rb_tree_node_base"** %75 to %"struct.std::_Rb_tree_node"**
  %77 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %76, align 8, !tbaa !95
  %78 = icmp eq %"struct.std::_Rb_tree_node"* %77, null
  %79 = select i1 %78, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %1
  %80 = select i1 %78, %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"* %1
  br label %167

81:                                               ; preds = %69
  %82 = getelementptr inbounds i8, i8* %4, i64 16
  %83 = bitcast i8* %82 to %"struct.std::_Rb_tree_node"**
  %84 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %83, align 8, !tbaa !66
  %85 = icmp eq %"struct.std::_Rb_tree_node"* %84, null
  br i1 %85, label %100, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"struct.std::_Rb_tree_node"* [ %96, %86 ], [ %84, %81 ]
  %88 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %87, i64 0, i32 1
  %89 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %88 to i32*
  %90 = load i32, i32* %89, align 4, !tbaa !25
  %91 = icmp slt i32 %61, %90
  %92 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %87, i64 0, i32 0, i32 2
  %93 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %87, i64 0, i32 0, i32 3
  %94 = select i1 %91, %"struct.std::_Rb_tree_node_base"** %92, %"struct.std::_Rb_tree_node_base"** %93
  %95 = bitcast %"struct.std::_Rb_tree_node_base"** %94 to %"struct.std::_Rb_tree_node"**
  %96 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %95, align 8, !tbaa !66
  %97 = icmp eq %"struct.std::_Rb_tree_node"* %96, null
  br i1 %97, label %98, label %86, !llvm.loop !104

98:                                               ; preds = %86
  %99 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %87, i64 0, i32 0
  br i1 %91, label %100, label %105

100:                                              ; preds = %98, %81
  %101 = phi %"struct.std::_Rb_tree_node_base"* [ %99, %98 ], [ %6, %81 ]
  %102 = icmp eq %"struct.std::_Rb_tree_node_base"* %101, %67
  br i1 %102, label %167, label %103

103:                                              ; preds = %100
  %104 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %101) #24
  br label %105

105:                                              ; preds = %103, %98
  %106 = phi %"struct.std::_Rb_tree_node_base"* [ %101, %103 ], [ %99, %98 ]
  %107 = phi %"struct.std::_Rb_tree_node_base"* [ %104, %103 ], [ %99, %98 ]
  %108 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %107, i64 1, i32 0
  %109 = load i32, i32* %108, align 4, !tbaa !25
  %110 = icmp slt i32 %109, %61
  %111 = select i1 %110, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %107
  %112 = select i1 %110, %"struct.std::_Rb_tree_node_base"* %106, %"struct.std::_Rb_tree_node_base"* null
  br label %167

113:                                              ; preds = %59
  %114 = icmp slt i32 %62, %61
  br i1 %114, label %115, label %167

115:                                              ; preds = %113
  %116 = getelementptr inbounds i8, i8* %4, i64 32
  %117 = bitcast i8* %116 to %"struct.std::_Rb_tree_node_base"**
  %118 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %117, align 8, !tbaa !66
  %119 = icmp eq %"struct.std::_Rb_tree_node_base"* %118, %1
  br i1 %119, label %167, label %120

120:                                              ; preds = %115
  %121 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* nonnull %1) #24
  %122 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %121, i64 1, i32 0
  %123 = load i32, i32* %122, align 4, !tbaa !25
  %124 = icmp slt i32 %61, %123
  br i1 %124, label %125, label %132

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %1, i64 0, i32 3
  %127 = bitcast %"struct.std::_Rb_tree_node_base"** %126 to %"struct.std::_Rb_tree_node"**
  %128 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %127, align 8, !tbaa !95
  %129 = icmp eq %"struct.std::_Rb_tree_node"* %128, null
  %130 = select i1 %129, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %121
  %131 = select i1 %129, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"* %121
  br label %167

132:                                              ; preds = %120
  %133 = getelementptr inbounds i8, i8* %4, i64 16
  %134 = bitcast i8* %133 to %"struct.std::_Rb_tree_node"**
  %135 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %134, align 8, !tbaa !66
  %136 = icmp eq %"struct.std::_Rb_tree_node"* %135, null
  br i1 %136, label %151, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"struct.std::_Rb_tree_node"* [ %147, %137 ], [ %135, %132 ]
  %139 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %138, i64 0, i32 1
  %140 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %139 to i32*
  %141 = load i32, i32* %140, align 4, !tbaa !25
  %142 = icmp slt i32 %61, %141
  %143 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %138, i64 0, i32 0, i32 2
  %144 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %138, i64 0, i32 0, i32 3
  %145 = select i1 %142, %"struct.std::_Rb_tree_node_base"** %143, %"struct.std::_Rb_tree_node_base"** %144
  %146 = bitcast %"struct.std::_Rb_tree_node_base"** %145 to %"struct.std::_Rb_tree_node"**
  %147 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %146, align 8, !tbaa !66
  %148 = icmp eq %"struct.std::_Rb_tree_node"* %147, null
  br i1 %148, label %149, label %137, !llvm.loop !104

149:                                              ; preds = %137
  %150 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %138, i64 0, i32 0
  br i1 %142, label %151, label %159

151:                                              ; preds = %149, %132
  %152 = phi %"struct.std::_Rb_tree_node_base"* [ %150, %149 ], [ %6, %132 ]
  %153 = getelementptr inbounds i8, i8* %4, i64 24
  %154 = bitcast i8* %153 to %"struct.std::_Rb_tree_node_base"**
  %155 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %154, align 8, !tbaa !105
  %156 = icmp eq %"struct.std::_Rb_tree_node_base"* %152, %155
  br i1 %156, label %167, label %157

157:                                              ; preds = %151
  %158 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %152) #24
  br label %159

159:                                              ; preds = %157, %149
  %160 = phi %"struct.std::_Rb_tree_node_base"* [ %152, %157 ], [ %150, %149 ]
  %161 = phi %"struct.std::_Rb_tree_node_base"* [ %158, %157 ], [ %150, %149 ]
  %162 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %161, i64 1, i32 0
  %163 = load i32, i32* %162, align 4, !tbaa !25
  %164 = icmp slt i32 %163, %61
  %165 = select i1 %164, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %161
  %166 = select i1 %164, %"struct.std::_Rb_tree_node_base"* %160, %"struct.std::_Rb_tree_node_base"* null
  br label %167

167:                                              ; preds = %159, %151, %105, %100, %51, %43, %125, %74, %113, %115, %64, %15
  %168 = phi %"struct.std::_Rb_tree_node_base"* [ null, %15 ], [ %1, %64 ], [ null, %115 ], [ %1, %113 ], [ %79, %74 ], [ %130, %125 ], [ %57, %51 ], [ null, %43 ], [ %111, %105 ], [ null, %100 ], [ %165, %159 ], [ null, %151 ]
  %169 = phi %"struct.std::_Rb_tree_node_base"* [ %18, %15 ], [ %1, %64 ], [ %1, %115 ], [ null, %113 ], [ %80, %74 ], [ %131, %125 ], [ %58, %51 ], [ %44, %43 ], [ %112, %105 ], [ %67, %100 ], [ %166, %159 ], [ %152, %151 ]
  %170 = insertvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } undef, %"struct.std::_Rb_tree_node_base"* %168, 0
  %171 = insertvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %170, %"struct.std::_Rb_tree_node_base"* %169, 1
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %171
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #17

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #17

; Function Attrs: nounwind
declare dso_local void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #14

; Function Attrs: uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) %2, %"class.std::tuple.18"* nonnull align 8 dereferenceable(8) %3, %"class.std::tuple.12"* nonnull align 1 dereferenceable(1) %4) local_unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = tail call noalias nonnull i8* @_Znwm(i64 40) #22
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  %8 = getelementptr inbounds %"class.std::tuple.18", %"class.std::tuple.18"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8, !tbaa !106
  %10 = bitcast i8* %7 to i32*
  %11 = load i32, i32* %9, align 4, !tbaa !25
  store i32 %11, i32* %10, align 4, !tbaa !100
  %12 = getelementptr inbounds i8, i8* %6, i64 36
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4, !tbaa !102
  %14 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, i32* nonnull align 4 dereferenceable(4) %10)
          to label %15 unwind label %41

15:                                               ; preds = %5
  %16 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %14, 0
  %17 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %14, 1
  %18 = icmp eq %"struct.std::_Rb_tree_node_base"* %17, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %15
  %20 = icmp eq %"struct.std::_Rb_tree_node_base"* %16, null
  br i1 %20, label %21, label %31

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = bitcast i8* %23 to %"struct.std::_Rb_tree_node_base"*
  %25 = icmp eq %"struct.std::_Rb_tree_node_base"* %17, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %17, i64 1, i32 0
  %28 = load i32, i32* %10, align 4, !tbaa !25
  %29 = load i32, i32* %27, align 4, !tbaa !25
  %30 = icmp slt i32 %28, %29
  br label %31

31:                                               ; preds = %19, %26, %21
  %32 = phi i1 [ true, %21 ], [ %30, %26 ], [ true, %19 ]
  %33 = bitcast i8* %6 to %"struct.std::_Rb_tree_node_base"*
  %34 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i8* %35 to %"struct.std::_Rb_tree_node_base"*
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %32, %"struct.std::_Rb_tree_node_base"* nonnull %33, %"struct.std::_Rb_tree_node_base"* nonnull %17, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %36) #20
  %37 = getelementptr inbounds i8, i8* %34, i64 40
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !103
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8, !tbaa !103
  br label %46

41:                                               ; preds = %5
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  %44 = tail call i8* @__cxa_begin_catch(i8* %43) #20
  tail call void @_ZdlPv(i8* nonnull %6) #20
  invoke void @__cxa_rethrow() #23
          to label %54 unwind label %48

45:                                               ; preds = %15
  tail call void @_ZdlPv(i8* nonnull %6) #20
  br label %46

46:                                               ; preds = %45, %31
  %47 = phi %"struct.std::_Rb_tree_node_base"* [ %16, %45 ], [ %33, %31 ]
  ret %"struct.std::_Rb_tree_node_base"* %47

48:                                               ; preds = %41
  %49 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %50 unwind label %51

50:                                               ; preds = %48
  resume { i8*, i32 } %49

51:                                               ; preds = %48
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  tail call void @__clang_call_terminate(i8* %53) #21
  unreachable

54:                                               ; preds = %41
  unreachable
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_DefiniteRandomWalks.cpp() #7 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #20
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1440216) bitcast ([60009 x %"class.std::vector"]* @QWQ to i8*), i8 0, i64 1440216, i1 false) #20
  %2 = tail call i32 @__cxa_atexit(void (i8*)* nonnull @__cxx_global_array_dtor, i8* null, i8* nonnull @__dso_handle) #20
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1440216) bitcast ([60009 x %"class.std::vector.0"]* @G to i8*), i8 0, i64 1440216, i1 false) #20
  %3 = tail call i32 @__cxa_atexit(void (i8*)* nonnull @__cxx_global_array_dtor.3, i8* null, i8* nonnull @__dso_handle) #20
  store i32 0, i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0), align 8, !tbaa !108
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1), align 8, !tbaa !10
  store i8* bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to i8*), i8** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2) to i8**), align 8, !tbaa !105
  store i8* bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to i8*), i8** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 3) to i8**), align 8, !tbaa !109
  store i64 0, i64* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 1, i32 1), align 8, !tbaa !103
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::map"*)* @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::map", %"class.std::map"* @maa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i8* nonnull @__dso_handle) #20
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #18

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #19

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #6 = { mustprogress nofree norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { noinline noreturn nounwind }
attributes #12 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #15 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { argmemonly nofree nounwind willreturn writeonly }
attributes #19 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #20 = { nounwind }
attributes #21 = { noreturn nounwind }
attributes #22 = { allocsize(0) }
attributes #23 = { noreturn }
attributes #24 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSNSt12_Vector_baseISt4pairIiiESaIS1_EE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !5, i64 0}
!9 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!10 = !{!11, !5, i64 8}
!11 = !{!"_ZTSSt15_Rb_tree_header", !12, i64 0, !14, i64 32}
!12 = !{!"_ZTSSt18_Rb_tree_node_base", !13, i64 0, !5, i64 8, !5, i64 16, !5, i64 24}
!13 = !{!"_ZTSSt14_Rb_tree_color", !6, i64 0}
!14 = !{!"long", !6, i64 0}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.mustprogress"}
!17 = !{!18, !18, i64 0}
!18 = !{!"long long", !6, i64 0}
!19 = distinct !{!19, !16}
!20 = distinct !{!20, !16}
!21 = distinct !{!21, !16}
!22 = distinct !{!22, !16}
!23 = distinct !{!23, !16}
!24 = distinct !{!24, !16}
!25 = !{!26, !26, i64 0}
!26 = !{!"int", !6, i64 0}
!27 = distinct !{!27, !16}
!28 = distinct !{!28, !16}
!29 = distinct !{!29, !16}
!30 = distinct !{!30, !16}
!31 = distinct !{!31, !16, !32}
!32 = !{!"llvm.loop.peeled.count", i32 1}
!33 = distinct !{!33, !16}
!34 = !{!4, !5, i64 8}
!35 = !{!4, !5, i64 16}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !16, !42}
!42 = !{!"llvm.loop.isvectorized", i32 1}
!43 = distinct !{!43, !44}
!44 = !{!"llvm.loop.unroll.disable"}
!45 = distinct !{!45, !16, !42}
!46 = !{!47, !26, i64 4}
!47 = !{!"_ZTSSt4pairIiiE", !26, i64 0, !26, i64 4}
!48 = !{!47, !26, i64 0}
!49 = distinct !{!49, !16, !32}
!50 = distinct !{!50, !16}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !16, !42}
!57 = distinct !{!57, !44}
!58 = distinct !{!58, !16, !42}
!59 = distinct !{!59, !16}
!60 = !{!61, !61, i64 0}
!61 = !{!"bool", !6, i64 0}
!62 = !{i8 0, i8 2}
!63 = distinct !{!63, !16}
!64 = distinct !{!64, !16}
!65 = distinct !{!65, !16}
!66 = !{!5, !5, i64 0}
!67 = distinct !{!67, !16}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_: argument 0"}
!70 = distinct !{!70, !"_ZSt16forward_as_tupleIJiEESt5tupleIJDpOT_EES3_"}
!71 = !{!9, !5, i64 8}
!72 = distinct !{!72, !16}
!73 = distinct !{!73, !16}
!74 = distinct !{!74, !16}
!75 = distinct !{!75, !16}
!76 = distinct !{!76, !16}
!77 = distinct !{!77, !16}
!78 = distinct !{!78, !16}
!79 = distinct !{!79, !16}
!80 = distinct !{!80, !16}
!81 = distinct !{!81, !16}
!82 = !{!9, !5, i64 16}
!83 = distinct !{!83, !16}
!84 = distinct !{!84, !16}
!85 = distinct !{!85, !16}
!86 = distinct !{!86, !16}
!87 = distinct !{!87, !16}
!88 = distinct !{!88, !16}
!89 = distinct !{!89, !16}
!90 = distinct !{!90, !16}
!91 = distinct !{!91, !16}
!92 = distinct !{!92, !16}
!93 = distinct !{!93, !16}
!94 = distinct !{!94, !16}
!95 = !{!12, !5, i64 24}
!96 = !{!12, !5, i64 16}
!97 = distinct !{!97, !16}
!98 = !{!99, !5, i64 0}
!99 = !{!"_ZTSSt10_Head_baseILm0EOiLb0EE", !5, i64 0}
!100 = !{!101, !26, i64 0}
!101 = !{!"_ZTSSt4pairIKiiE", !26, i64 0, !26, i64 4}
!102 = !{!101, !26, i64 4}
!103 = !{!11, !14, i64 32}
!104 = distinct !{!104, !16}
!105 = !{!11, !5, i64 16}
!106 = !{!107, !5, i64 0}
!107 = !{!"_ZTSSt10_Head_baseILm0ERKiLb0EE", !5, i64 0}
!108 = !{!11, !13, i64 0}
!109 = !{!11, !5, i64 24}
