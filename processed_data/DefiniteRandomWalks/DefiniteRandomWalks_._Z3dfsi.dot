digraph "CFG for '_Z3dfsi' function" {
	label="CFG for '_Z3dfsi' function";

	Node0x55aa39b9a850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%1:\l  %2 = alloca %\"class.std::tuple\", align 8\l  %3 = alloca %\"class.std::tuple.12\", align 1\l  %4 = alloca i32, align 4\l  %5 = sext i32 %0 to i64\l  %6 = getelementptr inbounds [60009 x i8], [60009 x i8]* @vc, i64 0, i64 %5\l  %7 = load i8, i8* %6, align 1, !tbaa !3, !range !7\l  %8 = icmp eq i8 %7, 0\l  br i1 %8, label %14, label %141\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b9a850:s0 -> Node0x55aa39b9a9f0;
	Node0x55aa39b9a850:s1 -> Node0x55aa39b9ae00;
	Node0x55aa39b9af40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%9:\l9:                                                \l  %10 = trunc i64 %19 to i32\l  %11 = icmp eq i32 %10, 0\l  br i1 %11, label %141, label %12\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b9af40:s0 -> Node0x55aa39b9ae00;
	Node0x55aa39b9af40:s1 -> Node0x55aa39b9b0d0;
	Node0x55aa39b9b0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%12:\l12:                                               \l  %13 = and i64 %19, 4294967295\l  br label %27\l}"];
	Node0x55aa39b9b0d0 -> Node0x55aa39b9b2a0;
	Node0x55aa39b9a9f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = phi i64 [ %19, %14 ], [ 0, %1 ]\l  %16 = phi i8* [ %24, %14 ], [ %6, %1 ]\l  %17 = phi i64 [ %23, %14 ], [ %5, %1 ]\l  %18 = phi i32 [ %22, %14 ], [ %0, %1 ]\l  %19 = add nuw i64 %15, 1\l  %20 = getelementptr inbounds [60009 x i32], [60009 x i32]* @pa, i64 0, i64\l... %15\l  store i32 %18, i32* %20, align 4, !tbaa !8\l  store i8 1, i8* %16, align 1, !tbaa !3\l  %21 = getelementptr inbounds [60009 x i32], [60009 x i32]* @f, i64 0, i64 %17\l  %22 = load i32, i32* %21, align 4, !tbaa !8\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds [60009 x i8], [60009 x i8]* @vc, i64 0, i64 %23\l  %25 = load i8, i8* %24, align 1, !tbaa !3, !range !7\l  %26 = icmp eq i8 %25, 0\l  br i1 %26, label %14, label %9, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b9a9f0:s0 -> Node0x55aa39b9a9f0;
	Node0x55aa39b9a9f0:s1 -> Node0x55aa39b9af40;
	Node0x55aa39b9b2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%27:\l27:                                               \l  %28 = phi i64 [ 0, %12 ], [ %33, %32 ]\l  %29 = getelementptr inbounds [60009 x i32], [60009 x i32]* @pa, i64 0, i64\l... %28\l  %30 = load i32, i32* %29, align 4, !tbaa !8\l  %31 = icmp eq i32 %30, %22\l  br i1 %31, label %35, label %32\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b9b2a0:s0 -> Node0x55aa39ba4ec0;
	Node0x55aa39b9b2a0:s1 -> Node0x55aa39ba4c00;
	Node0x55aa39ba4c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%32:\l32:                                               \l  %33 = add nuw nsw i64 %28, 1\l  %34 = icmp eq i64 %33, %13\l  br i1 %34, label %141, label %27, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55aa39ba4c00:s0 -> Node0x55aa39b9ae00;
	Node0x55aa39ba4c00:s1 -> Node0x55aa39b9b2a0;
	Node0x55aa39ba4ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%35:\l35:                                               \l  %36 = trunc i64 %28 to i32\l  %37 = sub nsw i32 %10, %36\l  %38 = icmp ugt i32 %10, %36\l  br i1 %38, label %39, label %62\l|{<s0>T|<s1>F}}"];
	Node0x55aa39ba4ec0:s0 -> Node0x55aa39ba53e0;
	Node0x55aa39ba4ec0:s1 -> Node0x55aa39ba5430;
	Node0x55aa39ba53e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%39:\l39:                                               \l  %40 = sext i32 %22 to i64\l  %41 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64\l... %40\l  store i32 %37, i32* %41, align 4, !tbaa !8\l  %42 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64\l... %40\l  store i64 1, i64* %42, align 8, !tbaa !13\l  %43 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64\l... %40\l  store i32 -1, i32* %43, align 4, !tbaa !8\l  %44 = add nuw nsw i64 %28, 1\l  %45 = icmp eq i64 %44, %13\l  br i1 %45, label %62, label %46, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55aa39ba53e0:s0 -> Node0x55aa39ba5430;
	Node0x55aa39ba53e0:s1 -> Node0x55aa39b897f0;
	Node0x55aa39b897f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%46:\l46:                                               \l  %47 = sub i64 %15, %28\l  %48 = add nsw i64 %13, -2\l  %49 = and i64 %47, 1\l  %50 = icmp eq i64 %49, 0\l  br i1 %50, label %59, label %51\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b897f0:s0 -> Node0x55aa39b89c50;
	Node0x55aa39b897f0:s1 -> Node0x55aa39b89ca0;
	Node0x55aa39b89ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%51:\l51:                                               \l  %52 = getelementptr inbounds [60009 x i32], [60009 x i32]* @pa, i64 0, i64\l... %44\l  %53 = load i32, i32* %52, align 4, !tbaa !8\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64\l... %54\l  store i32 %37, i32* %55, align 4, !tbaa !8\l  %56 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64\l... %54\l  store i64 1, i64* %56, align 8, !tbaa !13\l  %57 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64\l... %54\l  store i32 -1, i32* %57, align 4, !tbaa !8\l  %58 = add nuw nsw i64 %28, 2\l  br label %59\l}"];
	Node0x55aa39b89ca0 -> Node0x55aa39b89c50;
	Node0x55aa39b89c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%59:\l59:                                               \l  %60 = phi i64 [ %44, %46 ], [ %58, %51 ]\l  %61 = icmp eq i64 %48, %28\l  br i1 %61, label %62, label %86\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b89c50:s0 -> Node0x55aa39ba5430;
	Node0x55aa39b89c50:s1 -> Node0x55aa39b90300;
	Node0x55aa39ba5430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%62:\l62:                                               \l  %63 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... bitcast (%\"struct.std::_Rb_tree_node_base\"** getelementptr inbounds\l... (%\"class.std::map\", %\"class.std::map\"* @maa, i64 0, i32 0, i32 0, i32 1, i32\l... 0, i32 1) to %\"struct.std::_Rb_tree_node\"**), align 8, !tbaa !16\l  %64 = icmp eq %\"struct.std::_Rb_tree_node\"* %63, null\l  br i1 %64, label %103, label %65\l|{<s0>T|<s1>F}}"];
	Node0x55aa39ba5430:s0 -> Node0x55aa39b90b30;
	Node0x55aa39ba5430:s1 -> Node0x55aa39b90b80;
	Node0x55aa39b90b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%65:\l65:                                               \l  %66 = phi %\"struct.std::_Rb_tree_node\"* [ %78, %65 ], [ %63, %62 ]\l  %67 = phi %\"struct.std::_Rb_tree_node_base\"* [ %75, %65 ], [ bitcast (i32*\l... getelementptr inbounds (%\"class.std::map\", %\"class.std::map\"* @maa, i64 0,\l... i32 0, i32 0, i32 1, i32 0, i32 0) to %\"struct.std::_Rb_tree_node_base\"*),\l... %62 ]\l  %68 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %66, i64 0, i32 1\l  %69 = bitcast %\"struct.__gnu_cxx::__aligned_membuf\"* %68 to i32*\l  %70 = load i32, i32* %69, align 4, !tbaa !8\l  %71 = icmp slt i32 %70, %37\l  %72 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %66, i64 0, i32 0, i32 3\l  %73 = getelementptr %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %66, i64 0, i32 0\l  %74 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %66, i64 0, i32 0, i32 2\l  %75 = select i1 %71, %\"struct.std::_Rb_tree_node_base\"* %67,\l... %\"struct.std::_Rb_tree_node_base\"* %73\l  %76 = select i1 %71, %\"struct.std::_Rb_tree_node_base\"** %72,\l... %\"struct.std::_Rb_tree_node_base\"** %74\l  %77 = bitcast %\"struct.std::_Rb_tree_node_base\"** %76 to\l... %\"struct.std::_Rb_tree_node\"**\l  %78 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %77, align 8, !tbaa !22\l  %79 = icmp eq %\"struct.std::_Rb_tree_node\"* %78, null\l  br i1 %79, label %80, label %65, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b90b80:s0 -> Node0x55aa39b91f50;
	Node0x55aa39b90b80:s1 -> Node0x55aa39b90b80;
	Node0x55aa39b91f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%80:\l80:                                               \l  %81 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %75, bitcast (i32*\l... getelementptr inbounds (%\"class.std::map\", %\"class.std::map\"* @maa, i64 0,\l... i32 0, i32 0, i32 1, i32 0, i32 0) to %\"struct.std::_Rb_tree_node_base\"*)\l  br i1 %81, label %103, label %82\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b91f50:s0 -> Node0x55aa39b90b30;
	Node0x55aa39b91f50:s1 -> Node0x55aa39b92200;
	Node0x55aa39b92200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %75, i64 1, i32 0\l  %84 = load i32, i32* %83, align 4, !tbaa !8\l  %85 = icmp slt i32 %37, %84\l  br i1 %85, label %103, label %141\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b92200:s0 -> Node0x55aa39b90b30;
	Node0x55aa39b92200:s1 -> Node0x55aa39b9ae00;
	Node0x55aa39b90300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%86:\l86:                                               \l  %87 = phi i64 [ %101, %86 ], [ %60, %59 ]\l  %88 = getelementptr inbounds [60009 x i32], [60009 x i32]* @pa, i64 0, i64\l... %87\l  %89 = load i32, i32* %88, align 4, !tbaa !8\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64\l... %90\l  store i32 %37, i32* %91, align 4, !tbaa !8\l  %92 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64\l... %90\l  store i64 1, i64* %92, align 8, !tbaa !13\l  %93 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64\l... %90\l  store i32 -1, i32* %93, align 4, !tbaa !8\l  %94 = add nuw nsw i64 %87, 1\l  %95 = getelementptr inbounds [60009 x i32], [60009 x i32]* @pa, i64 0, i64\l... %94\l  %96 = load i32, i32* %95, align 4, !tbaa !8\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds [60009 x i32], [60009 x i32]* @siz, i64 0, i64\l... %97\l  store i32 %37, i32* %98, align 4, !tbaa !8\l  %99 = getelementptr inbounds [60009 x i64], [60009 x i64]* @ans, i64 0, i64\l... %97\l  store i64 1, i64* %99, align 8, !tbaa !13\l  %100 = getelementptr inbounds [60009 x i32], [60009 x i32]* @vis, i64 0, i64\l... %97\l  store i32 -1, i32* %100, align 4, !tbaa !8\l  %101 = add nuw nsw i64 %87, 2\l  %102 = icmp eq i64 %101, %13\l  br i1 %102, label %62, label %86, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b90300:s0 -> Node0x55aa39ba5430;
	Node0x55aa39b90300:s1 -> Node0x55aa39b90300;
	Node0x55aa39b90b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%103:\l103:                                              \l  %104 = load i32, i32* @macnt, align 4, !tbaa !8\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds [400 x i32], [400 x i32]* @idid, i64 0, i64\l... %105\l  store i32 %37, i32* %106, align 4, !tbaa !8\l  %107 = add nsw i32 %104, 1\l  store i32 %107, i32* @macnt, align 4, !tbaa !8\l  %108 = bitcast i32* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #20\l  store i32 %37, i32* %4, align 4, !tbaa !8\l  br i1 %64, label %130, label %109\l|{<s0>T|<s1>F}}"];
	Node0x55aa39b90b30:s0 -> Node0x55aa39bacd30;
	Node0x55aa39b90b30:s1 -> Node0x55aa39bacd80;
	Node0x55aa39bacd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%109:\l109:                                              \l  %110 = phi %\"struct.std::_Rb_tree_node\"* [ %122, %109 ], [ %63, %103 ]\l  %111 = phi %\"struct.std::_Rb_tree_node_base\"* [ %119, %109 ], [ bitcast\l... (i32* getelementptr inbounds (%\"class.std::map\", %\"class.std::map\"* @maa, i64\l... 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %\"struct.std::_Rb_tree_node_base\"*),\l... %103 ]\l  %112 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %110, i64 0, i32 1\l  %113 = bitcast %\"struct.__gnu_cxx::__aligned_membuf\"* %112 to i32*\l  %114 = load i32, i32* %113, align 4, !tbaa !8\l  %115 = icmp slt i32 %114, %37\l  %116 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %110, i64 0, i32 0, i32 3\l  %117 = getelementptr %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %110, i64 0, i32 0\l  %118 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %110, i64 0, i32 0, i32 2\l  %119 = select i1 %115, %\"struct.std::_Rb_tree_node_base\"* %111,\l... %\"struct.std::_Rb_tree_node_base\"* %117\l  %120 = select i1 %115, %\"struct.std::_Rb_tree_node_base\"** %116,\l... %\"struct.std::_Rb_tree_node_base\"** %118\l  %121 = bitcast %\"struct.std::_Rb_tree_node_base\"** %120 to\l... %\"struct.std::_Rb_tree_node\"**\l  %122 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %121, align 8, !tbaa !22\l  %123 = icmp eq %\"struct.std::_Rb_tree_node\"* %122, null\l  br i1 %123, label %124, label %109, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x55aa39bacd80:s0 -> Node0x55aa39baddb0;
	Node0x55aa39bacd80:s1 -> Node0x55aa39bacd80;
	Node0x55aa39baddb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%124:\l124:                                              \l  %125 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %119, bitcast (i32*\l... getelementptr inbounds (%\"class.std::map\", %\"class.std::map\"* @maa, i64 0,\l... i32 0, i32 0, i32 1, i32 0, i32 0) to %\"struct.std::_Rb_tree_node_base\"*)\l  br i1 %125, label %130, label %126\l|{<s0>T|<s1>F}}"];
	Node0x55aa39baddb0:s0 -> Node0x55aa39bacd30;
	Node0x55aa39baddb0:s1 -> Node0x55aa39bae550;
	Node0x55aa39bae550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%126:\l126:                                              \l  %127 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %119, i64 1, i32 0\l  %128 = load i32, i32* %127, align 4, !tbaa !8\l  %129 = icmp slt i32 %37, %128\l  br i1 %129, label %130, label %136\l|{<s0>T|<s1>F}}"];
	Node0x55aa39bae550:s0 -> Node0x55aa39bacd30;
	Node0x55aa39bae550:s1 -> Node0x55aa39baf020;
	Node0x55aa39bacd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%130:\l130:                                              \l  %131 = phi %\"struct.std::_Rb_tree_node_base\"* [ %119, %126 ], [ bitcast\l... (i32* getelementptr inbounds (%\"class.std::map\", %\"class.std::map\"* @maa, i64\l... 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %\"struct.std::_Rb_tree_node_base\"*),\l... %124 ], [ bitcast (i32* getelementptr inbounds (%\"class.std::map\",\l... %\"class.std::map\"* @maa, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to\l... %\"struct.std::_Rb_tree_node_base\"*), %103 ]\l  %132 = bitcast %\"class.std::tuple\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #20\l  %133 = getelementptr inbounds %\"class.std::tuple\", %\"class.std::tuple\"* %2,\l... i64 0, i32 0, i32 0, i32 0\l  store i32* %4, i32** %133, align 8, !tbaa !22, !alias.scope !24\l  %134 = getelementptr inbounds %\"class.std::tuple.12\",\l... %\"class.std::tuple.12\"* %3, i64 0, i32 0\l  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %134) #20\l  %135 = call %\"struct.std::_Rb_tree_node_base\"*\l... @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE22_M_emplace\l..._hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOiEESD_IJEEEEESt17_Rb_tree_i\l...teratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%\"class.std::_Rb_tree\"*\l... nonnull align 8 dereferenceable(48) getelementptr inbounds\l... (%\"class.std::map\", %\"class.std::map\"* @maa, i64 0, i32 0),\l... %\"struct.std::_Rb_tree_node_base\"* %131,\l... %\"struct.std::piecewise_construct_t\"* nonnull align 1 dereferenceable(1)\l... @_ZStL19piecewise_construct, %\"class.std::tuple\"* nonnull align 8\l... dereferenceable(8) %2, %\"class.std::tuple.12\"* nonnull align 1\l... dereferenceable(1) %3)\l  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %134) #20\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #20\l  br label %136\l}"];
	Node0x55aa39bacd30 -> Node0x55aa39baf020;
	Node0x55aa39baf020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%136:\l136:                                              \l  %137 = phi %\"struct.std::_Rb_tree_node_base\"* [ %135, %130 ], [ %119, %126 ]\l  %138 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %137, i64 1\l  %139 = bitcast %\"struct.std::_Rb_tree_node_base\"* %138 to\l... %\"struct.std::pair.8\"*\l  %140 = getelementptr inbounds %\"struct.std::pair.8\", %\"struct.std::pair.8\"*\l... %139, i64 0, i32 1\l  store i32 %104, i32* %140, align 4, !tbaa !8\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #20\l  br label %141\l}"];
	Node0x55aa39baf020 -> Node0x55aa39b9ae00;
	Node0x55aa39b9ae00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%141:\l141:                                              \l  ret void\l}"];
}
