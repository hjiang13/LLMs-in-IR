digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x557e62c18b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%0:\l  %1 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %2 = alloca %\"class.std::__cxx11::basic_string\", align 8\l  %3 = alloca [26 x i32], align 16\l  %4 = bitcast [26 x i32]* %3 to i8*\l  %5 = alloca [26 x i32], align 16\l  %6 = bitcast [26 x i32]* %5 to i8*\l  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %8 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([27 x\l... i8], [27 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %7)\l  %9 = bitcast %\"class.std::__cxx11::basic_string\"* %1 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10\l  %10 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 2\l  %11 = bitcast %\"class.std::__cxx11::basic_string\"* %1 to %union.anon**\l  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !7\l  %12 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 1\l  store i64 0, i64* %12, align 8, !tbaa !9\l  %13 = bitcast %union.anon* %10 to i8*\l  store i8 0, i8* %13, align 8, !tbaa !12\l  %14 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #10\l  %15 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 2\l  %16 = bitcast %\"class.std::__cxx11::basic_string\"* %2 to %union.anon**\l  store %union.anon* %15, %union.anon** %16, align 8, !tbaa !7\l  %17 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 1\l  store i64 0, i64* %17, align 8, !tbaa !9\l  %18 = bitcast %union.anon* %15 to i8*\l  store i8 0, i8* %18, align 8, !tbaa !12\l  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %4) #10\l  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %6) #10\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16\l... dereferenceable(104) %6, i8 0, i64 104, i1 false)\l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16\l... dereferenceable(104) %4, i8 0, i64 104, i1 false)\l  %19 = invoke nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"*\l... @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112bas\l...ic_stringIS4_S5_T1_EE(%\"class.std::basic_istream\"* nonnull align 8\l... dereferenceable(16) @_ZSt3cin, %\"class.std::__cxx11::basic_string\"* nonnull\l... align 8 dereferenceable(32) %1)\l          to label %20 unwind label %53\l}"];
	Node0x557e62c18b50 -> Node0x557e62c1d8d0;
	Node0x557e62c18b50 -> Node0x557e62c1d960;
	Node0x557e62c1d8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%20:\l20:                                               \l  %21 = invoke nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"*\l... @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112bas\l...ic_stringIS4_S5_T1_EE(%\"class.std::basic_istream\"* nonnull align 8\l... dereferenceable(16) @_ZSt3cin, %\"class.std::__cxx11::basic_string\"* nonnull\l... align 8 dereferenceable(32) %2)\l          to label %22 unwind label %53\l}"];
	Node0x557e62c1d8d0 -> Node0x557e62c1dca0;
	Node0x557e62c1d8d0 -> Node0x557e62c1d960;
	Node0x557e62c1dca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%22:\l22:                                               \l  %23 = load i64, i64* %12, align 8, !tbaa !9\l  %24 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 0, i32 0\l  %25 = load i8*, i8** %24, align 8\l  %26 = icmp eq i64 %23, 0\l  br i1 %26, label %43, label %27\l|{<s0>T|<s1>F}}"];
	Node0x557e62c1dca0:s0 -> Node0x557e62c1df40;
	Node0x557e62c1dca0:s1 -> Node0x557e62c1df90;
	Node0x557e62c1df90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%27:\l27:                                               \l  %28 = and i64 %23, 1\l  %29 = icmp eq i64 %23, 1\l  br i1 %29, label %32, label %30\l|{<s0>T|<s1>F}}"];
	Node0x557e62c1df90:s0 -> Node0x557e62c1e220;
	Node0x557e62c1df90:s1 -> Node0x557e62c1e270;
	Node0x557e62c1e270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%30:\l30:                                               \l  %31 = and i64 %23, -2\l  br label %55\l}"];
	Node0x557e62c1e270 -> Node0x557e62c1e470;
	Node0x557e62c1e220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%32:\l32:                                               \l  %33 = phi i64 [ 0, %27 ], [ %73, %55 ]\l  %34 = icmp eq i64 %28, 0\l  br i1 %34, label %43, label %35\l|{<s0>T|<s1>F}}"];
	Node0x557e62c1e220:s0 -> Node0x557e62c1df40;
	Node0x557e62c1e220:s1 -> Node0x557e62c1e8b0;
	Node0x557e62c1e8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds i8, i8* %25, i64 %33\l  %37 = load i8, i8* %36, align 1, !tbaa !12\l  %38 = sext i8 %37 to i64\l  %39 = add nsw i64 %38, -97\l  %40 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 %39\l  %41 = load i32, i32* %40, align 4, !tbaa !13\l  %42 = add nsw i32 %41, 1\l  store i32 %42, i32* %40, align 4, !tbaa !13\l  br label %43\l}"];
	Node0x557e62c1e8b0 -> Node0x557e62c1df40;
	Node0x557e62c1df40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%43:\l43:                                               \l  %44 = load i64, i64* %17, align 8, !tbaa !9\l  %45 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 0, i32 0\l  %46 = load i8*, i8** %45, align 8\l  %47 = icmp eq i64 %44, 0\l  br i1 %47, label %87, label %48\l|{<s0>T|<s1>F}}"];
	Node0x557e62c1df40:s0 -> Node0x557e62c1f730;
	Node0x557e62c1df40:s1 -> Node0x557e62c1f780;
	Node0x557e62c1f780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%48:\l48:                                               \l  %49 = and i64 %44, 1\l  %50 = icmp eq i64 %44, 1\l  br i1 %50, label %76, label %51\l|{<s0>T|<s1>F}}"];
	Node0x557e62c1f780:s0 -> Node0x557e62c1f9e0;
	Node0x557e62c1f780:s1 -> Node0x557e62c1fa30;
	Node0x557e62c1fa30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%51:\l51:                                               \l  %52 = and i64 %44, -2\l  br label %122\l}"];
	Node0x557e62c1fa30 -> Node0x557e62c1fc00;
	Node0x557e62c1d960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%53:\l53:                                               \l  %54 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %154\l}"];
	Node0x557e62c1d960 -> Node0x557e62c1fd10;
	Node0x557e62c1e470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = phi i64 [ 0, %30 ], [ %73, %55 ]\l  %57 = phi i64 [ %31, %30 ], [ %74, %55 ]\l  %58 = getelementptr inbounds i8, i8* %25, i64 %56\l  %59 = load i8, i8* %58, align 1, !tbaa !12\l  %60 = sext i8 %59 to i64\l  %61 = add nsw i64 %60, -97\l  %62 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 %61\l  %63 = load i32, i32* %62, align 4, !tbaa !13\l  %64 = add nsw i32 %63, 1\l  store i32 %64, i32* %62, align 4, !tbaa !13\l  %65 = or i64 %56, 1\l  %66 = getelementptr inbounds i8, i8* %25, i64 %65\l  %67 = load i8, i8* %66, align 1, !tbaa !12\l  %68 = sext i8 %67 to i64\l  %69 = add nsw i64 %68, -97\l  %70 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 %69\l  %71 = load i32, i32* %70, align 4, !tbaa !13\l  %72 = add nsw i32 %71, 1\l  store i32 %72, i32* %70, align 4, !tbaa !13\l  %73 = add nuw nsw i64 %56, 2\l  %74 = add i64 %57, -2\l  %75 = icmp eq i64 %74, 0\l  br i1 %75, label %32, label %55, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x557e62c1e470:s0 -> Node0x557e62c1e220;
	Node0x557e62c1e470:s1 -> Node0x557e62c1e470;
	Node0x557e62c1f9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%76:\l76:                                               \l  %77 = phi i64 [ 0, %48 ], [ %140, %122 ]\l  %78 = icmp eq i64 %49, 0\l  br i1 %78, label %87, label %79\l|{<s0>T|<s1>F}}"];
	Node0x557e62c1f9e0:s0 -> Node0x557e62c1f730;
	Node0x557e62c1f9e0:s1 -> Node0x557e62c21130;
	Node0x557e62c21130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%79:\l79:                                               \l  %80 = getelementptr inbounds i8, i8* %46, i64 %77\l  %81 = load i8, i8* %80, align 1, !tbaa !12\l  %82 = sext i8 %81 to i64\l  %83 = add nsw i64 %82, -97\l  %84 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 %83\l  %85 = load i32, i32* %84, align 4, !tbaa !13\l  %86 = add nsw i32 %85, 1\l  store i32 %86, i32* %84, align 4, !tbaa !13\l  br label %87\l}"];
	Node0x557e62c21130 -> Node0x557e62c1f730;
	Node0x557e62c1f730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%87:\l87:                                               \l  %88 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 0\l  %89 = load i32, i32* %88, align 16, !tbaa !13\l  %90 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 0\l  %91 = load i32, i32* %90, align 16, !tbaa !13\l  %92 = sub nsw i32 %89, %91\l  %93 = call i32 @llvm.abs.i32(i32 %92, i1 true)\l  %94 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 1\l  %95 = load i32, i32* %94, align 4, !tbaa !13\l  %96 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 1\l  %97 = load i32, i32* %96, align 4, !tbaa !13\l  %98 = sub nsw i32 %95, %97\l  %99 = call i32 @llvm.abs.i32(i32 %98, i1 true)\l  %100 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 2\l  %101 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 2\l  %102 = bitcast i32* %100 to \<8 x i32\>*\l  %103 = load \<8 x i32\>, \<8 x i32\>* %102, align 8, !tbaa !13\l  %104 = bitcast i32* %101 to \<8 x i32\>*\l  %105 = load \<8 x i32\>, \<8 x i32\>* %104, align 8, !tbaa !13\l  %106 = sub nsw \<8 x i32\> %103, %105\l  %107 = call \<8 x i32\> @llvm.abs.v8i32(\<8 x i32\> %106, i1 true)\l  %108 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 10\l  %109 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 10\l  %110 = bitcast i32* %108 to \<16 x i32\>*\l  %111 = load \<16 x i32\>, \<16 x i32\>* %110, align 8, !tbaa !13\l  %112 = bitcast i32* %109 to \<16 x i32\>*\l  %113 = load \<16 x i32\>, \<16 x i32\>* %112, align 8, !tbaa !13\l  %114 = sub nsw \<16 x i32\> %111, %113\l  %115 = call \<16 x i32\> @llvm.abs.v16i32(\<16 x i32\> %114, i1 true)\l  %116 = call i32 @llvm.vector.reduce.add.v16i32(\<16 x i32\> %115)\l  %117 = call i32 @llvm.vector.reduce.add.v8i32(\<8 x i32\> %107)\l  %118 = add nuw nsw i32 %116, %117\l  %119 = add nuw nsw i32 %118, %99\l  %120 = add nuw nsw i32 %119, %93\l  %121 = invoke nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSolsEi(%\"class.std::basic_ostream\"* nonnull\l... align 8 dereferenceable(8) @_ZSt4cout, i32 %120)\l          to label %143 unwind label %152\l}"];
	Node0x557e62c1f730 -> Node0x557e62c241a0;
	Node0x557e62c1f730 -> Node0x557e62c241f0;
	Node0x557e62c1fc00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%122:\l122:                                              \l  %123 = phi i64 [ 0, %51 ], [ %140, %122 ]\l  %124 = phi i64 [ %52, %51 ], [ %141, %122 ]\l  %125 = getelementptr inbounds i8, i8* %46, i64 %123\l  %126 = load i8, i8* %125, align 1, !tbaa !12\l  %127 = sext i8 %126 to i64\l  %128 = add nsw i64 %127, -97\l  %129 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 %128\l  %130 = load i32, i32* %129, align 4, !tbaa !13\l  %131 = add nsw i32 %130, 1\l  store i32 %131, i32* %129, align 4, !tbaa !13\l  %132 = or i64 %123, 1\l  %133 = getelementptr inbounds i8, i8* %46, i64 %132\l  %134 = load i8, i8* %133, align 1, !tbaa !12\l  %135 = sext i8 %134 to i64\l  %136 = add nsw i64 %135, -97\l  %137 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 %136\l  %138 = load i32, i32* %137, align 4, !tbaa !13\l  %139 = add nsw i32 %138, 1\l  store i32 %139, i32* %137, align 4, !tbaa !13\l  %140 = add nuw nsw i64 %123, 2\l  %141 = add i64 %124, -2\l  %142 = icmp eq i64 %141, 0\l  br i1 %142, label %76, label %122, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x557e62c1fc00:s0 -> Node0x557e62c1f9e0;
	Node0x557e62c1fc00:s1 -> Node0x557e62c1fc00;
	Node0x557e62c241a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%143:\l143:                                              \l  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %6) #10\l  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %4) #10\l  %144 = load i8*, i8** %45, align 8, !tbaa !18\l  %145 = icmp eq i8* %144, %18\l  br i1 %145, label %147, label %146\l|{<s0>T|<s1>F}}"];
	Node0x557e62c241a0:s0 -> Node0x557e62c25fd0;
	Node0x557e62c241a0:s1 -> Node0x557e62c26060;
	Node0x557e62c26060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%146:\l146:                                              \l  call void @_ZdlPv(i8* %144) #10\l  br label %147\l}"];
	Node0x557e62c26060 -> Node0x557e62c25fd0;
	Node0x557e62c25fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%147:\l147:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #10\l  %148 = load i8*, i8** %24, align 8, !tbaa !18\l  %149 = icmp eq i8* %148, %13\l  br i1 %149, label %151, label %150\l|{<s0>T|<s1>F}}"];
	Node0x557e62c25fd0:s0 -> Node0x557e62c26ca0;
	Node0x557e62c25fd0:s1 -> Node0x557e62c26cf0;
	Node0x557e62c26cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%150:\l150:                                              \l  call void @_ZdlPv(i8* %148) #10\l  br label %151\l}"];
	Node0x557e62c26cf0 -> Node0x557e62c26ca0;
	Node0x557e62c26ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%151:\l151:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10\l  ret i32 0\l}"];
	Node0x557e62c241f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%152:\l152:                                              \l  %153 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %154\l}"];
	Node0x557e62c241f0 -> Node0x557e62c1fd10;
	Node0x557e62c1fd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%154:\l154:                                              \l  %155 = phi \{ i8*, i32 \} [ %153, %152 ], [ %54, %53 ]\l  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %6) #10\l  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %4) #10\l  %156 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %2, i64 0, i32 0, i32 0\l  %157 = load i8*, i8** %156, align 8, !tbaa !18\l  %158 = icmp eq i8* %157, %18\l  br i1 %158, label %160, label %159\l|{<s0>T|<s1>F}}"];
	Node0x557e62c1fd10:s0 -> Node0x557e62c27600;
	Node0x557e62c1fd10:s1 -> Node0x557e62c27650;
	Node0x557e62c27650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%159:\l159:                                              \l  call void @_ZdlPv(i8* %157) #10\l  br label %160\l}"];
	Node0x557e62c27650 -> Node0x557e62c27600;
	Node0x557e62c27600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%160:\l160:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #10\l  %161 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %1, i64 0, i32 0, i32 0\l  %162 = load i8*, i8** %161, align 8, !tbaa !18\l  %163 = icmp eq i8* %162, %13\l  br i1 %163, label %165, label %164\l|{<s0>T|<s1>F}}"];
	Node0x557e62c27600:s0 -> Node0x557e62c27b00;
	Node0x557e62c27600:s1 -> Node0x557e62c27b50;
	Node0x557e62c27b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%164:\l164:                                              \l  call void @_ZdlPv(i8* %162) #10\l  br label %165\l}"];
	Node0x557e62c27b50 -> Node0x557e62c27b00;
	Node0x557e62c27b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%165:\l165:                                              \l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10\l  resume \{ i8*, i32 \} %155\l}"];
}
