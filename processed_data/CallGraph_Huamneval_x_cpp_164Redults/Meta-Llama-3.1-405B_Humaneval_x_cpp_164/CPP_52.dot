After analyzing the IR code, I extracted the call graph and represented it in the DOT format. Here is the output:

```dot
digraph call_graph {
    node[shape=box, style=filled];

    label="Call Graph";

    node[label="@_Z15below_thresholdSt6vectorIiSaIiEEi"];
    node[label="@llvm.umax.i64"];

    @_Z15below_thresholdSt6vectorIiSaIiEEi -> @llvm.umax.i64[label="calls"];
}
```

In this graph, we have two nodes representing the functions `@_Z15below_thresholdSt6vectorIiSaIiEEi` and `@llvm.umax.i64`. There is a directed edge from `@_Z15below_thresholdSt6vectorIiSaIiEEi` to `@llvm.umax.i64`, indicating that the former calls the latter.

Note that there are no other functions or calls in the provided IR code, so the call graph is relatively simple. If you have more complex code, the call graph will be more extensive.