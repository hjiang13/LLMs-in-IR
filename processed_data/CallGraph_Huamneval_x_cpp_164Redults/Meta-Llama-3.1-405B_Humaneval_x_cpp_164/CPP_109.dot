After analyzing the provided IR code, I extracted the call graph and represented it in the dot file format. Here is the output:

```
digraph call_graph {
    node[shape=box, style=filled];

    label="Call Graph";

    Node1[label="%1"];
    Node11[label="%11"];
    Node14[label="%14"];
    Node17[label="%17"];
    Node21[label="%21"];
    Node43[label="%43"];
    Node48[label="%48"];
    Node52[label="%52"];
    Node61[label="%61"];
    Node72[label="%72"];

    Node1 -> Node11[label=""];
    Node11 -> Node14[label=""];
    Node11 -> Node52[label=""];
    Node14 -> Node17[label=""];
    Node14 -> Node48[label=""];
    Node17 -> Node21[label=""];
    Node21 -> Node43[label=""];
    Node43 -> Node52[label=""];
    Node43 -> Node48[label=""];
    Node48 -> Node61[label=""];
    Node52 -> Node72[label=""];
    Node61 -> Node52[label=""];
    Node61 -> Node61[label=""];
    Node72 -> Node1[label=""];
}
```

Note that the node labels correspond to the basic block labels in the IR code, and the edges represent the control flow between the basic blocks.