Based on the provided Intermediate Representation (IR) code, we will construct a call graph in the DOT format, which represents the function calls and their relationships.

In the given IR code, the main function we need to focus on is `@_Z11total_matchSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EES7_`, and it makes a call to `@llvm.umax.i64` and `@llvm.memset.p0i8.i64`. 

Here's how the call graph in DOT format would look:

```dot
digraph CallGraph {
    // Define nodes
    node [shape=box];
    total_match [label="total_match"];
    llvm_umax [label="llvm.umax.i64"];
    llvm_memset [label="llvm.memset.p0i8.i64"];

    // Define edges
    total_match -> llvm_umax;
    total_match -> llvm_memset;
}
```

### Explanation:
- **Nodes**: Each function is represented as a node. The labels indicate the names of the functions.
- **Edges**: Directed edges are drawn from `total_match` to the functions it calls, which are `llvm.umax.i64` and `llvm.memset.p0i8.i64`.

This representation captures the call relationships present in the provided IR code.