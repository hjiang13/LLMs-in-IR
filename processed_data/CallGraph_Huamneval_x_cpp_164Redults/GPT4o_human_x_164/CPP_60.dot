To create a call graph from the provided Intermediate Representation (IR) code, we need to analyze the function definitions and any potential calls made to other functions. In the given IR code, there is only one function defined: `@_Z8sum_to_ni`. Since there are no function calls to other functions, the call graph will consist of a single node representing this function.

Here's the output in DOT format:

```dot
digraph CallGraph {
    // Nodes
    "sum_to_n" [label="sum_to_n"];

    // Edges (none in this case)
}
```

In this graph:
- The node `sum_to_n` represents the function `@_Z8sum_to_ni`, which is the only function defined in the provided IR code.
- There are no edges since the function does not call any other functions.

If there were additional functions and calls between them, those would be represented as additional nodes and directed edges in the graph.