; ModuleID = '../../Benchmarks/PrimeNumberandQueries/PrimeNumberandQueries.cpp'
source_filename = "../../Benchmarks/PrimeNumberandQueries/PrimeNumberandQueries.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@prime = dso_local local_unnamed_addr global [1000005 x i32] zeroinitializer, align 16
@an1 = dso_local local_unnamed_addr global [1000005 x i32] zeroinitializer, align 16
@an2 = dso_local local_unnamed_addr global [1000005 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [37 x i8] c"../input_files/PrimeNumberandQueries\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_PrimeNumberandQueries.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #3 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3
  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %4)
  store i32 1, i32* getelementptr inbounds ([1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 1), align 4, !tbaa !7
  store i32 1, i32* getelementptr inbounds ([1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 0), align 16, !tbaa !7
  br label %6

6:                                                ; preds = %0, %19
  %7 = phi i64 [ 2, %0 ], [ %20, %19 ]
  %8 = phi i64 [ 4, %0 ], [ %21, %19 ]
  %9 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %7
  %10 = load i32, i32* %9, align 4, !tbaa !7
  %11 = icmp eq i32 %10, 0
  %12 = icmp ult i64 %7, 500001
  %13 = select i1 %11, i1 %12, i1 false
  br i1 %13, label %14, label %19

14:                                               ; preds = %6, %14
  %15 = phi i64 [ %17, %14 ], [ %8, %6 ]
  %16 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %15
  store i32 1, i32* %16, align 4, !tbaa !7
  %17 = add nuw nsw i64 %15, %7
  %18 = icmp ult i64 %17, 1000001
  br i1 %18, label %14, label %19, !llvm.loop !9

19:                                               ; preds = %14, %6
  %20 = add nuw nsw i64 %7, 1
  %21 = add nuw nsw i64 %8, 2
  %22 = icmp eq i64 %20, 1000001
  br i1 %22, label %23, label %6, !llvm.loop !11

23:                                               ; preds = %19, %101
  %24 = phi i64 [ %122, %101 ], [ 0, %19 ]
  %25 = phi i32 [ %120, %101 ], [ -1, %19 ]
  %26 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %24
  %27 = load i32, i32* %26, align 16, !tbaa !7
  %28 = icmp eq i32 %27, 0
  %29 = trunc i64 %24 to i32
  %30 = select i1 %28, i32 %29, i32 %25
  %31 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an1, i64 0, i64 %24
  store i32 %30, i32* %31, align 16, !tbaa !7
  %32 = or i64 %24, 1
  %33 = icmp eq i64 %32, 1000001
  br i1 %33, label %34, label %101, !llvm.loop !12

34:                                               ; preds = %23, %123
  %35 = phi i64 [ %144, %123 ], [ 1000000, %23 ]
  %36 = phi i32 [ %142, %123 ], [ -1, %23 ]
  %37 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %35
  %38 = load i32, i32* %37, align 16, !tbaa !7
  %39 = icmp eq i32 %38, 0
  %40 = trunc i64 %35 to i32
  %41 = select i1 %39, i32 %40, i32 %36
  %42 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an2, i64 0, i64 %35
  store i32 %41, i32* %42, align 16, !tbaa !7
  %43 = add nsw i64 %35, -1
  %44 = icmp eq i64 %35, 0
  br i1 %44, label %45, label %123, !llvm.loop !13

45:                                               ; preds = %34
  %46 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #7
  %47 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %48 = bitcast i32* %2 to i8*
  %49 = bitcast i32* %3 to i8*
  %50 = load i32, i32* %1, align 4, !tbaa !7
  %51 = add nsw i32 %50, -1
  store i32 %51, i32* %1, align 4, !tbaa !7
  %52 = icmp eq i32 %50, 0
  br i1 %52, label %100, label %53

53:                                               ; preds = %45, %93
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #7
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #7
  %54 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %2)
  %55 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %54, i32* nonnull align 4 dereferenceable(4) %3)
  %56 = load i32, i32* %3, align 4, !tbaa !7
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an1, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4, !tbaa !7
  %60 = load i32, i32* %2, align 4, !tbaa !7
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an2, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4, !tbaa !7
  %64 = sub nsw i32 %59, %63
  %65 = icmp slt i32 %59, %63
  %66 = select i1 %65, i32 0, i32 %64
  %67 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %66)
  %68 = bitcast %"class.std::basic_ostream"* %67 to i8**
  %69 = load i8*, i8** %68, align 8, !tbaa !14
  %70 = getelementptr i8, i8* %69, i64 -24
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::basic_ostream"* %67 to i8*
  %74 = add nsw i64 %72, 240
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  %76 = bitcast i8* %75 to %"class.std::ctype"**
  %77 = load %"class.std::ctype"*, %"class.std::ctype"** %76, align 8, !tbaa !16
  %78 = icmp eq %"class.std::ctype"* %77, null
  br i1 %78, label %79, label %80

79:                                               ; preds = %53
  call void @_ZSt16__throw_bad_castv() #8
  unreachable

80:                                               ; preds = %53
  %81 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %77, i64 0, i32 8
  %82 = load i8, i8* %81, align 8, !tbaa !19
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %77, i64 0, i32 9, i64 10
  %86 = load i8, i8* %85, align 1, !tbaa !21
  br label %93

87:                                               ; preds = %80
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %77)
  %88 = bitcast %"class.std::ctype"* %77 to i8 (%"class.std::ctype"*, i8)***
  %89 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %88, align 8, !tbaa !14
  %90 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %89, i64 6
  %91 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %90, align 8
  %92 = call signext i8 %91(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %77, i8 signext 10)
  br label %93

93:                                               ; preds = %84, %87
  %94 = phi i8 [ %86, %84 ], [ %92, %87 ]
  %95 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %67, i8 signext %94)
  %96 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %95)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #7
  %97 = load i32, i32* %1, align 4, !tbaa !7
  %98 = add nsw i32 %97, -1
  store i32 %98, i32* %1, align 4, !tbaa !7
  %99 = icmp eq i32 %97, 0
  br i1 %99, label %100, label %53, !llvm.loop !22

100:                                              ; preds = %93, %45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #7
  ret i32 0

101:                                              ; preds = %23
  %102 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %32
  %103 = load i32, i32* %102, align 4, !tbaa !7
  %104 = icmp eq i32 %103, 0
  %105 = trunc i64 %32 to i32
  %106 = select i1 %104, i32 %105, i32 %30
  %107 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an1, i64 0, i64 %32
  store i32 %106, i32* %107, align 4, !tbaa !7
  %108 = or i64 %24, 2
  %109 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %108
  %110 = load i32, i32* %109, align 8, !tbaa !7
  %111 = icmp eq i32 %110, 0
  %112 = trunc i64 %108 to i32
  %113 = select i1 %111, i32 %112, i32 %106
  %114 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an1, i64 0, i64 %108
  store i32 %113, i32* %114, align 8, !tbaa !7
  %115 = or i64 %24, 3
  %116 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %115
  %117 = load i32, i32* %116, align 4, !tbaa !7
  %118 = icmp eq i32 %117, 0
  %119 = trunc i64 %115 to i32
  %120 = select i1 %118, i32 %119, i32 %113
  %121 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an1, i64 0, i64 %115
  store i32 %120, i32* %121, align 4, !tbaa !7
  %122 = add nuw nsw i64 %24, 4
  br label %23

123:                                              ; preds = %34
  %124 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %43
  %125 = load i32, i32* %124, align 4, !tbaa !7
  %126 = icmp eq i32 %125, 0
  %127 = trunc i64 %43 to i32
  %128 = select i1 %126, i32 %127, i32 %41
  %129 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an2, i64 0, i64 %43
  store i32 %128, i32* %129, align 4, !tbaa !7
  %130 = add nsw i64 %35, -2
  %131 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %130
  %132 = load i32, i32* %131, align 8, !tbaa !7
  %133 = icmp eq i32 %132, 0
  %134 = trunc i64 %130 to i32
  %135 = select i1 %133, i32 %134, i32 %128
  %136 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an2, i64 0, i64 %130
  store i32 %135, i32* %136, align 8, !tbaa !7
  %137 = add nsw i64 %35, -3
  %138 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @prime, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4, !tbaa !7
  %140 = icmp eq i32 %139, 0
  %141 = trunc i64 %137 to i32
  %142 = select i1 %140, i32 %141, i32 %135
  %143 = getelementptr inbounds [1000005 x i32], [1000005 x i32]* @an2, i64 0, i64 %137
  store i32 %142, i32* %143, align 4, !tbaa !7
  %144 = add nsw i64 %35, -4
  br label %34
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #5

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_PrimeNumberandQueries.cpp() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind }
attributes #8 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = !{!15, !15, i64 0}
!15 = !{!"vtable pointer", !6, i64 0}
!16 = !{!17, !4, i64 240}
!17 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !4, i64 216, !5, i64 224, !18, i64 225, !4, i64 232, !4, i64 240, !4, i64 248, !4, i64 256}
!18 = !{!"bool", !5, i64 0}
!19 = !{!20, !5, i64 56}
!20 = !{!"_ZTSSt5ctypeIcE", !4, i64 16, !18, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !5, i64 56, !5, i64 57, !5, i64 313, !5, i64 569}
!21 = !{!5, !5, i64 0}
!22 = distinct !{!22, !10}
