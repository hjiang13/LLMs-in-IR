To create a control flow graph (CFG) based on the provided intermediate representation (IR) code, we will extract the basic blocks and their control flow relationships. Each basic block will be represented as a node, and the edges will represent the flow from one block to another.

Below is the dot format representation of the control flow graph, showing each basic block as a node and the edges between them:

```dot
digraph CFG {
    // Nodes
    node [shape=rectangle];
    entry [label="Entry"];
    block_1 [label="%1"];
    block_2 [label="%2"];
    block_3 [label="%3"];
    block_6 [label="%6"];
    block_13 [label="%13"];
    block_17 [label="%17"];
    block_39 [label="%39"];
    block_44 [label="%44"];
    block_48 [label="%48"];
    block_59 [label="%59"];
    block_156 [label="%156"];
    block_17_2 [label="%17 (2)"];
    block_27 [label="%27"];
    block_28 [label="%28"];
    block_29 [label="%29"];
    block_33 [label="%33"];
    block_36 [label="%36"];
    block_37 [label="%37"];
    block_43 [label="%43"];
    block_46 [label="%46"];
    block_50 [label="%50"];
    block_56 [label="%56"];
    block_60 [label="%60"];
    block_61 [label="%61"];
    block_62 [label="%62"];
    block_63 [label="%63"];
    block_87 [label="%87"];
    block_91 [label="%91"];
    block_102 [label="%102"];
    block_105 [label="%105"];
    block_117 [label="%117"];
    block_119 [label="%119"];
    block_123 [label="%123"];
    block_126 [label="%126"];
    block_133 [label="%133"];
    block_136 [label="%136"];
    block_142 [label="%142"];
    block_146 [label="%146"];
    block_150 [label="%150"];
    block_154 [label="%154"];
    block_155 [label="%155"];

    // Edges
    entry -> block_1;
    block_1 -> block_2;
    block_2 -> block_6;
    block_6 -> block_13;
    block_6 -> block_59;
    block_6 -> block_17;
    block_13 -> block_17;
    block_17 -> block_39;
    block_39 -> block_44;
    block_44 -> block_48;
    block_48 -> block_59;
    block_59 -> block_156;
    block_17 -> block_17_2;
    block_17_2 -> block_27;
    block_27 -> block_28;
    block_29 -> block_36;
    block_29 -> block_33;
    block_33 -> block_43;
    block_43 -> block_46;
    block_46 -> block_50;
    block_50 -> block_56;
    block_56 -> block_60;
    block_60 -> block_61;
    block_61 -> block_62;
    block_62 -> block_63;
    block_63 -> block_87;
    block_87 -> block_91;
    block_91 -> block_102;
    block_102 -> block_105;
    block_105 -> block_117;
    block_117 -> block_119;
    block_119 -> block_123;
    block_126 -> block_136;
    block_136 -> block_142;
    block_142 -> block_146;
    block_146 -> block_150;
    block_150 -> block_154;
    block_154 -> block_155;
}
```

### Explanation:
- Each basic block in the IR code is represented as a node in the graph.
- The flow of control between basic blocks is represented by directed edges.
- The entry point is labeled as "Entry."
- The labels of the blocks correspond to their IR representations (e.g., `%1`, `%2`, etc.).
- The graph is structured to show how control flows from one block to another, reflecting the branching and looping behavior found in the IR code.

You can use this dot format with Graphviz tools to visualize the control flow graph.