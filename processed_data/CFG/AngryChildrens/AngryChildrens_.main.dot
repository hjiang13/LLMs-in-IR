digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55c4f4b22e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i32, align 4\l  %3 = bitcast i32* %1 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #11\l  %4 = bitcast i32* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11\l  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %6 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([30 x\l... i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %5)\l  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)\l  %8 = load i32, i32* %1, align 4, !tbaa !7\l  %9 = icmp sgt i32 %8, 0\l  br i1 %9, label %32, label %10\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b22e30:s0 -> Node0x55c4f4b233a0;
	Node0x55c4f4b22e30:s1 -> Node0x55c4f4b23f80;
	Node0x55c4f4b23f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%10:\l10:                                               \l  %11 = phi i32 [ %8, %0 ], [ %37, %32 ]\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %12\l  %14 = icmp eq i32 %11, 0\l  br i1 %14, label %15, label %17\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b23f80:s0 -> Node0x55c4f4b24360;
	Node0x55c4f4b23f80:s1 -> Node0x55c4f4b243f0;
	Node0x55c4f4b24360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%15:\l15:                                               \l  %16 = load i64, i64* getelementptr inbounds ([100005 x i64], [100005 x i64]*\l... @a, i64 0, i64 0), align 16, !tbaa !9\l  store i64 %16, i64* getelementptr inbounds ([100005 x i64], [100005 x i64]*\l... @sum, i64 0, i64 0), align 16, !tbaa !9\l  br label %55\l}"];
	Node0x55c4f4b24360 -> Node0x55c4f4b246c0;
	Node0x55c4f4b243f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%17:\l17:                                               \l  %18 = call i64 @llvm.ctlz.i64(i64 %12, i1 true) #11, !range !11\l  %19 = shl nuw nsw i64 %18, 1\l  %20 = xor i64 %19, 126\l  call void\l... @_ZSt16__introsort_loopIPxlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_(i6\l...4* getelementptr inbounds ([100005 x i64], [100005 x i64]* @a, i64 0, i64 0),\l... i64* nonnull %13, i64 %20)\l  call void\l... @_ZSt22__final_insertion_sortIPxN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_(\l...i64* getelementptr inbounds ([100005 x i64], [100005 x i64]* @a, i64 0, i64\l... 0), i64* nonnull %13)\l  %21 = load i32, i32* %1, align 4, !tbaa !7\l  %22 = load i64, i64* getelementptr inbounds ([100005 x i64], [100005 x i64]*\l... @a, i64 0, i64 0), align 16, !tbaa !9\l  store i64 %22, i64* getelementptr inbounds ([100005 x i64], [100005 x i64]*\l... @sum, i64 0, i64 0), align 16, !tbaa !9\l  %23 = icmp sgt i32 %21, 1\l  br i1 %23, label %24, label %55\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b243f0:s0 -> Node0x55c4f4b25950;
	Node0x55c4f4b243f0:s1 -> Node0x55c4f4b246c0;
	Node0x55c4f4b25950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%24:\l24:                                               \l  %25 = zext i32 %21 to i64\l  %26 = add nsw i64 %25, -1\l  %27 = add nsw i64 %25, -2\l  %28 = and i64 %26, 3\l  %29 = icmp ult i64 %27, 3\l  br i1 %29, label %40, label %30\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b25950:s0 -> Node0x55c4f4b25dd0;
	Node0x55c4f4b25950:s1 -> Node0x55c4f4b25e20;
	Node0x55c4f4b25e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%30:\l30:                                               \l  %31 = and i64 %26, -4\l  br label %70\l}"];
	Node0x55c4f4b25e20 -> Node0x55c4f4b26020;
	Node0x55c4f4b233a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i64 [ %36, %32 ], [ 0, %0 ]\l  %34 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %33\l  %35 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @.str.3, i64 0, i64 0), i64* nonnull %34)\l  %36 = add nuw nsw i64 %33, 1\l  %37 = load i32, i32* %1, align 4, !tbaa !7\l  %38 = sext i32 %37 to i64\l  %39 = icmp slt i64 %36, %38\l  br i1 %39, label %32, label %10, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b233a0:s0 -> Node0x55c4f4b233a0;
	Node0x55c4f4b233a0:s1 -> Node0x55c4f4b23f80;
	Node0x55c4f4b25dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%40:\l40:                                               \l  %41 = phi i64 [ %22, %24 ], [ %91, %70 ]\l  %42 = phi i64 [ 1, %24 ], [ %93, %70 ]\l  %43 = icmp eq i64 %28, 0\l  br i1 %43, label %55, label %44\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b25dd0:s0 -> Node0x55c4f4b246c0;
	Node0x55c4f4b25dd0:s1 -> Node0x55c4f4b26b30;
	Node0x55c4f4b26b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%44:\l44:                                               \l  %45 = phi i64 [ %50, %44 ], [ %41, %40 ]\l  %46 = phi i64 [ %52, %44 ], [ %42, %40 ]\l  %47 = phi i64 [ %53, %44 ], [ %28, %40 ]\l  %48 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %46\l  %49 = load i64, i64* %48, align 8, !tbaa !9\l  %50 = add nsw i64 %49, %45\l  %51 = getelementptr inbounds [100005 x i64], [100005 x i64]* @sum, i64 0,\l... i64 %46\l  store i64 %50, i64* %51, align 8, !tbaa !9\l  %52 = add nuw nsw i64 %46, 1\l  %53 = add i64 %47, -1\l  %54 = icmp eq i64 %53, 0\l  br i1 %54, label %55, label %44, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b26b30:s0 -> Node0x55c4f4b246c0;
	Node0x55c4f4b26b30:s1 -> Node0x55c4f4b26b30;
	Node0x55c4f4b246c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%55:\l55:                                               \l  %56 = phi i64 [ %16, %15 ], [ %22, %17 ], [ %22, %44 ], [ %22, %40 ]\l  %57 = phi i32 [ 0, %15 ], [ %21, %17 ], [ %21, %44 ], [ %21, %40 ]\l  %58 = load i32, i32* %2, align 4, !tbaa !7\l  %59 = icmp sgt i32 %58, 0\l  br i1 %59, label %60, label %114\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b246c0:s0 -> Node0x55c4f4b27880;
	Node0x55c4f4b246c0:s1 -> Node0x55c4f4b278d0;
	Node0x55c4f4b27880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%60:\l60:                                               \l  %61 = zext i32 %58 to i64\l  %62 = icmp eq i32 %58, 1\l  br i1 %62, label %114, label %63, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b27880:s0 -> Node0x55c4f4b278d0;
	Node0x55c4f4b27880:s1 -> Node0x55c4f4b27ad0;
	Node0x55c4f4b27ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%63:\l63:                                               \l  %64 = add nsw i64 %61, -1\l  %65 = add nsw i64 %61, -2\l  %66 = and i64 %64, 3\l  %67 = icmp ult i64 %65, 3\l  br i1 %67, label %96, label %68\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b27ad0:s0 -> Node0x55c4f4b28340;
	Node0x55c4f4b27ad0:s1 -> Node0x55c4f4b28390;
	Node0x55c4f4b28390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%68:\l68:                                               \l  %69 = and i64 %64, -4\l  br label %141\l}"];
	Node0x55c4f4b28390 -> Node0x55c4f4b28560;
	Node0x55c4f4b26020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%70:\l70:                                               \l  %71 = phi i64 [ %22, %30 ], [ %91, %70 ]\l  %72 = phi i64 [ 1, %30 ], [ %93, %70 ]\l  %73 = phi i64 [ %31, %30 ], [ %94, %70 ]\l  %74 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %72\l  %75 = load i64, i64* %74, align 8, !tbaa !9\l  %76 = add nsw i64 %75, %71\l  %77 = getelementptr inbounds [100005 x i64], [100005 x i64]* @sum, i64 0,\l... i64 %72\l  store i64 %76, i64* %77, align 8, !tbaa !9\l  %78 = add nuw nsw i64 %72, 1\l  %79 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %78\l  %80 = load i64, i64* %79, align 8, !tbaa !9\l  %81 = add nsw i64 %80, %76\l  %82 = getelementptr inbounds [100005 x i64], [100005 x i64]* @sum, i64 0,\l... i64 %78\l  store i64 %81, i64* %82, align 8, !tbaa !9\l  %83 = add nuw nsw i64 %72, 2\l  %84 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %83\l  %85 = load i64, i64* %84, align 8, !tbaa !9\l  %86 = add nsw i64 %85, %81\l  %87 = getelementptr inbounds [100005 x i64], [100005 x i64]* @sum, i64 0,\l... i64 %83\l  store i64 %86, i64* %87, align 8, !tbaa !9\l  %88 = add nuw nsw i64 %72, 3\l  %89 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %88\l  %90 = load i64, i64* %89, align 8, !tbaa !9\l  %91 = add nsw i64 %90, %86\l  %92 = getelementptr inbounds [100005 x i64], [100005 x i64]* @sum, i64 0,\l... i64 %88\l  store i64 %91, i64* %92, align 8, !tbaa !9\l  %93 = add nuw nsw i64 %72, 4\l  %94 = add i64 %73, -4\l  %95 = icmp eq i64 %94, 0\l  br i1 %95, label %40, label %70, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b26020:s0 -> Node0x55c4f4b25dd0;
	Node0x55c4f4b26020:s1 -> Node0x55c4f4b26020;
	Node0x55c4f4b28340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%96:\l96:                                               \l  %97 = phi i64 [ undef, %63 ], [ %171, %141 ]\l  %98 = phi i64 [ 1, %63 ], [ %172, %141 ]\l  %99 = phi i64 [ %56, %63 ], [ %171, %141 ]\l  %100 = icmp eq i64 %66, 0\l  br i1 %100, label %114, label %101\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b28340:s0 -> Node0x55c4f4b278d0;
	Node0x55c4f4b28340:s1 -> Node0x55c4f4b29ff0;
	Node0x55c4f4b29ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%101:\l101:                                              \l  %102 = phi i64 [ %111, %101 ], [ %98, %96 ]\l  %103 = phi i64 [ %110, %101 ], [ %99, %96 ]\l  %104 = phi i64 [ %112, %101 ], [ %66, %96 ]\l  %105 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %102\l  %106 = load i64, i64* %105, align 8, !tbaa !9\l  %107 = shl nuw nsw i64 %102, 1\l  %108 = or i64 %107, 1\l  %109 = mul nsw i64 %106, %108\l  %110 = add nsw i64 %109, %103\l  %111 = add nuw nsw i64 %102, 1\l  %112 = add i64 %104, -1\l  %113 = icmp eq i64 %112, 0\l  br i1 %113, label %114, label %101, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b29ff0:s0 -> Node0x55c4f4b278d0;
	Node0x55c4f4b29ff0:s1 -> Node0x55c4f4b29ff0;
	Node0x55c4f4b278d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%114:\l114:                                              \l  %115 = phi i64 [ 0, %55 ], [ %56, %60 ], [ %97, %96 ], [ %110, %101 ]\l  %116 = sext i32 %58 to i64\l  %117 = shl nsw i32 %58, 1\l  %118 = add nsw i32 %117, -1\l  %119 = sext i32 %118 to i64\l  %120 = icmp sgt i32 %58, %57\l  br i1 %120, label %175, label %121\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b278d0:s0 -> Node0x55c4f4b2adf0;
	Node0x55c4f4b278d0:s1 -> Node0x55c4f4b2ae40;
	Node0x55c4f4b2ae40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%121:\l121:                                              \l  %122 = add nsw i32 %58, -1\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds [100005 x i64], [100005 x i64]* @sum, i64 0,\l... i64 %123\l  %125 = load i64, i64* %124, align 8, !tbaa !9\l  %126 = mul i64 %125, %116\l  %127 = sub i64 %115, %126\l  %128 = icmp slt i64 %127, %115\l  %129 = select i1 %128, i64 %127, i64 %115\l  %130 = icmp slt i32 %58, %57\l  br i1 %130, label %131, label %175\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b2ae40:s0 -> Node0x55c4f4b2bc70;
	Node0x55c4f4b2ae40:s1 -> Node0x55c4f4b2adf0;
	Node0x55c4f4b2bc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%131:\l131:                                              \l  %132 = add nsw i32 %58, 1\l  %133 = sub i64 %115, %56\l  %134 = sub i64 %56, %125\l  %135 = shl i64 %134, 1\l  %136 = add i64 %133, %135\l  %137 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %116\l  %138 = load i64, i64* %137, align 8, !tbaa !9\l  %139 = mul nsw i64 %138, %119\l  %140 = add i64 %136, %139\l  br label %178\l}"];
	Node0x55c4f4b2bc70 -> Node0x55c4f4b2c290;
	Node0x55c4f4b28560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%141:\l141:                                              \l  %142 = phi i64 [ 1, %68 ], [ %172, %141 ]\l  %143 = phi i64 [ %56, %68 ], [ %171, %141 ]\l  %144 = phi i64 [ %69, %68 ], [ %173, %141 ]\l  %145 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %142\l  %146 = load i64, i64* %145, align 8, !tbaa !9\l  %147 = shl nuw nsw i64 %142, 1\l  %148 = or i64 %147, 1\l  %149 = mul nsw i64 %146, %148\l  %150 = add nsw i64 %149, %143\l  %151 = add nuw nsw i64 %142, 1\l  %152 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %151\l  %153 = load i64, i64* %152, align 8, !tbaa !9\l  %154 = shl nuw nsw i64 %151, 1\l  %155 = or i64 %154, 1\l  %156 = mul nsw i64 %153, %155\l  %157 = add nsw i64 %156, %150\l  %158 = add nuw nsw i64 %142, 2\l  %159 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %158\l  %160 = load i64, i64* %159, align 8, !tbaa !9\l  %161 = shl nuw nsw i64 %158, 1\l  %162 = or i64 %161, 1\l  %163 = mul nsw i64 %160, %162\l  %164 = add nsw i64 %163, %157\l  %165 = add nuw nsw i64 %142, 3\l  %166 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %165\l  %167 = load i64, i64* %166, align 8, !tbaa !9\l  %168 = shl nuw nsw i64 %165, 1\l  %169 = or i64 %168, 1\l  %170 = mul nsw i64 %167, %169\l  %171 = add nsw i64 %170, %164\l  %172 = add nuw nsw i64 %142, 4\l  %173 = add i64 %144, -4\l  %174 = icmp eq i64 %173, 0\l  br i1 %174, label %96, label %141, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b28560:s0 -> Node0x55c4f4b28340;
	Node0x55c4f4b28560:s1 -> Node0x55c4f4b28560;
	Node0x55c4f4b2adf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%175:\l175:                                              \l  %176 = phi i64 [ %115, %114 ], [ %129, %121 ], [ %192, %178 ]\l  %177 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1)\l... getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 %176)\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #11\l  ret i32 0\l}"];
	Node0x55c4f4b2c290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%178:\l178:                                              \l  %179 = phi i64 [ %56, %131 ], [ %197, %178 ]\l  %180 = phi i64 [ 1, %131 ], [ %195, %178 ]\l  %181 = phi i32 [ %132, %131 ], [ %208, %178 ]\l  %182 = phi i64 [ %140, %131 ], [ %206, %178 ]\l  %183 = phi i64 [ %129, %131 ], [ %192, %178 ]\l  %184 = add nsw i32 %181, -1\l  %185 = sext i32 %184 to i64\l  %186 = getelementptr inbounds [100005 x i64], [100005 x i64]* @sum, i64 0,\l... i64 %185\l  %187 = load i64, i64* %186, align 8, !tbaa !9\l  %188 = sub i64 %179, %187\l  %189 = mul i64 %188, %116\l  %190 = add i64 %189, %182\l  %191 = icmp slt i64 %190, %183\l  %192 = select i1 %191, i64 %190, i64 %183\l  %193 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %180\l  %194 = load i64, i64* %193, align 8, !tbaa !9\l  %195 = add nuw nsw i64 %180, 1\l  %196 = getelementptr inbounds [100005 x i64], [100005 x i64]* @sum, i64 0,\l... i64 %180\l  %197 = load i64, i64* %196, align 8, !tbaa !9\l  %198 = sub i64 %197, %187\l  %199 = shl i64 %198, 1\l  %200 = sext i32 %181 to i64\l  %201 = getelementptr inbounds [100005 x i64], [100005 x i64]* @a, i64 0, i64\l... %200\l  %202 = load i64, i64* %201, align 8, !tbaa !9\l  %203 = mul nsw i64 %202, %119\l  %204 = sub i64 %182, %194\l  %205 = add i64 %204, %199\l  %206 = add i64 %205, %203\l  %207 = trunc i64 %195 to i32\l  %208 = add nsw i32 %58, %207\l  %209 = icmp sgt i32 %208, %57\l  br i1 %209, label %175, label %178, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x55c4f4b2c290:s0 -> Node0x55c4f4b2adf0;
	Node0x55c4f4b2c290:s1 -> Node0x55c4f4b2c290;
}
