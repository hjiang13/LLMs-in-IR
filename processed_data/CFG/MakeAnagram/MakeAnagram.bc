; ModuleID = '../../Benchmarks/MakeAnagram/MakeAnagram.cpp'
source_filename = "../../Benchmarks/MakeAnagram/MakeAnagram.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [27 x i8] c"../input_files/MakeAnagram\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_MakeAnagram.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #3 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::__cxx11::basic_string", align 8
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca [26 x i32], align 16
  %4 = bitcast [26 x i32]* %3 to i8*
  %5 = alloca [26 x i32], align 16
  %6 = bitcast [26 x i32]* %5 to i8*
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3
  %8 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %7)
  %9 = bitcast %"class.std::__cxx11::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2
  %11 = bitcast %"class.std::__cxx11::basic_string"* %1 to %union.anon**
  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !7
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  store i64 0, i64* %12, align 8, !tbaa !9
  %13 = bitcast %union.anon* %10 to i8*
  store i8 0, i8* %13, align 8, !tbaa !12
  %14 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %16 = bitcast %"class.std::__cxx11::basic_string"* %2 to %union.anon**
  store %union.anon* %15, %union.anon** %16, align 8, !tbaa !7
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  store i64 0, i64* %17, align 8, !tbaa !9
  %18 = bitcast %union.anon* %15 to i8*
  store i8 0, i8* %18, align 8, !tbaa !12
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %4) #10
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(104) %6, i8 0, i64 104, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(104) %4, i8 0, i64 104, i1 false)
  %19 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %1)
          to label %20 unwind label %53

20:                                               ; preds = %0
  %21 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2)
          to label %22 unwind label %53

22:                                               ; preds = %20
  %23 = load i64, i64* %12, align 8, !tbaa !9
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i64 %23, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %22
  %28 = and i64 %23, 1
  %29 = icmp eq i64 %23, 1
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  %31 = and i64 %23, -2
  br label %55

32:                                               ; preds = %55, %27
  %33 = phi i64 [ 0, %27 ], [ %73, %55 ]
  %34 = icmp eq i64 %28, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds i8, i8* %25, i64 %33
  %37 = load i8, i8* %36, align 1, !tbaa !12
  %38 = sext i8 %37 to i64
  %39 = add nsw i64 %38, -97
  %40 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4, !tbaa !13
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %40, align 4, !tbaa !13
  br label %43

43:                                               ; preds = %35, %32, %22
  %44 = load i64, i64* %17, align 8, !tbaa !9
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i64 %44, 0
  br i1 %47, label %87, label %48

48:                                               ; preds = %43
  %49 = and i64 %44, 1
  %50 = icmp eq i64 %44, 1
  br i1 %50, label %76, label %51

51:                                               ; preds = %48
  %52 = and i64 %44, -2
  br label %122

53:                                               ; preds = %20, %0
  %54 = landingpad { i8*, i32 }
          cleanup
  br label %154

55:                                               ; preds = %55, %30
  %56 = phi i64 [ 0, %30 ], [ %73, %55 ]
  %57 = phi i64 [ %31, %30 ], [ %74, %55 ]
  %58 = getelementptr inbounds i8, i8* %25, i64 %56
  %59 = load i8, i8* %58, align 1, !tbaa !12
  %60 = sext i8 %59 to i64
  %61 = add nsw i64 %60, -97
  %62 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4, !tbaa !13
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %62, align 4, !tbaa !13
  %65 = or i64 %56, 1
  %66 = getelementptr inbounds i8, i8* %25, i64 %65
  %67 = load i8, i8* %66, align 1, !tbaa !12
  %68 = sext i8 %67 to i64
  %69 = add nsw i64 %68, -97
  %70 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 %69
  %71 = load i32, i32* %70, align 4, !tbaa !13
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %70, align 4, !tbaa !13
  %73 = add nuw nsw i64 %56, 2
  %74 = add i64 %57, -2
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %32, label %55, !llvm.loop !15

76:                                               ; preds = %122, %48
  %77 = phi i64 [ 0, %48 ], [ %140, %122 ]
  %78 = icmp eq i64 %49, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds i8, i8* %46, i64 %77
  %81 = load i8, i8* %80, align 1, !tbaa !12
  %82 = sext i8 %81 to i64
  %83 = add nsw i64 %82, -97
  %84 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4, !tbaa !13
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %84, align 4, !tbaa !13
  br label %87

87:                                               ; preds = %79, %76, %43
  %88 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 0
  %89 = load i32, i32* %88, align 16, !tbaa !13
  %90 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 0
  %91 = load i32, i32* %90, align 16, !tbaa !13
  %92 = sub nsw i32 %89, %91
  %93 = call i32 @llvm.abs.i32(i32 %92, i1 true)
  %94 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 1
  %95 = load i32, i32* %94, align 4, !tbaa !13
  %96 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 1
  %97 = load i32, i32* %96, align 4, !tbaa !13
  %98 = sub nsw i32 %95, %97
  %99 = call i32 @llvm.abs.i32(i32 %98, i1 true)
  %100 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 2
  %101 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 2
  %102 = bitcast i32* %100 to <8 x i32>*
  %103 = load <8 x i32>, <8 x i32>* %102, align 8, !tbaa !13
  %104 = bitcast i32* %101 to <8 x i32>*
  %105 = load <8 x i32>, <8 x i32>* %104, align 8, !tbaa !13
  %106 = sub nsw <8 x i32> %103, %105
  %107 = call <8 x i32> @llvm.abs.v8i32(<8 x i32> %106, i1 true)
  %108 = getelementptr inbounds [26 x i32], [26 x i32]* %3, i64 0, i64 10
  %109 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 10
  %110 = bitcast i32* %108 to <16 x i32>*
  %111 = load <16 x i32>, <16 x i32>* %110, align 8, !tbaa !13
  %112 = bitcast i32* %109 to <16 x i32>*
  %113 = load <16 x i32>, <16 x i32>* %112, align 8, !tbaa !13
  %114 = sub nsw <16 x i32> %111, %113
  %115 = call <16 x i32> @llvm.abs.v16i32(<16 x i32> %114, i1 true)
  %116 = call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %115)
  %117 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %107)
  %118 = add nuw nsw i32 %116, %117
  %119 = add nuw nsw i32 %118, %99
  %120 = add nuw nsw i32 %119, %93
  %121 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %120)
          to label %143 unwind label %152

122:                                              ; preds = %122, %51
  %123 = phi i64 [ 0, %51 ], [ %140, %122 ]
  %124 = phi i64 [ %52, %51 ], [ %141, %122 ]
  %125 = getelementptr inbounds i8, i8* %46, i64 %123
  %126 = load i8, i8* %125, align 1, !tbaa !12
  %127 = sext i8 %126 to i64
  %128 = add nsw i64 %127, -97
  %129 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4, !tbaa !13
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %129, align 4, !tbaa !13
  %132 = or i64 %123, 1
  %133 = getelementptr inbounds i8, i8* %46, i64 %132
  %134 = load i8, i8* %133, align 1, !tbaa !12
  %135 = sext i8 %134 to i64
  %136 = add nsw i64 %135, -97
  %137 = getelementptr inbounds [26 x i32], [26 x i32]* %5, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4, !tbaa !13
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %137, align 4, !tbaa !13
  %140 = add nuw nsw i64 %123, 2
  %141 = add i64 %124, -2
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %76, label %122, !llvm.loop !17

143:                                              ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %4) #10
  %144 = load i8*, i8** %45, align 8, !tbaa !18
  %145 = icmp eq i8* %144, %18
  br i1 %145, label %147, label %146

146:                                              ; preds = %143
  call void @_ZdlPv(i8* %144) #10
  br label %147

147:                                              ; preds = %143, %146
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #10
  %148 = load i8*, i8** %24, align 8, !tbaa !18
  %149 = icmp eq i8* %148, %13
  br i1 %149, label %151, label %150

150:                                              ; preds = %147
  call void @_ZdlPv(i8* %148) #10
  br label %151

151:                                              ; preds = %147, %150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret i32 0

152:                                              ; preds = %87
  %153 = landingpad { i8*, i32 }
          cleanup
  br label %154

154:                                              ; preds = %152, %53
  %155 = phi { i8*, i32 } [ %153, %152 ], [ %54, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %4) #10
  %156 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8, !tbaa !18
  %158 = icmp eq i8* %157, %18
  br i1 %158, label %160, label %159

159:                                              ; preds = %154
  call void @_ZdlPv(i8* %157) #10
  br label %160

160:                                              ; preds = %154, %159
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #10
  %161 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8, !tbaa !18
  %163 = icmp eq i8* %162, %13
  br i1 %163, label %165, label %164

164:                                              ; preds = %160
  call void @_ZdlPv(i8* %162) #10
  br label %165

165:                                              ; preds = %160, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  resume { i8*, i32 } %155
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_MakeAnagram.cpp() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #7

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <16 x i32> @llvm.abs.v16i32(<16 x i32>, i1 immarg) #7

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v16i32(<16 x i32>) #9

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <8 x i32> @llvm.abs.v8i32(<8 x i32>, i1 immarg) #7

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v8i32(<8 x i32>) #9

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { argmemonly nofree nounwind willreturn writeonly }
attributes #9 = { nofree nosync nounwind readnone willreturn }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!9 = !{!10, !11, i64 8}
!10 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !8, i64 0, !11, i64 8, !5, i64 16}
!11 = !{!"long", !5, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.mustprogress"}
!17 = distinct !{!17, !16}
!18 = !{!10, !4, i64 0}
