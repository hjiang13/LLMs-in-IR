; ModuleID = '../../Benchmarks/CountPairs/CountPairs.cpp'
source_filename = "../../Benchmarks/CountPairs/CountPairs.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@f = dso_local local_unnamed_addr global [251 x [2259 x [2 x i64]]] zeroinitializer, align 16
@acum = dso_local local_unnamed_addr global [251 x [2259 x [2 x i64]]] zeroinitializer, align 16
@g = dso_local local_unnamed_addr global [251 x [2259 x [2 x i64]]] zeroinitializer, align 16
@.str = private unnamed_addr constant [26 x i8] c"../input_files/CountPairs\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_CountPairs.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #3 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::__cxx11::basic_string", align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3
  %3 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %2)
  %4 = bitcast %"class.std::__cxx11::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %1 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !7
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  store i64 0, i64* %7, align 8, !tbaa !9
  %8 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %8, align 8, !tbaa !12
  %9 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %1)
          to label %10 unwind label %23

10:                                               ; preds = %0
  %11 = load i64, i64* %7, align 8, !tbaa !9
  %12 = shl i64 %11, 32
  %13 = ashr exact i64 %12, 32
  %14 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %13, i64 0, i64 0
  %15 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %15, align 16, !tbaa !13
  %16 = trunc i64 %11 to i32
  %17 = add i32 %16, -1
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp sgt i32 %16, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %10
  %22 = zext i32 %17 to i64
  br label %47

23:                                               ; preds = %0
  %24 = landingpad { i8*, i32 }
          cleanup
  br label %316

25:                                               ; preds = %102, %10
  %26 = icmp sgt i32 %16, -1
  br i1 %26, label %27, label %115

27:                                               ; preds = %25
  %28 = icmp eq i32 %16, 0
  br i1 %28, label %114, label %29

29:                                               ; preds = %27
  %30 = mul i32 %16, 9
  %31 = call i32 @llvm.smax.i32(i32 %30, i32 1)
  %32 = add nuw i32 %31, 1
  %33 = shl i64 %11, 32
  %34 = ashr exact i64 %33, 32
  %35 = zext i32 %32 to i64
  %36 = add nsw i64 %35, -1
  %37 = add nsw i64 %35, -2
  %38 = add nsw i64 %35, -1
  %39 = and i64 %36, 1
  %40 = icmp eq i64 %37, 0
  %41 = and i64 %36, -2
  %42 = icmp eq i64 %39, 0
  %43 = and i64 %38, 1
  %44 = icmp eq i64 %37, 0
  %45 = and i64 %38, -2
  %46 = icmp eq i64 %43, 0
  br label %109

47:                                               ; preds = %21, %102
  %48 = phi i64 [ %22, %21 ], [ %105, %102 ]
  %49 = phi i32 [ %17, %21 ], [ %103, %102 ]
  %50 = getelementptr inbounds i8, i8* %19, i64 %48
  %51 = load i8, i8* %50, align 1, !tbaa !12
  %52 = sext i8 %51 to i32
  %53 = add nsw i32 %52, -48
  %54 = sub nsw i32 %16, %49
  %55 = add nsw i32 %49, 1
  %56 = sext i32 %55 to i64
  %57 = icmp slt i32 %54, 0
  br i1 %57, label %102, label %58

58:                                               ; preds = %47
  %59 = mul nsw i32 %54, 9
  %60 = sext i32 %53 to i64
  %61 = zext i32 %53 to i64
  %62 = sext i32 %59 to i64
  br label %63

63:                                               ; preds = %58, %106
  %64 = phi i64 [ 0, %58 ], [ %107, %106 ]
  %65 = trunc i64 %64 to i32
  %66 = call i32 @llvm.umin.i32(i32 %65, i32 9)
  %67 = add nuw nsw i32 %66, 1
  %68 = zext i32 %67 to i64
  %69 = trunc i64 %64 to i32
  %70 = call i32 @llvm.umin.i32(i32 %69, i32 9)
  %71 = add nuw nsw i32 %70, 1
  %72 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %48, i64 %64, i64 0
  store i64 0, i64* %72, align 16, !tbaa !13
  %73 = and i64 %68, 1
  %74 = icmp eq i32 %66, 0
  br i1 %74, label %323, label %75

75:                                               ; preds = %63
  %76 = and i64 %68, 30
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %97, %77 ]
  %79 = phi i32 [ %69, %75 ], [ %99, %77 ]
  %80 = phi i32 [ 0, %75 ], [ %98, %77 ]
  %81 = phi i64 [ %76, %75 ], [ %100, %77 ]
  %82 = zext i32 %79 to i64
  %83 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %56, i64 %82, i64 0
  %84 = load i64, i64* %83, align 16, !tbaa !13
  %85 = add nsw i64 %78, %84
  %86 = icmp sgt i64 %85, 1000000006
  %87 = add nsw i64 %85, -1000000007
  %88 = select i1 %86, i64 %87, i64 %85
  store i64 %88, i64* %72, align 16, !tbaa !13
  %89 = xor i32 %80, -1
  %90 = add i32 %89, %69
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %56, i64 %91, i64 0
  %93 = load i64, i64* %92, align 16, !tbaa !13
  %94 = add nsw i64 %88, %93
  %95 = icmp sgt i64 %94, 1000000006
  %96 = add nsw i64 %94, -1000000007
  %97 = select i1 %95, i64 %96, i64 %94
  store i64 %97, i64* %72, align 16, !tbaa !13
  %98 = add nuw nsw i32 %80, 2
  %99 = sub nsw i32 %69, %98
  %100 = add i64 %81, -2
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %323, label %77, !llvm.loop !15

102:                                              ; preds = %106, %47
  %103 = add nsw i32 %49, -1
  %104 = icmp sgt i64 %48, 0
  %105 = add nsw i64 %48, -1
  br i1 %104, label %47, label %25, !llvm.loop !17

106:                                              ; preds = %354
  %107 = add nuw nsw i64 %64, 1
  %108 = icmp slt i64 %64, %62
  br i1 %108, label %63, label %102, !llvm.loop !18

109:                                              ; preds = %29, %393
  %110 = phi i64 [ %34, %29 ], [ %394, %393 ]
  %111 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %110, i64 0, i64 0
  %112 = load i64, i64* %111, align 16, !tbaa !13
  %113 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @acum, i64 0, i64 %110, i64 0, i64 0
  store i64 %112, i64* %113, align 16, !tbaa !13
  br i1 %40, label %118, label %133

114:                                              ; preds = %27
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) bitcast ([251 x [2259 x [2 x i64]]]* @acum to i8*), i8* noundef nonnull align 16 dereferenceable(16) bitcast ([251 x [2259 x [2 x i64]]]* @f to i8*), i64 16, i1 false)
  br label %115

115:                                              ; preds = %393, %114, %25
  br i1 %20, label %116, label %155

116:                                              ; preds = %115
  %117 = zext i32 %17 to i64
  br label %166

118:                                              ; preds = %133, %109
  %119 = phi i64 [ 1, %109 ], [ %152, %133 ]
  %120 = phi i64 [ %112, %109 ], [ %150, %133 ]
  br i1 %42, label %129, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %110, i64 %119, i64 0
  %123 = load i64, i64* %122, align 16, !tbaa !13
  %124 = add nsw i64 %123, %120
  %125 = icmp sgt i64 %124, 1000000006
  %126 = add nsw i64 %124, -1000000007
  %127 = select i1 %125, i64 %126, i64 %124
  %128 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @acum, i64 0, i64 %110, i64 %119, i64 0
  store i64 %127, i64* %128, align 16, !tbaa !13
  br label %129

129:                                              ; preds = %118, %121
  %130 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %110, i64 0, i64 1
  %131 = load i64, i64* %130, align 8, !tbaa !13
  %132 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @acum, i64 0, i64 %110, i64 0, i64 1
  store i64 %131, i64* %132, align 8, !tbaa !13
  br i1 %44, label %382, label %360

133:                                              ; preds = %109, %133
  %134 = phi i64 [ %152, %133 ], [ 1, %109 ]
  %135 = phi i64 [ %150, %133 ], [ %112, %109 ]
  %136 = phi i64 [ %153, %133 ], [ %41, %109 ]
  %137 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %110, i64 %134, i64 0
  %138 = load i64, i64* %137, align 16, !tbaa !13
  %139 = add nsw i64 %138, %135
  %140 = icmp sgt i64 %139, 1000000006
  %141 = add nsw i64 %139, -1000000007
  %142 = select i1 %140, i64 %141, i64 %139
  %143 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @acum, i64 0, i64 %110, i64 %134, i64 0
  store i64 %142, i64* %143, align 16, !tbaa !13
  %144 = add nuw nsw i64 %134, 1
  %145 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %110, i64 %144, i64 0
  %146 = load i64, i64* %145, align 16, !tbaa !13
  %147 = add nsw i64 %146, %142
  %148 = icmp sgt i64 %147, 1000000006
  %149 = add nsw i64 %147, -1000000007
  %150 = select i1 %148, i64 %149, i64 %147
  %151 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @acum, i64 0, i64 %110, i64 %144, i64 0
  store i64 %150, i64* %151, align 16, !tbaa !13
  %152 = add nuw nsw i64 %134, 2
  %153 = add i64 %136, -2
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %118, label %133, !llvm.loop !19

155:                                              ; preds = %234, %115
  %156 = icmp slt i32 %16, 0
  br i1 %156, label %253, label %157

157:                                              ; preds = %155
  %158 = mul i32 %16, 9
  %159 = call i32 @llvm.smax.i32(i32 %158, i32 0)
  %160 = add nuw i32 %159, 1
  %161 = zext i32 %160 to i64
  %162 = and i64 %161, 1
  %163 = icmp slt i32 %158, 1
  br i1 %163, label %241, label %164

164:                                              ; preds = %157
  %165 = and i64 %161, 4294967294
  br label %256

166:                                              ; preds = %116, %234
  %167 = phi i64 [ %117, %116 ], [ %237, %234 ]
  %168 = phi i32 [ %17, %116 ], [ %235, %234 ]
  %169 = getelementptr inbounds i8, i8* %19, i64 %167
  %170 = load i8, i8* %169, align 1, !tbaa !12
  %171 = sext i8 %170 to i32
  %172 = add nsw i32 %171, -48
  %173 = sub nsw i32 %16, %168
  %174 = add nsw i32 %168, 1
  %175 = sext i32 %174 to i64
  %176 = icmp slt i32 %173, 0
  br i1 %176, label %234, label %177

177:                                              ; preds = %166
  %178 = mul nsw i32 %173, 9
  %179 = zext i32 %172 to i64
  %180 = sext i32 %172 to i64
  %181 = sext i32 %178 to i64
  br label %182

182:                                              ; preds = %238, %177
  %183 = phi i64 [ 0, %177 ], [ %239, %238 ]
  %184 = trunc i64 %183 to i32
  %185 = call i32 @llvm.umin.i32(i32 %184, i32 9)
  %186 = add nuw nsw i32 %185, 1
  %187 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @g, i64 0, i64 %167, i64 %183, i64 0
  store i64 0, i64* %187, align 16, !tbaa !13
  %188 = zext i32 %186 to i64
  br label %189

189:                                              ; preds = %226, %182
  %190 = phi i64 [ 0, %182 ], [ %227, %226 ]
  %191 = phi i64 [ 0, %182 ], [ %228, %226 ]
  %192 = phi i32 [ %184, %182 ], [ %230, %226 ]
  %193 = phi i32 [ 0, %182 ], [ %229, %226 ]
  %194 = zext i32 %192 to i64
  %195 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @g, i64 0, i64 %175, i64 %194, i64 0
  %196 = load i64, i64* %195, align 16, !tbaa !13
  %197 = add nsw i64 %190, %196
  %198 = icmp sgt i64 %197, 1000000006
  %199 = add nsw i64 %197, -1000000007
  %200 = select i1 %198, i64 %199, i64 %197
  store i64 %200, i64* %187, align 16, !tbaa !13
  %201 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %175, i64 %194, i64 0
  %202 = icmp eq i64 %191, 0
  br i1 %202, label %226, label %203

203:                                              ; preds = %189, %221
  %204 = phi i64 [ %222, %221 ], [ %200, %189 ]
  %205 = phi i64 [ %223, %221 ], [ 0, %189 ]
  %206 = phi i32 [ %224, %221 ], [ 0, %189 ]
  %207 = xor i32 %206, -1
  %208 = add nsw i32 %184, %207
  %209 = icmp sgt i32 %208, -1
  br i1 %209, label %210, label %221

210:                                              ; preds = %203
  %211 = load i64, i64* %201, align 16, !tbaa !13
  %212 = zext i32 %208 to i64
  %213 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @acum, i64 0, i64 %175, i64 %212, i64 0
  %214 = load i64, i64* %213, align 16, !tbaa !13
  %215 = mul nsw i64 %214, %211
  %216 = srem i64 %215, 1000000007
  %217 = add nsw i64 %216, %204
  %218 = icmp sgt i64 %217, 1000000006
  %219 = add nsw i64 %217, -1000000007
  %220 = select i1 %218, i64 %219, i64 %217
  store i64 %220, i64* %187, align 16, !tbaa !13
  br label %221

221:                                              ; preds = %210, %203
  %222 = phi i64 [ %220, %210 ], [ %204, %203 ]
  %223 = add nuw nsw i64 %205, 1
  %224 = add nuw nsw i32 %206, 1
  %225 = icmp eq i64 %223, %191
  br i1 %225, label %226, label %203, !llvm.loop !20

226:                                              ; preds = %221, %189
  %227 = phi i64 [ %200, %189 ], [ %222, %221 ]
  %228 = add nuw nsw i64 %191, 1
  %229 = add nuw nsw i32 %193, 1
  %230 = sub nsw i32 %184, %229
  %231 = icmp eq i64 %228, %188
  br i1 %231, label %232, label %189, !llvm.loop !21

232:                                              ; preds = %226
  %233 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @g, i64 0, i64 %167, i64 %183, i64 1
  store i64 0, i64* %233, align 8, !tbaa !13
  br label %396

234:                                              ; preds = %238, %166
  %235 = add nsw i32 %168, -1
  %236 = icmp sgt i64 %167, 0
  %237 = add nsw i64 %167, -1
  br i1 %236, label %166, label %155, !llvm.loop !22

238:                                              ; preds = %439
  %239 = add nuw nsw i64 %183, 1
  %240 = icmp slt i64 %183, %181
  br i1 %240, label %182, label %234, !llvm.loop !23

241:                                              ; preds = %256, %157
  %242 = phi i64 [ undef, %157 ], [ %272, %256 ]
  %243 = phi i64 [ 0, %157 ], [ %273, %256 ]
  %244 = phi i64 [ 0, %157 ], [ %272, %256 ]
  %245 = icmp eq i64 %162, 0
  br i1 %245, label %253, label %246

246:                                              ; preds = %241
  %247 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @g, i64 0, i64 0, i64 %243, i64 1
  %248 = load i64, i64* %247, align 8, !tbaa !13
  %249 = add nsw i64 %248, %244
  %250 = icmp sgt i64 %249, 1000000006
  %251 = add nsw i64 %249, -1000000007
  %252 = select i1 %250, i64 %251, i64 %249
  br label %253

253:                                              ; preds = %246, %241, %155
  %254 = phi i64 [ 0, %155 ], [ %242, %241 ], [ %252, %246 ]
  %255 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIxEERSoT_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 %254)
          to label %276 unwind label %314

256:                                              ; preds = %256, %164
  %257 = phi i64 [ 0, %164 ], [ %273, %256 ]
  %258 = phi i64 [ 0, %164 ], [ %272, %256 ]
  %259 = phi i64 [ %165, %164 ], [ %274, %256 ]
  %260 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @g, i64 0, i64 0, i64 %257, i64 1
  %261 = load i64, i64* %260, align 8, !tbaa !13
  %262 = add nsw i64 %261, %258
  %263 = icmp sgt i64 %262, 1000000006
  %264 = add nsw i64 %262, -1000000007
  %265 = select i1 %263, i64 %264, i64 %262
  %266 = or i64 %257, 1
  %267 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @g, i64 0, i64 0, i64 %266, i64 1
  %268 = load i64, i64* %267, align 8, !tbaa !13
  %269 = add nsw i64 %268, %265
  %270 = icmp sgt i64 %269, 1000000006
  %271 = add nsw i64 %269, -1000000007
  %272 = select i1 %270, i64 %271, i64 %269
  %273 = add nuw nsw i64 %257, 2
  %274 = add i64 %259, -2
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %241, label %256, !llvm.loop !24

276:                                              ; preds = %253
  %277 = bitcast %"class.std::basic_ostream"* %255 to i8**
  %278 = load i8*, i8** %277, align 8, !tbaa !25
  %279 = getelementptr i8, i8* %278, i64 -24
  %280 = bitcast i8* %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = bitcast %"class.std::basic_ostream"* %255 to i8*
  %283 = add nsw i64 %281, 240
  %284 = getelementptr inbounds i8, i8* %282, i64 %283
  %285 = bitcast i8* %284 to %"class.std::ctype"**
  %286 = load %"class.std::ctype"*, %"class.std::ctype"** %285, align 8, !tbaa !27
  %287 = icmp eq %"class.std::ctype"* %286, null
  br i1 %287, label %288, label %290

288:                                              ; preds = %276
  invoke void @_ZSt16__throw_bad_castv() #11
          to label %289 unwind label %314

289:                                              ; preds = %288
  unreachable

290:                                              ; preds = %276
  %291 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %286, i64 0, i32 8
  %292 = load i8, i8* %291, align 8, !tbaa !30
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %297, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %286, i64 0, i32 9, i64 10
  %296 = load i8, i8* %295, align 1, !tbaa !12
  br label %304

297:                                              ; preds = %290
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %286)
          to label %298 unwind label %314

298:                                              ; preds = %297
  %299 = bitcast %"class.std::ctype"* %286 to i8 (%"class.std::ctype"*, i8)***
  %300 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %299, align 8, !tbaa !25
  %301 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %300, i64 6
  %302 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %301, align 8
  %303 = invoke signext i8 %302(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %286, i8 signext 10)
          to label %304 unwind label %314

304:                                              ; preds = %298, %294
  %305 = phi i8 [ %296, %294 ], [ %303, %298 ]
  %306 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %255, i8 signext %305)
          to label %307 unwind label %314

307:                                              ; preds = %304
  %308 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %306)
          to label %309 unwind label %314

309:                                              ; preds = %307
  %310 = load i8*, i8** %18, align 8, !tbaa !32
  %311 = icmp eq i8* %310, %8
  br i1 %311, label %313, label %312

312:                                              ; preds = %309
  call void @_ZdlPv(i8* %310) #10
  br label %313

313:                                              ; preds = %309, %312
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  ret i32 0

314:                                              ; preds = %307, %304, %298, %297, %288, %253
  %315 = landingpad { i8*, i32 }
          cleanup
  br label %316

316:                                              ; preds = %314, %23
  %317 = phi { i8*, i32 } [ %315, %314 ], [ %24, %23 ]
  %318 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %319 = load i8*, i8** %318, align 8, !tbaa !32
  %320 = icmp eq i8* %319, %8
  br i1 %320, label %322, label %321

321:                                              ; preds = %316
  call void @_ZdlPv(i8* %319) #10
  br label %322

322:                                              ; preds = %316, %321
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  resume { i8*, i32 } %317

323:                                              ; preds = %77, %63
  %324 = phi i64 [ 0, %63 ], [ %97, %77 ]
  %325 = phi i32 [ %69, %63 ], [ %99, %77 ]
  %326 = icmp eq i64 %73, 0
  br i1 %326, label %335, label %327

327:                                              ; preds = %323
  %328 = zext i32 %325 to i64
  %329 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %56, i64 %328, i64 0
  %330 = load i64, i64* %329, align 16, !tbaa !13
  %331 = add nsw i64 %324, %330
  %332 = icmp sgt i64 %331, 1000000006
  %333 = add nsw i64 %331, -1000000007
  %334 = select i1 %332, i64 %333, i64 %331
  store i64 %334, i64* %72, align 16, !tbaa !13
  br label %335

335:                                              ; preds = %323, %327
  %336 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %48, i64 %64, i64 1
  store i64 0, i64* %336, align 8, !tbaa !13
  %337 = zext i32 %71 to i64
  br label %338

338:                                              ; preds = %354, %335
  %339 = phi i64 [ 0, %335 ], [ %355, %354 ]
  %340 = phi i64 [ 0, %335 ], [ %356, %354 ]
  %341 = phi i32 [ %69, %335 ], [ %358, %354 ]
  %342 = phi i32 [ 0, %335 ], [ %357, %354 ]
  %343 = icmp sgt i64 %340, %60
  br i1 %343, label %354, label %344

344:                                              ; preds = %338
  %345 = icmp eq i64 %340, %61
  %346 = zext i32 %341 to i64
  %347 = zext i1 %345 to i64
  %348 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %56, i64 %346, i64 %347
  %349 = load i64, i64* %348, align 8, !tbaa !13
  %350 = add nsw i64 %339, %349
  %351 = icmp sgt i64 %350, 1000000006
  %352 = add nsw i64 %350, -1000000007
  %353 = select i1 %351, i64 %352, i64 %350
  store i64 %353, i64* %336, align 8, !tbaa !13
  br label %354

354:                                              ; preds = %344, %338
  %355 = phi i64 [ %353, %344 ], [ %339, %338 ]
  %356 = add nuw nsw i64 %340, 1
  %357 = add nuw nsw i32 %342, 1
  %358 = sub nsw i32 %69, %357
  %359 = icmp eq i64 %356, %337
  br i1 %359, label %106, label %338, !llvm.loop !15

360:                                              ; preds = %129, %360
  %361 = phi i64 [ %379, %360 ], [ 1, %129 ]
  %362 = phi i64 [ %377, %360 ], [ %131, %129 ]
  %363 = phi i64 [ %380, %360 ], [ %45, %129 ]
  %364 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %110, i64 %361, i64 1
  %365 = load i64, i64* %364, align 8, !tbaa !13
  %366 = add nsw i64 %365, %362
  %367 = icmp sgt i64 %366, 1000000006
  %368 = add nsw i64 %366, -1000000007
  %369 = select i1 %367, i64 %368, i64 %366
  %370 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @acum, i64 0, i64 %110, i64 %361, i64 1
  store i64 %369, i64* %370, align 8, !tbaa !13
  %371 = add nuw nsw i64 %361, 1
  %372 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %110, i64 %371, i64 1
  %373 = load i64, i64* %372, align 8, !tbaa !13
  %374 = add nsw i64 %373, %369
  %375 = icmp sgt i64 %374, 1000000006
  %376 = add nsw i64 %374, -1000000007
  %377 = select i1 %375, i64 %376, i64 %374
  %378 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @acum, i64 0, i64 %110, i64 %371, i64 1
  store i64 %377, i64* %378, align 8, !tbaa !13
  %379 = add nuw nsw i64 %361, 2
  %380 = add i64 %363, -2
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %382, label %360, !llvm.loop !19

382:                                              ; preds = %360, %129
  %383 = phi i64 [ 1, %129 ], [ %379, %360 ]
  %384 = phi i64 [ %131, %129 ], [ %377, %360 ]
  br i1 %46, label %393, label %385

385:                                              ; preds = %382
  %386 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %110, i64 %383, i64 1
  %387 = load i64, i64* %386, align 8, !tbaa !13
  %388 = add nsw i64 %387, %384
  %389 = icmp sgt i64 %388, 1000000006
  %390 = add nsw i64 %388, -1000000007
  %391 = select i1 %389, i64 %390, i64 %388
  %392 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @acum, i64 0, i64 %110, i64 %383, i64 1
  store i64 %391, i64* %392, align 8, !tbaa !13
  br label %393

393:                                              ; preds = %382, %385
  %394 = add nsw i64 %110, -1
  %395 = icmp sgt i64 %110, 0
  br i1 %395, label %109, label %115, !llvm.loop !33

396:                                              ; preds = %439, %232
  %397 = phi i64 [ 0, %232 ], [ %440, %439 ]
  %398 = phi i64 [ 0, %232 ], [ %441, %439 ]
  %399 = phi i32 [ %184, %232 ], [ %443, %439 ]
  %400 = phi i32 [ 0, %232 ], [ %442, %439 ]
  %401 = icmp sgt i64 %398, %180
  br i1 %401, label %439, label %402

402:                                              ; preds = %396
  %403 = icmp eq i64 %398, %179
  %404 = zext i32 %399 to i64
  %405 = zext i1 %403 to i64
  %406 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @g, i64 0, i64 %175, i64 %404, i64 %405
  %407 = load i64, i64* %406, align 8, !tbaa !13
  %408 = add nsw i64 %397, %407
  %409 = icmp sgt i64 %408, 1000000006
  %410 = add nsw i64 %408, -1000000007
  %411 = select i1 %409, i64 %410, i64 %408
  store i64 %411, i64* %233, align 8, !tbaa !13
  %412 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @f, i64 0, i64 %175, i64 %404, i64 %405
  %413 = icmp eq i64 %398, 0
  br i1 %413, label %439, label %414

414:                                              ; preds = %402, %434
  %415 = phi i64 [ %435, %434 ], [ %411, %402 ]
  %416 = phi i64 [ %436, %434 ], [ 0, %402 ]
  %417 = phi i32 [ %437, %434 ], [ 0, %402 ]
  %418 = xor i32 %417, -1
  %419 = add nsw i32 %184, %418
  %420 = icmp sgt i32 %419, -1
  br i1 %420, label %421, label %434

421:                                              ; preds = %414
  %422 = icmp eq i64 %416, %179
  %423 = load i64, i64* %412, align 8, !tbaa !13
  %424 = zext i32 %419 to i64
  %425 = zext i1 %422 to i64
  %426 = getelementptr inbounds [251 x [2259 x [2 x i64]]], [251 x [2259 x [2 x i64]]]* @acum, i64 0, i64 %175, i64 %424, i64 %425
  %427 = load i64, i64* %426, align 8, !tbaa !13
  %428 = mul nsw i64 %427, %423
  %429 = srem i64 %428, 1000000007
  %430 = add nsw i64 %429, %415
  %431 = icmp sgt i64 %430, 1000000006
  %432 = add nsw i64 %430, -1000000007
  %433 = select i1 %431, i64 %432, i64 %430
  store i64 %433, i64* %233, align 8, !tbaa !13
  br label %434

434:                                              ; preds = %421, %414
  %435 = phi i64 [ %433, %421 ], [ %415, %414 ]
  %436 = add nuw nsw i64 %416, 1
  %437 = add nuw nsw i32 %417, 1
  %438 = icmp eq i64 %436, %398
  br i1 %438, label %439, label %414, !llvm.loop !20

439:                                              ; preds = %434, %402, %396
  %440 = phi i64 [ %411, %402 ], [ %397, %396 ], [ %435, %434 ]
  %441 = add nuw nsw i64 %398, 1
  %442 = add nuw nsw i32 %400, 1
  %443 = sub nsw i32 %184, %442
  %444 = icmp eq i64 %441, %188
  br i1 %444, label %238, label %396, !llvm.loop !21
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #5

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIxEERSoT_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #6

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_CountPairs.cpp() #7 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #8

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #9

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { argmemonly nofree nounwind willreturn }
attributes #10 = { nounwind }
attributes #11 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!9 = !{!10, !11, i64 8}
!10 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !8, i64 0, !11, i64 8, !5, i64 16}
!11 = !{!"long", !5, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"long long", !5, i64 0}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.mustprogress"}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !16}
!20 = distinct !{!20, !16}
!21 = distinct !{!21, !16}
!22 = distinct !{!22, !16}
!23 = distinct !{!23, !16}
!24 = distinct !{!24, !16}
!25 = !{!26, !26, i64 0}
!26 = !{!"vtable pointer", !6, i64 0}
!27 = !{!28, !4, i64 240}
!28 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !4, i64 216, !5, i64 224, !29, i64 225, !4, i64 232, !4, i64 240, !4, i64 248, !4, i64 256}
!29 = !{!"bool", !5, i64 0}
!30 = !{!31, !5, i64 56}
!31 = !{!"_ZTSSt5ctypeIcE", !4, i64 16, !29, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !5, i64 56, !5, i64 57, !5, i64 313, !5, i64 569}
!32 = !{!10, !4, i64 0}
!33 = distinct !{!33, !16}
