; ModuleID = '../../Benchmarks/CavityMap/CavityMap.cpp'
source_filename = "../../Benchmarks/CavityMap/CavityMap.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [25 x i8] c"../input_files/CavityMap\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str.2 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_CavityMap.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #3 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i8, align 1
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3
  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %4)
  %6 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  %7 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %2)
  %8 = load i32, i32* %2, align 4, !tbaa !7
  %9 = mul nsw i32 %8, %8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %60, %0
  %12 = phi i8* [ null, %0 ], [ %63, %60 ]
  %13 = phi i32 [ %8, %0 ], [ %66, %60 ]
  %14 = add i32 %13, 1
  %15 = add nsw i32 %13, -1
  %16 = mul nsw i32 %15, %13
  %17 = add nsw i32 %16, -1
  %18 = icmp slt i32 %14, %17
  br i1 %18, label %19, label %165

19:                                               ; preds = %11
  %20 = sext i32 %14 to i64
  br label %71

21:                                               ; preds = %0, %60
  %22 = phi i32 [ %65, %60 ], [ 0, %0 ]
  %23 = phi i8* [ %63, %60 ], [ null, %0 ]
  %24 = phi i8* [ %64, %60 ], [ null, %0 ]
  %25 = phi i8* [ %61, %60 ], [ null, %0 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  %26 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i8* nonnull align 1 dereferenceable(1) %3)
          to label %27 unwind label %244

27:                                               ; preds = %21
  %28 = icmp eq i8* %24, %25
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = load i8, i8* %3, align 1, !tbaa !9
  store i8 %30, i8* %24, align 1, !tbaa !9
  br label %60

31:                                               ; preds = %27
  %32 = ptrtoint i8* %24 to i64
  %33 = ptrtoint i8* %23 to i64
  %34 = sub i64 %32, %33
  %35 = icmp eq i64 %34, 9223372036854775807
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #11
          to label %37 unwind label %246

37:                                               ; preds = %36
  unreachable

38:                                               ; preds = %31
  %39 = icmp eq i64 %34, 0
  %40 = select i1 %39, i64 1, i64 %34
  %41 = add i64 %40, %34
  %42 = icmp ult i64 %41, %34
  %43 = icmp slt i64 %41, 0
  %44 = or i1 %42, %43
  %45 = select i1 %44, i64 9223372036854775807, i64 %41
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %38
  %48 = invoke noalias nonnull i8* @_Znwm(i64 %45) #12
          to label %49 unwind label %244

49:                                               ; preds = %47, %38
  %50 = phi i8* [ null, %38 ], [ %48, %47 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 %34
  %52 = load i8, i8* %3, align 1, !tbaa !9
  store i8 %52, i8* %51, align 1, !tbaa !9
  %53 = icmp sgt i64 %34, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %49
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* align 1 %23, i64 %34, i1 false) #10
  br label %55

55:                                               ; preds = %49, %54
  %56 = icmp eq i8* %23, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %55
  call void @_ZdlPv(i8* nonnull %23) #10
  br label %58

58:                                               ; preds = %57, %55
  %59 = getelementptr inbounds i8, i8* %50, i64 %45
  br label %60

60:                                               ; preds = %58, %29
  %61 = phi i8* [ %59, %58 ], [ %25, %29 ]
  %62 = phi i8* [ %51, %58 ], [ %24, %29 ]
  %63 = phi i8* [ %50, %58 ], [ %23, %29 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  %65 = add nuw nsw i32 %22, 1
  %66 = load i32, i32* %2, align 4, !tbaa !7
  %67 = mul nsw i32 %66, %66
  %68 = icmp ult i32 %65, %67
  br i1 %68, label %21, label %11, !llvm.loop !10

69:                                               ; preds = %152
  %70 = icmp eq i32* %153, %154
  br i1 %70, label %165, label %170

71:                                               ; preds = %19, %152
  %72 = phi i64 [ %20, %19 ], [ %156, %152 ]
  %73 = phi i32 [ %13, %19 ], [ %157, %152 ]
  %74 = phi i32 [ %13, %19 ], [ %78, %152 ]
  %75 = phi i32* [ null, %19 ], [ %155, %152 ]
  %76 = phi i32* [ null, %19 ], [ %154, %152 ]
  %77 = phi i32* [ null, %19 ], [ %153, %152 ]
  %78 = trunc i64 %72 to i32
  %79 = srem i32 %78, %73
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %152, label %81

81:                                               ; preds = %71
  %82 = add nsw i32 %74, 2
  %83 = srem i32 %82, %73
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %152, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds i8, i8* %12, i64 %72
  %87 = load i8, i8* %86, align 1, !tbaa !9
  %88 = sext i32 %74 to i64
  %89 = getelementptr inbounds i8, i8* %12, i64 %88
  %90 = load i8, i8* %89, align 1, !tbaa !9
  %91 = icmp sgt i8 %87, %90
  br i1 %91, label %92, label %152

92:                                               ; preds = %85
  %93 = sext i32 %82 to i64
  %94 = getelementptr inbounds i8, i8* %12, i64 %93
  %95 = load i8, i8* %94, align 1, !tbaa !9
  %96 = icmp sgt i8 %87, %95
  br i1 %96, label %97, label %152

97:                                               ; preds = %92
  %98 = sext i32 %73 to i64
  %99 = sub nsw i64 %72, %98
  %100 = getelementptr inbounds i8, i8* %12, i64 %99
  %101 = load i8, i8* %100, align 1, !tbaa !9
  %102 = icmp sgt i8 %87, %101
  br i1 %102, label %103, label %152

103:                                              ; preds = %97
  %104 = add nsw i64 %72, %98
  %105 = getelementptr inbounds i8, i8* %12, i64 %104
  %106 = load i8, i8* %105, align 1, !tbaa !9
  %107 = icmp sgt i8 %87, %106
  br i1 %107, label %108, label %152

108:                                              ; preds = %103
  %109 = icmp eq i32* %76, %75
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  store i32 %78, i32* %76, align 4, !tbaa !7
  %111 = getelementptr inbounds i32, i32* %76, i64 1
  br label %152

112:                                              ; preds = %108
  %113 = ptrtoint i32* %75 to i64
  %114 = ptrtoint i32* %77 to i64
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 2
  %117 = icmp eq i64 %115, 9223372036854775804
  br i1 %117, label %118, label %120

118:                                              ; preds = %112
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #11
          to label %119 unwind label %150

119:                                              ; preds = %118
  unreachable

120:                                              ; preds = %112
  %121 = icmp eq i64 %115, 0
  %122 = select i1 %121, i64 1, i64 %116
  %123 = add nsw i64 %122, %116
  %124 = icmp ult i64 %123, %116
  %125 = icmp ugt i64 %123, 2305843009213693951
  %126 = or i1 %124, %125
  %127 = select i1 %126, i64 2305843009213693951, i64 %123
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %120
  %130 = shl nuw nsw i64 %127, 2
  %131 = invoke noalias nonnull i8* @_Znwm(i64 %130) #12
          to label %132 unwind label %148

132:                                              ; preds = %129
  %133 = bitcast i8* %131 to i32*
  br label %134

134:                                              ; preds = %132, %120
  %135 = phi i32* [ %133, %132 ], [ null, %120 ]
  %136 = getelementptr inbounds i32, i32* %135, i64 %116
  store i32 %78, i32* %136, align 4, !tbaa !7
  %137 = icmp sgt i64 %115, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %134
  %139 = bitcast i32* %135 to i8*
  %140 = bitcast i32* %77 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 %115, i1 false) #10
  br label %141

141:                                              ; preds = %134, %138
  %142 = getelementptr inbounds i32, i32* %136, i64 1
  %143 = icmp eq i32* %77, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %141
  %145 = bitcast i32* %77 to i8*
  call void @_ZdlPv(i8* nonnull %145) #10
  br label %146

146:                                              ; preds = %144, %141
  %147 = getelementptr inbounds i32, i32* %135, i64 %127
  br label %152

148:                                              ; preds = %129
  %149 = landingpad { i8*, i32 }
          cleanup
  br label %238

150:                                              ; preds = %118
  %151 = landingpad { i8*, i32 }
          cleanup
  br label %238

152:                                              ; preds = %146, %110, %85, %92, %97, %103, %71, %81
  %153 = phi i32* [ %77, %71 ], [ %77, %81 ], [ %77, %103 ], [ %77, %97 ], [ %77, %92 ], [ %77, %85 ], [ %135, %146 ], [ %77, %110 ]
  %154 = phi i32* [ %76, %71 ], [ %76, %81 ], [ %76, %103 ], [ %76, %97 ], [ %76, %92 ], [ %76, %85 ], [ %142, %146 ], [ %111, %110 ]
  %155 = phi i32* [ %75, %71 ], [ %75, %81 ], [ %75, %103 ], [ %75, %97 ], [ %75, %92 ], [ %75, %85 ], [ %147, %146 ], [ %75, %110 ]
  %156 = add nsw i64 %72, 1
  %157 = load i32, i32* %2, align 4, !tbaa !7
  %158 = add nsw i32 %157, -1
  %159 = mul nsw i32 %158, %157
  %160 = add nsw i32 %159, -1
  %161 = sext i32 %160 to i64
  %162 = icmp slt i64 %156, %161
  br i1 %162, label %71, label %69, !llvm.loop !12

163:                                              ; preds = %170
  %164 = load i32, i32* %2, align 4, !tbaa !7
  br label %165

165:                                              ; preds = %11, %163, %69
  %166 = phi i32* [ %153, %163 ], [ %153, %69 ], [ null, %11 ]
  %167 = phi i32 [ %164, %163 ], [ %157, %69 ], [ %13, %11 ]
  %168 = mul nsw i32 %167, %167
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %177, label %185

170:                                              ; preds = %69, %170
  %171 = phi i32* [ %175, %170 ], [ %153, %69 ]
  %172 = load i32, i32* %171, align 4, !tbaa !7
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %12, i64 %173
  store i8 88, i8* %174, align 1, !tbaa !9
  %175 = getelementptr inbounds i32, i32* %171, i64 1
  %176 = icmp eq i32* %175, %154
  br i1 %176, label %163, label %170, !llvm.loop !13

177:                                              ; preds = %233, %165
  %178 = icmp eq i32* %166, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %177
  %180 = bitcast i32* %166 to i8*
  call void @_ZdlPv(i8* nonnull %180) #10
  br label %181

181:                                              ; preds = %177, %179
  %182 = icmp eq i8* %12, null
  br i1 %182, label %184, label %183

183:                                              ; preds = %181
  call void @_ZdlPv(i8* nonnull %12) #10
  br label %184

184:                                              ; preds = %181, %183
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  ret i32 0

185:                                              ; preds = %165, %233
  %186 = phi i64 [ %191, %233 ], [ 0, %165 ]
  %187 = getelementptr inbounds i8, i8* %12, i64 %186
  %188 = load i8, i8* %187, align 1, !tbaa !9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1)
  store i8 %188, i8* %1, align 1, !tbaa !9
  %189 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull %1, i64 1)
          to label %190 unwind label %229

190:                                              ; preds = %185
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1)
  %191 = add nuw nsw i64 %186, 1
  %192 = load i32, i32* %2, align 4, !tbaa !7
  %193 = trunc i64 %191 to i32
  %194 = srem i32 %193, %192
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %233

196:                                              ; preds = %190
  %197 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !14
  %198 = getelementptr i8, i8* %197, i64 -24
  %199 = bitcast i8* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = add nsw i64 %200, 240
  %202 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %201
  %203 = bitcast i8* %202 to %"class.std::ctype"**
  %204 = load %"class.std::ctype"*, %"class.std::ctype"** %203, align 8, !tbaa !16
  %205 = icmp eq %"class.std::ctype"* %204, null
  br i1 %205, label %206, label %208

206:                                              ; preds = %196
  invoke void @_ZSt16__throw_bad_castv() #11
          to label %207 unwind label %231

207:                                              ; preds = %206
  unreachable

208:                                              ; preds = %196
  %209 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %204, i64 0, i32 8
  %210 = load i8, i8* %209, align 8, !tbaa !19
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %215, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %204, i64 0, i32 9, i64 10
  %214 = load i8, i8* %213, align 1, !tbaa !9
  br label %222

215:                                              ; preds = %208
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %204)
          to label %216 unwind label %229

216:                                              ; preds = %215
  %217 = bitcast %"class.std::ctype"* %204 to i8 (%"class.std::ctype"*, i8)***
  %218 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %217, align 8, !tbaa !14
  %219 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %218, i64 6
  %220 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %219, align 8
  %221 = invoke signext i8 %220(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %204, i8 signext 10)
          to label %222 unwind label %229

222:                                              ; preds = %216, %212
  %223 = phi i8 [ %214, %212 ], [ %221, %216 ]
  %224 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 signext %223)
          to label %225 unwind label %229

225:                                              ; preds = %222
  %226 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %224)
          to label %227 unwind label %229

227:                                              ; preds = %225
  %228 = load i32, i32* %2, align 4, !tbaa !7
  br label %233

229:                                              ; preds = %185, %215, %216, %222, %225
  %230 = landingpad { i8*, i32 }
          cleanup
  br label %238

231:                                              ; preds = %206
  %232 = landingpad { i8*, i32 }
          cleanup
  br label %238

233:                                              ; preds = %227, %190
  %234 = phi i32 [ %228, %227 ], [ %192, %190 ]
  %235 = mul nsw i32 %234, %234
  %236 = zext i32 %235 to i64
  %237 = icmp ult i64 %191, %236
  br i1 %237, label %185, label %177, !llvm.loop !21

238:                                              ; preds = %229, %231, %148, %150
  %239 = phi i32* [ %77, %148 ], [ %77, %150 ], [ %166, %231 ], [ %166, %229 ]
  %240 = phi { i8*, i32 } [ %149, %148 ], [ %151, %150 ], [ %232, %231 ], [ %230, %229 ]
  %241 = icmp eq i32* %239, null
  br i1 %241, label %251, label %242

242:                                              ; preds = %238
  %243 = bitcast i32* %239 to i8*
  call void @_ZdlPv(i8* nonnull %243) #10
  br label %251

244:                                              ; preds = %47, %21
  %245 = landingpad { i8*, i32 }
          cleanup
  br label %248

246:                                              ; preds = %36
  %247 = landingpad { i8*, i32 }
          cleanup
  br label %248

248:                                              ; preds = %246, %244
  %249 = phi { i8*, i32 } [ %245, %244 ], [ %247, %246 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  %250 = icmp eq i8* %23, null
  br i1 %250, label %254, label %251

251:                                              ; preds = %242, %238, %248
  %252 = phi i8* [ %23, %248 ], [ %12, %238 ], [ %12, %242 ]
  %253 = phi { i8*, i32 } [ %249, %248 ], [ %240, %238 ], [ %240, %242 ]
  call void @_ZdlPv(i8* nonnull %252) #10
  br label %254

254:                                              ; preds = %248, %251
  %255 = phi { i8*, i32 } [ %249, %248 ], [ %253, %251 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  resume { i8*, i32 } %255
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i8* nonnull align 1 dereferenceable(1)) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #8

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #6

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_CavityMap.cpp() #9 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #9 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nounwind }
attributes #11 = { noreturn }
attributes #12 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = !{!5, !5, i64 0}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !11}
!14 = !{!15, !15, i64 0}
!15 = !{!"vtable pointer", !6, i64 0}
!16 = !{!17, !4, i64 240}
!17 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !4, i64 216, !5, i64 224, !18, i64 225, !4, i64 232, !4, i64 240, !4, i64 248, !4, i64 256}
!18 = !{!"bool", !5, i64 0}
!19 = !{!20, !5, i64 56}
!20 = !{!"_ZTSSt5ctypeIcE", !4, i64 16, !18, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !5, i64 56, !5, i64 57, !5, i64 313, !5, i64 569}
!21 = distinct !{!21, !11}
