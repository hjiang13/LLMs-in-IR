; ModuleID = '../../Benchmarks/LexicographicallySmallerorEqualStrings/LexicographicallySmallerorEqualStrings.cpp'
source_filename = "../../Benchmarks/LexicographicallySmallerorEqualStrings/LexicographicallySmallerorEqualStrings.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct.SS = type <{ %"class.std::__cxx11::basic_string", i32, i32, i32, [4 x i8] }>
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_less_val" = type { i8 }

$_ZSt16__introsort_loopIP2SSlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_T0_T1_ = comdat any

$_ZSt11__make_heapIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_RT0_ = comdat any

$_ZSt10__pop_heapIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_S5_RT0_ = comdat any

$_ZSt13__adjust_heapIP2SSlS0_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S6_T1_T2_ = comdat any

$_ZSt11__push_heapIP2SSlS0_N9__gnu_cxx5__ops14_Iter_less_valEEvT_T0_S6_T1_RT2_ = comdat any

$_ZSt22__move_median_to_firstIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_S5_S5_T0_ = comdat any

$_ZSt21__unguarded_partitionIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEET_S5_S5_S5_T0_ = comdat any

$_ZSt4swapI2SSENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_ = comdat any

$_ZSt16__insertion_sortIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_T0_ = comdat any

$_ZSt25__unguarded_linear_insertIP2SSN9__gnu_cxx5__ops14_Val_less_iterEEvT_T0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@n = dso_local global i32 0, align 4
@i = dso_local local_unnamed_addr global i32 0, align 4
@q = dso_local global i32 0, align 4
@ans = dso_local local_unnamed_addr global [200005 x i32] zeroinitializer, align 16
@aib = dso_local local_unnamed_addr global [200005 x i32] zeroinitializer, align 16
@s = dso_local global [200005 x %struct.SS] zeroinitializer, align 16
@.str = private unnamed_addr constant [54 x i8] c"../input_files/LexicographicallySmallerorEqualStrings\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_LexicographicallySmallerorEqualStrings.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor(i8* nocapture readnone %0) #3 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  br label %2

2:                                                ; preds = %11, %1
  %3 = phi %struct.SS* [ getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 1, i64 0), %1 ], [ %4, %11 ]
  %4 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 -1
  %5 = getelementptr inbounds %struct.SS, %struct.SS* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !tbaa !3
  %7 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 -1, i32 0, i32 2
  %8 = bitcast %union.anon* %7 to i8*
  %9 = icmp eq i8* %6, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @_ZdlPv(i8* %6) #17
  br label %11

11:                                               ; preds = %2, %10
  %12 = icmp eq %struct.SS* %4, getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 0)
  br i1 %12, label %13, label %2

13:                                               ; preds = %11
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @_Z2ubi(i32 %0) local_unnamed_addr #4 {
  %2 = sub nsw i32 0, %0
  %3 = and i32 %2, %0
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable
define dso_local void @_Z6updatei(i32 %0) local_unnamed_addr #5 {
  %2 = load i32, i32* @n, align 4, !tbaa !10
  %3 = icmp slt i32 %2, %0
  br i1 %3, label %14, label %4

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %12, %4 ], [ %0, %1 ]
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [200005 x i32], [200005 x i32]* @aib, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4, !tbaa !10
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 4, !tbaa !10
  %10 = sub nsw i32 0, %5
  %11 = and i32 %5, %10
  %12 = add nsw i32 %11, %5
  %13 = icmp sgt i32 %12, %2
  br i1 %13, label %14, label %4, !llvm.loop !12

14:                                               ; preds = %4, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i32 @_Z5queryii(i32 %0, i32 %1) local_unnamed_addr #6 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %12, %4 ], [ %1, %2 ]
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [200005 x i32], [200005 x i32]* @aib, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4, !tbaa !10
  %10 = add nsw i32 %9, %5
  %11 = add i32 %6, -1
  %12 = and i32 %11, %6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %4, !llvm.loop !14

14:                                               ; preds = %4, %2
  %15 = phi i32 [ 0, %2 ], [ %10, %4 ]
  %16 = add nsw i32 %0, -1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %14, %18
  %19 = phi i32 [ %24, %18 ], [ %15, %14 ]
  %20 = phi i32 [ %26, %18 ], [ %16, %14 ]
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [200005 x i32], [200005 x i32]* @aib, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4, !tbaa !10
  %24 = sub nsw i32 %19, %23
  %25 = add i32 %20, -1
  %26 = and i32 %25, %20
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %18, !llvm.loop !15

28:                                               ; preds = %18, %14
  %29 = phi i32 [ %15, %14 ], [ %24, %18 ]
  ret i32 %29
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #8 personality i32 (...)* @__gxx_personality_v0 {
  %1 = alloca i8, align 1
  %2 = alloca i64, align 8
  %3 = alloca %struct.SS, align 8
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !16
  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %4)
  %6 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %7 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) @n)
  store i32 1, i32* @i, align 4, !tbaa !10
  %8 = load i32, i32* @n, align 4, !tbaa !10
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %23, label %10

10:                                               ; preds = %0, %10
  %11 = phi i32 [ %20, %10 ], [ 1, %0 ]
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %12, i32 0
  %14 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %13)
  %15 = load i32, i32* @i, align 4, !tbaa !10
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %16, i32 1
  store i32 %15, i32* %17, align 16, !tbaa !17
  %18 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %16, i32 3
  store i32 -1, i32* %18, align 8, !tbaa !19
  %19 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %16, i32 2
  store i32 -1, i32* %19, align 4, !tbaa !20
  %20 = add nsw i32 %15, 1
  store i32 %20, i32* @i, align 4, !tbaa !10
  %21 = load i32, i32* @n, align 4, !tbaa !10
  %22 = icmp slt i32 %15, %21
  br i1 %22, label %10, label %23, !llvm.loop !21

23:                                               ; preds = %10, %0
  %24 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) @q)
  store i32 1, i32* @i, align 4, !tbaa !10
  %25 = load i32, i32* @q, align 4, !tbaa !10
  %26 = icmp slt i32 %25, 1
  %27 = load i32, i32* @n, align 4, !tbaa !10
  br i1 %26, label %55, label %28

28:                                               ; preds = %23, %28
  %29 = phi i32 [ %48, %28 ], [ %27, %23 ]
  %30 = phi i32 [ %52, %28 ], [ 1, %23 ]
  %31 = add nsw i32 %29, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %32, i32 2
  %34 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %33)
  %35 = load i32, i32* @n, align 4, !tbaa !10
  %36 = load i32, i32* @i, align 4, !tbaa !10
  %37 = add nsw i32 %36, %35
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %38, i32 3
  %40 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %34, i32* nonnull align 4 dereferenceable(4) %39)
  %41 = load i32, i32* @n, align 4, !tbaa !10
  %42 = load i32, i32* @i, align 4, !tbaa !10
  %43 = add nsw i32 %42, %41
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %44, i32 0
  %46 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %40, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %45)
  %47 = load i32, i32* @i, align 4, !tbaa !10
  %48 = load i32, i32* @n, align 4, !tbaa !10
  %49 = add nsw i32 %48, %47
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %50, i32 1
  store i32 %47, i32* %51, align 16, !tbaa !17
  %52 = add nsw i32 %47, 1
  store i32 %52, i32* @i, align 4, !tbaa !10
  %53 = load i32, i32* @q, align 4, !tbaa !10
  %54 = icmp slt i32 %47, %53
  br i1 %54, label %28, label %55, !llvm.loop !22

55:                                               ; preds = %28, %23
  %56 = phi i32 [ %27, %23 ], [ %48, %28 ]
  %57 = phi i32 [ %25, %23 ], [ %53, %28 ]
  %58 = sext i32 %56 to i64
  %59 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %58
  %60 = sext i32 %57 to i64
  %61 = add nsw i64 %60, 1
  %62 = getelementptr inbounds %struct.SS, %struct.SS* %59, i64 %61
  %63 = icmp eq %struct.SS* %62, getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 1)
  br i1 %63, label %79, label %64

64:                                               ; preds = %55
  %65 = ptrtoint %struct.SS* %62 to i64
  %66 = sub i64 %65, ptrtoint (%struct.SS* getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 1) to i64)
  %67 = sdiv exact i64 %66, 48
  %68 = tail call i64 @llvm.ctlz.i64(i64 %67, i1 true) #17, !range !23
  %69 = shl nuw nsw i64 %68, 1
  %70 = xor i64 %69, 126
  tail call void @_ZSt16__introsort_loopIP2SSlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_T0_T1_(%struct.SS* getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 1), %struct.SS* nonnull %62, i64 %70)
  %71 = icmp sgt i64 %66, 768
  br i1 %71, label %72, label %78

72:                                               ; preds = %64
  tail call void @_ZSt16__insertion_sortIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_T0_(%struct.SS* getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 1), %struct.SS* nonnull getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 17))
  %73 = icmp eq %struct.SS* %62, getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 17)
  br i1 %73, label %79, label %74

74:                                               ; preds = %72, %74
  %75 = phi %struct.SS* [ %76, %74 ], [ getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 17), %72 ]
  tail call void @_ZSt25__unguarded_linear_insertIP2SSN9__gnu_cxx5__ops14_Val_less_iterEEvT_T0_(%struct.SS* nonnull %75)
  %76 = getelementptr inbounds %struct.SS, %struct.SS* %75, i64 1
  %77 = icmp eq %struct.SS* %76, %62
  br i1 %77, label %79, label %74, !llvm.loop !24

78:                                               ; preds = %64
  tail call void @_ZSt16__insertion_sortIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_T0_(%struct.SS* getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 1), %struct.SS* nonnull %62)
  br label %79

79:                                               ; preds = %74, %55, %72, %78
  %80 = bitcast %struct.SS* %3 to i8*
  %81 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2
  %82 = bitcast %struct.SS* %3 to %union.anon**
  %83 = bitcast i64* %2 to i8*
  %84 = bitcast %union.anon* %81 to i8*
  %85 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0
  %86 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2, i32 0
  %88 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 1
  %89 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 1
  %90 = bitcast i32* %89 to i8*
  %91 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 2
  %92 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 3
  store i32 1, i32* @i, align 4, !tbaa !10
  %93 = load i32, i32* @n, align 4, !tbaa !10
  %94 = load i32, i32* @q, align 4, !tbaa !10
  %95 = add nsw i32 %94, %93
  %96 = icmp slt i32 %95, 1
  br i1 %96, label %97, label %100

97:                                               ; preds = %174, %79
  %98 = phi i32 [ %94, %79 ], [ %178, %174 ]
  store i32 1, i32* @i, align 4, !tbaa !10
  %99 = icmp slt i32 %98, 1
  br i1 %99, label %192, label %181

100:                                              ; preds = %79, %174
  %101 = phi i32 [ %176, %174 ], [ 1, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %80) #17
  %102 = sext i32 %101 to i64
  store %union.anon* %81, %union.anon** %82, align 8, !tbaa !25
  %103 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %102, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 16, !tbaa !3
  %105 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %102, i32 0, i32 1
  %106 = load i64, i64* %105, align 8, !tbaa !26
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #17
  store i64 %106, i64* %2, align 8, !tbaa !27
  %107 = icmp ugt i64 %106, 15
  br i1 %107, label %108, label %111

108:                                              ; preds = %100
  %109 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %85, i64* nonnull align 8 dereferenceable(8) %2, i64 0)
  store i8* %109, i8** %86, align 8, !tbaa !3
  %110 = load i64, i64* %2, align 8, !tbaa !27
  store i64 %110, i64* %87, align 8, !tbaa !28
  br label %111

111:                                              ; preds = %100, %108
  %112 = phi i8* [ %109, %108 ], [ %84, %100 ]
  switch i64 %106, label %115 [
    i64 1, label %113
    i64 0, label %116
  ]

113:                                              ; preds = %111
  %114 = load i8, i8* %104, align 1, !tbaa !28
  store i8 %114, i8* %112, align 1, !tbaa !28
  br label %116

115:                                              ; preds = %111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %112, i8* align 1 %104, i64 %106, i1 false) #17
  br label %116

116:                                              ; preds = %111, %113, %115
  %117 = load i64, i64* %2, align 8, !tbaa !27
  store i64 %117, i64* %88, align 8, !tbaa !26
  %118 = load i8*, i8** %86, align 8, !tbaa !3
  %119 = getelementptr inbounds i8, i8* %118, i64 %117
  store i8 0, i8* %119, align 1, !tbaa !28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #17
  %120 = getelementptr inbounds [200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 %102, i32 1
  %121 = bitcast i32* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %90, i8* noundef nonnull align 16 dereferenceable(12) %121, i64 12, i1 false)
  %122 = load i32, i32* %91, align 4, !tbaa !20
  %123 = icmp eq i32 %122, -1
  br i1 %123, label %156, label %124

124:                                              ; preds = %116
  %125 = load i32, i32* %92, align 8, !tbaa !19
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %137, label %127

127:                                              ; preds = %124, %127
  %128 = phi i32 [ %133, %127 ], [ 0, %124 ]
  %129 = phi i32 [ %135, %127 ], [ %125, %124 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [200005 x i32], [200005 x i32]* @aib, i64 0, i64 %130
  %132 = load i32, i32* %131, align 4, !tbaa !10
  %133 = add nsw i32 %132, %128
  %134 = add i32 %129, -1
  %135 = and i32 %134, %129
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %127, !llvm.loop !14

137:                                              ; preds = %127, %124
  %138 = phi i32 [ 0, %124 ], [ %133, %127 ]
  %139 = add nsw i32 %122, -1
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %151, label %141

141:                                              ; preds = %137, %141
  %142 = phi i32 [ %147, %141 ], [ %138, %137 ]
  %143 = phi i32 [ %149, %141 ], [ %139, %137 ]
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [200005 x i32], [200005 x i32]* @aib, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4, !tbaa !10
  %147 = sub nsw i32 %142, %146
  %148 = add i32 %143, -1
  %149 = and i32 %148, %143
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %141, !llvm.loop !15

151:                                              ; preds = %141, %137
  %152 = phi i32 [ %138, %137 ], [ %147, %141 ]
  %153 = load i32, i32* %89, align 8, !tbaa !17
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [200005 x i32], [200005 x i32]* @ans, i64 0, i64 %154
  store i32 %152, i32* %155, align 4, !tbaa !10
  br label %170

156:                                              ; preds = %116
  %157 = load i32, i32* %89, align 8, !tbaa !17
  %158 = load i32, i32* @n, align 4, !tbaa !10
  %159 = icmp slt i32 %158, %157
  br i1 %159, label %170, label %160

160:                                              ; preds = %156, %160
  %161 = phi i32 [ %168, %160 ], [ %157, %156 ]
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [200005 x i32], [200005 x i32]* @aib, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4, !tbaa !10
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %163, align 4, !tbaa !10
  %166 = sub nsw i32 0, %161
  %167 = and i32 %161, %166
  %168 = add nsw i32 %167, %161
  %169 = icmp sgt i32 %168, %158
  br i1 %169, label %170, label %160, !llvm.loop !12

170:                                              ; preds = %160, %156, %151
  %171 = load i8*, i8** %86, align 8, !tbaa !3
  %172 = icmp eq i8* %171, %84
  br i1 %172, label %174, label %173

173:                                              ; preds = %170
  call void @_ZdlPv(i8* %171) #17
  br label %174

174:                                              ; preds = %170, %173
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %80) #17
  %175 = load i32, i32* @i, align 4, !tbaa !10
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* @i, align 4, !tbaa !10
  %177 = load i32, i32* @n, align 4, !tbaa !10
  %178 = load i32, i32* @q, align 4, !tbaa !10
  %179 = add nsw i32 %178, %177
  %180 = icmp slt i32 %175, %179
  br i1 %180, label %100, label %97, !llvm.loop !29

181:                                              ; preds = %97, %181
  %182 = phi i32 [ %189, %181 ], [ 1, %97 ]
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [200005 x i32], [200005 x i32]* @ans, i64 0, i64 %183
  %185 = load i32, i32* %184, align 4, !tbaa !10
  %186 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %185)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1)
  store i8 10, i8* %1, align 1, !tbaa !28
  %187 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %186, i8* nonnull %1, i64 1)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1)
  %188 = load i32, i32* @i, align 4, !tbaa !10
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* @i, align 4, !tbaa !10
  %190 = load i32, i32* @q, align 4, !tbaa !10
  %191 = icmp slt i32 %188, %190
  br i1 %191, label %181, label %192, !llvm.loop !30

192:                                              ; preds = %181, %97
  ret i32 0
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

declare dso_local zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #10

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #0

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIP2SSlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_T0_T1_(%struct.SS* %0, %struct.SS* %1, i64 %2) local_unnamed_addr #11 comdat {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %6 = ptrtoint %struct.SS* %0 to i64
  %7 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 1
  %8 = ptrtoint %struct.SS* %1 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 768
  br i1 %10, label %11, label %35

11:                                               ; preds = %3, %26
  %12 = phi i64 [ %33, %26 ], [ %9, %3 ]
  %13 = phi %struct.SS* [ %31, %26 ], [ %1, %3 ]
  %14 = phi i64 [ %27, %26 ], [ %2, %3 ]
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_less_iter", %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17)
  %18 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_less_iter", %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18)
  call void @_ZSt11__make_heapIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_RT0_(%struct.SS* %0, %struct.SS* %13, %"struct.__gnu_cxx::__ops::_Iter_less_iter"* nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18)
  br label %19

19:                                               ; preds = %16, %19
  %20 = phi %struct.SS* [ %21, %19 ], [ %13, %16 ]
  %21 = getelementptr inbounds %struct.SS, %struct.SS* %20, i64 -1
  call void @_ZSt10__pop_heapIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_S5_RT0_(%struct.SS* %0, %struct.SS* nonnull %21, %struct.SS* nonnull %21, %"struct.__gnu_cxx::__ops::_Iter_less_iter"* nonnull align 1 dereferenceable(1) %5)
  %22 = ptrtoint %struct.SS* %21 to i64
  %23 = sub i64 %22, %6
  %24 = icmp sgt i64 %23, 48
  br i1 %24, label %19, label %25, !llvm.loop !31

25:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17)
  br label %35

26:                                               ; preds = %11
  %27 = add nsw i64 %14, -1
  %28 = udiv i64 %12, 96
  %29 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %28
  %30 = getelementptr inbounds %struct.SS, %struct.SS* %13, i64 -1
  tail call void @_ZSt22__move_median_to_firstIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_S5_S5_T0_(%struct.SS* %0, %struct.SS* nonnull %7, %struct.SS* %29, %struct.SS* nonnull %30)
  %31 = tail call %struct.SS* @_ZSt21__unguarded_partitionIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEET_S5_S5_S5_T0_(%struct.SS* nonnull %7, %struct.SS* %13, %struct.SS* %0)
  tail call void @_ZSt16__introsort_loopIP2SSlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_T0_T1_(%struct.SS* %31, %struct.SS* %13, i64 %27)
  %32 = ptrtoint %struct.SS* %31 to i64
  %33 = sub i64 %32, %6
  %34 = icmp sgt i64 %33, 768
  br i1 %34, label %11, label %35, !llvm.loop !32

35:                                               ; preds = %26, %3, %25
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt11__make_heapIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_RT0_(%struct.SS* %0, %struct.SS* %1, %"struct.__gnu_cxx::__ops::_Iter_less_iter"* nonnull align 1 dereferenceable(1) %2) local_unnamed_addr #12 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %struct.SS, align 8
  %5 = alloca %struct.SS, align 8
  %6 = ptrtoint %struct.SS* %1 to i64
  %7 = ptrtoint %struct.SS* %0 to i64
  %8 = sub i64 %6, %7
  %9 = sdiv exact i64 %8, 48
  %10 = icmp slt i64 %8, 96
  br i1 %10, label %76, label %11

11:                                               ; preds = %3
  %12 = add nsw i64 %9, -2
  %13 = sdiv i64 %12, 2
  %14 = bitcast %struct.SS* %4 to i8*
  %15 = getelementptr inbounds %struct.SS, %struct.SS* %4, i64 0, i32 0, i32 2
  %16 = bitcast %struct.SS* %4 to %union.anon**
  %17 = getelementptr inbounds %struct.SS, %struct.SS* %4, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %struct.SS, %struct.SS* %4, i64 0, i32 0, i32 2, i32 0
  %19 = bitcast %union.anon* %15 to i8*
  %20 = getelementptr inbounds %struct.SS, %struct.SS* %4, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %struct.SS, %struct.SS* %4, i64 0, i32 1
  %22 = bitcast i32* %21 to i8*
  %23 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 0, i32 2
  %24 = bitcast %struct.SS* %5 to %union.anon**
  %25 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 0, i32 2, i32 0
  %27 = bitcast %union.anon* %23 to i8*
  %28 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 1
  %30 = bitcast i32* %29 to i8*
  br label %31

31:                                               ; preds = %65, %11
  %32 = phi i64 [ %13, %11 ], [ %61, %65 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #17
  %33 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %32
  store %union.anon* %15, %union.anon** %16, align 8, !tbaa !25
  %34 = getelementptr inbounds %struct.SS, %struct.SS* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8, !tbaa !3
  %36 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %32, i32 0, i32 2
  %37 = bitcast %union.anon* %36 to i8*
  %38 = icmp eq i8* %35, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %19, i8* noundef nonnull align 8 dereferenceable(16) %35, i64 16, i1 false) #17
  br label %43

40:                                               ; preds = %31
  store i8* %35, i8** %17, align 8, !tbaa !3
  %41 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %32, i32 0, i32 2, i32 0
  %42 = load i64, i64* %41, align 8, !tbaa !28
  store i64 %42, i64* %18, align 8, !tbaa !28
  br label %43

43:                                               ; preds = %39, %40
  %44 = phi i8* [ %19, %39 ], [ %35, %40 ]
  %45 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %32, i32 0, i32 1
  %46 = load i64, i64* %45, align 8, !tbaa !26
  %47 = bitcast %struct.SS* %33 to %union.anon**
  store %union.anon* %36, %union.anon** %47, align 8, !tbaa !3
  store i64 0, i64* %45, align 8, !tbaa !26
  store i8 0, i8* %37, align 8, !tbaa !28
  %48 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %32, i32 1
  %49 = bitcast i32* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %22, i8* noundef nonnull align 8 dereferenceable(12) %49, i64 12, i1 false) #17
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !25
  %50 = icmp eq i8* %44, %19
  br i1 %50, label %51, label %52

51:                                               ; preds = %43
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %27, i8* noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false) #17
  br label %54

52:                                               ; preds = %43
  store i8* %44, i8** %25, align 8, !tbaa !3
  %53 = load i64, i64* %18, align 8, !tbaa !28
  store i64 %53, i64* %26, align 8, !tbaa !28
  br label %54

54:                                               ; preds = %51, %52
  store i64 %46, i64* %28, align 8, !tbaa !26
  store %union.anon* %15, %union.anon** %16, align 8, !tbaa !3
  store i64 0, i64* %20, align 8, !tbaa !26
  store i8 0, i8* %19, align 8, !tbaa !28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %30, i8* noundef nonnull align 8 dereferenceable(12) %49, i64 12, i1 false)
  invoke void @_ZSt13__adjust_heapIP2SSlS0_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S6_T1_T2_(%struct.SS* nonnull %0, i64 %32, i64 %9, %struct.SS* nonnull %5)
          to label %55 unwind label %66

55:                                               ; preds = %54
  %56 = load i8*, i8** %25, align 8, !tbaa !3
  %57 = icmp eq i8* %56, %27
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  call void @_ZdlPv(i8* %56) #17
  br label %59

59:                                               ; preds = %55, %58
  %60 = icmp eq i64 %32, 0
  %61 = add nsw i64 %32, -1
  %62 = load i8*, i8** %17, align 8, !tbaa !3
  %63 = icmp eq i8* %62, %19
  br i1 %63, label %65, label %64

64:                                               ; preds = %59
  call void @_ZdlPv(i8* %62) #17
  br label %65

65:                                               ; preds = %59, %64
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #17
  br i1 %60, label %76, label %31, !llvm.loop !33

66:                                               ; preds = %54
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = load i8*, i8** %25, align 8, !tbaa !3
  %69 = icmp eq i8* %68, %27
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  call void @_ZdlPv(i8* %68) #17
  br label %71

71:                                               ; preds = %66, %70
  %72 = load i8*, i8** %17, align 8, !tbaa !3
  %73 = icmp eq i8* %72, %19
  br i1 %73, label %75, label %74

74:                                               ; preds = %71
  call void @_ZdlPv(i8* %72) #17
  br label %75

75:                                               ; preds = %71, %74
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #17
  resume { i8*, i32 } %67

76:                                               ; preds = %65, %3
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZSt10__pop_heapIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_S5_RT0_(%struct.SS* %0, %struct.SS* %1, %struct.SS* %2, %"struct.__gnu_cxx::__ops::_Iter_less_iter"* nonnull align 1 dereferenceable(1) %3) local_unnamed_addr #13 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %struct.SS, align 8
  %6 = alloca %struct.SS, align 8
  %7 = bitcast %struct.SS* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #17
  %8 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 0, i32 2
  %9 = bitcast %struct.SS* %5 to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !25
  %10 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !3
  %12 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 2
  %13 = bitcast %union.anon* %12 to i8*
  %14 = icmp eq i8* %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = bitcast %union.anon* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %16, i8* noundef nonnull align 8 dereferenceable(16) %11, i64 16, i1 false) #17
  br label %22

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %18, align 8, !tbaa !3
  %19 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 2, i32 0
  %20 = load i64, i64* %19, align 8, !tbaa !28
  %21 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 0, i32 2, i32 0
  store i64 %20, i64* %21, align 8, !tbaa !28
  br label %22

22:                                               ; preds = %15, %17
  %23 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 0, i32 1
  store i64 %24, i64* %25, align 8, !tbaa !26
  %26 = bitcast %struct.SS* %2 to %union.anon**
  store %union.anon* %12, %union.anon** %26, align 8, !tbaa !3
  store i64 0, i64* %23, align 8, !tbaa !26
  store i8 0, i8* %13, align 8, !tbaa !28
  %27 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 1
  %28 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 1
  %29 = bitcast i32* %27 to i8*
  %30 = bitcast i32* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %29, i8* noundef nonnull align 8 dereferenceable(12) %30, i64 12, i1 false) #17
  %31 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8, !tbaa !3
  %33 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 2
  %34 = bitcast %union.anon* %33 to i8*
  %35 = icmp eq i8* %32, %34
  br i1 %35, label %36, label %46

36:                                               ; preds = %22
  %37 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8, !tbaa !26
  switch i64 %38, label %41 [
    i64 0, label %42
    i64 1, label %39
  ]

39:                                               ; preds = %36
  %40 = load i8, i8* %32, align 1, !tbaa !28
  store i8 %40, i8* %13, align 1, !tbaa !28
  br label %42

41:                                               ; preds = %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 %32, i64 %38, i1 false) #17
  br label %42

42:                                               ; preds = %36, %41, %39
  %43 = load i64, i64* %37, align 8, !tbaa !26
  store i64 %43, i64* %23, align 8, !tbaa !26
  %44 = getelementptr inbounds i8, i8* %13, i64 %43
  store i8 0, i8* %44, align 1, !tbaa !28
  %45 = load i8*, i8** %31, align 8, !tbaa !3
  br label %53

46:                                               ; preds = %22
  %47 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 2, i32 0
  store i8* %32, i8** %10, align 8, !tbaa !3
  %48 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8, !tbaa !26
  store i64 %49, i64* %23, align 8, !tbaa !26
  %50 = getelementptr %union.anon, %union.anon* %33, i64 0, i32 0
  %51 = load i64, i64* %50, align 8, !tbaa !28
  store i64 %51, i64* %47, align 8, !tbaa !28
  %52 = bitcast %struct.SS* %0 to %union.anon**
  store %union.anon* %33, %union.anon** %52, align 8, !tbaa !3
  br label %53

53:                                               ; preds = %42, %46
  %54 = phi i8* [ %45, %42 ], [ %34, %46 ]
  %55 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %55, align 8, !tbaa !26
  store i8 0, i8* %54, align 1, !tbaa !28
  %56 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 1
  %57 = bitcast i32* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %30, i8* noundef nonnull align 8 dereferenceable(12) %57, i64 12, i1 false) #17
  %58 = ptrtoint %struct.SS* %1 to i64
  %59 = ptrtoint %struct.SS* %0 to i64
  %60 = sub i64 %58, %59
  %61 = sdiv exact i64 %60, 48
  %62 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 2
  %63 = bitcast %struct.SS* %6 to %union.anon**
  store %union.anon* %62, %union.anon** %63, align 8, !tbaa !25
  %64 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8, !tbaa !3
  %66 = bitcast %union.anon* %8 to i8*
  %67 = icmp eq i8* %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %53
  %69 = bitcast %union.anon* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %69, i8* noundef nonnull align 8 dereferenceable(16) %66, i64 16, i1 false) #17
  br label %75

70:                                               ; preds = %53
  %71 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %65, i8** %71, align 8, !tbaa !3
  %72 = getelementptr inbounds %struct.SS, %struct.SS* %5, i64 0, i32 0, i32 2, i32 0
  %73 = load i64, i64* %72, align 8, !tbaa !28
  %74 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 2, i32 0
  store i64 %73, i64* %74, align 8, !tbaa !28
  br label %75

75:                                               ; preds = %68, %70
  %76 = load i64, i64* %25, align 8, !tbaa !26
  %77 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 1
  store i64 %76, i64* %77, align 8, !tbaa !26
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !3
  store i64 0, i64* %25, align 8, !tbaa !26
  store i8 0, i8* %66, align 8, !tbaa !28
  %78 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 1
  %79 = bitcast i32* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %79, i8* noundef nonnull align 8 dereferenceable(12) %29, i64 12, i1 false) #17
  invoke void @_ZSt13__adjust_heapIP2SSlS0_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S6_T1_T2_(%struct.SS* nonnull %0, i64 0, i64 %61, %struct.SS* nonnull %6)
          to label %80 unwind label %91

80:                                               ; preds = %75
  %81 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8, !tbaa !3
  %83 = bitcast %union.anon* %62 to i8*
  %84 = icmp eq i8* %82, %83
  br i1 %84, label %86, label %85

85:                                               ; preds = %80
  call void @_ZdlPv(i8* %82) #17
  br label %86

86:                                               ; preds = %80, %85
  %87 = load i8*, i8** %64, align 8, !tbaa !3
  %88 = icmp eq i8* %87, %66
  br i1 %88, label %90, label %89

89:                                               ; preds = %86
  call void @_ZdlPv(i8* %87) #17
  br label %90

90:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #17
  ret void

91:                                               ; preds = %75
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8, !tbaa !3
  %95 = bitcast %union.anon* %62 to i8*
  %96 = icmp eq i8* %94, %95
  br i1 %96, label %98, label %97

97:                                               ; preds = %91
  call void @_ZdlPv(i8* %94) #17
  br label %98

98:                                               ; preds = %91, %97
  %99 = load i8*, i8** %64, align 8, !tbaa !3
  %100 = icmp eq i8* %99, %66
  br i1 %100, label %102, label %101

101:                                              ; preds = %98
  call void @_ZdlPv(i8* %99) #17
  br label %102

102:                                              ; preds = %98, %101
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #17
  resume { i8*, i32 } %92
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt13__adjust_heapIP2SSlS0_N9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S6_T1_T2_(%struct.SS* %0, i64 %1, i64 %2, %struct.SS* %3) local_unnamed_addr #12 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %6 = alloca %struct.SS, align 8
  %7 = add nsw i64 %2, -1
  %8 = sdiv i64 %7, 2
  %9 = icmp sgt i64 %8, %1
  br i1 %9, label %10, label %96

10:                                               ; preds = %4, %88
  %11 = phi i64 [ %46, %88 ], [ %1, %4 ]
  %12 = shl i64 %11, 1
  %13 = add i64 %12, 2
  %14 = or i64 %12, 1
  %15 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %13, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !tbaa !26
  %17 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %14, i32 0, i32 1
  %18 = load i64, i64* %17, align 8, !tbaa !26
  %19 = icmp ugt i64 %16, %18
  %20 = select i1 %19, i64 %18, i64 %16
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %14, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8, !tbaa !3
  %25 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %13, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !tbaa !3
  %27 = tail call i32 @memcmp(i8* %26, i8* %24, i64 %20) #17
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %22, %10
  %30 = sub i64 %16, %18
  %31 = icmp sgt i64 %30, -2147483648
  %32 = select i1 %31, i64 %30, i64 -2147483648
  %33 = icmp slt i64 %32, 2147483647
  %34 = select i1 %33, i64 %32, i64 2147483647
  %35 = trunc i64 %34 to i32
  br label %36

36:                                               ; preds = %22, %29
  %37 = phi i32 [ %27, %22 ], [ %35, %29 ]
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %37, 0
  %40 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %13, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %14, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %41, %43
  %45 = select i1 %38, i1 %44, i1 %39
  %46 = select i1 %45, i64 %14, i64 %13
  %47 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %46
  %48 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %struct.SS, %struct.SS* %47, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8, !tbaa !3
  %51 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %46, i32 0, i32 2
  %52 = bitcast %union.anon* %51 to i8*
  %53 = icmp eq i8* %50, %52
  br i1 %53, label %54, label %70

54:                                               ; preds = %36
  %55 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %46, i32 0, i32 1
  %56 = load i64, i64* %55, align 8, !tbaa !26
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %54
  %59 = load i8*, i8** %48, align 8, !tbaa !3
  %60 = icmp eq i64 %56, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = load i8, i8* %50, align 1, !tbaa !28
  store i8 %62, i8* %59, align 1, !tbaa !28
  br label %64

63:                                               ; preds = %58
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %50, i64 %56, i1 false) #17
  br label %64

64:                                               ; preds = %63, %61, %54
  %65 = load i64, i64* %55, align 8, !tbaa !26
  %66 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 0, i32 1
  store i64 %65, i64* %66, align 8, !tbaa !26
  %67 = load i8*, i8** %48, align 8, !tbaa !3
  %68 = getelementptr inbounds i8, i8* %67, i64 %65
  store i8 0, i8* %68, align 1, !tbaa !28
  %69 = load i8*, i8** %49, align 8, !tbaa !3
  br label %88

70:                                               ; preds = %36
  %71 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 0, i32 2
  %72 = bitcast %union.anon* %71 to i8*
  %73 = load i8*, i8** %48, align 8, !tbaa !3
  %74 = icmp eq i8* %73, %72
  %75 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 0, i32 2, i32 0
  %76 = load i64, i64* %75, align 8
  store i8* %50, i8** %48, align 8, !tbaa !3
  %77 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %46, i32 0, i32 1
  %78 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 0, i32 1
  %79 = bitcast i64* %77 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !tbaa !28
  %81 = bitcast i64* %78 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %81, align 8, !tbaa !28
  %82 = icmp eq i8* %73, null
  %83 = or i1 %74, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %70
  store i8* %73, i8** %49, align 8, !tbaa !3
  %85 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %46, i32 0, i32 2, i32 0
  store i64 %76, i64* %85, align 8, !tbaa !28
  br label %88

86:                                               ; preds = %70
  %87 = bitcast %struct.SS* %47 to %union.anon**
  store %union.anon* %51, %union.anon** %87, align 8, !tbaa !3
  br label %88

88:                                               ; preds = %64, %84, %86
  %89 = phi i8* [ %69, %64 ], [ %73, %84 ], [ %52, %86 ]
  %90 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %46, i32 0, i32 1
  store i64 0, i64* %90, align 8, !tbaa !26
  store i8 0, i8* %89, align 1, !tbaa !28
  %91 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 1
  %92 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %46, i32 1
  %93 = bitcast i32* %91 to i8*
  %94 = bitcast i32* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %93, i8* noundef nonnull align 8 dereferenceable(12) %94, i64 12, i1 false) #17
  %95 = icmp slt i64 %46, %8
  br i1 %95, label %10, label %96, !llvm.loop !34

96:                                               ; preds = %88, %4
  %97 = phi i64 [ %1, %4 ], [ %46, %88 ]
  %98 = and i64 %2, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %155

100:                                              ; preds = %96
  %101 = add nsw i64 %2, -2
  %102 = sdiv i64 %101, 2
  %103 = icmp eq i64 %97, %102
  br i1 %103, label %104, label %155

104:                                              ; preds = %100
  %105 = shl i64 %97, 1
  %106 = or i64 %105, 1
  %107 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %106
  %108 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %97, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %struct.SS, %struct.SS* %107, i64 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8, !tbaa !3
  %111 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %106, i32 0, i32 2
  %112 = bitcast %union.anon* %111 to i8*
  %113 = icmp eq i8* %110, %112
  br i1 %113, label %114, label %130

114:                                              ; preds = %104
  %115 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %106, i32 0, i32 1
  %116 = load i64, i64* %115, align 8, !tbaa !26
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %124, label %118

118:                                              ; preds = %114
  %119 = load i8*, i8** %108, align 8, !tbaa !3
  %120 = icmp eq i64 %116, 1
  br i1 %120, label %121, label %123

121:                                              ; preds = %118
  %122 = load i8, i8* %110, align 1, !tbaa !28
  store i8 %122, i8* %119, align 1, !tbaa !28
  br label %124

123:                                              ; preds = %118
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %119, i8* align 1 %110, i64 %116, i1 false) #17
  br label %124

124:                                              ; preds = %123, %121, %114
  %125 = load i64, i64* %115, align 8, !tbaa !26
  %126 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %97, i32 0, i32 1
  store i64 %125, i64* %126, align 8, !tbaa !26
  %127 = load i8*, i8** %108, align 8, !tbaa !3
  %128 = getelementptr inbounds i8, i8* %127, i64 %125
  store i8 0, i8* %128, align 1, !tbaa !28
  %129 = load i8*, i8** %109, align 8, !tbaa !3
  br label %148

130:                                              ; preds = %104
  %131 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %97, i32 0, i32 2
  %132 = bitcast %union.anon* %131 to i8*
  %133 = load i8*, i8** %108, align 8, !tbaa !3
  %134 = icmp eq i8* %133, %132
  %135 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %97, i32 0, i32 2, i32 0
  %136 = load i64, i64* %135, align 8
  store i8* %110, i8** %108, align 8, !tbaa !3
  %137 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %106, i32 0, i32 1
  %138 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %97, i32 0, i32 1
  %139 = bitcast i64* %137 to <2 x i64>*
  %140 = load <2 x i64>, <2 x i64>* %139, align 8, !tbaa !28
  %141 = bitcast i64* %138 to <2 x i64>*
  store <2 x i64> %140, <2 x i64>* %141, align 8, !tbaa !28
  %142 = icmp eq i8* %133, null
  %143 = or i1 %134, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %130
  store i8* %133, i8** %109, align 8, !tbaa !3
  %145 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %106, i32 0, i32 2, i32 0
  store i64 %136, i64* %145, align 8, !tbaa !28
  br label %148

146:                                              ; preds = %130
  %147 = bitcast %struct.SS* %107 to %union.anon**
  store %union.anon* %111, %union.anon** %147, align 8, !tbaa !3
  br label %148

148:                                              ; preds = %124, %144, %146
  %149 = phi i8* [ %129, %124 ], [ %133, %144 ], [ %112, %146 ]
  %150 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %106, i32 0, i32 1
  store i64 0, i64* %150, align 8, !tbaa !26
  store i8 0, i8* %149, align 1, !tbaa !28
  %151 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %97, i32 1
  %152 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %106, i32 1
  %153 = bitcast i32* %151 to i8*
  %154 = bitcast i32* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %153, i8* noundef nonnull align 8 dereferenceable(12) %154, i64 12, i1 false) #17
  br label %155

155:                                              ; preds = %148, %100, %96
  %156 = phi i64 [ %106, %148 ], [ %97, %100 ], [ %97, %96 ]
  %157 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_less_val", %"struct.__gnu_cxx::__ops::_Iter_less_val"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %157) #17
  %158 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 2
  %159 = bitcast %struct.SS* %6 to %union.anon**
  store %union.anon* %158, %union.anon** %159, align 8, !tbaa !25
  %160 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8, !tbaa !3
  %162 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2
  %163 = bitcast %union.anon* %162 to i8*
  %164 = icmp eq i8* %161, %163
  br i1 %164, label %165, label %167

165:                                              ; preds = %155
  %166 = bitcast %union.anon* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %166, i8* noundef nonnull align 8 dereferenceable(16) %161, i64 16, i1 false) #17
  br label %172

167:                                              ; preds = %155
  %168 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %161, i8** %168, align 8, !tbaa !3
  %169 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2, i32 0
  %170 = load i64, i64* %169, align 8, !tbaa !28
  %171 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 2, i32 0
  store i64 %170, i64* %171, align 8, !tbaa !28
  br label %172

172:                                              ; preds = %165, %167
  %173 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 1
  %174 = load i64, i64* %173, align 8, !tbaa !26
  %175 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 1
  store i64 %174, i64* %175, align 8, !tbaa !26
  %176 = bitcast %struct.SS* %3 to %union.anon**
  store %union.anon* %162, %union.anon** %176, align 8, !tbaa !3
  store i64 0, i64* %173, align 8, !tbaa !26
  store i8 0, i8* %163, align 8, !tbaa !28
  %177 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 1
  %178 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 1
  %179 = bitcast i32* %177 to i8*
  %180 = bitcast i32* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %179, i8* noundef nonnull align 8 dereferenceable(12) %180, i64 12, i1 false) #17
  invoke void @_ZSt11__push_heapIP2SSlS0_N9__gnu_cxx5__ops14_Iter_less_valEEvT_T0_S6_T1_RT2_(%struct.SS* %0, i64 %156, i64 %1, %struct.SS* nonnull %6, %"struct.__gnu_cxx::__ops::_Iter_less_val"* nonnull align 1 dereferenceable(1) %5)
          to label %181 unwind label %188

181:                                              ; preds = %172
  %182 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8, !tbaa !3
  %184 = bitcast %union.anon* %158 to i8*
  %185 = icmp eq i8* %183, %184
  br i1 %185, label %187, label %186

186:                                              ; preds = %181
  call void @_ZdlPv(i8* %183) #17
  br label %187

187:                                              ; preds = %181, %186
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %157) #17
  ret void

188:                                              ; preds = %172
  %189 = landingpad { i8*, i32 }
          cleanup
  %190 = getelementptr inbounds %struct.SS, %struct.SS* %6, i64 0, i32 0, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8, !tbaa !3
  %192 = bitcast %union.anon* %158 to i8*
  %193 = icmp eq i8* %191, %192
  br i1 %193, label %195, label %194

194:                                              ; preds = %188
  call void @_ZdlPv(i8* %191) #17
  br label %195

195:                                              ; preds = %188, %194
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %157) #17
  resume { i8*, i32 } %189
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt11__push_heapIP2SSlS0_N9__gnu_cxx5__ops14_Iter_less_valEEvT_T0_S6_T1_RT2_(%struct.SS* %0, i64 %1, i64 %2, %struct.SS* %3, %"struct.__gnu_cxx::__ops::_Iter_less_val"* nonnull align 1 dereferenceable(1) %4) local_unnamed_addr #12 comdat personality i32 (...)* @__gxx_personality_v0 {
  %6 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 2
  %9 = icmp sgt i64 %1, %2
  br i1 %9, label %10, label %87

10:                                               ; preds = %5, %80
  %11 = phi i64 [ %13, %80 ], [ %1, %5 ]
  %12 = add nsw i64 %11, -1
  %13 = sdiv i64 %12, 2
  %14 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %13
  %15 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %13, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !tbaa !26
  %17 = load i64, i64* %6, align 8, !tbaa !26
  %18 = icmp ugt i64 %16, %17
  %19 = select i1 %18, i64 %17, i64 %16
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %10
  %22 = load i8*, i8** %7, align 8, !tbaa !3
  %23 = getelementptr inbounds %struct.SS, %struct.SS* %14, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8, !tbaa !3
  %25 = tail call i32 @memcmp(i8* %24, i8* %22, i64 %19) #17
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %21, %10
  %28 = sub i64 %16, %17
  %29 = icmp sgt i64 %28, -2147483648
  %30 = select i1 %29, i64 %28, i64 -2147483648
  %31 = icmp slt i64 %30, 2147483647
  %32 = select i1 %31, i64 %30, i64 2147483647
  %33 = trunc i64 %32 to i32
  br label %34

34:                                               ; preds = %21, %27
  %35 = phi i32 [ %25, %21 ], [ %33, %27 ]
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %35, 0
  %38 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %13, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %8, align 4
  %41 = icmp slt i32 %39, %40
  %42 = select i1 %36, i1 %41, i1 %37
  br i1 %42, label %43, label %87

43:                                               ; preds = %34
  %44 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %struct.SS, %struct.SS* %14, i64 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8, !tbaa !3
  %47 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %13, i32 0, i32 2
  %48 = bitcast %union.anon* %47 to i8*
  %49 = icmp eq i8* %46, %48
  br i1 %49, label %50, label %64

50:                                               ; preds = %43
  %51 = icmp eq i64 %16, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %50
  %53 = load i8*, i8** %44, align 8, !tbaa !3
  %54 = icmp eq i64 %16, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = load i8, i8* %46, align 1, !tbaa !28
  store i8 %56, i8* %53, align 1, !tbaa !28
  br label %58

57:                                               ; preds = %52
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %46, i64 %16, i1 false) #17
  br label %58

58:                                               ; preds = %57, %55, %50
  %59 = load i64, i64* %15, align 8, !tbaa !26
  %60 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 0, i32 1
  store i64 %59, i64* %60, align 8, !tbaa !26
  %61 = load i8*, i8** %44, align 8, !tbaa !3
  %62 = getelementptr inbounds i8, i8* %61, i64 %59
  store i8 0, i8* %62, align 1, !tbaa !28
  %63 = load i8*, i8** %45, align 8, !tbaa !3
  br label %80

64:                                               ; preds = %43
  %65 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 0, i32 2
  %66 = bitcast %union.anon* %65 to i8*
  %67 = load i8*, i8** %44, align 8, !tbaa !3
  %68 = icmp eq i8* %67, %66
  %69 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 0, i32 2, i32 0
  %70 = load i64, i64* %69, align 8
  store i8* %46, i8** %44, align 8, !tbaa !3
  %71 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 0, i32 1
  store i64 %16, i64* %71, align 8, !tbaa !26
  %72 = getelementptr %union.anon, %union.anon* %47, i64 0, i32 0
  %73 = load i64, i64* %72, align 8, !tbaa !28
  store i64 %73, i64* %69, align 8, !tbaa !28
  %74 = icmp eq i8* %67, null
  %75 = or i1 %68, %74
  br i1 %75, label %78, label %76

76:                                               ; preds = %64
  store i8* %67, i8** %45, align 8, !tbaa !3
  %77 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %13, i32 0, i32 2, i32 0
  store i64 %70, i64* %77, align 8, !tbaa !28
  br label %80

78:                                               ; preds = %64
  %79 = bitcast %struct.SS* %14 to %union.anon**
  store %union.anon* %47, %union.anon** %79, align 8, !tbaa !3
  br label %80

80:                                               ; preds = %58, %76, %78
  %81 = phi i8* [ %63, %58 ], [ %67, %76 ], [ %48, %78 ]
  store i64 0, i64* %15, align 8, !tbaa !26
  store i8 0, i8* %81, align 1, !tbaa !28
  %82 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %11, i32 1
  %83 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %13, i32 1
  %84 = bitcast i32* %82 to i8*
  %85 = bitcast i32* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %84, i8* noundef nonnull align 8 dereferenceable(12) %85, i64 12, i1 false) #17
  %86 = icmp sgt i64 %13, %2
  br i1 %86, label %10, label %87, !llvm.loop !35

87:                                               ; preds = %34, %80, %5
  %88 = phi i64 [ %1, %5 ], [ %13, %80 ], [ %11, %34 ]
  %89 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %88, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %7, align 8, !tbaa !3
  %91 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2
  %92 = bitcast %union.anon* %91 to i8*
  %93 = icmp eq i8* %90, %92
  br i1 %93, label %94, label %109

94:                                               ; preds = %87
  %95 = load i64, i64* %6, align 8, !tbaa !26
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %94
  %98 = load i8*, i8** %89, align 8, !tbaa !3
  %99 = icmp eq i64 %95, 1
  br i1 %99, label %100, label %102

100:                                              ; preds = %97
  %101 = load i8, i8* %90, align 1, !tbaa !28
  store i8 %101, i8* %98, align 1, !tbaa !28
  br label %103

102:                                              ; preds = %97
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %98, i8* align 1 %90, i64 %95, i1 false) #17
  br label %103

103:                                              ; preds = %102, %100, %94
  %104 = load i64, i64* %6, align 8, !tbaa !26
  %105 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %88, i32 0, i32 1
  store i64 %104, i64* %105, align 8, !tbaa !26
  %106 = load i8*, i8** %89, align 8, !tbaa !3
  %107 = getelementptr inbounds i8, i8* %106, i64 %104
  store i8 0, i8* %107, align 1, !tbaa !28
  %108 = load i8*, i8** %7, align 8, !tbaa !3
  br label %126

109:                                              ; preds = %87
  %110 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %88, i32 0, i32 2
  %111 = bitcast %union.anon* %110 to i8*
  %112 = load i8*, i8** %89, align 8, !tbaa !3
  %113 = icmp eq i8* %112, %111
  %114 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %88, i32 0, i32 2, i32 0
  %115 = load i64, i64* %114, align 8
  store i8* %90, i8** %89, align 8, !tbaa !3
  %116 = load i64, i64* %6, align 8, !tbaa !26
  %117 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %88, i32 0, i32 1
  store i64 %116, i64* %117, align 8, !tbaa !26
  %118 = getelementptr %union.anon, %union.anon* %91, i64 0, i32 0
  %119 = load i64, i64* %118, align 8, !tbaa !28
  store i64 %119, i64* %114, align 8, !tbaa !28
  %120 = icmp eq i8* %112, null
  %121 = or i1 %113, %120
  br i1 %121, label %124, label %122

122:                                              ; preds = %109
  store i8* %112, i8** %7, align 8, !tbaa !3
  %123 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2, i32 0
  store i64 %115, i64* %123, align 8, !tbaa !28
  br label %126

124:                                              ; preds = %109
  %125 = bitcast %struct.SS* %3 to %union.anon**
  store %union.anon* %91, %union.anon** %125, align 8, !tbaa !3
  br label %126

126:                                              ; preds = %103, %122, %124
  %127 = phi i8* [ %108, %103 ], [ %112, %122 ], [ %92, %124 ]
  store i64 0, i64* %6, align 8, !tbaa !26
  store i8 0, i8* %127, align 1, !tbaa !28
  %128 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 %88, i32 1
  %129 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 1
  %130 = bitcast i32* %128 to i8*
  %131 = bitcast i32* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %130, i8* noundef nonnull align 8 dereferenceable(12) %131, i64 12, i1 false) #17
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare dso_local i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZSt22__move_median_to_firstIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_S5_S5_T0_(%struct.SS* %0, %struct.SS* %1, %struct.SS* %2, %struct.SS* %3) local_unnamed_addr #11 comdat {
  %5 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !tbaa !26
  %7 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8, !tbaa !26
  %9 = icmp ugt i64 %6, %8
  %10 = select i1 %9, i64 %8, i64 %6
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !3
  %15 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8, !tbaa !3
  %17 = tail call i32 @memcmp(i8* %16, i8* %14, i64 %10) #17
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %12, %4
  %20 = sub i64 %6, %8
  %21 = icmp sgt i64 %20, -2147483648
  %22 = select i1 %21, i64 %20, i64 -2147483648
  %23 = icmp slt i64 %22, 2147483647
  %24 = select i1 %23, i64 %22, i64 2147483647
  %25 = trunc i64 %24 to i32
  br label %26

26:                                               ; preds = %12, %19
  %27 = phi i32 [ %17, %12 ], [ %25, %19 ]
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %27, 0
  %30 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %31, %33
  %35 = select i1 %28, i1 %34, i1 %29
  %36 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !tbaa !26
  br i1 %35, label %38, label %89

38:                                               ; preds = %26
  %39 = icmp ugt i64 %8, %37
  %40 = select i1 %39, i64 %37, i64 %8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8, !tbaa !3
  %45 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8, !tbaa !3
  %47 = tail call i32 @memcmp(i8* %46, i8* %44, i64 %40) #17
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %42, %38
  %50 = sub i64 %8, %37
  %51 = icmp sgt i64 %50, -2147483648
  %52 = select i1 %51, i64 %50, i64 -2147483648
  %53 = icmp slt i64 %52, 2147483647
  %54 = select i1 %53, i64 %52, i64 2147483647
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %42, %49
  %57 = phi i32 [ %47, %42 ], [ %55, %49 ]
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %57, 0
  %60 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %33, %61
  %63 = select i1 %58, i1 %62, i1 %59
  br i1 %63, label %140, label %64

64:                                               ; preds = %56
  %65 = icmp ugt i64 %6, %37
  %66 = select i1 %65, i64 %37, i64 %6
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %75, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8, !tbaa !3
  %71 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8, !tbaa !3
  %73 = tail call i32 @memcmp(i8* %72, i8* %70, i64 %66) #17
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %82

75:                                               ; preds = %68, %64
  %76 = sub i64 %6, %37
  %77 = icmp sgt i64 %76, -2147483648
  %78 = select i1 %77, i64 %76, i64 -2147483648
  %79 = icmp slt i64 %78, 2147483647
  %80 = select i1 %79, i64 %78, i64 2147483647
  %81 = trunc i64 %80 to i32
  br label %82

82:                                               ; preds = %68, %75
  %83 = phi i32 [ %73, %68 ], [ %81, %75 ]
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %83, 0
  %86 = icmp slt i32 %31, %61
  %87 = select i1 %84, i1 %86, i1 %85
  %88 = select i1 %87, %struct.SS* %3, %struct.SS* %1
  br label %140

89:                                               ; preds = %26
  %90 = icmp ugt i64 %6, %37
  %91 = select i1 %90, i64 %37, i64 %6
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8, !tbaa !3
  %96 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8, !tbaa !3
  %98 = tail call i32 @memcmp(i8* %97, i8* %95, i64 %91) #17
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %107

100:                                              ; preds = %93, %89
  %101 = sub i64 %6, %37
  %102 = icmp sgt i64 %101, -2147483648
  %103 = select i1 %102, i64 %101, i64 -2147483648
  %104 = icmp slt i64 %103, 2147483647
  %105 = select i1 %104, i64 %103, i64 2147483647
  %106 = trunc i64 %105 to i32
  br label %107

107:                                              ; preds = %93, %100
  %108 = phi i32 [ %98, %93 ], [ %106, %100 ]
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %108, 0
  %111 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp slt i32 %31, %112
  %114 = select i1 %109, i1 %113, i1 %110
  br i1 %114, label %140, label %115

115:                                              ; preds = %107
  %116 = icmp ugt i64 %8, %37
  %117 = select i1 %116, i64 %37, i64 %8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %126, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8, !tbaa !3
  %122 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8, !tbaa !3
  %124 = tail call i32 @memcmp(i8* %123, i8* %121, i64 %117) #17
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %133

126:                                              ; preds = %119, %115
  %127 = sub i64 %8, %37
  %128 = icmp sgt i64 %127, -2147483648
  %129 = select i1 %128, i64 %127, i64 -2147483648
  %130 = icmp slt i64 %129, 2147483647
  %131 = select i1 %130, i64 %129, i64 2147483647
  %132 = trunc i64 %131 to i32
  br label %133

133:                                              ; preds = %119, %126
  %134 = phi i32 [ %124, %119 ], [ %132, %126 ]
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %134, 0
  %137 = icmp slt i32 %33, %112
  %138 = select i1 %135, i1 %137, i1 %136
  %139 = select i1 %138, %struct.SS* %3, %struct.SS* %2
  br label %140

140:                                              ; preds = %133, %107, %82, %56
  %141 = phi %struct.SS* [ %2, %56 ], [ %88, %82 ], [ %1, %107 ], [ %139, %133 ]
  tail call void @_ZSt4swapI2SSENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_(%struct.SS* nonnull align 8 dereferenceable(44) %0, %struct.SS* nonnull align 8 dereferenceable(44) %141) #17
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local %struct.SS* @_ZSt21__unguarded_partitionIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEET_S5_S5_S5_T0_(%struct.SS* %0, %struct.SS* %1, %struct.SS* %2) local_unnamed_addr #11 comdat {
  %4 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 2
  br label %7

7:                                                ; preds = %3, %73
  %8 = phi %struct.SS* [ %1, %3 ], [ %43, %73 ]
  %9 = phi %struct.SS* [ %0, %3 ], [ %40, %73 ]
  %10 = load i64, i64* %4, align 8, !tbaa !26
  %11 = load i32, i32* %6, align 4
  br label %12

12:                                               ; preds = %32, %7
  %13 = phi %struct.SS* [ %9, %7 ], [ %40, %32 ]
  %14 = getelementptr inbounds %struct.SS, %struct.SS* %13, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !tbaa !26
  %16 = icmp ugt i64 %15, %10
  %17 = select i1 %16, i64 %10, i64 %15
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %12
  %20 = load i8*, i8** %5, align 8, !tbaa !3
  %21 = getelementptr inbounds %struct.SS, %struct.SS* %13, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !tbaa !3
  %23 = tail call i32 @memcmp(i8* %22, i8* %20, i64 %17) #17
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %19, %12
  %26 = sub i64 %15, %10
  %27 = icmp sgt i64 %26, -2147483648
  %28 = select i1 %27, i64 %26, i64 -2147483648
  %29 = icmp slt i64 %28, 2147483647
  %30 = select i1 %29, i64 %28, i64 2147483647
  %31 = trunc i64 %30 to i32
  br label %32

32:                                               ; preds = %19, %25
  %33 = phi i32 [ %23, %19 ], [ %31, %25 ]
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %33, 0
  %36 = getelementptr inbounds %struct.SS, %struct.SS* %13, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, %11
  %39 = select i1 %34, i1 %38, i1 %35
  %40 = getelementptr inbounds %struct.SS, %struct.SS* %13, i64 1
  br i1 %39, label %12, label %41, !llvm.loop !36

41:                                               ; preds = %32, %62
  %42 = phi %struct.SS* [ %43, %62 ], [ %8, %32 ]
  %43 = getelementptr inbounds %struct.SS, %struct.SS* %42, i64 -1
  %44 = getelementptr inbounds %struct.SS, %struct.SS* %42, i64 -1, i32 0, i32 1
  %45 = load i64, i64* %44, align 8, !tbaa !26
  %46 = icmp ugt i64 %10, %45
  %47 = select i1 %46, i64 %45, i64 %10
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.SS, %struct.SS* %43, i64 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8, !tbaa !3
  %52 = load i8*, i8** %5, align 8, !tbaa !3
  %53 = tail call i32 @memcmp(i8* %52, i8* %51, i64 %47) #17
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %49, %41
  %56 = sub i64 %10, %45
  %57 = icmp sgt i64 %56, -2147483648
  %58 = select i1 %57, i64 %56, i64 -2147483648
  %59 = icmp slt i64 %58, 2147483647
  %60 = select i1 %59, i64 %58, i64 2147483647
  %61 = trunc i64 %60 to i32
  br label %62

62:                                               ; preds = %49, %55
  %63 = phi i32 [ %53, %49 ], [ %61, %55 ]
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %63, 0
  %66 = getelementptr inbounds %struct.SS, %struct.SS* %42, i64 -1, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %11, %67
  %69 = select i1 %64, i1 %68, i1 %65
  br i1 %69, label %41, label %70, !llvm.loop !37

70:                                               ; preds = %62
  %71 = icmp ult %struct.SS* %13, %43
  br i1 %71, label %73, label %72

72:                                               ; preds = %70
  ret %struct.SS* %13

73:                                               ; preds = %70
  tail call void @_ZSt4swapI2SSENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_(%struct.SS* nonnull align 8 dereferenceable(44) %13, %struct.SS* nonnull align 8 dereferenceable(44) %43) #17
  br label %7, !llvm.loop !38
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZSt4swapI2SSENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_(%struct.SS* nonnull align 8 dereferenceable(44) %0, %struct.SS* nonnull align 8 dereferenceable(44) %1) local_unnamed_addr #15 comdat personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca %struct.SS, align 8
  %4 = bitcast %struct.SS* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #17
  %5 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2
  %6 = bitcast %struct.SS* %3 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !25
  %7 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !3
  %9 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 2
  %10 = bitcast %union.anon* %9 to i8*
  %11 = icmp eq i8* %8, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %union.anon* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %13, i8* noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false) #17
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %8, i8** %15, align 8, !tbaa !3
  %16 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 2, i32 0
  %17 = load i64, i64* %16, align 8, !tbaa !28
  %18 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2, i32 0
  store i64 %17, i64* %18, align 8, !tbaa !28
  br label %19

19:                                               ; preds = %12, %14
  %20 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !tbaa !26
  %22 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 1
  store i64 %21, i64* %22, align 8, !tbaa !26
  %23 = bitcast %struct.SS* %0 to %union.anon**
  store %union.anon* %9, %union.anon** %23, align 8, !tbaa !3
  store i64 0, i64* %20, align 8, !tbaa !26
  store i8 0, i8* %10, align 8, !tbaa !28
  %24 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 1
  %25 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 1
  %26 = bitcast i32* %24 to i8*
  %27 = bitcast i32* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %26, i8* noundef nonnull align 8 dereferenceable(12) %27, i64 12, i1 false) #17
  %28 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8, !tbaa !3
  %30 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 0, i32 2
  %31 = bitcast %union.anon* %30 to i8*
  %32 = icmp eq i8* %29, %31
  br i1 %32, label %33, label %43

33:                                               ; preds = %19
  %34 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8, !tbaa !26
  switch i64 %35, label %38 [
    i64 0, label %39
    i64 1, label %36
  ]

36:                                               ; preds = %33
  %37 = load i8, i8* %29, align 1, !tbaa !28
  store i8 %37, i8* %10, align 8, !tbaa !28
  br label %39

38:                                               ; preds = %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 %29, i64 %35, i1 false) #17
  br label %39

39:                                               ; preds = %33, %38, %36
  %40 = load i64, i64* %34, align 8, !tbaa !26
  store i64 %40, i64* %20, align 8, !tbaa !26
  %41 = getelementptr inbounds i8, i8* %10, i64 %40
  store i8 0, i8* %41, align 1, !tbaa !28
  %42 = load i8*, i8** %28, align 8, !tbaa !3
  br label %50

43:                                               ; preds = %19
  %44 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 2, i32 0
  store i8* %29, i8** %7, align 8, !tbaa !3
  %45 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8, !tbaa !26
  store i64 %46, i64* %20, align 8, !tbaa !26
  %47 = getelementptr %union.anon, %union.anon* %30, i64 0, i32 0
  %48 = load i64, i64* %47, align 8, !tbaa !28
  store i64 %48, i64* %44, align 8, !tbaa !28
  %49 = bitcast %struct.SS* %1 to %union.anon**
  store %union.anon* %30, %union.anon** %49, align 8, !tbaa !3
  br label %50

50:                                               ; preds = %39, %43
  %51 = phi i8* [ %42, %39 ], [ %31, %43 ]
  %52 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 0, i32 1
  store i8 0, i8* %51, align 1, !tbaa !28
  %53 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 1
  %54 = bitcast i32* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %27, i8* noundef nonnull align 8 dereferenceable(12) %54, i64 12, i1 false) #17
  %55 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8, !tbaa !3
  %57 = bitcast %union.anon* %5 to i8*
  %58 = icmp eq i8* %56, %57
  br i1 %58, label %59, label %73

59:                                               ; preds = %50
  %60 = load i64, i64* %22, align 8, !tbaa !26
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %59
  %63 = load i8*, i8** %28, align 8, !tbaa !3
  %64 = icmp eq i64 %60, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %62
  %66 = load i8, i8* %57, align 8, !tbaa !28
  store i8 %66, i8* %63, align 1, !tbaa !28
  br label %68

67:                                               ; preds = %62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* nonnull align 8 %57, i64 %60, i1 false) #17
  br label %68

68:                                               ; preds = %67, %65, %59
  %69 = load i64, i64* %22, align 8, !tbaa !26
  store i64 %69, i64* %52, align 8, !tbaa !26
  %70 = load i8*, i8** %28, align 8, !tbaa !3
  %71 = getelementptr inbounds i8, i8* %70, i64 %69
  store i8 0, i8* %71, align 1, !tbaa !28
  %72 = load i8*, i8** %55, align 8, !tbaa !3
  br label %86

73:                                               ; preds = %50
  %74 = load i8*, i8** %28, align 8, !tbaa !3
  %75 = icmp eq i8* %74, %31
  %76 = getelementptr inbounds %struct.SS, %struct.SS* %1, i64 0, i32 0, i32 2, i32 0
  %77 = load i64, i64* %76, align 8
  store i8* %56, i8** %28, align 8, !tbaa !3
  %78 = bitcast i64* %22 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8, !tbaa !28
  %80 = bitcast i64* %52 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %80, align 8, !tbaa !28
  %81 = icmp eq i8* %74, null
  %82 = or i1 %75, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %73
  store i8* %74, i8** %55, align 8, !tbaa !3
  %84 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2, i32 0
  store i64 %77, i64* %84, align 8, !tbaa !28
  br label %86

85:                                               ; preds = %73
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !3
  br label %86

86:                                               ; preds = %68, %83, %85
  %87 = phi i8* [ %72, %68 ], [ %74, %83 ], [ %57, %85 ]
  store i64 0, i64* %22, align 8, !tbaa !26
  store i8 0, i8* %87, align 1, !tbaa !28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %54, i8* noundef nonnull align 8 dereferenceable(12) %26, i64 12, i1 false) #17
  %88 = load i8*, i8** %55, align 8, !tbaa !3
  %89 = icmp eq i8* %88, %57
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  call void @_ZdlPv(i8* %88) #17
  br label %91

91:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #17
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #16

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__insertion_sortIP2SSN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S5_T0_(%struct.SS* %0, %struct.SS* %1) local_unnamed_addr #12 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %struct.SS, align 8
  %4 = icmp eq %struct.SS* %0, %1
  br i1 %4, label %174, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 2
  %9 = bitcast %struct.SS* %3 to i8*
  %10 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2
  %11 = bitcast %struct.SS* %3 to %union.anon**
  %12 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2, i32 0
  %14 = bitcast %union.anon* %10 to i8*
  %15 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 1
  %17 = bitcast i32* %16 to i8*
  %18 = ptrtoint %struct.SS* %0 to i64
  %19 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 2
  %20 = bitcast %union.anon* %19 to i8*
  %21 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 2, i32 0
  %22 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 1
  %23 = bitcast i32* %22 to i8*
  %24 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 1
  %25 = icmp eq %struct.SS* %24, %1
  br i1 %25, label %174, label %26

26:                                               ; preds = %5
  %27 = bitcast i64* %15 to <2 x i64>*
  %28 = bitcast i64* %6 to <2 x i64>*
  br label %29

29:                                               ; preds = %26, %171
  %30 = phi %struct.SS* [ %172, %171 ], [ %24, %26 ]
  %31 = phi %struct.SS* [ %30, %171 ], [ %0, %26 ]
  %32 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 1, i32 0, i32 1
  %33 = load i64, i64* %32, align 8, !tbaa !26
  %34 = load i64, i64* %6, align 8, !tbaa !26
  %35 = icmp ugt i64 %33, %34
  %36 = select i1 %35, i64 %34, i64 %33
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %29
  %39 = load i8*, i8** %7, align 8, !tbaa !3
  %40 = getelementptr inbounds %struct.SS, %struct.SS* %30, i64 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8, !tbaa !3
  %42 = call i32 @memcmp(i8* %41, i8* %39, i64 %36) #17
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %38, %29
  %45 = sub i64 %33, %34
  %46 = icmp sgt i64 %45, -2147483648
  %47 = select i1 %46, i64 %45, i64 -2147483648
  %48 = icmp slt i64 %47, 2147483647
  %49 = select i1 %48, i64 %47, i64 2147483647
  %50 = trunc i64 %49 to i32
  br label %51

51:                                               ; preds = %38, %44
  %52 = phi i32 [ %42, %38 ], [ %50, %44 ]
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %52, 0
  %55 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 1, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %8, align 4
  %58 = icmp slt i32 %56, %57
  %59 = select i1 %53, i1 %58, i1 %54
  br i1 %59, label %60, label %170

60:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #17
  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !25
  %61 = getelementptr inbounds %struct.SS, %struct.SS* %30, i64 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8, !tbaa !3
  %63 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 1, i32 0, i32 2
  %64 = bitcast %union.anon* %63 to i8*
  %65 = icmp eq i8* %62, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %60
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %14, i8* noundef nonnull align 8 dereferenceable(16) %62, i64 16, i1 false) #17
  br label %70

67:                                               ; preds = %60
  store i8* %62, i8** %12, align 8, !tbaa !3
  %68 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 1, i32 0, i32 2, i32 0
  %69 = load i64, i64* %68, align 8, !tbaa !28
  store i64 %69, i64* %13, align 8, !tbaa !28
  br label %70

70:                                               ; preds = %66, %67
  %71 = phi i8* [ %14, %66 ], [ %62, %67 ]
  store i64 %33, i64* %15, align 8, !tbaa !26
  %72 = bitcast %struct.SS* %30 to %union.anon**
  store %union.anon* %63, %union.anon** %72, align 8, !tbaa !3
  store i64 0, i64* %32, align 8, !tbaa !26
  store i8 0, i8* %64, align 8, !tbaa !28
  %73 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 1, i32 1
  %74 = bitcast i32* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %17, i8* noundef nonnull align 8 dereferenceable(12) %74, i64 12, i1 false) #17
  %75 = ptrtoint %struct.SS* %30 to i64
  %76 = sub i64 %75, %18
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %78, label %138

78:                                               ; preds = %70
  %79 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 2
  %80 = udiv exact i64 %76, 48
  br label %81

81:                                               ; preds = %127, %78
  %82 = phi i64 [ %134, %127 ], [ %80, %78 ]
  %83 = phi %struct.SS* [ %86, %127 ], [ %79, %78 ]
  %84 = phi %struct.SS* [ %85, %127 ], [ %30, %78 ]
  %85 = getelementptr inbounds %struct.SS, %struct.SS* %84, i64 -1
  %86 = getelementptr inbounds %struct.SS, %struct.SS* %83, i64 -1
  %87 = getelementptr inbounds %struct.SS, %struct.SS* %86, i64 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %struct.SS, %struct.SS* %85, i64 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8, !tbaa !3
  %90 = getelementptr inbounds %struct.SS, %struct.SS* %84, i64 -1, i32 0, i32 2
  %91 = bitcast %union.anon* %90 to i8*
  %92 = icmp eq i8* %89, %91
  br i1 %92, label %93, label %109

93:                                               ; preds = %81
  %94 = getelementptr inbounds %struct.SS, %struct.SS* %84, i64 -1, i32 0, i32 1
  %95 = load i64, i64* %94, align 8, !tbaa !26
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = load i8*, i8** %87, align 8, !tbaa !3
  %99 = icmp eq i64 %95, 1
  br i1 %99, label %100, label %102

100:                                              ; preds = %97
  %101 = load i8, i8* %89, align 1, !tbaa !28
  store i8 %101, i8* %98, align 1, !tbaa !28
  br label %103

102:                                              ; preds = %97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %98, i8* align 1 %89, i64 %95, i1 false) #17
  br label %103

103:                                              ; preds = %102, %100, %93
  %104 = load i64, i64* %94, align 8, !tbaa !26
  %105 = getelementptr inbounds %struct.SS, %struct.SS* %83, i64 -1, i32 0, i32 1
  store i64 %104, i64* %105, align 8, !tbaa !26
  %106 = load i8*, i8** %87, align 8, !tbaa !3
  %107 = getelementptr inbounds i8, i8* %106, i64 %104
  store i8 0, i8* %107, align 1, !tbaa !28
  %108 = load i8*, i8** %88, align 8, !tbaa !3
  br label %127

109:                                              ; preds = %81
  %110 = getelementptr inbounds %struct.SS, %struct.SS* %83, i64 -1, i32 0, i32 2
  %111 = bitcast %union.anon* %110 to i8*
  %112 = load i8*, i8** %87, align 8, !tbaa !3
  %113 = icmp eq i8* %112, %111
  %114 = getelementptr inbounds %struct.SS, %struct.SS* %83, i64 -1, i32 0, i32 2, i32 0
  %115 = load i64, i64* %114, align 8
  store i8* %89, i8** %87, align 8, !tbaa !3
  %116 = getelementptr inbounds %struct.SS, %struct.SS* %84, i64 -1, i32 0, i32 1
  %117 = load i64, i64* %116, align 8, !tbaa !26
  %118 = getelementptr inbounds %struct.SS, %struct.SS* %83, i64 -1, i32 0, i32 1
  store i64 %117, i64* %118, align 8, !tbaa !26
  %119 = getelementptr %union.anon, %union.anon* %90, i64 0, i32 0
  %120 = load i64, i64* %119, align 8, !tbaa !28
  store i64 %120, i64* %114, align 8, !tbaa !28
  %121 = icmp eq i8* %112, null
  %122 = or i1 %113, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %109
  store i8* %112, i8** %88, align 8, !tbaa !3
  %124 = getelementptr inbounds %struct.SS, %struct.SS* %84, i64 -1, i32 0, i32 2, i32 0
  store i64 %115, i64* %124, align 8, !tbaa !28
  br label %127

125:                                              ; preds = %109
  %126 = bitcast %struct.SS* %85 to %union.anon**
  store %union.anon* %90, %union.anon** %126, align 8, !tbaa !3
  br label %127

127:                                              ; preds = %125, %123, %103
  %128 = phi i8* [ %108, %103 ], [ %112, %123 ], [ %91, %125 ]
  %129 = getelementptr inbounds %struct.SS, %struct.SS* %84, i64 -1, i32 0, i32 1
  store i64 0, i64* %129, align 8, !tbaa !26
  store i8 0, i8* %128, align 1, !tbaa !28
  %130 = getelementptr inbounds %struct.SS, %struct.SS* %83, i64 -1, i32 1
  %131 = getelementptr inbounds %struct.SS, %struct.SS* %84, i64 -1, i32 1
  %132 = bitcast i32* %130 to i8*
  %133 = bitcast i32* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %132, i8* noundef nonnull align 8 dereferenceable(12) %133, i64 12, i1 false) #17
  %134 = add nsw i64 %82, -1
  %135 = icmp sgt i64 %82, 1
  br i1 %135, label %81, label %136, !llvm.loop !39

136:                                              ; preds = %127
  %137 = load i8*, i8** %12, align 8, !tbaa !3
  br label %138

138:                                              ; preds = %136, %70
  %139 = phi i8* [ %137, %136 ], [ %71, %70 ]
  %140 = icmp eq i8* %139, %14
  br i1 %140, label %141, label %155

141:                                              ; preds = %138
  %142 = load i64, i64* %15, align 8, !tbaa !26
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %150, label %144

144:                                              ; preds = %141
  %145 = load i8*, i8** %7, align 8, !tbaa !3
  %146 = icmp eq i64 %142, 1
  br i1 %146, label %147, label %149

147:                                              ; preds = %144
  %148 = load i8, i8* %14, align 8, !tbaa !28
  store i8 %148, i8* %145, align 1, !tbaa !28
  br label %150

149:                                              ; preds = %144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %145, i8* nonnull align 8 %14, i64 %142, i1 false) #17
  br label %150

150:                                              ; preds = %149, %147, %141
  %151 = load i64, i64* %15, align 8, !tbaa !26
  store i64 %151, i64* %6, align 8, !tbaa !26
  %152 = load i8*, i8** %7, align 8, !tbaa !3
  %153 = getelementptr inbounds i8, i8* %152, i64 %151
  store i8 0, i8* %153, align 1, !tbaa !28
  %154 = load i8*, i8** %12, align 8, !tbaa !3
  br label %164

155:                                              ; preds = %138
  %156 = load i8*, i8** %7, align 8, !tbaa !3
  %157 = icmp eq i8* %156, %20
  %158 = load i64, i64* %21, align 8
  store i8* %139, i8** %7, align 8, !tbaa !3
  %159 = load <2 x i64>, <2 x i64>* %27, align 8, !tbaa !28
  store <2 x i64> %159, <2 x i64>* %28, align 8, !tbaa !28
  %160 = icmp eq i8* %156, null
  %161 = or i1 %157, %160
  br i1 %161, label %163, label %162

162:                                              ; preds = %155
  store i8* %156, i8** %12, align 8, !tbaa !3
  store i64 %158, i64* %13, align 8, !tbaa !28
  br label %164

163:                                              ; preds = %155
  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !3
  br label %164

164:                                              ; preds = %150, %162, %163
  %165 = phi i8* [ %154, %150 ], [ %156, %162 ], [ %14, %163 ]
  store i64 0, i64* %15, align 8, !tbaa !26
  store i8 0, i8* %165, align 1, !tbaa !28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %23, i8* noundef nonnull align 8 dereferenceable(12) %17, i64 12, i1 false) #17
  %166 = load i8*, i8** %12, align 8, !tbaa !3
  %167 = icmp eq i8* %166, %14
  br i1 %167, label %169, label %168

168:                                              ; preds = %164
  call void @_ZdlPv(i8* %166) #17
  br label %169

169:                                              ; preds = %164, %168
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #17
  br label %171

170:                                              ; preds = %51
  call void @_ZSt25__unguarded_linear_insertIP2SSN9__gnu_cxx5__ops14_Val_less_iterEEvT_T0_(%struct.SS* nonnull %30)
  br label %171

171:                                              ; preds = %169, %170
  %172 = getelementptr inbounds %struct.SS, %struct.SS* %30, i64 1
  %173 = icmp eq %struct.SS* %172, %1
  br i1 %173, label %174, label %29, !llvm.loop !40

174:                                              ; preds = %171, %5, %2
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt25__unguarded_linear_insertIP2SSN9__gnu_cxx5__ops14_Val_less_iterEEvT_T0_(%struct.SS* %0) local_unnamed_addr #12 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %struct.SS, align 8
  %3 = bitcast %struct.SS* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #17
  %4 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 2
  %5 = bitcast %struct.SS* %2 to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !25
  %6 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !3
  %8 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 2
  %9 = bitcast %union.anon* %8 to i8*
  %10 = icmp eq i8* %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = bitcast %union.anon* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %12, i8* noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false) #17
  br label %18

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %14, align 8, !tbaa !3
  %15 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 2, i32 0
  %16 = load i64, i64* %15, align 8, !tbaa !28
  %17 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 2, i32 0
  store i64 %16, i64* %17, align 8, !tbaa !28
  br label %18

18:                                               ; preds = %11, %13
  %19 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !tbaa !26
  %21 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 1
  store i64 %20, i64* %21, align 8, !tbaa !26
  %22 = bitcast %struct.SS* %0 to %union.anon**
  store %union.anon* %8, %union.anon** %22, align 8, !tbaa !3
  store i64 0, i64* %19, align 8, !tbaa !26
  store i8 0, i8* %9, align 8, !tbaa !28
  %23 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 1
  %24 = getelementptr inbounds %struct.SS, %struct.SS* %0, i64 0, i32 1
  %25 = bitcast i32* %23 to i8*
  %26 = bitcast i32* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %25, i8* noundef nonnull align 8 dereferenceable(12) %26, i64 12, i1 false) #17
  %27 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 2
  br label %29

29:                                               ; preds = %97, %18
  %30 = phi i64 [ %20, %18 ], [ %103, %97 ]
  %31 = phi %struct.SS* [ %0, %18 ], [ %32, %97 ]
  %32 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 -1
  %33 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 -1, i32 0, i32 1
  %34 = load i64, i64* %33, align 8, !tbaa !26
  %35 = icmp ugt i64 %30, %34
  %36 = select i1 %35, i64 %34, i64 %30
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.SS, %struct.SS* %32, i64 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !tbaa !3
  %41 = load i8*, i8** %27, align 8, !tbaa !3
  %42 = call i32 @memcmp(i8* %41, i8* %40, i64 %36) #17
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %38, %29
  %45 = sub i64 %30, %34
  %46 = icmp sgt i64 %45, -2147483648
  %47 = select i1 %46, i64 %45, i64 -2147483648
  %48 = icmp slt i64 %47, 2147483647
  %49 = select i1 %48, i64 %47, i64 2147483647
  %50 = trunc i64 %49 to i32
  br label %51

51:                                               ; preds = %44, %38
  %52 = phi i32 [ %42, %38 ], [ %50, %44 ]
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %52, 0
  %55 = load i32, i32* %28, align 4
  %56 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 -1, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %55, %57
  %59 = select i1 %53, i1 %58, i1 %54
  %60 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 0, i32 0, i32 0
  br i1 %59, label %61, label %104

61:                                               ; preds = %51
  %62 = getelementptr inbounds %struct.SS, %struct.SS* %32, i64 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8, !tbaa !3
  %64 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 -1, i32 0, i32 2
  %65 = bitcast %union.anon* %64 to i8*
  %66 = icmp eq i8* %63, %65
  br i1 %66, label %67, label %81

67:                                               ; preds = %61
  %68 = icmp eq i64 %34, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %67
  %70 = load i8*, i8** %60, align 8, !tbaa !3
  %71 = icmp eq i64 %34, 1
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = load i8, i8* %63, align 1, !tbaa !28
  store i8 %73, i8* %70, align 1, !tbaa !28
  br label %75

74:                                               ; preds = %69
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %63, i64 %34, i1 false) #17
  br label %75

75:                                               ; preds = %74, %72, %67
  %76 = load i64, i64* %33, align 8, !tbaa !26
  %77 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 0, i32 1
  store i64 %76, i64* %77, align 8, !tbaa !26
  %78 = load i8*, i8** %60, align 8, !tbaa !3
  %79 = getelementptr inbounds i8, i8* %78, i64 %76
  store i8 0, i8* %79, align 1, !tbaa !28
  %80 = load i8*, i8** %62, align 8, !tbaa !3
  br label %97

81:                                               ; preds = %61
  %82 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 0, i32 2
  %83 = bitcast %union.anon* %82 to i8*
  %84 = load i8*, i8** %60, align 8, !tbaa !3
  %85 = icmp eq i8* %84, %83
  %86 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 0, i32 2, i32 0
  %87 = load i64, i64* %86, align 8
  store i8* %63, i8** %60, align 8, !tbaa !3
  %88 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 0, i32 1
  store i64 %34, i64* %88, align 8, !tbaa !26
  %89 = getelementptr %union.anon, %union.anon* %64, i64 0, i32 0
  %90 = load i64, i64* %89, align 8, !tbaa !28
  store i64 %90, i64* %86, align 8, !tbaa !28
  %91 = icmp eq i8* %84, null
  %92 = or i1 %85, %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %81
  store i8* %84, i8** %62, align 8, !tbaa !3
  %94 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 -1, i32 0, i32 2, i32 0
  store i64 %87, i64* %94, align 8, !tbaa !28
  br label %97

95:                                               ; preds = %81
  %96 = bitcast %struct.SS* %32 to %union.anon**
  store %union.anon* %64, %union.anon** %96, align 8, !tbaa !3
  br label %97

97:                                               ; preds = %75, %93, %95
  %98 = phi i8* [ %80, %75 ], [ %84, %93 ], [ %65, %95 ]
  store i64 0, i64* %33, align 8, !tbaa !26
  store i8 0, i8* %98, align 1, !tbaa !28
  %99 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 1
  %100 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 -1, i32 1
  %101 = bitcast i32* %99 to i8*
  %102 = bitcast i32* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %101, i8* noundef nonnull align 8 dereferenceable(12) %102, i64 12, i1 false) #17
  %103 = load i64, i64* %21, align 8, !tbaa !26
  br label %29, !llvm.loop !41

104:                                              ; preds = %51
  %105 = load i8*, i8** %27, align 8, !tbaa !3
  %106 = bitcast %union.anon* %4 to i8*
  %107 = icmp eq i8* %105, %106
  br i1 %107, label %108, label %122

108:                                              ; preds = %104
  %109 = icmp eq i64 %30, 0
  br i1 %109, label %116, label %110

110:                                              ; preds = %108
  %111 = load i8*, i8** %60, align 8, !tbaa !3
  %112 = icmp eq i64 %30, 1
  br i1 %112, label %113, label %115

113:                                              ; preds = %110
  %114 = load i8, i8* %106, align 8, !tbaa !28
  store i8 %114, i8* %111, align 1, !tbaa !28
  br label %116

115:                                              ; preds = %110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %111, i8* nonnull align 8 %106, i64 %30, i1 false) #17
  br label %116

116:                                              ; preds = %115, %113, %108
  %117 = load i64, i64* %21, align 8, !tbaa !26
  %118 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 0, i32 1
  store i64 %117, i64* %118, align 8, !tbaa !26
  %119 = load i8*, i8** %60, align 8, !tbaa !3
  %120 = getelementptr inbounds i8, i8* %119, i64 %117
  store i8 0, i8* %120, align 1, !tbaa !28
  %121 = load i8*, i8** %27, align 8, !tbaa !3
  br label %137

122:                                              ; preds = %104
  %123 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 0, i32 2
  %124 = bitcast %union.anon* %123 to i8*
  %125 = load i8*, i8** %60, align 8, !tbaa !3
  %126 = icmp eq i8* %125, %124
  %127 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 0, i32 2, i32 0
  %128 = load i64, i64* %127, align 8
  store i8* %105, i8** %60, align 8, !tbaa !3
  %129 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 0, i32 1
  store i64 %30, i64* %129, align 8, !tbaa !26
  %130 = getelementptr %union.anon, %union.anon* %4, i64 0, i32 0
  %131 = load i64, i64* %130, align 8, !tbaa !28
  store i64 %131, i64* %127, align 8, !tbaa !28
  %132 = icmp eq i8* %125, null
  %133 = or i1 %126, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %122
  store i8* %125, i8** %27, align 8, !tbaa !3
  %135 = getelementptr inbounds %struct.SS, %struct.SS* %2, i64 0, i32 0, i32 2, i32 0
  store i64 %128, i64* %135, align 8, !tbaa !28
  br label %137

136:                                              ; preds = %122
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !3
  br label %137

137:                                              ; preds = %116, %134, %136
  %138 = phi i8* [ %121, %116 ], [ %125, %134 ], [ %106, %136 ]
  store i64 0, i64* %21, align 8, !tbaa !26
  store i8 0, i8* %138, align 1, !tbaa !28
  %139 = getelementptr inbounds %struct.SS, %struct.SS* %31, i64 0, i32 1
  %140 = bitcast i32* %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(12) %140, i8* noundef nonnull align 8 dereferenceable(12) %25, i64 12, i1 false) #17
  %141 = load i8*, i8** %27, align 8, !tbaa !3
  %142 = icmp eq i8* %141, %106
  br i1 %142, label %144, label %143

143:                                              ; preds = %137
  call void @_ZdlPv(i8* %141) #17
  br label %144

144:                                              ; preds = %137, %143
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #17
  ret void
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_LexicographicallySmallerorEqualStrings.cpp() #12 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #17
  br label %2

2:                                                ; preds = %2, %0
  %3 = phi %struct.SS* [ getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 0, i64 0), %0 ], [ %28, %2 ]
  %4 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 2
  %5 = bitcast %struct.SS* %3 to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !25
  %6 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 0, i32 0, i32 1
  store i64 0, i64* %6, align 8, !tbaa !26
  %7 = bitcast %union.anon* %4 to i8*
  store i8 0, i8* %7, align 8, !tbaa !28
  %8 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 1
  %9 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 1, i32 0, i32 2
  %10 = bitcast %struct.SS* %8 to %union.anon**
  store %union.anon* %9, %union.anon** %10, align 8, !tbaa !25
  %11 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 1, i32 0, i32 1
  store i64 0, i64* %11, align 8, !tbaa !26
  %12 = bitcast %union.anon* %9 to i8*
  store i8 0, i8* %12, align 8, !tbaa !28
  %13 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 2
  %14 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 2, i32 0, i32 2
  %15 = bitcast %struct.SS* %13 to %union.anon**
  store %union.anon* %14, %union.anon** %15, align 8, !tbaa !25
  %16 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 2, i32 0, i32 1
  store i64 0, i64* %16, align 8, !tbaa !26
  %17 = bitcast %union.anon* %14 to i8*
  store i8 0, i8* %17, align 8, !tbaa !28
  %18 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 3
  %19 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 3, i32 0, i32 2
  %20 = bitcast %struct.SS* %18 to %union.anon**
  store %union.anon* %19, %union.anon** %20, align 8, !tbaa !25
  %21 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 3, i32 0, i32 1
  store i64 0, i64* %21, align 8, !tbaa !26
  %22 = bitcast %union.anon* %19 to i8*
  store i8 0, i8* %22, align 8, !tbaa !28
  %23 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 4
  %24 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 4, i32 0, i32 2
  %25 = bitcast %struct.SS* %23 to %union.anon**
  store %union.anon* %24, %union.anon** %25, align 8, !tbaa !25
  %26 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 4, i32 0, i32 1
  store i64 0, i64* %26, align 8, !tbaa !26
  %27 = bitcast %union.anon* %24 to i8*
  store i8 0, i8* %27, align 8, !tbaa !28
  %28 = getelementptr inbounds %struct.SS, %struct.SS* %3, i64 5
  %29 = icmp eq %struct.SS* %28, getelementptr inbounds ([200005 x %struct.SS], [200005 x %struct.SS]* @s, i64 1, i64 0)
  br i1 %29, label %30, label %2

30:                                               ; preds = %2
  %31 = tail call i32 @__cxa_atexit(void (i8*)* nonnull @__cxx_global_array_dtor, i8* null, i8* nonnull @__dso_handle) #17
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #8 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #11 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { inlinehint uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { inlinehint nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #17 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !6, i64 0}
!4 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !5, i64 0, !9, i64 8, !7, i64 16}
!5 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!11, !11, i64 0}
!11 = !{!"int", !7, i64 0}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !13}
!16 = !{!6, !6, i64 0}
!17 = !{!18, !11, i64 32}
!18 = !{!"_ZTS2SS", !4, i64 0, !11, i64 32, !11, i64 36, !11, i64 40}
!19 = !{!18, !11, i64 40}
!20 = !{!18, !11, i64 36}
!21 = distinct !{!21, !13}
!22 = distinct !{!22, !13}
!23 = !{i64 0, i64 65}
!24 = distinct !{!24, !13}
!25 = !{!5, !6, i64 0}
!26 = !{!4, !9, i64 8}
!27 = !{!9, !9, i64 0}
!28 = !{!7, !7, i64 0}
!29 = distinct !{!29, !13}
!30 = distinct !{!30, !13}
!31 = distinct !{!31, !13}
!32 = distinct !{!32, !13}
!33 = distinct !{!33, !13}
!34 = distinct !{!34, !13}
!35 = distinct !{!35, !13}
!36 = distinct !{!36, !13}
!37 = distinct !{!37, !13}
!38 = distinct !{!38, !13}
!39 = distinct !{!39, !13}
!40 = distinct !{!40, !13}
!41 = distinct !{!41, !13}
