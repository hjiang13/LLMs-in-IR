; ModuleID = '../../Benchmarks/PolynomialDivision/PolynomialDivision.cpp'
source_filename = "../../Benchmarks/PolynomialDivision/PolynomialDivision.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"struct.std::pair" = type { i64, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@X = dso_local local_unnamed_addr global i64 0, align 8
@seg = dso_local global [262144 x %"struct.std::pair"] zeroinitializer, align 16
@.str = private unnamed_addr constant [34 x i8] c"../input_files/PolynomialDivision\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_PolynomialDivision.cpp, i8* null }]
@str = private unnamed_addr constant [4 x i8] c"Yes\00", align 1
@str.8 = private unnamed_addr constant [3 x i8] c"No\00", align 1

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind readnone uwtable willreturn
define dso_local i64 @_Z5powerxi(i64 %0, i32 %1) local_unnamed_addr #3 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = sdiv i32 %1, 2
  %6 = tail call i64 @_Z5powerxi(i64 %0, i32 %5)
  %7 = mul nsw i64 %6, %6
  %8 = urem i64 %7, 1000000007
  %9 = and i32 %1, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = mul nsw i64 %8, %0
  %13 = srem i64 %12, 1000000007
  br label %14

14:                                               ; preds = %4, %11, %2
  %15 = phi i64 [ 1, %2 ], [ %13, %11 ], [ %8, %4 ]
  ret i64 %15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree nosync nounwind readonly uwtable willreturn
define dso_local { i64, i64 } @_Z9seg_mergeRSt4pairIxxES1_(%"struct.std::pair"* nocapture nonnull readonly align 8 dereferenceable(16) %0, %"struct.std::pair"* nocapture nonnull readonly align 8 dereferenceable(16) %1) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8, !tbaa !3
  %5 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8, !tbaa !3
  %7 = load i64, i64* @X, align 8, !tbaa !8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8, !tbaa !9
  %10 = trunc i64 %9 to i32
  %11 = tail call i64 @_Z5powerxi(i64 %7, i32 %10)
  %12 = mul nsw i64 %11, %6
  %13 = add nsw i64 %12, %4
  %14 = srem i64 %13, 1000000007
  %15 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8, !tbaa !9
  %17 = add nsw i64 %16, %9
  %18 = insertvalue { i64, i64 } undef, i64 %14, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19
}

; Function Attrs: mustprogress nofree nosync nounwind readonly uwtable willreturn
define dso_local { i64, i64 } @_Z3queiiiii(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #5 {
  %6 = icmp sgt i32 %3, %1
  %7 = icmp sgt i32 %2, %4
  %8 = select i1 %6, i1 true, i1 %7
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = sext i32 %0 to i64
  %11 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %10, i32 0
  %12 = load i64, i64* %11, align 16
  %13 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %10, i32 1
  %14 = load i64, i64* %13, align 8
  br label %44

15:                                               ; preds = %5
  %16 = add nsw i32 %2, %1
  %17 = sdiv i32 %16, 2
  %18 = icmp slt i32 %17, %3
  %19 = shl nsw i32 %0, 1
  br i1 %18, label %38, label %20

20:                                               ; preds = %15
  %21 = tail call { i64, i64 } @_Z3queiiiii(i32 %19, i32 %1, i32 %17, i32 %3, i32 %4)
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = icmp slt i32 %17, %4
  br i1 %24, label %25, label %44

25:                                               ; preds = %20
  %26 = or i32 %19, 1
  %27 = add nsw i32 %17, 1
  %28 = tail call { i64, i64 } @_Z3queiiiii(i32 %26, i32 %27, i32 %2, i32 %3, i32 %4)
  %29 = extractvalue { i64, i64 } %28, 0
  %30 = extractvalue { i64, i64 } %28, 1
  %31 = load i64, i64* @X, align 8, !tbaa !8
  %32 = trunc i64 %23 to i32
  %33 = tail call i64 @_Z5powerxi(i64 %31, i32 %32) #9
  %34 = mul nsw i64 %33, %29
  %35 = add nsw i64 %34, %22
  %36 = srem i64 %35, 1000000007
  %37 = add nsw i64 %30, %23
  br label %44

38:                                               ; preds = %15
  %39 = or i32 %19, 1
  %40 = add nsw i32 %17, 1
  %41 = tail call { i64, i64 } @_Z3queiiiii(i32 %39, i32 %40, i32 %2, i32 %3, i32 %4)
  %42 = extractvalue { i64, i64 } %41, 0
  %43 = extractvalue { i64, i64 } %41, 1
  br label %44

44:                                               ; preds = %25, %20, %38, %9
  %45 = phi i64 [ %12, %9 ], [ %42, %38 ], [ %36, %25 ], [ %22, %20 ]
  %46 = phi i64 [ %14, %9 ], [ %43, %38 ], [ %37, %25 ], [ %23, %20 ]
  %47 = insertvalue { i64, i64 } undef, i64 %45, 0
  %48 = insertvalue { i64, i64 } %47, i64 %46, 1
  ret { i64, i64 } %48
}

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #6 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !10
  %11 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %10)
  %12 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #9
  %13 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #9
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #9
  %16 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)
  %17 = load i32, i32* %3, align 4, !tbaa !12
  %18 = sext i32 %17 to i64
  %19 = sub nsw i64 1000000007, %18
  %20 = load i32, i32* %2, align 4, !tbaa !12
  %21 = sext i32 %20 to i64
  %22 = call i64 @_Z5powerxi(i64 %21, i32 1000000005)
  %23 = mul nsw i64 %19, %22
  %24 = srem i64 %23, 1000000007
  store i64 %24, i64* @X, align 8, !tbaa !8
  %25 = load i32, i32* %1, align 4, !tbaa !12
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %31, label %29

27:                                               ; preds = %31
  %28 = load i64, i64* @X, align 8, !tbaa !8
  br label %29

29:                                               ; preds = %27, %0
  %30 = phi i64 [ %28, %27 ], [ %24, %0 ]
  br label %50

31:                                               ; preds = %0, %31
  %32 = phi i64 [ %37, %31 ], [ 0, %0 ]
  %33 = add nuw nsw i64 %32, 131072
  %34 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %33, i32 0
  %35 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64* nonnull %34)
  %36 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %33, i32 1
  store i64 1, i64* %36, align 8, !tbaa !9
  %37 = add nuw nsw i64 %32, 1
  %38 = load i32, i32* %1, align 4, !tbaa !12
  %39 = sext i32 %38 to i64
  %40 = icmp slt i64 %37, %39
  br i1 %40, label %31, label %27, !llvm.loop !14

41:                                               ; preds = %50
  %42 = bitcast i32* %5 to i8*
  %43 = bitcast i32* %8 to i8*
  %44 = bitcast i32* %9 to i8*
  %45 = bitcast i32* %6 to i8*
  %46 = bitcast i32* %7 to i8*
  %47 = load i32, i32* %4, align 4, !tbaa !12
  %48 = add nsw i32 %47, -1
  store i32 %48, i32* %4, align 4, !tbaa !12
  %49 = icmp eq i32 %47, 0
  br i1 %49, label %129, label %72

50:                                               ; preds = %29, %50
  %51 = phi i64 [ 131071, %29 ], [ %70, %50 ]
  %52 = shl nuw nsw i64 %51, 1
  %53 = or i64 %52, 1
  %54 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %52, i32 0
  %55 = load i64, i64* %54, align 16, !tbaa !3
  %56 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %53, i32 0
  %57 = load i64, i64* %56, align 16, !tbaa !3
  %58 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %52, i32 1
  %59 = load i64, i64* %58, align 8, !tbaa !9
  %60 = trunc i64 %59 to i32
  %61 = call i64 @_Z5powerxi(i64 %30, i32 %60) #9
  %62 = mul nsw i64 %61, %57
  %63 = add nsw i64 %62, %55
  %64 = srem i64 %63, 1000000007
  %65 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %53, i32 1
  %66 = load i64, i64* %65, align 8, !tbaa !9
  %67 = add nsw i64 %66, %59
  %68 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %51, i32 0
  store i64 %64, i64* %68, align 16, !tbaa !3
  %69 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %51, i32 1
  store i64 %67, i64* %69, align 8, !tbaa !9
  %70 = add nsw i64 %51, -1
  %71 = icmp ugt i64 %51, 1
  br i1 %71, label %50, label %41, !llvm.loop !16

72:                                               ; preds = %41, %125
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #9
  %73 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32* nonnull %5)
  %74 = load i32, i32* %5, align 4, !tbaa !12
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %114

76:                                               ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #9
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #9
  %77 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7)
  %78 = load i32, i32* %6, align 4, !tbaa !12
  %79 = add nsw i32 %78, 131072
  %80 = load i32, i32* %7, align 4, !tbaa !12
  %81 = sext i32 %80 to i64
  %82 = sext i32 %79 to i64
  %83 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %82, i32 0
  store i64 %81, i64* %83, align 16, !tbaa !3
  %84 = load i64, i64* @X, align 8
  %85 = add i32 %78, 131073
  %86 = icmp ult i32 %85, 3
  br i1 %86, label %113, label %87

87:                                               ; preds = %76, %87
  %88 = phi i32 [ %89, %87 ], [ %79, %76 ]
  %89 = sdiv i32 %88, 2
  %90 = shl nsw i32 %89, 1
  %91 = sext i32 %90 to i64
  %92 = or i32 %90, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %91, i32 0
  %95 = load i64, i64* %94, align 16, !tbaa !3
  %96 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %93, i32 0
  %97 = load i64, i64* %96, align 16, !tbaa !3
  %98 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %91, i32 1
  %99 = load i64, i64* %98, align 8, !tbaa !9
  %100 = trunc i64 %99 to i32
  %101 = call i64 @_Z5powerxi(i64 %84, i32 %100) #9
  %102 = mul nsw i64 %101, %97
  %103 = add nsw i64 %102, %95
  %104 = srem i64 %103, 1000000007
  %105 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %93, i32 1
  %106 = load i64, i64* %105, align 8, !tbaa !9
  %107 = add nsw i64 %106, %99
  %108 = sext i32 %89 to i64
  %109 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %108, i32 0
  store i64 %104, i64* %109, align 16, !tbaa !3
  %110 = getelementptr inbounds [262144 x %"struct.std::pair"], [262144 x %"struct.std::pair"]* @seg, i64 0, i64 %108, i32 1
  store i64 %107, i64* %110, align 8, !tbaa !9
  %111 = add nsw i32 %89, 1
  %112 = icmp ult i32 %111, 3
  br i1 %112, label %113, label %87, !llvm.loop !17

113:                                              ; preds = %87, %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #9
  br label %125

114:                                              ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #9
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #9
  %115 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32* nonnull %8, i32* nonnull %9)
  %116 = load i32, i32* %8, align 4, !tbaa !12
  %117 = add nsw i32 %116, 131072
  store i32 %117, i32* %8, align 4, !tbaa !12
  %118 = load i32, i32* %9, align 4, !tbaa !12
  %119 = add nsw i32 %118, 131072
  store i32 %119, i32* %9, align 4, !tbaa !12
  %120 = call { i64, i64 } @_Z3queiiiii(i32 1, i32 131072, i32 262143, i32 %117, i32 %119)
  %121 = extractvalue { i64, i64 } %120, 0
  %122 = icmp eq i64 %121, 0
  %123 = select i1 %122, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.8, i64 0, i64 0)
  %124 = call i32 @puts(i8* nonnull dereferenceable(1) %123)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #9
  br label %125

125:                                              ; preds = %114, %113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #9
  %126 = load i32, i32* %4, align 4, !tbaa !12
  %127 = add nsw i32 %126, -1
  store i32 %127, i32* %4, align 4, !tbaa !12
  %128 = icmp eq i32 %126, 0
  br i1 %128, label %129, label %72, !llvm.loop !18

129:                                              ; preds = %125, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #9
  ret i32 0
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #7

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_PolynomialDivision.cpp() #8 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #9
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #2

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nofree nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 0}
!4 = !{!"_ZTSSt4pairIxxE", !5, i64 0, !5, i64 8}
!5 = !{!"long long", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!5, !5, i64 0}
!9 = !{!4, !5, i64 8}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !6, i64 0}
!12 = !{!13, !13, i64 0}
!13 = !{!"int", !6, i64 0}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.mustprogress"}
!16 = distinct !{!16, !15}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !15}
