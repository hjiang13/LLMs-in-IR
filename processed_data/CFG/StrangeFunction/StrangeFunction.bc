; ModuleID = '../../Benchmarks/StrangeFunction/StrangeFunction.cpp'
source_filename = "../../Benchmarks/StrangeFunction/StrangeFunction.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl_data" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"struct.std::pair" = type { i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::_Rb_tree_node" = type <{ %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf", [4 x i8] }>
%"struct.__gnu_cxx::__aligned_membuf" = type { [4 x i8] }
%"class.std::reverse_iterator" = type { %"class.__gnu_cxx::__normal_iterator" }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.std::pair"* }

$_ZNSt3setIiSt4lessIiESaIiEED2Ev = comdat any

$_ZNSt6vectorISt4pairIiiESaIS1_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE = comdat any

$_ZSt16__introsort_loopISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEElNS1_5__ops15_Iter_less_iterEEvT_SD_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEEvT_SD_T0_ = comdat any

$_ZSt14__partial_sortISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEEvT_SD_SD_T0_ = comdat any

$_ZSt13__adjust_heapISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEElS4_NS1_5__ops15_Iter_less_iterEEvT_T0_SE_T1_T2_ = comdat any

$_ZSt22__move_median_to_firstISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEEvT_SD_SD_SD_T0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@n = dso_local global i32 0, align 4
@a = dso_local global [50005 x i32] zeroinitializer, align 16
@lg2 = dso_local local_unnamed_addr global [50005 x i32] zeroinitializer, align 16
@G = dso_local local_unnamed_addr global [50005 x [19 x i32]] zeroinitializer, align 16
@mn = dso_local local_unnamed_addr global [50005 x [19 x i64]] zeroinitializer, align 16
@mx = dso_local local_unnamed_addr global [50005 x [19 x i64]] zeroinitializer, align 16
@S = dso_local global %"class.std::set" zeroinitializer, align 8
@seq = dso_local global %"class.std::vector" zeroinitializer, align 8
@res = dso_local local_unnamed_addr global i64 -9000000000000000000, align 8
@.str = private unnamed_addr constant [31 x i8] c"../input_files/StrangeFunction\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str.5 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_StrangeFunction.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3setIiSt4lessIiESaIiEED2Ev(%"class.std::set"* nonnull align 8 dereferenceable(48) %0) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::set", %"class.std::set"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.std::set", %"class.std::set"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 16
  %5 = bitcast i8* %4 to %"struct.std::_Rb_tree_node"**
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8, !tbaa !3
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %2, %"struct.std::_Rb_tree_node"* %6)
          to label %10 unwind label %7

7:                                                ; preds = %1
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  tail call void @__clang_call_terminate(i8* %9) #21
  unreachable

10:                                               ; preds = %1
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt4pairIiiESaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8, !tbaa !11
  %4 = icmp eq %"struct.std::pair"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.std::pair"* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #22
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone uwtable willreturn
define dso_local i32 @_Z3gcdii(i32 %0, i32 %1) local_unnamed_addr #4 {
  %3 = icmp eq i32 %0, 0
  br i1 %3, label %9, label %4

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %6 = phi i32 [ %7, %4 ], [ %0, %2 ]
  %7 = srem i32 %5, %6
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %4

9:                                                ; preds = %4, %2
  %10 = phi i32 [ %1, %2 ], [ %6, %4 ]
  ret i32 %10
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i64 @_Z6getMinii(i32 %0, i32 %1) local_unnamed_addr #5 {
  %3 = sub i32 1, %0
  %4 = add i32 %3, %1
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4, !tbaa !13
  %8 = sext i32 %0 to i64
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mn, i64 0, i64 %8, i64 %9
  %11 = shl nsw i32 -1, %7
  %12 = add i32 %1, 1
  %13 = add i32 %12, %11
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mn, i64 0, i64 %14, i64 %9
  %16 = load i64, i64* %15, align 8
  %17 = load i64, i64* %10, align 8
  %18 = icmp slt i64 %16, %17
  %19 = select i1 %18, i64 %16, i64 %17
  ret i64 %19
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i64 @_Z6getMaxii(i32 %0, i32 %1) local_unnamed_addr #5 {
  %3 = sub i32 1, %0
  %4 = add i32 %3, %1
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4, !tbaa !13
  %8 = sext i32 %0 to i64
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mx, i64 0, i64 %8, i64 %9
  %11 = shl nsw i32 -1, %7
  %12 = add i32 %1, 1
  %13 = add i32 %12, %11
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mx, i64 0, i64 %14, i64 %9
  %16 = load i64, i64* %10, align 8
  %17 = load i64, i64* %15, align 8
  %18 = icmp slt i64 %16, %17
  %19 = select i1 %18, i64 %17, i64 %16
  ret i64 %19
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i32 @_Z6getGcdii(i32 %0, i32 %1) local_unnamed_addr #5 {
  %3 = sub i32 1, %0
  %4 = add i32 %3, %1
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4, !tbaa !13
  %8 = sext i32 %0 to i64
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %8, i64 %9
  %11 = load i32, i32* %10, align 4, !tbaa !13
  %12 = shl nsw i32 -1, %7
  %13 = add i32 %1, 1
  %14 = add i32 %13, %12
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %15, i64 %9
  %17 = load i32, i32* %16, align 4, !tbaa !13
  %18 = icmp eq i32 %11, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %2, %19
  %20 = phi i32 [ %21, %19 ], [ %17, %2 ]
  %21 = phi i32 [ %22, %19 ], [ %11, %2 ]
  %22 = srem i32 %20, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %19

24:                                               ; preds = %19, %2
  %25 = phi i32 [ %17, %2 ], [ %21, %19 ]
  ret i32 %25
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i32 @_Z6goLeftii(i32 %0, i32 %1) local_unnamed_addr #5 {
  br label %4

3:                                                ; preds = %25
  ret i32 %26

4:                                                ; preds = %2, %25
  %5 = phi i64 [ 18, %2 ], [ %27, %25 ]
  %6 = phi i32 [ %0, %2 ], [ %26, %25 ]
  %7 = trunc i64 %5 to i32
  %8 = shl nsw i32 -1, %7
  %9 = add i32 %8, %6
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %4
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %12, i64 %5
  %14 = load i32, i32* %13, align 4, !tbaa !13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %18, %16 ], [ %1, %11 ]
  %18 = phi i32 [ %19, %16 ], [ %14, %11 ]
  %19 = srem i32 %17, %18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %16

21:                                               ; preds = %16, %11
  %22 = phi i32 [ %1, %11 ], [ %18, %16 ]
  %23 = icmp eq i32 %22, %1
  %24 = select i1 %23, i32 %9, i32 %6
  br label %25

25:                                               ; preds = %21, %4
  %26 = phi i32 [ %6, %4 ], [ %24, %21 ]
  %27 = add nsw i64 %5, -1
  %28 = icmp eq i64 %5, 0
  br i1 %28, label %3, label %4, !llvm.loop !15
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i32 @_Z7goRightii(i32 %0, i32 %1) local_unnamed_addr #5 {
  %3 = add nsw i32 %0, -1
  %4 = load i32, i32* @n, align 4, !tbaa !13
  br label %6

5:                                                ; preds = %28
  ret i32 %29

6:                                                ; preds = %2, %28
  %7 = phi i64 [ 18, %2 ], [ %30, %28 ]
  %8 = phi i32 [ %3, %2 ], [ %29, %28 ]
  %9 = trunc i64 %7 to i32
  %10 = shl nuw i32 1, %9
  %11 = add nsw i32 %10, %8
  %12 = icmp sgt i32 %11, %4
  br i1 %12, label %28, label %13

13:                                               ; preds = %6
  %14 = add nsw i32 %8, 1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %15, i64 %7
  %17 = load i32, i32* %16, align 4, !tbaa !13
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %13, %19
  %20 = phi i32 [ %21, %19 ], [ %1, %13 ]
  %21 = phi i32 [ %22, %19 ], [ %17, %13 ]
  %22 = srem i32 %20, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %19

24:                                               ; preds = %19, %13
  %25 = phi i32 [ %1, %13 ], [ %21, %19 ]
  %26 = icmp eq i32 %25, %1
  %27 = select i1 %26, i32 %11, i32 %8
  br label %28

28:                                               ; preds = %24, %6
  %29 = phi i32 [ %8, %6 ], [ %27, %24 ]
  %30 = add nsw i64 %7, -1
  %31 = icmp eq i64 %7, 0
  br i1 %31, label %5, label %6, !llvm.loop !17
}

; Function Attrs: mustprogress nofree nosync nounwind readonly uwtable willreturn
define dso_local i64 @_Z5Solveiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #7 {
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [50005 x i32], [50005 x i32]* @a, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4, !tbaa !13
  %7 = add i32 %0, 1
  %8 = load i32, i32* @n, align 4
  %9 = sext i32 %6 to i64
  %10 = icmp sgt i32 %0, %2
  %11 = icmp slt i32 %0, %1
  br i1 %11, label %164, label %12

12:                                               ; preds = %3, %161
  %13 = phi i32 [ %65, %161 ], [ %0, %3 ]
  %14 = phi i64 [ %162, %161 ], [ -9000000000000000000, %3 ]
  %15 = sub i32 1, %13
  %16 = add i32 %15, %0
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4, !tbaa !13
  %20 = sext i32 %13 to i64
  %21 = sext i32 %19 to i64
  %22 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %20, i64 %21
  %23 = load i32, i32* %22, align 4, !tbaa !13
  %24 = shl nsw i32 -1, %19
  %25 = add i32 %7, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %26, i64 %21
  %28 = load i32, i32* %27, align 4, !tbaa !13
  %29 = icmp eq i32 %23, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %12, %30
  %31 = phi i32 [ %32, %30 ], [ %28, %12 ]
  %32 = phi i32 [ %33, %30 ], [ %23, %12 ]
  %33 = srem i32 %31, %32
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %30

35:                                               ; preds = %30, %12
  %36 = phi i32 [ %28, %12 ], [ %32, %30 ]
  br label %37

37:                                               ; preds = %58, %35
  %38 = phi i64 [ 18, %35 ], [ %60, %58 ]
  %39 = phi i32 [ %13, %35 ], [ %59, %58 ]
  %40 = trunc i64 %38 to i32
  %41 = shl nsw i32 -1, %40
  %42 = add i32 %41, %39
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %37
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %45, i64 %38
  %47 = load i32, i32* %46, align 4, !tbaa !13
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %44, %49
  %50 = phi i32 [ %51, %49 ], [ %36, %44 ]
  %51 = phi i32 [ %52, %49 ], [ %47, %44 ]
  %52 = srem i32 %50, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %49

54:                                               ; preds = %49, %44
  %55 = phi i32 [ %36, %44 ], [ %51, %49 ]
  %56 = icmp eq i32 %55, %36
  %57 = select i1 %56, i32 %42, i32 %39
  br label %58

58:                                               ; preds = %54, %37
  %59 = phi i32 [ %39, %37 ], [ %57, %54 ]
  %60 = add nsw i64 %38, -1
  %61 = icmp eq i64 %38, 0
  br i1 %61, label %62, label %37, !llvm.loop !15

62:                                               ; preds = %58
  %63 = icmp slt i32 %59, %1
  %64 = select i1 %63, i32 %1, i32 %59
  %65 = add nsw i32 %64, -1
  br i1 %10, label %161, label %66

66:                                               ; preds = %62
  %67 = sext i32 %65 to i64
  %68 = add i32 %13, 1
  %69 = sub i32 %68, %64
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %70
  %72 = load i32, i32* %71, align 4, !tbaa !13
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mn, i64 0, i64 %67, i64 %73
  %75 = shl nsw i32 -1, %72
  %76 = add i32 %75, %13
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mn, i64 0, i64 %77, i64 %73
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %74, align 8
  %81 = icmp slt i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = add i64 %82, %9
  br label %84

84:                                               ; preds = %66, %135
  %85 = phi i32 [ %0, %66 ], [ %148, %135 ]
  %86 = phi i64 [ %14, %66 ], [ %159, %135 ]
  %87 = add i32 %85, %15
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4, !tbaa !13
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %20, i64 %91
  %93 = load i32, i32* %92, align 4, !tbaa !13
  %94 = shl nsw i32 -1, %90
  %95 = add i32 %85, 1
  %96 = add i32 %95, %94
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %97, i64 %91
  %99 = load i32, i32* %98, align 4, !tbaa !13
  %100 = icmp eq i32 %93, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %84, %101
  %102 = phi i32 [ %103, %101 ], [ %99, %84 ]
  %103 = phi i32 [ %104, %101 ], [ %93, %84 ]
  %104 = srem i32 %102, %103
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %101

106:                                              ; preds = %101, %84
  %107 = phi i32 [ %99, %84 ], [ %103, %101 ]
  %108 = add nsw i32 %85, -1
  br label %109

109:                                              ; preds = %131, %106
  %110 = phi i64 [ 18, %106 ], [ %133, %131 ]
  %111 = phi i32 [ %108, %106 ], [ %132, %131 ]
  %112 = trunc i64 %110 to i32
  %113 = shl nuw i32 1, %112
  %114 = add nsw i32 %113, %111
  %115 = icmp sgt i32 %114, %8
  br i1 %115, label %131, label %116

116:                                              ; preds = %109
  %117 = add nsw i32 %111, 1
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %118, i64 %110
  %120 = load i32, i32* %119, align 4, !tbaa !13
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %116, %122
  %123 = phi i32 [ %124, %122 ], [ %107, %116 ]
  %124 = phi i32 [ %125, %122 ], [ %120, %116 ]
  %125 = srem i32 %123, %124
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %122

127:                                              ; preds = %122, %116
  %128 = phi i32 [ %107, %116 ], [ %124, %122 ]
  %129 = icmp eq i32 %128, %107
  %130 = select i1 %129, i32 %114, i32 %111
  br label %131

131:                                              ; preds = %127, %109
  %132 = phi i32 [ %111, %109 ], [ %130, %127 ]
  %133 = add nsw i64 %110, -1
  %134 = icmp eq i64 %110, 0
  br i1 %134, label %135, label %109, !llvm.loop !17

135:                                              ; preds = %131
  %136 = icmp sgt i32 %132, %2
  %137 = select i1 %136, i32 %2, i32 %132
  %138 = sext i32 %107 to i64
  %139 = sub i32 1, %85
  %140 = add i32 %139, %137
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4, !tbaa !13
  %144 = sext i32 %85 to i64
  %145 = sext i32 %143 to i64
  %146 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mx, i64 0, i64 %144, i64 %145
  %147 = shl nsw i32 -1, %143
  %148 = add i32 %137, 1
  %149 = add i32 %147, %148
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mx, i64 0, i64 %150, i64 %145
  %152 = load i64, i64* %146, align 8
  %153 = load i64, i64* %151, align 8
  %154 = icmp slt i64 %152, %153
  %155 = select i1 %154, i64 %153, i64 %152
  %156 = sub i64 %155, %83
  %157 = mul nsw i64 %156, %138
  %158 = icmp slt i64 %86, %157
  %159 = select i1 %158, i64 %157, i64 %86
  %160 = icmp sgt i32 %148, %2
  br i1 %160, label %161, label %84, !llvm.loop !18

161:                                              ; preds = %135, %62
  %162 = phi i64 [ %14, %62 ], [ %159, %135 ]
  %163 = icmp sgt i32 %59, %1
  br i1 %163, label %12, label %164, !llvm.loop !19

164:                                              ; preds = %161, %3
  %165 = phi i64 [ -9000000000000000000, %3 ], [ %162, %161 ]
  ret i64 %165
}

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #8 personality i32 (...)* @__gxx_personality_v0 {
  %1 = alloca %"class.std::reverse_iterator", align 8
  %2 = alloca %"class.std::reverse_iterator", align 8
  %3 = alloca %"class.std::reverse_iterator", align 8
  %4 = alloca %"class.std::reverse_iterator", align 8
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !20
  %6 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), %struct._IO_FILE* %5)
  br label %11

7:                                                ; preds = %88
  %8 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32* nonnull @n)
  %9 = load i32, i32* @n, align 4, !tbaa !13
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %98, label %101

11:                                               ; preds = %0, %88
  %12 = phi i32 [ 0, %0 ], [ %89, %88 ]
  %13 = shl nuw nsw i32 1, %12
  %14 = shl i32 2, %12
  %15 = icmp slt i32 %13, %14
  %16 = icmp slt i32 %13, 50005
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %88

18:                                               ; preds = %11
  %19 = sext i32 %13 to i64
  %20 = sext i32 %14 to i64
  %21 = xor i64 %19, -1
  %22 = add nsw i64 %21, %20
  %23 = sub nsw i64 50004, %19
  %24 = call i64 @llvm.umin.i64(i64 %22, i64 %23)
  %25 = add nsw i64 %24, 1
  %26 = icmp ult i64 %25, 8
  br i1 %26, label %86, label %27

27:                                               ; preds = %18
  %28 = and i64 %25, -8
  %29 = add i64 %28, %19
  %30 = insertelement <4 x i32> poison, i32 %12, i32 0
  %31 = shufflevector <4 x i32> %30, <4 x i32> poison, <4 x i32> zeroinitializer
  %32 = insertelement <4 x i32> poison, i32 %12, i32 0
  %33 = shufflevector <4 x i32> %32, <4 x i32> poison, <4 x i32> zeroinitializer
  %34 = add i64 %28, -8
  %35 = lshr exact i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 3
  %38 = icmp ult i64 %34, 24
  br i1 %38, label %70, label %39

39:                                               ; preds = %27
  %40 = and i64 %36, 4611686018427387900
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i64 [ 0, %39 ], [ %67, %41 ]
  %43 = phi i64 [ %40, %39 ], [ %68, %41 ]
  %44 = add i64 %42, %19
  %45 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %31, <4 x i32>* %46, align 4, !tbaa !13
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> %33, <4 x i32>* %48, align 4, !tbaa !13
  %49 = or i64 %42, 8
  %50 = add i64 %49, %19
  %51 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> %31, <4 x i32>* %52, align 4, !tbaa !13
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %33, <4 x i32>* %54, align 4, !tbaa !13
  %55 = or i64 %42, 16
  %56 = add i64 %55, %19
  %57 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> %31, <4 x i32>* %58, align 4, !tbaa !13
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> %33, <4 x i32>* %60, align 4, !tbaa !13
  %61 = or i64 %42, 24
  %62 = add i64 %61, %19
  %63 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %31, <4 x i32>* %64, align 4, !tbaa !13
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %33, <4 x i32>* %66, align 4, !tbaa !13
  %67 = add nuw i64 %42, 32
  %68 = add i64 %43, -4
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %41, !llvm.loop !21

70:                                               ; preds = %41, %27
  %71 = phi i64 [ 0, %27 ], [ %67, %41 ]
  %72 = icmp eq i64 %37, 0
  br i1 %72, label %84, label %73

73:                                               ; preds = %70, %73
  %74 = phi i64 [ %81, %73 ], [ %71, %70 ]
  %75 = phi i64 [ %82, %73 ], [ %37, %70 ]
  %76 = add i64 %74, %19
  %77 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %76
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> %31, <4 x i32>* %78, align 4, !tbaa !13
  %79 = getelementptr inbounds i32, i32* %77, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> %33, <4 x i32>* %80, align 4, !tbaa !13
  %81 = add nuw i64 %74, 8
  %82 = add i64 %75, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %73, !llvm.loop !23

84:                                               ; preds = %73, %70
  %85 = icmp eq i64 %25, %28
  br i1 %85, label %88, label %86

86:                                               ; preds = %18, %84
  %87 = phi i64 [ %19, %18 ], [ %29, %84 ]
  br label %91

88:                                               ; preds = %91, %84, %11
  %89 = add nuw nsw i32 %12, 1
  %90 = icmp eq i32 %89, 19
  br i1 %90, label %7, label %11, !llvm.loop !25

91:                                               ; preds = %86, %91
  %92 = phi i64 [ %94, %91 ], [ %87, %86 ]
  %93 = getelementptr inbounds [50005 x i32], [50005 x i32]* @lg2, i64 0, i64 %92
  store i32 %12, i32* %93, align 4, !tbaa !13
  %94 = add nsw i64 %92, 1
  %95 = icmp slt i64 %94, %20
  %96 = icmp slt i64 %92, 50004
  %97 = and i1 %95, %96
  br i1 %97, label %91, label %88, !llvm.loop !26

98:                                               ; preds = %272, %7
  %99 = phi i32 [ %9, %7 ], [ %274, %272 ]
  %100 = add nsw i32 %99, 2
  br label %277

101:                                              ; preds = %7, %272
  %102 = phi i64 [ %273, %272 ], [ 1, %7 ]
  %103 = phi i64 [ %110, %272 ], [ 0, %7 ]
  %104 = getelementptr inbounds [50005 x i32], [50005 x i32]* @a, i64 0, i64 %102
  %105 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32* nonnull %104)
  %106 = load i32, i32* %104, align 4, !tbaa !13
  %107 = tail call i32 @llvm.abs.i32(i32 %106, i1 true)
  %108 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %102, i64 0
  store i32 %107, i32* %108, align 4, !tbaa !13
  %109 = sext i32 %106 to i64
  %110 = add nsw i64 %103, %109
  %111 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mx, i64 0, i64 %102, i64 0
  store i64 %110, i64* %111, align 8, !tbaa !28
  %112 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mn, i64 0, i64 %102, i64 0
  store i64 %110, i64* %112, align 8, !tbaa !28
  %113 = load %"struct.std::pair"*, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !30
  %114 = ptrtoint %"struct.std::pair"* %113 to i64
  %115 = load %"struct.std::pair"*, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !31
  %116 = icmp eq %"struct.std::pair"* %113, %115
  br i1 %116, label %124, label %117

117:                                              ; preds = %101
  %118 = bitcast %"struct.std::pair"* %113 to i64*
  %119 = shl nuw nsw i64 %102, 32
  %120 = zext i32 %106 to i64
  %121 = or i64 %119, %120
  store i64 %121, i64* %118, align 4
  %122 = load %"struct.std::pair"*, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !30
  %123 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %122, i64 1
  store %"struct.std::pair"* %123, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !30
  br label %272

124:                                              ; preds = %101
  %125 = load %"struct.std::pair"*, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !11
  %126 = ptrtoint %"struct.std::pair"* %125 to i64
  %127 = ptrtoint %"struct.std::pair"* %113 to i64
  %128 = ptrtoint %"struct.std::pair"* %125 to i64
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 3
  %131 = icmp eq i64 %129, 9223372036854775800
  br i1 %131, label %132, label %133

132:                                              ; preds = %124
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0)) #23
  unreachable

133:                                              ; preds = %124
  %134 = icmp eq i64 %129, 0
  %135 = select i1 %134, i64 1, i64 %130
  %136 = add nsw i64 %135, %130
  %137 = icmp ult i64 %136, %130
  %138 = icmp ugt i64 %136, 1152921504606846975
  %139 = or i1 %137, %138
  %140 = select i1 %139, i64 1152921504606846975, i64 %136
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %146, label %142

142:                                              ; preds = %133
  %143 = shl nuw nsw i64 %140, 3
  %144 = tail call noalias nonnull i8* @_Znwm(i64 %143) #24
  %145 = bitcast i8* %144 to %"struct.std::pair"*
  br label %146

146:                                              ; preds = %142, %133
  %147 = phi %"struct.std::pair"* [ %145, %142 ], [ null, %133 ]
  %148 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %147, i64 %130
  %149 = bitcast %"struct.std::pair"* %148 to i64*
  %150 = shl nuw nsw i64 %102, 32
  %151 = zext i32 %106 to i64
  %152 = or i64 %150, %151
  store i64 %152, i64* %149, align 4
  %153 = icmp eq %"struct.std::pair"* %125, %113
  br i1 %153, label %264, label %154

154:                                              ; preds = %146
  %155 = add i64 %114, -8
  %156 = sub i64 %155, %126
  %157 = lshr i64 %156, 3
  %158 = add nuw nsw i64 %157, 1
  %159 = icmp ult i64 %156, 24
  br i1 %159, label %252, label %160

160:                                              ; preds = %154
  %161 = add i64 %114, -8
  %162 = sub i64 %161, %126
  %163 = lshr i64 %162, 3
  %164 = add nuw nsw i64 %163, 1
  %165 = getelementptr %"struct.std::pair", %"struct.std::pair"* %147, i64 %164
  %166 = add nuw nsw i64 %163, 1
  %167 = getelementptr %"struct.std::pair", %"struct.std::pair"* %125, i64 %166
  %168 = icmp ult %"struct.std::pair"* %147, %167
  %169 = icmp ult %"struct.std::pair"* %125, %165
  %170 = and i1 %168, %169
  br i1 %170, label %252, label %171

171:                                              ; preds = %160
  %172 = and i64 %158, 4611686018427387900
  %173 = getelementptr %"struct.std::pair", %"struct.std::pair"* %147, i64 %172
  %174 = getelementptr %"struct.std::pair", %"struct.std::pair"* %125, i64 %172
  %175 = add nsw i64 %172, -4
  %176 = lshr exact i64 %175, 2
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 3
  %179 = icmp ult i64 %175, 12
  br i1 %179, label %231, label %180

180:                                              ; preds = %171
  %181 = and i64 %177, 9223372036854775804
  br label %182

182:                                              ; preds = %182, %180
  %183 = phi i64 [ 0, %180 ], [ %228, %182 ]
  %184 = phi i64 [ %181, %180 ], [ %229, %182 ]
  %185 = getelementptr %"struct.std::pair", %"struct.std::pair"* %147, i64 %183
  %186 = getelementptr %"struct.std::pair", %"struct.std::pair"* %125, i64 %183
  %187 = bitcast %"struct.std::pair"* %186 to <2 x i64>*
  %188 = load <2 x i64>, <2 x i64>* %187, align 4, !alias.scope !32
  %189 = getelementptr %"struct.std::pair", %"struct.std::pair"* %186, i64 2
  %190 = bitcast %"struct.std::pair"* %189 to <2 x i64>*
  %191 = load <2 x i64>, <2 x i64>* %190, align 4, !alias.scope !32
  %192 = bitcast %"struct.std::pair"* %185 to <2 x i64>*
  store <2 x i64> %188, <2 x i64>* %192, align 4, !alias.scope !35, !noalias !32
  %193 = getelementptr %"struct.std::pair", %"struct.std::pair"* %185, i64 2
  %194 = bitcast %"struct.std::pair"* %193 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %194, align 4, !alias.scope !35, !noalias !32
  %195 = or i64 %183, 4
  %196 = getelementptr %"struct.std::pair", %"struct.std::pair"* %147, i64 %195
  %197 = getelementptr %"struct.std::pair", %"struct.std::pair"* %125, i64 %195
  %198 = bitcast %"struct.std::pair"* %197 to <2 x i64>*
  %199 = load <2 x i64>, <2 x i64>* %198, align 4, !alias.scope !32
  %200 = getelementptr %"struct.std::pair", %"struct.std::pair"* %197, i64 2
  %201 = bitcast %"struct.std::pair"* %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 4, !alias.scope !32
  %203 = bitcast %"struct.std::pair"* %196 to <2 x i64>*
  store <2 x i64> %199, <2 x i64>* %203, align 4, !alias.scope !35, !noalias !32
  %204 = getelementptr %"struct.std::pair", %"struct.std::pair"* %196, i64 2
  %205 = bitcast %"struct.std::pair"* %204 to <2 x i64>*
  store <2 x i64> %202, <2 x i64>* %205, align 4, !alias.scope !35, !noalias !32
  %206 = or i64 %183, 8
  %207 = getelementptr %"struct.std::pair", %"struct.std::pair"* %147, i64 %206
  %208 = getelementptr %"struct.std::pair", %"struct.std::pair"* %125, i64 %206
  %209 = bitcast %"struct.std::pair"* %208 to <2 x i64>*
  %210 = load <2 x i64>, <2 x i64>* %209, align 4, !alias.scope !32
  %211 = getelementptr %"struct.std::pair", %"struct.std::pair"* %208, i64 2
  %212 = bitcast %"struct.std::pair"* %211 to <2 x i64>*
  %213 = load <2 x i64>, <2 x i64>* %212, align 4, !alias.scope !32
  %214 = bitcast %"struct.std::pair"* %207 to <2 x i64>*
  store <2 x i64> %210, <2 x i64>* %214, align 4, !alias.scope !35, !noalias !32
  %215 = getelementptr %"struct.std::pair", %"struct.std::pair"* %207, i64 2
  %216 = bitcast %"struct.std::pair"* %215 to <2 x i64>*
  store <2 x i64> %213, <2 x i64>* %216, align 4, !alias.scope !35, !noalias !32
  %217 = or i64 %183, 12
  %218 = getelementptr %"struct.std::pair", %"struct.std::pair"* %147, i64 %217
  %219 = getelementptr %"struct.std::pair", %"struct.std::pair"* %125, i64 %217
  %220 = bitcast %"struct.std::pair"* %219 to <2 x i64>*
  %221 = load <2 x i64>, <2 x i64>* %220, align 4, !alias.scope !32
  %222 = getelementptr %"struct.std::pair", %"struct.std::pair"* %219, i64 2
  %223 = bitcast %"struct.std::pair"* %222 to <2 x i64>*
  %224 = load <2 x i64>, <2 x i64>* %223, align 4, !alias.scope !32
  %225 = bitcast %"struct.std::pair"* %218 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %225, align 4, !alias.scope !35, !noalias !32
  %226 = getelementptr %"struct.std::pair", %"struct.std::pair"* %218, i64 2
  %227 = bitcast %"struct.std::pair"* %226 to <2 x i64>*
  store <2 x i64> %224, <2 x i64>* %227, align 4, !alias.scope !35, !noalias !32
  %228 = add nuw i64 %183, 16
  %229 = add i64 %184, -4
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %182, !llvm.loop !37

231:                                              ; preds = %182, %171
  %232 = phi i64 [ 0, %171 ], [ %228, %182 ]
  %233 = icmp eq i64 %178, 0
  br i1 %233, label %250, label %234

234:                                              ; preds = %231, %234
  %235 = phi i64 [ %247, %234 ], [ %232, %231 ]
  %236 = phi i64 [ %248, %234 ], [ %178, %231 ]
  %237 = getelementptr %"struct.std::pair", %"struct.std::pair"* %147, i64 %235
  %238 = getelementptr %"struct.std::pair", %"struct.std::pair"* %125, i64 %235
  %239 = bitcast %"struct.std::pair"* %238 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 4, !alias.scope !32
  %241 = getelementptr %"struct.std::pair", %"struct.std::pair"* %238, i64 2
  %242 = bitcast %"struct.std::pair"* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 4, !alias.scope !32
  %244 = bitcast %"struct.std::pair"* %237 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %244, align 4, !alias.scope !35, !noalias !32
  %245 = getelementptr %"struct.std::pair", %"struct.std::pair"* %237, i64 2
  %246 = bitcast %"struct.std::pair"* %245 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %246, align 4, !alias.scope !35, !noalias !32
  %247 = add nuw i64 %235, 4
  %248 = add i64 %236, -1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %234, !llvm.loop !38

250:                                              ; preds = %234, %231
  %251 = icmp eq i64 %158, %172
  br i1 %251, label %264, label %252

252:                                              ; preds = %160, %154, %250
  %253 = phi %"struct.std::pair"* [ %147, %160 ], [ %147, %154 ], [ %173, %250 ]
  %254 = phi %"struct.std::pair"* [ %125, %160 ], [ %125, %154 ], [ %174, %250 ]
  br label %255

255:                                              ; preds = %252, %255
  %256 = phi %"struct.std::pair"* [ %262, %255 ], [ %253, %252 ]
  %257 = phi %"struct.std::pair"* [ %261, %255 ], [ %254, %252 ]
  %258 = bitcast %"struct.std::pair"* %257 to i64*
  %259 = bitcast %"struct.std::pair"* %256 to i64*
  %260 = load i64, i64* %258, align 4
  store i64 %260, i64* %259, align 4
  %261 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %257, i64 1
  %262 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %256, i64 1
  %263 = icmp eq %"struct.std::pair"* %261, %113
  br i1 %263, label %264, label %255, !llvm.loop !39

264:                                              ; preds = %255, %250, %146
  %265 = phi %"struct.std::pair"* [ %147, %146 ], [ %173, %250 ], [ %262, %255 ]
  %266 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %265, i64 1
  %267 = icmp eq %"struct.std::pair"* %125, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %264
  %269 = bitcast %"struct.std::pair"* %125 to i8*
  tail call void @_ZdlPv(i8* nonnull %269) #22
  br label %270

270:                                              ; preds = %264, %268
  store %"struct.std::pair"* %147, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !11
  store %"struct.std::pair"* %266, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !30
  %271 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %147, i64 %140
  store %"struct.std::pair"* %271, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !31
  br label %272

272:                                              ; preds = %117, %270
  %273 = add nuw nsw i64 %102, 1
  %274 = load i32, i32* @n, align 4, !tbaa !13
  %275 = sext i32 %274 to i64
  %276 = icmp slt i64 %102, %275
  br i1 %276, label %101, label %98, !llvm.loop !40

277:                                              ; preds = %98, %315
  %278 = phi i64 [ 1, %98 ], [ %316, %315 ]
  %279 = trunc i64 %278 to i32
  %280 = shl nuw i32 1, %279
  %281 = add nsw i64 %278, -1
  %282 = icmp sgt i32 %280, %100
  br i1 %282, label %315, label %283

283:                                              ; preds = %277
  %284 = trunc i64 %281 to i32
  %285 = shl nuw i32 1, %284
  br label %318

286:                                              ; preds = %315
  %287 = load %"struct.std::pair"*, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !20, !noalias !41
  %288 = load %"struct.std::pair"*, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !20, !noalias !44
  %289 = ptrtoint %"struct.std::pair"* %287 to i64
  %290 = ptrtoint %"struct.std::pair"* %288 to i64
  %291 = bitcast %"class.std::reverse_iterator"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291)
  %292 = bitcast %"class.std::reverse_iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292)
  %293 = bitcast %"class.std::reverse_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293)
  %294 = bitcast %"class.std::reverse_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %294)
  %295 = icmp eq %"struct.std::pair"* %287, %288
  br i1 %295, label %308, label %296

296:                                              ; preds = %286
  %297 = bitcast %"class.std::reverse_iterator"* %1 to i64*
  store i64 %289, i64* %297, align 8, !tbaa !20
  %298 = bitcast %"class.std::reverse_iterator"* %2 to i64*
  store i64 %290, i64* %298, align 8, !tbaa !20
  %299 = sub i64 %289, %290
  %300 = ashr exact i64 %299, 3
  %301 = tail call i64 @llvm.ctlz.i64(i64 %300, i1 true) #22, !range !47
  %302 = shl nuw nsw i64 %301, 1
  %303 = xor i64 %302, 126
  call void @_ZSt16__introsort_loopISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEElNS1_5__ops15_Iter_less_iterEEvT_SD_T0_T1_(%"class.std::reverse_iterator"* nonnull %1, %"class.std::reverse_iterator"* nonnull %2, i64 %303)
  %304 = bitcast %"class.std::reverse_iterator"* %3 to i64*
  store i64 %289, i64* %304, align 8, !tbaa !20
  %305 = bitcast %"class.std::reverse_iterator"* %4 to i64*
  store i64 %290, i64* %305, align 8, !tbaa !20
  call void @_ZSt22__final_insertion_sortISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEEvT_SD_T0_(%"class.std::reverse_iterator"* nonnull %3, %"class.std::reverse_iterator"* nonnull %4)
  %306 = load %"struct.std::pair"*, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !30
  %307 = load %"struct.std::pair"*, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !11
  br label %308

308:                                              ; preds = %286, %296
  %309 = phi %"struct.std::pair"* [ %287, %286 ], [ %307, %296 ]
  %310 = phi %"struct.std::pair"* [ %287, %286 ], [ %306, %296 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294)
  %311 = icmp eq %"struct.std::pair"* %310, %309
  br i1 %311, label %354, label %312

312:                                              ; preds = %308
  %313 = load i32, i32* @n, align 4, !tbaa !13
  %314 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1) to %"struct.std::_Rb_tree_node"**), align 8, !tbaa !3
  br label %386

315:                                              ; preds = %333, %277
  %316 = add nuw nsw i64 %278, 1
  %317 = icmp eq i64 %316, 19
  br i1 %317, label %286, label %277, !llvm.loop !48

318:                                              ; preds = %283, %333
  %319 = phi i64 [ 0, %283 ], [ %350, %333 ]
  %320 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %319, i64 %281
  %321 = load i32, i32* %320, align 4, !tbaa !13
  %322 = trunc i64 %319 to i32
  %323 = add i32 %285, %322
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %324, i64 %281
  %326 = load i32, i32* %325, align 4, !tbaa !13
  %327 = icmp eq i32 %321, 0
  br i1 %327, label %333, label %328

328:                                              ; preds = %318, %328
  %329 = phi i32 [ %330, %328 ], [ %326, %318 ]
  %330 = phi i32 [ %331, %328 ], [ %321, %318 ]
  %331 = srem i32 %329, %330
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %328

333:                                              ; preds = %328, %318
  %334 = phi i32 [ %326, %318 ], [ %330, %328 ]
  %335 = getelementptr inbounds [50005 x [19 x i32]], [50005 x [19 x i32]]* @G, i64 0, i64 %319, i64 %278
  store i32 %334, i32* %335, align 4, !tbaa !13
  %336 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mn, i64 0, i64 %319, i64 %281
  %337 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mn, i64 0, i64 %324, i64 %281
  %338 = load i64, i64* %337, align 8
  %339 = load i64, i64* %336, align 8
  %340 = icmp slt i64 %338, %339
  %341 = select i1 %340, i64 %338, i64 %339
  %342 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mn, i64 0, i64 %319, i64 %278
  store i64 %341, i64* %342, align 8, !tbaa !28
  %343 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mx, i64 0, i64 %319, i64 %281
  %344 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mx, i64 0, i64 %324, i64 %281
  %345 = load i64, i64* %343, align 8
  %346 = load i64, i64* %344, align 8
  %347 = icmp slt i64 %345, %346
  %348 = select i1 %347, i64 %346, i64 %345
  %349 = getelementptr inbounds [50005 x [19 x i64]], [50005 x [19 x i64]]* @mx, i64 0, i64 %319, i64 %278
  store i64 %348, i64* %349, align 8, !tbaa !28
  %350 = add nuw i64 %319, 1
  %351 = trunc i64 %350 to i32
  %352 = add i32 %280, %351
  %353 = icmp sgt i32 %352, %100
  br i1 %353, label %315, label %318, !llvm.loop !49

354:                                              ; preds = %481, %308
  %355 = load i64, i64* @res, align 8, !tbaa !28
  %356 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIxEERSoT_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 %355)
  %357 = bitcast %"class.std::basic_ostream"* %356 to i8**
  %358 = load i8*, i8** %357, align 8, !tbaa !50
  %359 = getelementptr i8, i8* %358, i64 -24
  %360 = bitcast i8* %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = bitcast %"class.std::basic_ostream"* %356 to i8*
  %363 = add nsw i64 %361, 240
  %364 = getelementptr inbounds i8, i8* %362, i64 %363
  %365 = bitcast i8* %364 to %"class.std::ctype"**
  %366 = load %"class.std::ctype"*, %"class.std::ctype"** %365, align 8, !tbaa !52
  %367 = icmp eq %"class.std::ctype"* %366, null
  br i1 %367, label %368, label %369

368:                                              ; preds = %354
  call void @_ZSt16__throw_bad_castv() #23
  unreachable

369:                                              ; preds = %354
  %370 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %366, i64 0, i32 8
  %371 = load i8, i8* %370, align 8, !tbaa !55
  %372 = icmp eq i8 %371, 0
  br i1 %372, label %376, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %366, i64 0, i32 9, i64 10
  %375 = load i8, i8* %374, align 1, !tbaa !57
  br label %382

376:                                              ; preds = %369
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %366)
  %377 = bitcast %"class.std::ctype"* %366 to i8 (%"class.std::ctype"*, i8)***
  %378 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %377, align 8, !tbaa !50
  %379 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %378, i64 6
  %380 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %379, align 8
  %381 = call signext i8 %380(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %366, i8 signext 10)
  br label %382

382:                                              ; preds = %373, %376
  %383 = phi i8 [ %375, %373 ], [ %381, %376 ]
  %384 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %356, i8 signext %383)
  %385 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %384)
  ret i32 0

386:                                              ; preds = %312, %481
  %387 = phi %"struct.std::pair"* [ %309, %312 ], [ %482, %481 ]
  %388 = phi %"struct.std::pair"* [ %310, %312 ], [ %483, %481 ]
  %389 = phi %"struct.std::_Rb_tree_node"* [ %314, %312 ], [ %484, %481 ]
  %390 = phi i32 [ %313, %312 ], [ %485, %481 ]
  %391 = phi i64 [ 0, %312 ], [ %486, %481 ]
  %392 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %387, i64 %391, i32 1
  %393 = load i32, i32* %392, align 4, !tbaa !58
  %394 = icmp eq %"struct.std::_Rb_tree_node"* %389, null
  br i1 %394, label %416, label %395

395:                                              ; preds = %386, %395
  %396 = phi %"struct.std::_Rb_tree_node"* [ %408, %395 ], [ %389, %386 ]
  %397 = phi %"struct.std::_Rb_tree_node_base"* [ %405, %395 ], [ bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %386 ]
  %398 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %396, i64 0, i32 1
  %399 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %398 to i32*
  %400 = load i32, i32* %399, align 4, !tbaa !13
  %401 = icmp slt i32 %400, %393
  %402 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %396, i64 0, i32 0, i32 3
  %403 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %396, i64 0, i32 0
  %404 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %396, i64 0, i32 0, i32 2
  %405 = select i1 %401, %"struct.std::_Rb_tree_node_base"* %397, %"struct.std::_Rb_tree_node_base"* %403
  %406 = select i1 %401, %"struct.std::_Rb_tree_node_base"** %402, %"struct.std::_Rb_tree_node_base"** %404
  %407 = bitcast %"struct.std::_Rb_tree_node_base"** %406 to %"struct.std::_Rb_tree_node"**
  %408 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %407, align 8, !tbaa !20
  %409 = icmp eq %"struct.std::_Rb_tree_node"* %408, null
  br i1 %409, label %410, label %395, !llvm.loop !60

410:                                              ; preds = %395
  %411 = icmp eq %"struct.std::_Rb_tree_node_base"* %405, bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)
  br i1 %411, label %416, label %412

412:                                              ; preds = %410
  %413 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %405, i64 1, i32 0
  %414 = load i32, i32* %413, align 4, !tbaa !13
  %415 = add nsw i32 %414, -1
  br label %416

416:                                              ; preds = %386, %412, %410
  %417 = phi %"struct.std::_Rb_tree_node_base"* [ %405, %412 ], [ bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %410 ], [ bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %386 ]
  %418 = phi i32 [ %415, %412 ], [ %390, %410 ], [ %390, %386 ]
  %419 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2), align 8, !tbaa !61
  %420 = icmp eq %"struct.std::_Rb_tree_node_base"* %417, %419
  br i1 %420, label %426, label %421

421:                                              ; preds = %416
  %422 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %417) #25
  %423 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %422, i64 1, i32 0
  %424 = load i32, i32* %423, align 4, !tbaa !13
  %425 = add nsw i32 %424, 1
  br label %426

426:                                              ; preds = %421, %416
  %427 = phi i32 [ %425, %421 ], [ 1, %416 ]
  %428 = call i64 @_Z5Solveiii(i32 %393, i32 %427, i32 %418)
  %429 = load i64, i64* @res, align 8, !tbaa !28
  %430 = icmp slt i64 %429, %428
  %431 = select i1 %430, i64 %428, i64 %429
  store i64 %431, i64* @res, align 8, !tbaa !28
  br i1 %394, label %448, label %432

432:                                              ; preds = %426, %432
  %433 = phi %"struct.std::_Rb_tree_node"* [ %442, %432 ], [ %389, %426 ]
  %434 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %433, i64 0, i32 1
  %435 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %434 to i32*
  %436 = load i32, i32* %435, align 4, !tbaa !13
  %437 = icmp slt i32 %393, %436
  %438 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %433, i64 0, i32 0, i32 2
  %439 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %433, i64 0, i32 0, i32 3
  %440 = select i1 %437, %"struct.std::_Rb_tree_node_base"** %438, %"struct.std::_Rb_tree_node_base"** %439
  %441 = bitcast %"struct.std::_Rb_tree_node_base"** %440 to %"struct.std::_Rb_tree_node"**
  %442 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %441, align 8, !tbaa !20
  %443 = icmp eq %"struct.std::_Rb_tree_node"* %442, null
  br i1 %443, label %444, label %432, !llvm.loop !62

444:                                              ; preds = %432
  %445 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %433, i64 0, i32 0
  br i1 %437, label %446, label %453

446:                                              ; preds = %444
  %447 = icmp eq %"struct.std::_Rb_tree_node_base"* %445, %419
  br i1 %447, label %461, label %450

448:                                              ; preds = %426
  %449 = icmp eq %"struct.std::_Rb_tree_node_base"* %419, bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)
  br i1 %449, label %468, label %450

450:                                              ; preds = %448, %446
  %451 = phi %"struct.std::_Rb_tree_node_base"* [ bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %448 ], [ %445, %446 ]
  %452 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %451) #25
  br label %453

453:                                              ; preds = %450, %444
  %454 = phi %"struct.std::_Rb_tree_node_base"* [ %451, %450 ], [ %445, %444 ]
  %455 = phi %"struct.std::_Rb_tree_node_base"* [ %452, %450 ], [ %445, %444 ]
  %456 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %455, i64 1, i32 0
  %457 = load i32, i32* %456, align 4, !tbaa !13
  %458 = icmp sge i32 %457, %393
  %459 = icmp eq %"struct.std::_Rb_tree_node_base"* %454, null
  %460 = select i1 %458, i1 true, i1 %459
  br i1 %460, label %481, label %461

461:                                              ; preds = %446, %453
  %462 = phi %"struct.std::_Rb_tree_node_base"* [ %454, %453 ], [ %419, %446 ]
  %463 = icmp eq %"struct.std::_Rb_tree_node_base"* %462, bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)
  br i1 %463, label %468, label %464

464:                                              ; preds = %461
  %465 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %462, i64 1, i32 0
  %466 = load i32, i32* %465, align 4, !tbaa !13
  %467 = icmp slt i32 %393, %466
  br label %468

468:                                              ; preds = %448, %464, %461
  %469 = phi %"struct.std::_Rb_tree_node_base"* [ bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %461 ], [ %462, %464 ], [ bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %448 ]
  %470 = phi i1 [ true, %461 ], [ %467, %464 ], [ true, %448 ]
  %471 = call noalias nonnull i8* @_Znwm(i64 40) #24
  %472 = getelementptr inbounds i8, i8* %471, i64 32
  %473 = bitcast i8* %472 to i32*
  store i32 %393, i32* %473, align 4, !tbaa !13
  %474 = bitcast i8* %471 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %470, %"struct.std::_Rb_tree_node_base"* nonnull %474, %"struct.std::_Rb_tree_node_base"* nonnull %469, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)) #22
  %475 = load i64, i64* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 1), align 8, !tbaa !63
  %476 = add i64 %475, 1
  store i64 %476, i64* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 1), align 8, !tbaa !63
  %477 = load i32, i32* @n, align 4, !tbaa !13
  %478 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1) to %"struct.std::_Rb_tree_node"**), align 8, !tbaa !3
  %479 = load %"struct.std::pair"*, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !30
  %480 = load %"struct.std::pair"*, %"struct.std::pair"** getelementptr inbounds (%"class.std::vector", %"class.std::vector"* @seq, i64 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !11
  br label %481

481:                                              ; preds = %453, %468
  %482 = phi %"struct.std::pair"* [ %387, %453 ], [ %480, %468 ]
  %483 = phi %"struct.std::pair"* [ %388, %453 ], [ %479, %468 ]
  %484 = phi %"struct.std::_Rb_tree_node"* [ %389, %453 ], [ %478, %468 ]
  %485 = phi i32 [ %390, %453 ], [ %477, %468 ]
  %486 = add nuw i64 %391, 1
  %487 = ptrtoint %"struct.std::pair"* %483 to i64
  %488 = ptrtoint %"struct.std::pair"* %482 to i64
  %489 = sub i64 %487, %488
  %490 = ashr exact i64 %489, 3
  %491 = icmp ugt i64 %490, %486
  br i1 %491, label %386, label %354, !llvm.loop !64
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #9

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #10 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #22
  tail call void @_ZSt9terminatev() #21
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %1) local_unnamed_addr #11 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"struct.std::_Rb_tree_node"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"struct.std::_Rb_tree_node"* [ %11, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 3
  %7 = bitcast %"struct.std::_Rb_tree_node_base"** %6 to %"struct.std::_Rb_tree_node"**
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8, !tbaa !65
  tail call void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %8)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 2
  %10 = bitcast %"struct.std::_Rb_tree_node_base"** %9 to %"struct.std::_Rb_tree_node"**
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8, !tbaa !66
  %12 = bitcast %"struct.std::_Rb_tree_node"* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %12) #22
  %13 = icmp eq %"struct.std::_Rb_tree_node"* %11, null
  br i1 %13, label %14, label %4, !llvm.loop !67

14:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #13

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEElNS1_5__ops15_Iter_less_iterEEvT_SD_T0_T1_(%"class.std::reverse_iterator"* %0, %"class.std::reverse_iterator"* %1, i64 %2) local_unnamed_addr #15 comdat {
  %4 = alloca %"class.std::reverse_iterator", align 8
  %5 = alloca %"class.std::reverse_iterator", align 8
  %6 = alloca %"class.std::reverse_iterator", align 8
  %7 = alloca %"class.std::reverse_iterator", align 8
  %8 = alloca %"class.std::reverse_iterator", align 8
  %9 = alloca %"class.std::reverse_iterator", align 8
  %10 = alloca %"class.std::reverse_iterator", align 8
  %11 = alloca %"class.std::reverse_iterator", align 8
  %12 = alloca %"class.std::reverse_iterator", align 8
  %13 = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %0, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %1, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::reverse_iterator"* %1 to i64*
  %16 = bitcast %"class.std::reverse_iterator"* %4 to i8*
  %17 = bitcast %"class.std::reverse_iterator"* %5 to i8*
  %18 = bitcast %"class.std::reverse_iterator"* %6 to i8*
  %19 = bitcast %"class.std::reverse_iterator"* %7 to i8*
  %20 = bitcast %"class.std::reverse_iterator"* %4 to i64*
  %21 = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %5, i64 0, i32 0, i32 0
  %22 = bitcast %"class.std::reverse_iterator"* %6 to i64*
  %23 = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %7, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::reverse_iterator"* %11 to i64*
  %25 = bitcast %"class.std::reverse_iterator"* %12 to i64*
  %26 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8, !tbaa.struct !68
  %27 = load %"struct.std::pair"*, %"struct.std::pair"** %14, align 8, !tbaa.struct !68
  %28 = ptrtoint %"struct.std::pair"* %26 to i64
  %29 = ptrtoint %"struct.std::pair"* %27 to i64
  %30 = sub i64 %28, %29
  %31 = icmp sgt i64 %30, 128
  br i1 %31, label %32, label %103

32:                                               ; preds = %3, %95
  %33 = phi i64 [ %97, %95 ], [ %29, %3 ]
  %34 = phi i64 [ %100, %95 ], [ %28, %3 ]
  %35 = phi i64 [ %96, %95 ], [ %2, %3 ]
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = bitcast %"class.std::reverse_iterator"* %8 to i64*
  store i64 %34, i64* %38, align 8, !tbaa !20
  %39 = bitcast %"class.std::reverse_iterator"* %9 to i64*
  store i64 %33, i64* %39, align 8, !tbaa !20
  %40 = bitcast %"class.std::reverse_iterator"* %10 to i64*
  store i64 %33, i64* %40, align 8, !tbaa !20
  call void @_ZSt14__partial_sortISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEEvT_SD_SD_T0_(%"class.std::reverse_iterator"* nonnull %8, %"class.std::reverse_iterator"* nonnull %9, %"class.std::reverse_iterator"* nonnull %10)
  br label %103

41:                                               ; preds = %32
  %42 = inttoptr i64 %34 to %"struct.std::pair"*
  %43 = inttoptr i64 %33 to %"struct.std::pair"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %44 = sub i64 %34, %33
  %45 = ashr exact i64 %44, 3
  %46 = sdiv i64 %45, -2
  %47 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %42, i64 %46
  store i64 %34, i64* %20, align 8, !tbaa !20, !noalias !69
  %48 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %42, i64 -1
  store %"struct.std::pair"* %48, %"struct.std::pair"** %21, align 8, !tbaa.struct !68, !alias.scope !72, !noalias !69
  %49 = ptrtoint %"struct.std::pair"* %47 to i64
  store i64 %49, i64* %22, align 8, !tbaa !20, !noalias !69
  %50 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %43, i64 1
  store %"struct.std::pair"* %50, %"struct.std::pair"** %23, align 8, !tbaa.struct !68, !alias.scope !75, !noalias !69
  call void @_ZSt22__move_median_to_firstISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEEvT_SD_SD_SD_T0_(%"class.std::reverse_iterator"* nonnull %4, %"class.std::reverse_iterator"* nonnull %5, %"class.std::reverse_iterator"* nonnull %6, %"class.std::reverse_iterator"* nonnull %7), !noalias !69
  %51 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %42, i64 -1, i32 0
  %52 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %42, i64 -1, i32 1
  br label %53

53:                                               ; preds = %89, %41
  %54 = phi %"struct.std::pair"* [ %43, %41 ], [ %75, %89 ]
  %55 = phi %"struct.std::pair"* [ %42, %41 ], [ %59, %89 ]
  %56 = load i32, i32* %51, align 4, !tbaa !78, !noalias !79
  br label %57

57:                                               ; preds = %70, %53
  %58 = phi %"struct.std::pair"* [ %55, %53 ], [ %59, %70 ]
  %59 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -1
  %60 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -2, i32 0
  %61 = load i32, i32* %60, align 4, !tbaa !78, !noalias !79
  %62 = icmp slt i32 %61, %56
  br i1 %62, label %70, label %63

63:                                               ; preds = %57
  %64 = icmp slt i32 %56, %61
  br i1 %64, label %71, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -2, i32 1
  %67 = load i32, i32* %66, align 4, !tbaa !58, !noalias !79
  %68 = load i32, i32* %52, align 4, !tbaa !58, !noalias !79
  %69 = icmp slt i32 %67, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %65, %57
  br label %57, !llvm.loop !82

71:                                               ; preds = %65, %63
  %72 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -2, i32 0
  br label %73

73:                                               ; preds = %86, %71
  %74 = phi %"struct.std::pair"* [ %54, %71 ], [ %75, %86 ]
  %75 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %74, i64 1
  %76 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %74, i64 0, i32 0
  %77 = load i32, i32* %76, align 4, !tbaa !78, !noalias !79
  %78 = icmp slt i32 %56, %77
  br i1 %78, label %86, label %79

79:                                               ; preds = %73
  %80 = icmp slt i32 %77, %56
  br i1 %80, label %87, label %81

81:                                               ; preds = %79
  %82 = load i32, i32* %52, align 4, !tbaa !58, !noalias !79
  %83 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %74, i64 0, i32 1
  %84 = load i32, i32* %83, align 4, !tbaa !58, !noalias !79
  %85 = icmp slt i32 %82, %84
  br i1 %85, label %86, label %87

86:                                               ; preds = %81, %73
  br label %73, !llvm.loop !83

87:                                               ; preds = %81, %79
  %88 = icmp ult %"struct.std::pair"* %75, %59
  br i1 %88, label %89, label %95

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %74, i64 0, i32 0
  store i32 %77, i32* %72, align 4, !tbaa !13, !noalias !79
  store i32 %61, i32* %90, align 4, !tbaa !13, !noalias !79
  %91 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -2, i32 1
  %92 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %74, i64 0, i32 1
  %93 = load i32, i32* %91, align 4, !tbaa !13, !noalias !79
  %94 = load i32, i32* %92, align 4, !tbaa !13, !noalias !79
  store i32 %94, i32* %91, align 4, !tbaa !13, !noalias !79
  store i32 %93, i32* %92, align 4, !tbaa !13, !noalias !79
  br label %53, !llvm.loop !84

95:                                               ; preds = %87
  %96 = add nsw i64 %35, -1
  %97 = ptrtoint %"struct.std::pair"* %59 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i64 %97, i64* %24, align 8, !tbaa !20
  %98 = load i64, i64* %15, align 8, !tbaa !20
  store i64 %98, i64* %25, align 8, !tbaa !20
  call void @_ZSt16__introsort_loopISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEElNS1_5__ops15_Iter_less_iterEEvT_SD_T0_T1_(%"class.std::reverse_iterator"* nonnull %11, %"class.std::reverse_iterator"* nonnull %12, i64 %96)
  store i64 %97, i64* %15, align 8
  %99 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8, !tbaa.struct !68
  %100 = ptrtoint %"struct.std::pair"* %99 to i64
  %101 = sub i64 %100, %97
  %102 = icmp sgt i64 %101, 128
  br i1 %102, label %32, label %103, !llvm.loop !85

103:                                              ; preds = %95, %3, %37
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEEvT_SD_T0_(%"class.std::reverse_iterator"* %0, %"class.std::reverse_iterator"* %1) local_unnamed_addr #15 comdat {
  %3 = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8, !tbaa.struct !68
  %5 = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8, !tbaa.struct !68
  %7 = ptrtoint %"struct.std::pair"* %4 to i64
  %8 = ptrtoint %"struct.std::pair"* %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 128
  br i1 %10, label %11, label %126

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %4, i64 -16
  %13 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %4, i64 -1, i32 0
  %14 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %4, i64 -1, i32 1
  br label %15

15:                                               ; preds = %90, %11
  %16 = phi i64 [ -1, %11 ], [ %91, %90 ]
  %17 = phi %"struct.std::pair"* [ %4, %11 ], [ %18, %90 ]
  %18 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %4, i64 %16
  %19 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 -2, i32 0
  %20 = load i32, i32* %19, align 4, !tbaa !78
  %21 = load i32, i32* %13, align 4, !tbaa !78
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %30, label %23

23:                                               ; preds = %15
  %24 = icmp slt i32 %21, %20
  br i1 %24, label %63, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 -2, i32 1
  %27 = load i32, i32* %26, align 4, !tbaa !58
  %28 = load i32, i32* %14, align 4, !tbaa !58
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %63

30:                                               ; preds = %25, %15
  %31 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 -2
  %32 = bitcast %"struct.std::pair"* %31 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = mul i64 %16, -8
  %38 = icmp sgt i64 %37, 0
  br i1 %38, label %39, label %62

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %18, i64 0, i32 0
  %41 = load i32, i32* %40, align 4, !tbaa !13, !noalias !86
  %42 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %31, i64 0, i32 0
  store i32 %41, i32* %42, align 4, !tbaa !78, !noalias !86
  %43 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 -1, i32 1
  %44 = load i32, i32* %43, align 4, !tbaa !13, !noalias !86
  %45 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 -2, i32 1
  store i32 %44, i32* %45, align 4, !tbaa !58, !noalias !86
  %46 = icmp ugt i64 %37, 8
  br i1 %46, label %47, label %62, !llvm.loop !95

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 -1
  %49 = lshr exact i64 %37, 3
  br label %50

50:                                               ; preds = %50, %47
  %51 = phi %"struct.std::pair"* [ %53, %50 ], [ %48, %47 ]
  %52 = phi i64 [ %54, %50 ], [ %49, %47 ]
  %53 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i64 1
  %54 = add nsw i64 %52, -1
  %55 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %53, i64 0, i32 0
  %56 = load i32, i32* %55, align 4, !tbaa !13, !noalias !86
  %57 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i64 0, i32 0
  store i32 %56, i32* %57, align 4, !tbaa !78, !noalias !86
  %58 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i64 1, i32 1
  %59 = load i32, i32* %58, align 4, !tbaa !13, !noalias !86
  %60 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i64 0, i32 1
  store i32 %59, i32* %60, align 4, !tbaa !58, !noalias !86
  %61 = icmp sgt i64 %52, 2
  br i1 %61, label %50, label %62, !llvm.loop !95

62:                                               ; preds = %50, %39, %30
  store i32 %34, i32* %13, align 4, !tbaa !78
  store i32 %36, i32* %14, align 4, !tbaa !58
  br label %90

63:                                               ; preds = %25, %23
  %64 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %17, i64 -2
  %65 = bitcast %"struct.std::pair"* %64 to i64*
  %66 = load i64, i64* %65, align 4
  %67 = trunc i64 %66 to i32
  %68 = lshr i64 %66, 32
  %69 = trunc i64 %68 to i32
  br label %70

70:                                               ; preds = %82, %63
  %71 = phi %"struct.std::pair"* [ %18, %63 ], [ %72, %82 ]
  %72 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %71, i64 1
  %73 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %71, i64 0, i32 0
  %74 = load i32, i32* %73, align 4, !tbaa !78
  %75 = icmp sgt i32 %74, %67
  br i1 %75, label %82, label %76

76:                                               ; preds = %70
  %77 = icmp slt i32 %74, %67
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %71, i64 0, i32 1
  %80 = load i32, i32* %79, align 4, !tbaa !58
  %81 = icmp sgt i32 %80, %69
  br i1 %81, label %82, label %87

82:                                               ; preds = %78, %70
  %83 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %71, i64 -1, i32 0
  store i32 %74, i32* %83, align 4, !tbaa !78
  %84 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %71, i64 0, i32 1
  %85 = load i32, i32* %84, align 4, !tbaa !13
  %86 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %71, i64 -1, i32 1
  store i32 %85, i32* %86, align 4, !tbaa !58
  br label %70, !llvm.loop !96

87:                                               ; preds = %78, %76
  %88 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %71, i64 -1, i32 0
  store i32 %67, i32* %88, align 4, !tbaa !78
  %89 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %71, i64 -1, i32 1
  store i32 %69, i32* %89, align 4, !tbaa !58
  br label %90

90:                                               ; preds = %87, %62
  %91 = add nsw i64 %16, -1
  %92 = icmp eq i64 %91, -16
  br i1 %92, label %93, label %15, !llvm.loop !97

93:                                               ; preds = %90
  %94 = icmp eq %"struct.std::pair"* %12, %6
  br i1 %94, label %216, label %95

95:                                               ; preds = %93, %122
  %96 = phi %"struct.std::pair"* [ %97, %122 ], [ %12, %93 ]
  %97 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %96, i64 -1
  %98 = bitcast %"struct.std::pair"* %97 to i64*
  %99 = load i64, i64* %98, align 4
  %100 = trunc i64 %99 to i32
  %101 = lshr i64 %99, 32
  %102 = trunc i64 %101 to i32
  br label %103

103:                                              ; preds = %118, %95
  %104 = phi %"struct.std::pair"* [ %96, %95 ], [ %105, %118 ]
  %105 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 1
  %106 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 0, i32 0
  %107 = load i32, i32* %106, align 4, !tbaa !78
  %108 = icmp sgt i32 %107, %100
  br i1 %108, label %109, label %112

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 0, i32 1
  %111 = load i32, i32* %110, align 4, !tbaa !13
  br label %118

112:                                              ; preds = %103
  %113 = icmp slt i32 %107, %100
  br i1 %113, label %122, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 0, i32 1
  %116 = load i32, i32* %115, align 4, !tbaa !58
  %117 = icmp sgt i32 %116, %102
  br i1 %117, label %118, label %122

118:                                              ; preds = %114, %109
  %119 = phi i32 [ %111, %109 ], [ %116, %114 ]
  %120 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 -1, i32 0
  store i32 %107, i32* %120, align 4, !tbaa !78
  %121 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 -1, i32 1
  store i32 %119, i32* %121, align 4, !tbaa !58
  br label %103, !llvm.loop !96

122:                                              ; preds = %114, %112
  %123 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 -1, i32 0
  store i32 %100, i32* %123, align 4, !tbaa !78
  %124 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %104, i64 -1, i32 1
  store i32 %102, i32* %124, align 4, !tbaa !58
  %125 = icmp eq %"struct.std::pair"* %97, %6
  br i1 %125, label %216, label %95, !llvm.loop !98

126:                                              ; preds = %2
  %127 = icmp eq %"struct.std::pair"* %4, %6
  br i1 %127, label %216, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %4, i64 -1
  %130 = icmp eq %"struct.std::pair"* %129, %6
  br i1 %130, label %216, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %4, i64 -1, i32 0
  %133 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %4, i64 -1, i32 1
  br label %134

134:                                              ; preds = %213, %131
  %135 = phi %"struct.std::pair"* [ %129, %131 ], [ %214, %213 ]
  %136 = phi %"struct.std::pair"* [ %4, %131 ], [ %135, %213 ]
  %137 = ptrtoint %"struct.std::pair"* %135 to i64
  %138 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %136, i64 -2, i32 0
  %139 = load i32, i32* %138, align 4, !tbaa !78
  %140 = load i32, i32* %132, align 4, !tbaa !78
  %141 = icmp slt i32 %139, %140
  br i1 %141, label %149, label %142

142:                                              ; preds = %134
  %143 = icmp slt i32 %140, %139
  br i1 %143, label %182, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %136, i64 -2, i32 1
  %146 = load i32, i32* %145, align 4, !tbaa !58
  %147 = load i32, i32* %133, align 4, !tbaa !58
  %148 = icmp slt i32 %146, %147
  br i1 %148, label %149, label %182

149:                                              ; preds = %144, %134
  %150 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %136, i64 -2
  %151 = bitcast %"struct.std::pair"* %150 to i64*
  %152 = load i64, i64* %151, align 4
  %153 = trunc i64 %152 to i32
  %154 = lshr i64 %152, 32
  %155 = trunc i64 %154 to i32
  %156 = sub i64 %7, %137
  %157 = icmp sgt i64 %156, 0
  br i1 %157, label %158, label %181

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %135, i64 0, i32 0
  %160 = load i32, i32* %159, align 4, !tbaa !13, !noalias !99
  %161 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %150, i64 0, i32 0
  store i32 %160, i32* %161, align 4, !tbaa !78, !noalias !99
  %162 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %136, i64 -1, i32 1
  %163 = load i32, i32* %162, align 4, !tbaa !13, !noalias !99
  %164 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %136, i64 -2, i32 1
  store i32 %163, i32* %164, align 4, !tbaa !58, !noalias !99
  %165 = icmp ugt i64 %156, 8
  br i1 %165, label %166, label %181, !llvm.loop !95

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %136, i64 -1
  %168 = lshr exact i64 %156, 3
  br label %169

169:                                              ; preds = %169, %166
  %170 = phi %"struct.std::pair"* [ %172, %169 ], [ %167, %166 ]
  %171 = phi i64 [ %173, %169 ], [ %168, %166 ]
  %172 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %170, i64 1
  %173 = add nsw i64 %171, -1
  %174 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %172, i64 0, i32 0
  %175 = load i32, i32* %174, align 4, !tbaa !13, !noalias !99
  %176 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %170, i64 0, i32 0
  store i32 %175, i32* %176, align 4, !tbaa !78, !noalias !99
  %177 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %170, i64 1, i32 1
  %178 = load i32, i32* %177, align 4, !tbaa !13, !noalias !99
  %179 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %170, i64 0, i32 1
  store i32 %178, i32* %179, align 4, !tbaa !58, !noalias !99
  %180 = icmp sgt i64 %171, 2
  br i1 %180, label %169, label %181, !llvm.loop !95

181:                                              ; preds = %169, %158, %149
  store i32 %153, i32* %132, align 4, !tbaa !78
  store i32 %155, i32* %133, align 4, !tbaa !58
  br label %213

182:                                              ; preds = %144, %142
  %183 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %136, i64 -2
  %184 = bitcast %"struct.std::pair"* %183 to i64*
  %185 = load i64, i64* %184, align 4
  %186 = trunc i64 %185 to i32
  %187 = lshr i64 %185, 32
  %188 = trunc i64 %187 to i32
  br label %189

189:                                              ; preds = %203, %182
  %190 = phi i64 [ %137, %182 ], [ %193, %203 ]
  %191 = phi %"struct.std::pair"* [ %135, %182 ], [ %192, %203 ]
  %192 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %191, i64 1
  %193 = ptrtoint %"struct.std::pair"* %192 to i64
  %194 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %191, i64 0, i32 0
  %195 = load i32, i32* %194, align 4, !tbaa !78
  %196 = icmp sgt i32 %195, %186
  br i1 %196, label %203, label %197

197:                                              ; preds = %189
  %198 = icmp slt i32 %195, %186
  br i1 %198, label %209, label %199

199:                                              ; preds = %197
  %200 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %191, i64 0, i32 1
  %201 = load i32, i32* %200, align 4, !tbaa !58
  %202 = icmp sgt i32 %201, %188
  br i1 %202, label %203, label %209

203:                                              ; preds = %199, %189
  %204 = inttoptr i64 %190 to %"struct.std::pair"*
  %205 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %204, i64 -1, i32 0
  store i32 %195, i32* %205, align 4, !tbaa !78
  %206 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %191, i64 0, i32 1
  %207 = load i32, i32* %206, align 4, !tbaa !13
  %208 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %204, i64 -1, i32 1
  store i32 %207, i32* %208, align 4, !tbaa !58
  br label %189, !llvm.loop !96

209:                                              ; preds = %199, %197
  %210 = inttoptr i64 %190 to %"struct.std::pair"*
  %211 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %210, i64 -1, i32 0
  store i32 %186, i32* %211, align 4, !tbaa !78
  %212 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %210, i64 -1, i32 1
  store i32 %188, i32* %212, align 4, !tbaa !58
  br label %213

213:                                              ; preds = %209, %181
  %214 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %135, i64 -1
  %215 = icmp eq %"struct.std::pair"* %214, %6
  br i1 %215, label %216, label %134, !llvm.loop !97

216:                                              ; preds = %213, %122, %128, %126, %93
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZSt14__partial_sortISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEEvT_SD_SD_T0_(%"class.std::reverse_iterator"* %0, %"class.std::reverse_iterator"* %1, %"class.std::reverse_iterator"* %2) local_unnamed_addr #16 comdat {
  %4 = alloca %"class.std::reverse_iterator", align 8
  %5 = alloca %"class.std::reverse_iterator", align 8
  %6 = alloca %"class.std::reverse_iterator", align 8
  %7 = bitcast %"class.std::reverse_iterator"* %0 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !20
  %9 = bitcast %"class.std::reverse_iterator"* %1 to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !20
  %11 = bitcast %"class.std::reverse_iterator"* %2 to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !20
  %13 = inttoptr i64 %12 to %"struct.std::pair"*
  %14 = inttoptr i64 %8 to %"struct.std::pair"*
  %15 = bitcast %"class.std::reverse_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = sub i64 %8, %10
  %17 = ashr exact i64 %16, 3
  %18 = icmp slt i64 %16, 16
  br i1 %18, label %31, label %19

19:                                               ; preds = %3
  %20 = add nsw i64 %17, -2
  %21 = lshr i64 %20, 1
  %22 = bitcast %"class.std::reverse_iterator"* %6 to i64*
  br label %23

23:                                               ; preds = %23, %19
  %24 = phi i64 [ %21, %19 ], [ %30, %23 ]
  %25 = xor i64 %24, -1
  %26 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %14, i64 %25
  %27 = bitcast %"struct.std::pair"* %26 to i64*
  %28 = load i64, i64* %27, align 4
  store i64 %8, i64* %22, align 8, !tbaa !20
  call void @_ZSt13__adjust_heapISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEElS4_NS1_5__ops15_Iter_less_iterEEvT_T0_SE_T1_T2_(%"class.std::reverse_iterator"* nonnull %6, i64 %24, i64 %17, i64 %28)
  %29 = icmp eq i64 %24, 0
  %30 = add nsw i64 %24, -1
  br i1 %29, label %31, label %23, !llvm.loop !108

31:                                               ; preds = %23, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %32 = inttoptr i64 %10 to %"struct.std::pair"*
  %33 = bitcast %"class.std::reverse_iterator"* %5 to i8*
  %34 = bitcast %"class.std::reverse_iterator"* %5 to i64*
  %35 = icmp ult %"struct.std::pair"* %13, %32
  br i1 %35, label %36, label %62

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %14, i64 -1, i32 0
  %38 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %14, i64 -1, i32 1
  br label %39

39:                                               ; preds = %36, %59
  %40 = phi %"struct.std::pair"* [ %60, %59 ], [ %32, %36 ]
  %41 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %40, i64 -1, i32 0
  %42 = load i32, i32* %41, align 4, !tbaa !78
  %43 = load i32, i32* %37, align 4, !tbaa !78
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %52, label %45

45:                                               ; preds = %39
  %46 = icmp slt i32 %43, %42
  br i1 %46, label %59, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %40, i64 -1, i32 1
  %49 = load i32, i32* %48, align 4, !tbaa !58
  %50 = load i32, i32* %38, align 4, !tbaa !58
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %47, %39
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %53 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %40, i64 -1
  %54 = bitcast %"struct.std::pair"* %53 to i64*
  %55 = load i64, i64* %54, align 4
  %56 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %53, i64 0, i32 0
  store i32 %43, i32* %56, align 4, !tbaa !78
  %57 = load i32, i32* %38, align 4, !tbaa !13
  %58 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %40, i64 -1, i32 1
  store i32 %57, i32* %58, align 4, !tbaa !58
  store i64 %8, i64* %34, align 8, !tbaa !20
  call void @_ZSt13__adjust_heapISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEElS4_NS1_5__ops15_Iter_less_iterEEvT_T0_SE_T1_T2_(%"class.std::reverse_iterator"* nonnull %5, i64 0, i64 %17, i64 %55)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  br label %59

59:                                               ; preds = %52, %47, %45
  %60 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %40, i64 -1
  %61 = icmp ugt %"struct.std::pair"* %60, %13
  br i1 %61, label %39, label %62, !llvm.loop !109

62:                                               ; preds = %59, %31
  %63 = load i64, i64* %7, align 8, !tbaa !20
  %64 = inttoptr i64 %63 to %"struct.std::pair"*
  %65 = load i64, i64* %9, align 8, !tbaa !20
  %66 = bitcast %"class.std::reverse_iterator"* %4 to i8*
  %67 = bitcast %"class.std::reverse_iterator"* %4 to i64*
  %68 = sub i64 %63, %65
  %69 = icmp sgt i64 %68, 8
  br i1 %69, label %70, label %87

70:                                               ; preds = %62
  %71 = inttoptr i64 %65 to %"struct.std::pair"*
  %72 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %64, i64 -1, i32 0
  %73 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %64, i64 -1, i32 1
  br label %74

74:                                               ; preds = %70, %74
  %75 = phi %"struct.std::pair"* [ %76, %74 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %75, i64 1
  %77 = ptrtoint %"struct.std::pair"* %76 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %78 = bitcast %"struct.std::pair"* %75 to i64*
  %79 = load i64, i64* %78, align 4
  %80 = load i32, i32* %72, align 4, !tbaa !13
  %81 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %75, i64 0, i32 0
  store i32 %80, i32* %81, align 4, !tbaa !78
  %82 = load i32, i32* %73, align 4, !tbaa !13
  %83 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %75, i64 0, i32 1
  store i32 %82, i32* %83, align 4, !tbaa !58
  store i64 %63, i64* %67, align 8, !tbaa !20
  %84 = sub i64 %63, %77
  %85 = ashr exact i64 %84, 3
  call void @_ZSt13__adjust_heapISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEElS4_NS1_5__ops15_Iter_less_iterEEvT_T0_SE_T1_T2_(%"class.std::reverse_iterator"* nonnull %4, i64 0, i64 %85, i64 %79)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  %86 = icmp sgt i64 %84, 8
  br i1 %86, label %74, label %87, !llvm.loop !110

87:                                               ; preds = %74, %62
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt13__adjust_heapISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEElS4_NS1_5__ops15_Iter_less_iterEEvT_T0_SE_T1_T2_(%"class.std::reverse_iterator"* %0, i64 %1, i64 %2, i64 %3) local_unnamed_addr #15 comdat {
  %5 = add nsw i64 %2, -1
  %6 = sdiv i64 %5, 2
  %7 = icmp sgt i64 %6, %1
  br i1 %7, label %8, label %45

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8, !tbaa !111, !noalias !113
  br label %11

11:                                               ; preds = %8, %34
  %12 = phi i64 [ %1, %8 ], [ %35, %34 ]
  %13 = shl i64 %12, 1
  %14 = add i64 %13, 2
  %15 = sub nuw nsw i64 -2, %13
  %16 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 %15
  %17 = or i64 %13, 1
  %18 = sub nsw i64 0, %17
  %19 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 %18
  %20 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %16, i64 -1, i32 0
  %21 = load i32, i32* %20, align 4, !tbaa !78
  %22 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %19, i64 -1, i32 0
  %23 = load i32, i32* %22, align 4, !tbaa !78
  %24 = icmp slt i32 %21, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %11
  %26 = icmp slt i32 %23, %21
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %16, i64 -1, i32 1
  %29 = load i32, i32* %28, align 4, !tbaa !58
  %30 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %19, i64 -1, i32 1
  %31 = load i32, i32* %30, align 4, !tbaa !58
  %32 = icmp slt i32 %29, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %11, %27
  br label %34

34:                                               ; preds = %25, %27, %33
  %35 = phi i64 [ %17, %33 ], [ %14, %27 ], [ %14, %25 ]
  %36 = xor i64 %35, -1
  %37 = xor i64 %12, -1
  %38 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 %36, i32 0
  %39 = load i32, i32* %38, align 4, !tbaa !13
  %40 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 %37, i32 0
  store i32 %39, i32* %40, align 4, !tbaa !78
  %41 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 %36, i32 1
  %42 = load i32, i32* %41, align 4, !tbaa !13
  %43 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 %37, i32 1
  store i32 %42, i32* %43, align 4, !tbaa !58
  %44 = icmp slt i64 %35, %6
  br i1 %44, label %11, label %45, !llvm.loop !116

45:                                               ; preds = %34, %4
  %46 = phi i64 [ %1, %4 ], [ %35, %34 ]
  %47 = and i64 %2, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %66

49:                                               ; preds = %45
  %50 = add nsw i64 %2, -2
  %51 = sdiv i64 %50, 2
  %52 = icmp eq i64 %46, %51
  br i1 %52, label %53, label %66

53:                                               ; preds = %49
  %54 = shl i64 %46, 1
  %55 = or i64 %54, 1
  %56 = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %0, i64 0, i32 0, i32 0
  %57 = load %"struct.std::pair"*, %"struct.std::pair"** %56, align 8, !tbaa !111, !noalias !117
  %58 = xor i64 %54, -2
  %59 = xor i64 %46, -1
  %60 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 %58, i32 0
  %61 = load i32, i32* %60, align 4, !tbaa !13
  %62 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 %59, i32 0
  store i32 %61, i32* %62, align 4, !tbaa !78
  %63 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 %58, i32 1
  %64 = load i32, i32* %63, align 4, !tbaa !13
  %65 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %57, i64 %59, i32 1
  store i32 %64, i32* %65, align 4, !tbaa !58
  br label %66

66:                                               ; preds = %53, %49, %45
  %67 = phi i64 [ %55, %53 ], [ %46, %49 ], [ %46, %45 ]
  %68 = bitcast %"class.std::reverse_iterator"* %0 to i64*
  %69 = load i64, i64* %68, align 8, !tbaa !20
  %70 = inttoptr i64 %69 to %"struct.std::pair"*
  %71 = trunc i64 %3 to i32
  %72 = lshr i64 %3, 32
  %73 = trunc i64 %72 to i32
  %74 = icmp sgt i64 %67, %1
  br i1 %74, label %75, label %100

75:                                               ; preds = %66, %94
  %76 = phi i64 [ %78, %94 ], [ %67, %66 ]
  %77 = add nsw i64 %76, -1
  %78 = sdiv i64 %77, 2
  %79 = sub nsw i64 0, %78
  %80 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %70, i64 %79
  %81 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %80, i64 -1, i32 0
  %82 = load i32, i32* %81, align 4, !tbaa !78
  %83 = icmp slt i32 %82, %71
  br i1 %83, label %84, label %88

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %80, i64 -1
  %86 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 4, !tbaa !13
  br label %94

88:                                               ; preds = %75
  %89 = icmp sgt i32 %82, %71
  br i1 %89, label %100, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %80, i64 -1, i32 1
  %92 = load i32, i32* %91, align 4, !tbaa !58
  %93 = icmp slt i32 %92, %73
  br i1 %93, label %94, label %100

94:                                               ; preds = %90, %84
  %95 = phi i32 [ %87, %84 ], [ %92, %90 ]
  %96 = xor i64 %76, -1
  %97 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %70, i64 %96, i32 0
  store i32 %82, i32* %97, align 4, !tbaa !78
  %98 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %70, i64 %96, i32 1
  store i32 %95, i32* %98, align 4, !tbaa !58
  %99 = icmp sgt i64 %78, %1
  br i1 %99, label %75, label %100, !llvm.loop !120

100:                                              ; preds = %88, %90, %94, %66
  %101 = phi i64 [ %67, %66 ], [ %76, %90 ], [ %78, %94 ], [ %76, %88 ]
  %102 = xor i64 %101, -1
  %103 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %70, i64 %102, i32 0
  store i32 %71, i32* %103, align 4, !tbaa !78
  %104 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %70, i64 %102, i32 1
  store i32 %73, i32* %104, align 4, !tbaa !58
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt22__move_median_to_firstISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEEvT_SD_SD_SD_T0_(%"class.std::reverse_iterator"* %0, %"class.std::reverse_iterator"* %1, %"class.std::reverse_iterator"* %2, %"class.std::reverse_iterator"* %3) local_unnamed_addr #15 comdat {
  %5 = bitcast %"class.std::reverse_iterator"* %1 to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !20
  %7 = bitcast %"class.std::reverse_iterator"* %2 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !20
  %9 = inttoptr i64 %6 to %"struct.std::pair"*
  %10 = inttoptr i64 %8 to %"struct.std::pair"*
  %11 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i64 -1, i32 0
  %12 = load i32, i32* %11, align 4, !tbaa !78
  %13 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 -1, i32 0
  %14 = load i32, i32* %13, align 4, !tbaa !78
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %24, label %16

16:                                               ; preds = %4
  %17 = icmp slt i32 %14, %12
  br i1 %17, label %67, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i64 -1, i32 1
  %20 = load i32, i32* %19, align 4, !tbaa !58
  %21 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 -1, i32 1
  %22 = load i32, i32* %21, align 4, !tbaa !58
  %23 = icmp slt i32 %20, %22
  br i1 %23, label %24, label %67

24:                                               ; preds = %4, %18
  %25 = bitcast %"class.std::reverse_iterator"* %3 to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !20
  %27 = inttoptr i64 %26 to %"struct.std::pair"*
  %28 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %27, i64 -1, i32 0
  %29 = load i32, i32* %28, align 4, !tbaa !78
  %30 = icmp slt i32 %14, %29
  br i1 %30, label %39, label %31

31:                                               ; preds = %24
  %32 = icmp slt i32 %29, %14
  br i1 %32, label %45, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 -1, i32 1
  %35 = load i32, i32* %34, align 4, !tbaa !58
  %36 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %27, i64 -1, i32 1
  %37 = load i32, i32* %36, align 4, !tbaa !58
  %38 = icmp slt i32 %35, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %24, %33
  %40 = bitcast %"class.std::reverse_iterator"* %0 to i64*
  %41 = load i64, i64* %40, align 8, !tbaa !20
  %42 = inttoptr i64 %41 to %"struct.std::pair"*
  %43 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %42, i64 -1, i32 0
  %44 = load i32, i32* %43, align 4, !tbaa !13
  store i32 %14, i32* %43, align 4, !tbaa !13
  store i32 %44, i32* %13, align 4, !tbaa !13
  br label %110

45:                                               ; preds = %31, %33
  %46 = icmp slt i32 %12, %29
  br i1 %46, label %55, label %47

47:                                               ; preds = %45
  %48 = icmp slt i32 %29, %12
  br i1 %48, label %61, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i64 -1, i32 1
  %51 = load i32, i32* %50, align 4, !tbaa !58
  %52 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %27, i64 -1, i32 1
  %53 = load i32, i32* %52, align 4, !tbaa !58
  %54 = icmp slt i32 %51, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %45, %49
  %56 = bitcast %"class.std::reverse_iterator"* %0 to i64*
  %57 = load i64, i64* %56, align 8, !tbaa !20
  %58 = inttoptr i64 %57 to %"struct.std::pair"*
  %59 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -1, i32 0
  %60 = load i32, i32* %59, align 4, !tbaa !13
  store i32 %29, i32* %59, align 4, !tbaa !13
  store i32 %60, i32* %28, align 4, !tbaa !13
  br label %110

61:                                               ; preds = %47, %49
  %62 = bitcast %"class.std::reverse_iterator"* %0 to i64*
  %63 = load i64, i64* %62, align 8, !tbaa !20
  %64 = inttoptr i64 %63 to %"struct.std::pair"*
  %65 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %64, i64 -1, i32 0
  %66 = load i32, i32* %65, align 4, !tbaa !13
  store i32 %12, i32* %65, align 4, !tbaa !13
  store i32 %66, i32* %11, align 4, !tbaa !13
  br label %110

67:                                               ; preds = %16, %18
  %68 = bitcast %"class.std::reverse_iterator"* %3 to i64*
  %69 = load i64, i64* %68, align 8, !tbaa !20
  %70 = inttoptr i64 %69 to %"struct.std::pair"*
  %71 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %70, i64 -1, i32 0
  %72 = load i32, i32* %71, align 4, !tbaa !78
  %73 = icmp slt i32 %12, %72
  br i1 %73, label %82, label %74

74:                                               ; preds = %67
  %75 = icmp slt i32 %72, %12
  br i1 %75, label %88, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i64 -1, i32 1
  %78 = load i32, i32* %77, align 4, !tbaa !58
  %79 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %70, i64 -1, i32 1
  %80 = load i32, i32* %79, align 4, !tbaa !58
  %81 = icmp slt i32 %78, %80
  br i1 %81, label %82, label %88

82:                                               ; preds = %67, %76
  %83 = bitcast %"class.std::reverse_iterator"* %0 to i64*
  %84 = load i64, i64* %83, align 8, !tbaa !20
  %85 = inttoptr i64 %84 to %"struct.std::pair"*
  %86 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %85, i64 -1, i32 0
  %87 = load i32, i32* %86, align 4, !tbaa !13
  store i32 %12, i32* %86, align 4, !tbaa !13
  store i32 %87, i32* %11, align 4, !tbaa !13
  br label %110

88:                                               ; preds = %74, %76
  %89 = icmp slt i32 %14, %72
  br i1 %89, label %98, label %90

90:                                               ; preds = %88
  %91 = icmp slt i32 %72, %14
  br i1 %91, label %104, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 -1, i32 1
  %94 = load i32, i32* %93, align 4, !tbaa !58
  %95 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %70, i64 -1, i32 1
  %96 = load i32, i32* %95, align 4, !tbaa !58
  %97 = icmp slt i32 %94, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %88, %92
  %99 = bitcast %"class.std::reverse_iterator"* %0 to i64*
  %100 = load i64, i64* %99, align 8, !tbaa !20
  %101 = inttoptr i64 %100 to %"struct.std::pair"*
  %102 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %101, i64 -1, i32 0
  %103 = load i32, i32* %102, align 4, !tbaa !13
  store i32 %72, i32* %102, align 4, !tbaa !13
  store i32 %103, i32* %71, align 4, !tbaa !13
  br label %110

104:                                              ; preds = %90, %92
  %105 = bitcast %"class.std::reverse_iterator"* %0 to i64*
  %106 = load i64, i64* %105, align 8, !tbaa !20
  %107 = inttoptr i64 %106 to %"struct.std::pair"*
  %108 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %107, i64 -1, i32 0
  %109 = load i32, i32* %108, align 4, !tbaa !13
  store i32 %14, i32* %108, align 4, !tbaa !13
  store i32 %109, i32* %13, align 4, !tbaa !13
  br label %110

110:                                              ; preds = %82, %104, %98, %39, %61, %55
  %111 = phi %"struct.std::pair"* [ %85, %82 ], [ %107, %104 ], [ %101, %98 ], [ %42, %39 ], [ %64, %61 ], [ %58, %55 ]
  %112 = phi %"struct.std::pair"* [ %9, %82 ], [ %10, %104 ], [ %70, %98 ], [ %10, %39 ], [ %9, %61 ], [ %27, %55 ]
  %113 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %111, i64 -1, i32 1
  %114 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %112, i64 -1, i32 1
  %115 = load i32, i32* %113, align 4, !tbaa !13
  %116 = load i32, i32* %114, align 4, !tbaa !13
  store i32 %116, i32* %113, align 4, !tbaa !13
  store i32 %115, i32* %114, align 4, !tbaa !13
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #17

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #18

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #18

; Function Attrs: nounwind
declare dso_local void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIxEERSoT_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #13

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_StrangeFunction.cpp() #15 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #22
  store i32 0, i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0), align 8, !tbaa !121
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1), align 8, !tbaa !3
  store i8* bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to i8*), i8** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2) to i8**), align 8, !tbaa !61
  store i8* bitcast (i32* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to i8*), i8** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 0, i32 3) to i8**), align 8, !tbaa !122
  store i64 0, i64* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 1, i32 1), align 8, !tbaa !63
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::set"*)* @_ZNSt3setIiSt4lessIiESaIiEED2Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::set", %"class.std::set"* @S, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i8* nonnull @__dso_handle) #22
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) bitcast (%"class.std::vector"* @seq to i8*), i8 0, i64 24, i1 false) #22
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorISt4pairIiiESaIS1_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @seq to i8*), i8* nonnull @__dso_handle) #22
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #19

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #20

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #19

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noinline noreturn nounwind }
attributes #11 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { inlinehint uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #18 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #20 = { argmemonly nofree nounwind willreturn writeonly }
attributes #21 = { noreturn nounwind }
attributes #22 = { nounwind }
attributes #23 = { noreturn }
attributes #24 = { allocsize(0) }
attributes #25 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSSt15_Rb_tree_header", !5, i64 0, !10, i64 32}
!5 = !{!"_ZTSSt18_Rb_tree_node_base", !6, i64 0, !9, i64 8, !9, i64 16, !9, i64 24}
!6 = !{!"_ZTSSt14_Rb_tree_color", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"any pointer", !7, i64 0}
!10 = !{!"long", !7, i64 0}
!11 = !{!12, !9, i64 0}
!12 = !{!"_ZTSNSt12_Vector_baseISt4pairIiiESaIS1_EE17_Vector_impl_dataE", !9, i64 0, !9, i64 8, !9, i64 16}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !7, i64 0}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.mustprogress"}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !16}
!20 = !{!9, !9, i64 0}
!21 = distinct !{!21, !16, !22}
!22 = !{!"llvm.loop.isvectorized", i32 1}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = distinct !{!25, !16}
!26 = distinct !{!26, !16, !27, !22}
!27 = !{!"llvm.loop.unroll.runtime.disable"}
!28 = !{!29, !29, i64 0}
!29 = !{!"long long", !7, i64 0}
!30 = !{!12, !9, i64 8}
!31 = !{!12, !9, i64 16}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !16, !22}
!38 = distinct !{!38, !24}
!39 = distinct !{!39, !16, !22}
!40 = distinct !{!40, !16}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNSt6vectorISt4pairIiiESaIS1_EE6rbeginEv: argument 0"}
!43 = distinct !{!43, !"_ZNSt6vectorISt4pairIiiESaIS1_EE6rbeginEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt6vectorISt4pairIiiESaIS1_EE4rendEv: argument 0"}
!46 = distinct !{!46, !"_ZNSt6vectorISt4pairIiiESaIS1_EE4rendEv"}
!47 = !{i64 0, i64 65}
!48 = distinct !{!48, !16}
!49 = distinct !{!49, !16}
!50 = !{!51, !51, i64 0}
!51 = !{!"vtable pointer", !8, i64 0}
!52 = !{!53, !9, i64 240}
!53 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !9, i64 216, !7, i64 224, !54, i64 225, !9, i64 232, !9, i64 240, !9, i64 248, !9, i64 256}
!54 = !{!"bool", !7, i64 0}
!55 = !{!56, !7, i64 56}
!56 = !{!"_ZTSSt5ctypeIcE", !9, i64 16, !54, i64 24, !9, i64 32, !9, i64 40, !9, i64 48, !7, i64 56, !7, i64 57, !7, i64 313, !7, i64 569}
!57 = !{!7, !7, i64 0}
!58 = !{!59, !14, i64 4}
!59 = !{!"_ZTSSt4pairIiiE", !14, i64 0, !14, i64 4}
!60 = distinct !{!60, !16}
!61 = !{!4, !9, i64 16}
!62 = distinct !{!62, !16}
!63 = !{!4, !10, i64 32}
!64 = distinct !{!64, !16}
!65 = !{!5, !9, i64 24}
!66 = !{!5, !9, i64 16}
!67 = distinct !{!67, !16}
!68 = !{i64 0, i64 8, !20}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZSt27__unguarded_partition_pivotISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEET_SD_SD_T0_: argument 0"}
!71 = distinct !{!71, !"_ZSt27__unguarded_partition_pivotISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEET_SD_SD_T0_"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEEEplEl: argument 0"}
!74 = distinct !{!74, !"_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEEEplEl"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEEEmiEl: argument 0"}
!77 = distinct !{!77, !"_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEEEmiEl"}
!78 = !{!59, !14, i64 0}
!79 = !{!80, !70}
!80 = distinct !{!80, !81, !"_ZSt21__unguarded_partitionISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEET_SD_SD_SD_T0_: argument 0"}
!81 = distinct !{!81, !"_ZSt21__unguarded_partitionISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEENS1_5__ops15_Iter_less_iterEET_SD_SD_SD_T0_"}
!82 = distinct !{!82, !16}
!83 = distinct !{!83, !16}
!84 = distinct !{!84, !16}
!85 = distinct !{!85, !16}
!86 = !{!87, !89, !91, !93}
!87 = distinct !{!87, !88, !"_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bISt16reverse_iteratorIPSt4pairIiiEES7_EET0_T_S9_S8_: argument 0"}
!88 = distinct !{!88, !"_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bISt16reverse_iteratorIPSt4pairIiiEES7_EET0_T_S9_S8_"}
!89 = distinct !{!89, !90, !"_ZSt22__copy_move_backward_aILb1ESt16reverse_iteratorIPSt4pairIiiEES4_ET1_T0_S6_S5_: argument 0"}
!90 = distinct !{!90, !"_ZSt22__copy_move_backward_aILb1ESt16reverse_iteratorIPSt4pairIiiEES4_ET1_T0_S6_S5_"}
!91 = distinct !{!91, !92, !"_ZSt23__copy_move_backward_a2ILb1ESt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEESA_ET1_T0_SC_SB_: argument 0"}
!92 = distinct !{!92, !"_ZSt23__copy_move_backward_a2ILb1ESt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEESA_ET1_T0_SC_SB_"}
!93 = distinct !{!93, !94, !"_ZSt13move_backwardISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEESA_ET0_T_SC_SB_: argument 0"}
!94 = distinct !{!94, !"_ZSt13move_backwardISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEESA_ET0_T_SC_SB_"}
!95 = distinct !{!95, !16}
!96 = distinct !{!96, !16}
!97 = distinct !{!97, !16}
!98 = distinct !{!98, !16}
!99 = !{!100, !102, !104, !106}
!100 = distinct !{!100, !101, !"_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bISt16reverse_iteratorIPSt4pairIiiEES7_EET0_T_S9_S8_: argument 0"}
!101 = distinct !{!101, !"_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bISt16reverse_iteratorIPSt4pairIiiEES7_EET0_T_S9_S8_"}
!102 = distinct !{!102, !103, !"_ZSt22__copy_move_backward_aILb1ESt16reverse_iteratorIPSt4pairIiiEES4_ET1_T0_S6_S5_: argument 0"}
!103 = distinct !{!103, !"_ZSt22__copy_move_backward_aILb1ESt16reverse_iteratorIPSt4pairIiiEES4_ET1_T0_S6_S5_"}
!104 = distinct !{!104, !105, !"_ZSt23__copy_move_backward_a2ILb1ESt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEESA_ET1_T0_SC_SB_: argument 0"}
!105 = distinct !{!105, !"_ZSt23__copy_move_backward_a2ILb1ESt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEESA_ET1_T0_SC_SB_"}
!106 = distinct !{!106, !107, !"_ZSt13move_backwardISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEESA_ET0_T_SC_SB_: argument 0"}
!107 = distinct !{!107, !"_ZSt13move_backwardISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS4_SaIS4_EEEEESA_ET0_T_SC_SB_"}
!108 = distinct !{!108, !16}
!109 = distinct !{!109, !16}
!110 = distinct !{!110, !16}
!111 = !{!112, !9, i64 0}
!112 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS2_SaIS2_EEEE", !9, i64 0}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEEEplEl: argument 0"}
!115 = distinct !{!115, !"_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEEEplEl"}
!116 = distinct !{!116, !16}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEEEplEl: argument 0"}
!119 = distinct !{!119, !"_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPSt4pairIiiESt6vectorIS3_SaIS3_EEEEEplEl"}
!120 = distinct !{!120, !16}
!121 = !{!4, !6, i64 0}
!122 = !{!4, !9, i64 24}
