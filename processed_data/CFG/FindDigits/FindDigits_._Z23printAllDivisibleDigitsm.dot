digraph "CFG for '_Z23printAllDivisibleDigitsm' function" {
	label="CFG for '_Z23printAllDivisibleDigitsm' function";

	Node0x55df74059a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%1:\l  %2 = icmp eq i64 %0, 0\l  br i1 %2, label %17, label %3\l|{<s0>T|<s1>F}}"];
	Node0x55df74059a30:s0 -> Node0x55df74059b80;
	Node0x55df74059a30:s1 -> Node0x55df74059bd0;
	Node0x55df74059bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l3:                                                \l  %4 = phi i64 [ %7, %14 ], [ %0, %1 ]\l  %5 = phi i32 [ %15, %14 ], [ 0, %1 ]\l  %6 = urem i64 %4, 10\l  %7 = udiv i64 %4, 10\l  %8 = icmp eq i64 %6, 0\l  br i1 %8, label %14, label %9\l|{<s0>T|<s1>F}}"];
	Node0x55df74059bd0:s0 -> Node0x55df74059d40;
	Node0x55df74059bd0:s1 -> Node0x55df74059e80;
	Node0x55df74059e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%9:\l9:                                                \l  %10 = urem i64 %0, %6\l  %11 = icmp eq i64 %10, 0\l  %12 = zext i1 %11 to i32\l  %13 = add nsw i32 %5, %12\l  br label %14\l}"];
	Node0x55df74059e80 -> Node0x55df74059d40;
	Node0x55df74059d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = phi i32 [ %5, %3 ], [ %13, %9 ]\l  %16 = icmp ult i64 %4, 10\l  br i1 %16, label %17, label %3, !llvm.loop !3\l|{<s0>T|<s1>F}}"];
	Node0x55df74059d40:s0 -> Node0x55df74059b80;
	Node0x55df74059d40:s1 -> Node0x55df74059bd0;
	Node0x55df74059b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%17:\l17:                                               \l  %18 = phi i32 [ 0, %1 ], [ %15, %14 ]\l  %19 = tail call nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSolsEi(%\"class.std::basic_ostream\"* nonnull\l... align 8 dereferenceable(8) @_ZSt4cout, i32 %18)\l  %20 = bitcast %\"class.std::basic_ostream\"* %19 to i8**\l  %21 = load i8*, i8** %20, align 8, !tbaa !5\l  %22 = getelementptr i8, i8* %21, i64 -24\l  %23 = bitcast i8* %22 to i64*\l  %24 = load i64, i64* %23, align 8\l  %25 = bitcast %\"class.std::basic_ostream\"* %19 to i8*\l  %26 = add nsw i64 %24, 240\l  %27 = getelementptr inbounds i8, i8* %25, i64 %26\l  %28 = bitcast i8* %27 to %\"class.std::ctype\"**\l  %29 = load %\"class.std::ctype\"*, %\"class.std::ctype\"** %28, align 8, !tbaa !8\l  %30 = icmp eq %\"class.std::ctype\"* %29, null\l  br i1 %30, label %31, label %32\l|{<s0>T|<s1>F}}"];
	Node0x55df74059b80:s0 -> Node0x55df7405bbf0;
	Node0x55df74059b80:s1 -> Node0x55df7405bc80;
	Node0x55df7405bbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%31:\l31:                                               \l  tail call void @_ZSt16__throw_bad_castv() #8\l  unreachable\l}"];
	Node0x55df7405bc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%32:\l32:                                               \l  %33 = getelementptr inbounds %\"class.std::ctype\", %\"class.std::ctype\"* %29,\l... i64 0, i32 8\l  %34 = load i8, i8* %33, align 8, !tbaa !13\l  %35 = icmp eq i8 %34, 0\l  br i1 %35, label %39, label %36\l|{<s0>T|<s1>F}}"];
	Node0x55df7405bc80:s0 -> Node0x55df7405c510;
	Node0x55df7405bc80:s1 -> Node0x55df7405c5a0;
	Node0x55df7405c5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds %\"class.std::ctype\", %\"class.std::ctype\"* %29,\l... i64 0, i32 9, i64 10\l  %38 = load i8, i8* %37, align 1, !tbaa !15\l  br label %45\l}"];
	Node0x55df7405c5a0 -> Node0x55df7405c860;
	Node0x55df7405c510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%39:\l39:                                               \l  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%\"class.std::ctype\"*\l... nonnull align 8 dereferenceable(570) %29)\l  %40 = bitcast %\"class.std::ctype\"* %29 to i8 (%\"class.std::ctype\"*, i8)***\l  %41 = load i8 (%\"class.std::ctype\"*, i8)**, i8 (%\"class.std::ctype\"*, i8)***\l... %40, align 8, !tbaa !5\l  %42 = getelementptr inbounds i8 (%\"class.std::ctype\"*, i8)*, i8\l... (%\"class.std::ctype\"*, i8)** %41, i64 6\l  %43 = load i8 (%\"class.std::ctype\"*, i8)*, i8 (%\"class.std::ctype\"*, i8)**\l... %42, align 8\l  %44 = tail call signext i8 %43(%\"class.std::ctype\"* nonnull align 8\l... dereferenceable(570) %29, i8 signext 10)\l  br label %45\l}"];
	Node0x55df7405c510 -> Node0x55df7405c860;
	Node0x55df7405c860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = phi i8 [ %38, %36 ], [ %44, %39 ]\l  %47 = tail call nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSo3putEc(%\"class.std::basic_ostream\"*\l... nonnull align 8 dereferenceable(8) %19, i8 signext %46)\l  %48 = tail call nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSo5flushEv(%\"class.std::basic_ostream\"*\l... nonnull align 8 dereferenceable(8) %47)\l  ret void\l}"];
}
