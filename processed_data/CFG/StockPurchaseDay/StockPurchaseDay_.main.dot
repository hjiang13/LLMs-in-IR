digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x557e357773a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%0:\l  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %2 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([32 x\l... i8], [32 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %1)\l  %3 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3\l... x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32* nonnull @n)\l  %4 = load i32, i32* @n, align 4, !tbaa !7\l  %5 = icmp slt i32 %4, 1\l  br i1 %5, label %6, label %106\l|{<s0>T|<s1>F}}"];
	Node0x557e357773a0:s0 -> Node0x557e35777e00;
	Node0x557e357773a0:s1 -> Node0x557e35777e90;
	Node0x557e35777e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%6:\l6:                                                \l  %7 = sext i32 %4 to i64\l  %8 = getelementptr inbounds [100005 x i32], [100005 x i32]* @arr, i64 0, i64\l... %7\l  %9 = load i32, i32* %8, align 4, !tbaa !7\l  %10 = getelementptr inbounds [100005 x i32], [100005 x i32]* @suffmn, i64 0,\l... i64 %7\l  store i32 %9, i32* %10, align 4, !tbaa !7\l  br label %114\l}"];
	Node0x557e35777e00 -> Node0x557e35777d20;
	Node0x557e357783c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%11:\l11:                                               \l  %12 = sext i32 %111 to i64\l  %13 = getelementptr inbounds [100005 x i32], [100005 x i32]* @arr, i64 0,\l... i64 %12\l  %14 = load i32, i32* %13, align 4, !tbaa !7\l  %15 = getelementptr inbounds [100005 x i32], [100005 x i32]* @suffmn, i64 0,\l... i64 %12\l  store i32 %14, i32* %15, align 4, !tbaa !7\l  %16 = icmp sgt i32 %111, 1\l  br i1 %16, label %17, label %114\l|{<s0>T|<s1>F}}"];
	Node0x557e357783c0:s0 -> Node0x557e357787d0;
	Node0x557e357783c0:s1 -> Node0x557e35777d20;
	Node0x557e357787d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%17:\l17:                                               \l  %18 = zext i32 %111 to i64\l  %19 = add nsw i64 %18, -1\l  %20 = icmp ult i64 %19, 8\l  br i1 %20, label %103, label %21\l|{<s0>T|<s1>F}}"];
	Node0x557e357787d0:s0 -> Node0x557e35778a70;
	Node0x557e357787d0:s1 -> Node0x557e35778ac0;
	Node0x557e35778ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%21:\l21:                                               \l  %22 = add nsw i64 %18, -2\l  %23 = add nsw i32 %111, -1\l  %24 = trunc i64 %22 to i32\l  %25 = icmp ult i32 %23, %24\l  %26 = icmp ugt i64 %22, 4294967295\l  %27 = or i1 %25, %26\l  %28 = zext i32 %23 to i64\l  %29 = shl nuw nsw i64 %28, 2\l  %30 = add i64 %29, ptrtoint ([100005 x i32]* @suffmn to i64)\l  %31 = call \{ i64, i1 \} @llvm.umul.with.overflow.i64(i64 %22, i64 4)\l  %32 = extractvalue \{ i64, i1 \} %31, 0\l  %33 = extractvalue \{ i64, i1 \} %31, 1\l  %34 = icmp ugt i64 %32, %30\l  %35 = or i1 %34, %33\l  %36 = or i1 %27, %35\l  %37 = shl nuw nsw i64 %18, 2\l  %38 = add i64 %37, ptrtoint ([100005 x i32]* @suffmn to i64)\l  %39 = call \{ i64, i1 \} @llvm.umul.with.overflow.i64(i64 %22, i64 4)\l  %40 = extractvalue \{ i64, i1 \} %39, 0\l  %41 = extractvalue \{ i64, i1 \} %39, 1\l  %42 = icmp ugt i64 %40, %38\l  %43 = or i1 %42, %41\l  %44 = or i1 %36, %43\l  br i1 %44, label %103, label %45\l|{<s0>T|<s1>F}}"];
	Node0x557e35778ac0:s0 -> Node0x557e35778a70;
	Node0x557e35778ac0:s1 -> Node0x557e35779e30;
	Node0x557e35779e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%45:\l45:                                               \l  %46 = add nsw i32 %111, -1\l  %47 = zext i32 %46 to i64\l  %48 = add nuw nsw i64 %47, 2\l  %49 = sub nsw i64 %48, %18\l  %50 = getelementptr [100005 x i32], [100005 x i32]* @suffmn, i64 0, i64 %49\l  %51 = add nuw nsw i64 %47, 1\l  %52 = getelementptr [100005 x i32], [100005 x i32]* @suffmn, i64 0, i64 %51\l  %53 = add nuw nsw i64 %18, 1\l  %54 = getelementptr [100005 x i32], [100005 x i32]* @suffmn, i64 0, i64 %53\l  %55 = icmp ult i32* %50, %54\l  %56 = icmp ugt i32* %52, getelementptr inbounds ([100005 x i32], [100005 x\l... i32]* @suffmn, i64 0, i64 2)\l  %57 = and i1 %55, %56\l  br i1 %57, label %103, label %58\l|{<s0>T|<s1>F}}"];
	Node0x557e35779e30:s0 -> Node0x557e35778a70;
	Node0x557e35779e30:s1 -> Node0x557e3577a730;
	Node0x557e3577a730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%58:\l58:                                               \l  %59 = and i64 %19, -8\l  %60 = sub nsw i64 %18, %59\l  %61 = trunc i64 %59 to i32\l  %62 = sub i32 %111, %61\l  br label %63\l}"];
	Node0x557e3577a730 -> Node0x557e3577aa50;
	Node0x557e3577aa50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%63:\l63:                                               \l  %64 = phi i64 [ 0, %58 ], [ %99, %63 ]\l  %65 = sub i64 %18, %64\l  %66 = trunc i64 %64 to i32\l  %67 = xor i32 %66, -1\l  %68 = add i32 %111, %67\l  %69 = getelementptr inbounds [100005 x i32], [100005 x i32]* @suffmn, i64 0,\l... i64 %65\l  %70 = zext i32 %68 to i64\l  %71 = getelementptr inbounds [100005 x i32], [100005 x i32]* @arr, i64 0,\l... i64 %70\l  %72 = getelementptr inbounds i32, i32* %71, i64 -3\l  %73 = bitcast i32* %72 to \<4 x i32\>*\l  %74 = load \<4 x i32\>, \<4 x i32\>* %73, align 4\l  %75 = shufflevector \<4 x i32\> %74, \<4 x i32\> poison, \<4 x i32\> \<i32 3, i32\l... 2, i32 1, i32 0\>\l  %76 = getelementptr inbounds i32, i32* %71, i64 -7\l  %77 = bitcast i32* %76 to \<4 x i32\>*\l  %78 = load \<4 x i32\>, \<4 x i32\>* %77, align 4\l  %79 = shufflevector \<4 x i32\> %78, \<4 x i32\> poison, \<4 x i32\> \<i32 3, i32\l... 2, i32 1, i32 0\>\l  %80 = getelementptr inbounds i32, i32* %69, i64 -3\l  %81 = bitcast i32* %80 to \<4 x i32\>*\l  %82 = load \<4 x i32\>, \<4 x i32\>* %81, align 4, !alias.scope !9\l  %83 = shufflevector \<4 x i32\> %82, \<4 x i32\> poison, \<4 x i32\> \<i32 3, i32\l... 2, i32 1, i32 0\>\l  %84 = getelementptr inbounds i32, i32* %69, i64 -7\l  %85 = bitcast i32* %84 to \<4 x i32\>*\l  %86 = load \<4 x i32\>, \<4 x i32\>* %85, align 4, !alias.scope !9\l  %87 = shufflevector \<4 x i32\> %86, \<4 x i32\> poison, \<4 x i32\> \<i32 3, i32\l... 2, i32 1, i32 0\>\l  %88 = icmp slt \<4 x i32\> %75, %83\l  %89 = icmp slt \<4 x i32\> %79, %87\l  %90 = select \<4 x i1\> %88, \<4 x i32\> %75, \<4 x i32\> %83\l  %91 = select \<4 x i1\> %89, \<4 x i32\> %79, \<4 x i32\> %87\l  %92 = getelementptr inbounds [100005 x i32], [100005 x i32]* @suffmn, i64 0,\l... i64 %70\l  %93 = shufflevector \<4 x i32\> %90, \<4 x i32\> poison, \<4 x i32\> \<i32 3, i32\l... 2, i32 1, i32 0\>\l  %94 = getelementptr inbounds i32, i32* %92, i64 -3\l  %95 = bitcast i32* %94 to \<4 x i32\>*\l  store \<4 x i32\> %93, \<4 x i32\>* %95, align 4, !tbaa !7, !alias.scope !12,\l... !noalias !9\l  %96 = shufflevector \<4 x i32\> %91, \<4 x i32\> poison, \<4 x i32\> \<i32 3, i32\l... 2, i32 1, i32 0\>\l  %97 = getelementptr inbounds i32, i32* %92, i64 -7\l  %98 = bitcast i32* %97 to \<4 x i32\>*\l  store \<4 x i32\> %96, \<4 x i32\>* %98, align 4, !tbaa !7, !alias.scope !12,\l... !noalias !9\l  %99 = add nuw i64 %64, 8\l  %100 = icmp eq i64 %99, %59\l  br i1 %100, label %101, label %63, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x557e3577aa50:s0 -> Node0x557e3577df90;
	Node0x557e3577aa50:s1 -> Node0x557e3577aa50;
	Node0x557e3577df90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%101:\l101:                                              \l  %102 = icmp eq i64 %19, %59\l  br i1 %102, label %114, label %103\l|{<s0>T|<s1>F}}"];
	Node0x557e3577df90:s0 -> Node0x557e35777d20;
	Node0x557e3577df90:s1 -> Node0x557e35778a70;
	Node0x557e35778a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%103:\l103:                                              \l  %104 = phi i64 [ %18, %45 ], [ %18, %21 ], [ %18, %17 ], [ %60, %101 ]\l  %105 = phi i32 [ %111, %45 ], [ %111, %21 ], [ %111, %17 ], [ %62, %101 ]\l  br label %119\l}"];
	Node0x557e35778a70 -> Node0x557e3577e4f0;
	Node0x557e35777e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%106:\l106:                                              \l  %107 = phi i64 [ %110, %106 ], [ 1, %0 ]\l  %108 = getelementptr inbounds [100005 x i32], [100005 x i32]* @arr, i64 0,\l... i64 %107\l  %109 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds\l... ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %108)\l  %110 = add nuw nsw i64 %107, 1\l  %111 = load i32, i32* @n, align 4, !tbaa !7\l  %112 = sext i32 %111 to i64\l  %113 = icmp slt i64 %107, %112\l  br i1 %113, label %106, label %11, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x557e35777e90:s0 -> Node0x557e35777e90;
	Node0x557e35777e90:s1 -> Node0x557e357783c0;
	Node0x557e35777d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%114:\l114:                                              \l  %115 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds\l... ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32* nonnull @q)\l  %116 = load i32, i32* @q, align 4, !tbaa !7\l  %117 = add nsw i32 %116, -1\l  store i32 %117, i32* @q, align 4, !tbaa !7\l  %118 = icmp eq i32 %116, 0\l  br i1 %118, label %162, label %133\l|{<s0>T|<s1>F}}"];
	Node0x557e35777d20:s0 -> Node0x557e3577eed0;
	Node0x557e35777d20:s1 -> Node0x557e3577ef20;
	Node0x557e3577e4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%119:\l119:                                              \l  %120 = phi i64 [ %132, %119 ], [ %104, %103 ]\l  %121 = phi i32 [ %122, %119 ], [ %105, %103 ]\l  %122 = add nsw i32 %121, -1\l  %123 = getelementptr inbounds [100005 x i32], [100005 x i32]* @suffmn, i64\l... 0, i64 %120\l  %124 = zext i32 %122 to i64\l  %125 = getelementptr inbounds [100005 x i32], [100005 x i32]* @arr, i64 0,\l... i64 %124\l  %126 = load i32, i32* %125, align 4\l  %127 = load i32, i32* %123, align 4\l  %128 = icmp slt i32 %126, %127\l  %129 = select i1 %128, i32 %126, i32 %127\l  %130 = getelementptr inbounds [100005 x i32], [100005 x i32]* @suffmn, i64\l... 0, i64 %124\l  store i32 %129, i32* %130, align 4, !tbaa !7\l  %131 = icmp sgt i64 %120, 2\l  %132 = add nsw i64 %120, -1\l  br i1 %131, label %119, label %114, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x557e3577e4f0:s0 -> Node0x557e3577e4f0;
	Node0x557e3577e4f0:s1 -> Node0x557e35777d20;
	Node0x557e3577ef20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%133:\l133:                                              \l  %134 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds\l... ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32* nonnull @x)\l  %135 = load i32, i32* @x, align 4, !tbaa !7\l  %136 = load i32, i32* @n, align 4, !tbaa !7\l  %137 = icmp slt i32 %136, 1\l  br i1 %137, label %156, label %138\l|{<s0>T|<s1>F}}"];
	Node0x557e3577ef20:s0 -> Node0x557e357804b0;
	Node0x557e3577ef20:s1 -> Node0x557e35780500;
	Node0x557e35780500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%138:\l138:                                              \l  %139 = phi i32 [ %154, %138 ], [ %136, %133 ]\l  %140 = phi i32 [ %153, %138 ], [ 1, %133 ]\l  %141 = phi i32 [ %152, %138 ], [ -1, %133 ]\l  %142 = add nsw i32 %140, %139\l  %143 = sdiv i32 %142, 2\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds [100005 x i32], [100005 x i32]* @suffmn, i64\l... 0, i64 %144\l  %146 = load i32, i32* %145, align 4, !tbaa !7\l  %147 = icmp sgt i32 %146, %135\l  %148 = add nsw i32 %143, -1\l  %149 = icmp slt i32 %141, %143\l  %150 = select i1 %149, i32 %143, i32 %141\l  %151 = add nsw i32 %143, 1\l  %152 = select i1 %147, i32 %141, i32 %150\l  %153 = select i1 %147, i32 %140, i32 %151\l  %154 = select i1 %147, i32 %148, i32 %139\l  %155 = icmp sgt i32 %153, %154\l  br i1 %155, label %156, label %138, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x557e35780500:s0 -> Node0x557e357804b0;
	Node0x557e35780500:s1 -> Node0x557e35780500;
	Node0x557e357804b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%156:\l156:                                              \l  %157 = phi i32 [ -1, %133 ], [ %152, %138 ]\l  %158 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1)\l... getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %157)\l  %159 = load i32, i32* @q, align 4, !tbaa !7\l  %160 = add nsw i32 %159, -1\l  store i32 %160, i32* @q, align 4, !tbaa !7\l  %161 = icmp eq i32 %159, 0\l  br i1 %161, label %162, label %133, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x557e357804b0:s0 -> Node0x557e3577eed0;
	Node0x557e357804b0:s1 -> Node0x557e3577ef20;
	Node0x557e3577eed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%162:\l162:                                              \l  ret i32 0\l}"];
}
