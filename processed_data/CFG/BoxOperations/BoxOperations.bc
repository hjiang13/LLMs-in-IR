; ModuleID = '../../Benchmarks/BoxOperations/BoxOperations.cpp'
source_filename = "../../Benchmarks/BoxOperations/BoxOperations.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct.Node = type { i32, i32, i32, i32, i32, i32, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@n = dso_local global i32 0, align 4
@m = dso_local global i32 0, align 4
@A = dso_local global [100010 x i32] zeroinitializer, align 16
@T = dso_local local_unnamed_addr global [400040 x %struct.Node] zeroinitializer, align 16
@.str = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"../input_files/BoxOperations\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_BoxOperations.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z3addii(i32 %0, i32 %1) local_unnamed_addr #3 {
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 1
  %5 = load i32, i32* %4, align 4, !tbaa !3
  %6 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 0
  %7 = load i32, i32* %6, align 16, !tbaa !9
  %8 = add i32 %5, 1
  %9 = sub i32 %8, %7
  %10 = sext i32 %9 to i64
  %11 = sext i32 %1 to i64
  %12 = mul nsw i64 %10, %11
  %13 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 6
  %14 = load i64, i64* %13, align 8, !tbaa !10
  %15 = add nsw i64 %12, %14
  store i64 %15, i64* %13, align 8, !tbaa !10
  %16 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 2
  %17 = load i32, i32* %16, align 8, !tbaa !11
  %18 = add nsw i32 %17, %1
  store i32 %18, i32* %16, align 8, !tbaa !11
  %19 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 3
  %20 = load i32, i32* %19, align 4, !tbaa !12
  %21 = add nsw i32 %20, %1
  store i32 %21, i32* %19, align 4, !tbaa !12
  %22 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 5
  %23 = load i32, i32* %22, align 4, !tbaa !13
  %24 = add nsw i32 %23, %1
  store i32 %24, i32* %22, align 4, !tbaa !13
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z2stii(i32 %0, i32 %1) local_unnamed_addr #3 {
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 1
  %5 = load i32, i32* %4, align 4, !tbaa !3
  %6 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 0
  %7 = load i32, i32* %6, align 16, !tbaa !9
  %8 = add i32 %5, 1
  %9 = sub i32 %8, %7
  %10 = sext i32 %9 to i64
  %11 = sext i32 %1 to i64
  %12 = mul nsw i64 %10, %11
  %13 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 6
  store i64 %12, i64* %13, align 8, !tbaa !10
  %14 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 4
  store i32 %1, i32* %14, align 16, !tbaa !14
  %15 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 3
  store i32 %1, i32* %15, align 4, !tbaa !12
  %16 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 2
  store i32 %1, i32* %16, align 8, !tbaa !11
  %17 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 5
  store i32 0, i32* %17, align 4, !tbaa !13
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z8pushdowni(i32 %0) local_unnamed_addr #3 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %2, i32 0
  %4 = load i32, i32* %3, align 16, !tbaa !9
  %5 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %2, i32 1
  %6 = load i32, i32* %5, align 4, !tbaa !3
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %98, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %2, i32 4
  %10 = load i32, i32* %9, align 16, !tbaa !14
  %11 = icmp eq i32 %10, 2139062143
  br i1 %11, label %46, label %12

12:                                               ; preds = %8
  %13 = shl i32 %0, 1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %14, i32 1
  %16 = load i32, i32* %15, align 4, !tbaa !3
  %17 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %14, i32 0
  %18 = load i32, i32* %17, align 16, !tbaa !9
  %19 = add i32 %16, 1
  %20 = sub i32 %19, %18
  %21 = sext i32 %20 to i64
  %22 = sext i32 %10 to i64
  %23 = mul nsw i64 %21, %22
  %24 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %14, i32 6
  store i64 %23, i64* %24, align 8, !tbaa !10
  %25 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %14, i32 4
  store i32 %10, i32* %25, align 16, !tbaa !14
  %26 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %14, i32 3
  store i32 %10, i32* %26, align 4, !tbaa !12
  %27 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %14, i32 2
  store i32 %10, i32* %27, align 8, !tbaa !11
  %28 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %14, i32 5
  store i32 0, i32* %28, align 4, !tbaa !13
  %29 = or i32 %13, 1
  %30 = load i32, i32* %9, align 16, !tbaa !14
  %31 = sext i32 %29 to i64
  %32 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %31, i32 1
  %33 = load i32, i32* %32, align 4, !tbaa !3
  %34 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %31, i32 0
  %35 = load i32, i32* %34, align 16, !tbaa !9
  %36 = add i32 %33, 1
  %37 = sub i32 %36, %35
  %38 = sext i32 %37 to i64
  %39 = sext i32 %30 to i64
  %40 = mul nsw i64 %38, %39
  %41 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %31, i32 6
  store i64 %40, i64* %41, align 8, !tbaa !10
  %42 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %31, i32 4
  store i32 %30, i32* %42, align 16, !tbaa !14
  %43 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %31, i32 3
  store i32 %30, i32* %43, align 4, !tbaa !12
  %44 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %31, i32 2
  store i32 %30, i32* %44, align 8, !tbaa !11
  %45 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %31, i32 5
  store i32 0, i32* %45, align 4, !tbaa !13
  store i32 2139062143, i32* %9, align 16, !tbaa !14
  br label %46

46:                                               ; preds = %12, %8
  %47 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %2, i32 5
  %48 = load i32, i32* %47, align 4, !tbaa !13
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %98, label %50

50:                                               ; preds = %46
  %51 = shl i32 %0, 1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %52, i32 1
  %54 = load i32, i32* %53, align 4, !tbaa !3
  %55 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %52, i32 0
  %56 = load i32, i32* %55, align 16, !tbaa !9
  %57 = add i32 %54, 1
  %58 = sub i32 %57, %56
  %59 = sext i32 %58 to i64
  %60 = sext i32 %48 to i64
  %61 = mul nsw i64 %59, %60
  %62 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %52, i32 6
  %63 = load i64, i64* %62, align 8, !tbaa !10
  %64 = add nsw i64 %61, %63
  store i64 %64, i64* %62, align 8, !tbaa !10
  %65 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %52, i32 2
  %66 = load i32, i32* %65, align 8, !tbaa !11
  %67 = add nsw i32 %66, %48
  store i32 %67, i32* %65, align 8, !tbaa !11
  %68 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %52, i32 3
  %69 = load i32, i32* %68, align 4, !tbaa !12
  %70 = add nsw i32 %69, %48
  store i32 %70, i32* %68, align 4, !tbaa !12
  %71 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %52, i32 5
  %72 = load i32, i32* %71, align 4, !tbaa !13
  %73 = add nsw i32 %72, %48
  store i32 %73, i32* %71, align 4, !tbaa !13
  %74 = or i32 %51, 1
  %75 = load i32, i32* %47, align 4, !tbaa !13
  %76 = sext i32 %74 to i64
  %77 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %76, i32 1
  %78 = load i32, i32* %77, align 4, !tbaa !3
  %79 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %76, i32 0
  %80 = load i32, i32* %79, align 16, !tbaa !9
  %81 = add i32 %78, 1
  %82 = sub i32 %81, %80
  %83 = sext i32 %82 to i64
  %84 = sext i32 %75 to i64
  %85 = mul nsw i64 %83, %84
  %86 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %76, i32 6
  %87 = load i64, i64* %86, align 8, !tbaa !10
  %88 = add nsw i64 %85, %87
  store i64 %88, i64* %86, align 8, !tbaa !10
  %89 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %76, i32 2
  %90 = load i32, i32* %89, align 8, !tbaa !11
  %91 = add nsw i32 %90, %75
  store i32 %91, i32* %89, align 8, !tbaa !11
  %92 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %76, i32 3
  %93 = load i32, i32* %92, align 4, !tbaa !12
  %94 = add nsw i32 %93, %75
  store i32 %94, i32* %92, align 4, !tbaa !12
  %95 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %76, i32 5
  %96 = load i32, i32* %95, align 4, !tbaa !13
  %97 = add nsw i32 %96, %75
  store i32 %97, i32* %95, align 4, !tbaa !13
  store i32 0, i32* %47, align 4, !tbaa !13
  br label %98

98:                                               ; preds = %1, %50, %46
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z6pushupi(i32 %0) local_unnamed_addr #3 {
  %2 = shl i32 %0, 1
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 3
  %5 = or i32 %2, 1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %6, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %8, %9
  %11 = select i1 %10, i32 %8, i32 %9
  %12 = sext i32 %0 to i64
  %13 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %12, i32 3
  store i32 %11, i32* %13, align 4, !tbaa !12
  %14 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 2
  %15 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %6, i32 2
  %16 = load i32, i32* %14, align 8
  %17 = load i32, i32* %15, align 8
  %18 = icmp slt i32 %16, %17
  %19 = select i1 %18, i32 %17, i32 %16
  %20 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %12, i32 2
  store i32 %19, i32* %20, align 8, !tbaa !11
  %21 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %3, i32 6
  %22 = load i64, i64* %21, align 8, !tbaa !10
  %23 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %6, i32 6
  %24 = load i64, i64* %23, align 8, !tbaa !10
  %25 = add nsw i64 %24, %22
  %26 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %12, i32 6
  store i64 %25, i64* %26, align 8, !tbaa !10
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local void @_Z5buildiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #4 {
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 0
  store i32 %1, i32* %5, align 16, !tbaa !9
  %6 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 1
  store i32 %2, i32* %6, align 4, !tbaa !3
  %7 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 5
  store i32 0, i32* %7, align 4, !tbaa !13
  %8 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 4
  store i32 2139062143, i32* %8, align 16, !tbaa !14
  %9 = icmp eq i32 %1, %2
  br i1 %9, label %10, label %22

10:                                               ; preds = %3
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds [100010 x i32], [100010 x i32]* @A, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4, !tbaa !15
  %14 = sext i32 %13 to i64
  br label %15

15:                                               ; preds = %10, %22
  %16 = phi i64 [ %14, %10 ], [ %46, %22 ]
  %17 = phi i32 [ %13, %10 ], [ %41, %22 ]
  %18 = phi i32 [ %13, %10 ], [ %35, %22 ]
  %19 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 6
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 2
  store i32 %17, i32* %20, align 8
  %21 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 3
  store i32 %18, i32* %21, align 4
  ret void

22:                                               ; preds = %3
  %23 = add nsw i32 %2, %1
  %24 = ashr i32 %23, 1
  %25 = shl i32 %0, 1
  tail call void @_Z5buildiii(i32 %25, i32 %1, i32 %24)
  %26 = or i32 %25, 1
  %27 = add nsw i32 %24, 1
  tail call void @_Z5buildiii(i32 %26, i32 %27, i32 %2)
  %28 = sext i32 %25 to i64
  %29 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %28, i32 3
  %30 = sext i32 %26 to i64
  %31 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %30, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* %29, align 4
  %34 = icmp slt i32 %32, %33
  %35 = select i1 %34, i32 %32, i32 %33
  %36 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %28, i32 2
  %37 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %30, i32 2
  %38 = load i32, i32* %36, align 8
  %39 = load i32, i32* %37, align 8
  %40 = icmp slt i32 %38, %39
  %41 = select i1 %40, i32 %39, i32 %38
  %42 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %28, i32 6
  %43 = load i64, i64* %42, align 8, !tbaa !10
  %44 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %30, i32 6
  %45 = load i64, i64* %44, align 8, !tbaa !10
  %46 = add nsw i64 %45, %43
  br label %15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local void @_Z9updateaddiiii(i32 %0, i32 %1, i32 %2, i32 %3) local_unnamed_addr #4 {
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 0
  %7 = load i32, i32* %6, align 16, !tbaa !9
  %8 = icmp slt i32 %7, %1
  br i1 %8, label %31, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 1
  %11 = load i32, i32* %10, align 4, !tbaa !3
  %12 = icmp sgt i32 %11, %2
  br i1 %12, label %31, label %13

13:                                               ; preds = %9
  %14 = sub i32 1, %7
  %15 = add i32 %14, %11
  %16 = sext i32 %15 to i64
  %17 = sext i32 %3 to i64
  %18 = mul nsw i64 %16, %17
  %19 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 6
  %20 = load i64, i64* %19, align 8, !tbaa !10
  %21 = add nsw i64 %20, %18
  store i64 %21, i64* %19, align 8, !tbaa !10
  %22 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 2
  %23 = load i32, i32* %22, align 8, !tbaa !11
  %24 = add nsw i32 %23, %3
  store i32 %24, i32* %22, align 8, !tbaa !11
  %25 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 3
  %26 = load i32, i32* %25, align 4, !tbaa !12
  %27 = add nsw i32 %26, %3
  store i32 %27, i32* %25, align 4, !tbaa !12
  %28 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 5
  %29 = load i32, i32* %28, align 4, !tbaa !13
  %30 = add nsw i32 %29, %3
  store i32 %30, i32* %28, align 4, !tbaa !13
  br label %68

31:                                               ; preds = %9, %4
  tail call void @_Z8pushdowni(i32 %0)
  %32 = load i32, i32* %6, align 16, !tbaa !9
  %33 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 1
  %34 = load i32, i32* %33, align 4, !tbaa !3
  %35 = add nsw i32 %34, %32
  %36 = ashr i32 %35, 1
  %37 = icmp slt i32 %36, %1
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = shl i32 %0, 1
  tail call void @_Z9updateaddiiii(i32 %39, i32 %1, i32 %2, i32 %3)
  br label %40

40:                                               ; preds = %38, %31
  %41 = icmp slt i32 %36, %2
  %42 = shl i32 %0, 1
  %43 = or i32 %42, 1
  br i1 %41, label %44, label %45

44:                                               ; preds = %40
  tail call void @_Z9updateaddiiii(i32 %43, i32 %1, i32 %2, i32 %3)
  br label %45

45:                                               ; preds = %40, %44
  %46 = sext i32 %42 to i64
  %47 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %46, i32 3
  %48 = sext i32 %43 to i64
  %49 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %48, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = load i32, i32* %47, align 4
  %52 = icmp slt i32 %50, %51
  %53 = select i1 %52, i32 %50, i32 %51
  %54 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 3
  store i32 %53, i32* %54, align 4, !tbaa !12
  %55 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %46, i32 2
  %56 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %48, i32 2
  %57 = load i32, i32* %55, align 8
  %58 = load i32, i32* %56, align 8
  %59 = icmp slt i32 %57, %58
  %60 = select i1 %59, i32 %58, i32 %57
  %61 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 2
  store i32 %60, i32* %61, align 8, !tbaa !11
  %62 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %46, i32 6
  %63 = load i64, i64* %62, align 8, !tbaa !10
  %64 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %48, i32 6
  %65 = load i64, i64* %64, align 8, !tbaa !10
  %66 = add nsw i64 %65, %63
  %67 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 6
  store i64 %66, i64* %67, align 8, !tbaa !10
  br label %68

68:                                               ; preds = %45, %13
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @_Z3Divii(i32 %0, i32 %1) local_unnamed_addr #6 {
  %3 = sdiv i32 %0, %1
  %4 = mul nsw i32 %3, %1
  %5 = icmp ne i32 %4, %0
  %6 = icmp slt i32 %0, 0
  %7 = select i1 %6, i1 %5, i1 false
  %8 = sext i1 %7 to i32
  %9 = add nsw i32 %3, %8
  ret i32 %9
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local void @_Z9updatediviiii(i32 %0, i32 %1, i32 %2, i32 %3) local_unnamed_addr #4 {
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 0
  %7 = load i32, i32* %6, align 16, !tbaa !9
  %8 = icmp slt i32 %7, %1
  br i1 %8, label %59, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 1
  %11 = load i32, i32* %10, align 4, !tbaa !3
  %12 = icmp sgt i32 %11, %2
  br i1 %12, label %59, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 2
  %15 = load i32, i32* %14, align 8, !tbaa !11
  %16 = sdiv i32 %15, %3
  %17 = mul nsw i32 %16, %3
  %18 = icmp ne i32 %17, %15
  %19 = icmp slt i32 %15, 0
  %20 = select i1 %19, i1 %18, i1 false
  %21 = sext i1 %20 to i32
  %22 = add nsw i32 %16, %21
  %23 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 3
  %24 = load i32, i32* %23, align 4, !tbaa !12
  %25 = sdiv i32 %24, %3
  %26 = mul nsw i32 %25, %3
  %27 = icmp ne i32 %26, %24
  %28 = icmp slt i32 %24, 0
  %29 = select i1 %28, i1 %27, i1 false
  %30 = sext i1 %29 to i32
  %31 = add nsw i32 %25, %30
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %33, label %42

33:                                               ; preds = %13
  %34 = add i32 %11, 1
  %35 = sub i32 %34, %7
  %36 = sext i32 %35 to i64
  %37 = sext i32 %22 to i64
  %38 = mul nsw i64 %37, %36
  %39 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 6
  store i64 %38, i64* %39, align 8, !tbaa !10
  %40 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 4
  store i32 %22, i32* %40, align 16, !tbaa !14
  store i32 %22, i32* %23, align 4, !tbaa !12
  store i32 %22, i32* %14, align 8, !tbaa !11
  %41 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 5
  store i32 0, i32* %41, align 4, !tbaa !13
  br label %96

42:                                               ; preds = %13
  %43 = add nsw i32 %24, 1
  %44 = icmp eq i32 %15, %43
  br i1 %44, label %45, label %59

45:                                               ; preds = %42
  %46 = sub nsw i32 %31, %24
  %47 = add i32 %11, 1
  %48 = sub i32 %47, %7
  %49 = sext i32 %48 to i64
  %50 = sext i32 %46 to i64
  %51 = mul nsw i64 %50, %49
  %52 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 6
  %53 = load i64, i64* %52, align 8, !tbaa !10
  %54 = add nsw i64 %53, %51
  store i64 %54, i64* %52, align 8, !tbaa !10
  %55 = add nsw i32 %46, %15
  store i32 %55, i32* %14, align 8, !tbaa !11
  store i32 %31, i32* %23, align 4, !tbaa !12
  %56 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 5
  %57 = load i32, i32* %56, align 4, !tbaa !13
  %58 = add nsw i32 %57, %46
  store i32 %58, i32* %56, align 4, !tbaa !13
  br label %96

59:                                               ; preds = %42, %9, %4
  tail call void @_Z8pushdowni(i32 %0)
  %60 = load i32, i32* %6, align 16, !tbaa !9
  %61 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 1
  %62 = load i32, i32* %61, align 4, !tbaa !3
  %63 = add nsw i32 %62, %60
  %64 = ashr i32 %63, 1
  %65 = icmp slt i32 %64, %1
  br i1 %65, label %68, label %66

66:                                               ; preds = %59
  %67 = shl i32 %0, 1
  tail call void @_Z9updatediviiii(i32 %67, i32 %1, i32 %2, i32 %3)
  br label %68

68:                                               ; preds = %66, %59
  %69 = icmp slt i32 %64, %2
  %70 = shl i32 %0, 1
  %71 = or i32 %70, 1
  br i1 %69, label %72, label %73

72:                                               ; preds = %68
  tail call void @_Z9updatediviiii(i32 %71, i32 %1, i32 %2, i32 %3)
  br label %73

73:                                               ; preds = %68, %72
  %74 = sext i32 %70 to i64
  %75 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %74, i32 3
  %76 = sext i32 %71 to i64
  %77 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %76, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = load i32, i32* %75, align 4
  %80 = icmp slt i32 %78, %79
  %81 = select i1 %80, i32 %78, i32 %79
  %82 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 3
  store i32 %81, i32* %82, align 4, !tbaa !12
  %83 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %74, i32 2
  %84 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %76, i32 2
  %85 = load i32, i32* %83, align 8
  %86 = load i32, i32* %84, align 8
  %87 = icmp slt i32 %85, %86
  %88 = select i1 %87, i32 %86, i32 %85
  %89 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 2
  store i32 %88, i32* %89, align 8, !tbaa !11
  %90 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %74, i32 6
  %91 = load i64, i64* %90, align 8, !tbaa !10
  %92 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %76, i32 6
  %93 = load i64, i64* %92, align 8, !tbaa !10
  %94 = add nsw i64 %93, %91
  %95 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %5, i32 6
  store i64 %94, i64* %95, align 8, !tbaa !10
  br label %96

96:                                               ; preds = %73, %45, %33
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local i32 @_Z7querymniii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #4 {
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 0
  %6 = load i32, i32* %5, align 16, !tbaa !9
  %7 = icmp slt i32 %6, %1
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 1
  %10 = load i32, i32* %9, align 4, !tbaa !3
  %11 = icmp sgt i32 %10, %2
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 3
  %14 = load i32, i32* %13, align 4, !tbaa !12
  br label %30

15:                                               ; preds = %8, %3
  tail call void @_Z8pushdowni(i32 %0)
  %16 = load i32, i32* %5, align 16, !tbaa !9
  %17 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %4, i32 1
  %18 = load i32, i32* %17, align 4, !tbaa !3
  %19 = add nsw i32 %18, %16
  %20 = ashr i32 %19, 1
  %21 = icmp slt i32 %20, %1
  br i1 %21, label %27, label %22

22:                                               ; preds = %15
  %23 = shl i32 %0, 1
  %24 = tail call i32 @_Z7querymniii(i32 %23, i32 %1, i32 %2)
  %25 = icmp slt i32 %24, 2139062143
  %26 = select i1 %25, i32 %24, i32 2139062143
  br label %27

27:                                               ; preds = %22, %15
  %28 = phi i32 [ 2139062143, %15 ], [ %26, %22 ]
  %29 = icmp slt i32 %20, %2
  br i1 %29, label %32, label %30

30:                                               ; preds = %12, %27, %32
  %31 = phi i32 [ %37, %32 ], [ %14, %12 ], [ %28, %27 ]
  ret i32 %31

32:                                               ; preds = %27
  %33 = shl i32 %0, 1
  %34 = or i32 %33, 1
  %35 = tail call i32 @_Z7querymniii(i32 %34, i32 %1, i32 %2)
  %36 = icmp slt i32 %35, %28
  %37 = select i1 %36, i32 %35, i32 %28
  br label %30
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local i64 @_Z7querysmiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #4 {
  br label %4

4:                                                ; preds = %31, %3
  %5 = phi i64 [ 0, %3 ], [ %34, %31 ]
  %6 = phi i32 [ %0, %3 ], [ %33, %31 ]
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %7, i32 0
  %9 = load i32, i32* %8, align 16, !tbaa !9
  %10 = icmp slt i32 %9, %1
  br i1 %10, label %18, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %7, i32 1
  %13 = load i32, i32* %12, align 4, !tbaa !3
  %14 = icmp sgt i32 %13, %2
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %7, i32 6
  %17 = load i64, i64* %16, align 8, !tbaa !10
  br label %35

18:                                               ; preds = %11, %4
  tail call void @_Z8pushdowni(i32 %6)
  %19 = load i32, i32* %8, align 16, !tbaa !9
  %20 = getelementptr inbounds [400040 x %struct.Node], [400040 x %struct.Node]* @T, i64 0, i64 %7, i32 1
  %21 = load i32, i32* %20, align 4, !tbaa !3
  %22 = add nsw i32 %21, %19
  %23 = ashr i32 %22, 1
  %24 = icmp slt i32 %23, %1
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = shl i32 %6, 1
  %27 = tail call i64 @_Z7querysmiii(i32 %26, i32 %1, i32 %2)
  br label %28

28:                                               ; preds = %25, %18
  %29 = phi i64 [ %27, %25 ], [ 0, %18 ]
  %30 = icmp slt i32 %23, %2
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  %32 = shl i32 %6, 1
  %33 = or i32 %32, 1
  %34 = add nsw i64 %29, %5
  br label %4

35:                                               ; preds = %28, %15
  %36 = phi i64 [ %17, %15 ], [ %29, %28 ]
  %37 = add nsw i64 %36, %5
  ret i64 %37
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z4Workv() local_unnamed_addr #7 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %1 to i8*
  %6 = bitcast i32* %2 to i8*
  %7 = bitcast i32* %3 to i8*
  %8 = bitcast i32* %4 to i8*
  %9 = load i32, i32* @m, align 4, !tbaa !15
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* @m, align 4, !tbaa !15
  %11 = icmp eq i32 %9, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %0, %35
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %14 = load i32, i32* %2, align 4, !tbaa !15
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %2, align 4, !tbaa !15
  %16 = load i32, i32* %3, align 4, !tbaa !15
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %3, align 4, !tbaa !15
  %18 = load i32, i32* %1, align 4, !tbaa !15
  switch i32 %18, label %32 [
    i32 1, label %19
    i32 2, label %24
    i32 3, label %29
  ]

19:                                               ; preds = %12
  %20 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %4)
  %21 = load i32, i32* %2, align 4, !tbaa !15
  %22 = load i32, i32* %3, align 4, !tbaa !15
  %23 = load i32, i32* %4, align 4, !tbaa !15
  call void @_Z9updateaddiiii(i32 1, i32 %21, i32 %22, i32 %23)
  br label %35

24:                                               ; preds = %12
  %25 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %4)
  %26 = load i32, i32* %2, align 4, !tbaa !15
  %27 = load i32, i32* %3, align 4, !tbaa !15
  %28 = load i32, i32* %4, align 4, !tbaa !15
  call void @_Z9updatediviiii(i32 1, i32 %26, i32 %27, i32 %28)
  br label %35

29:                                               ; preds = %12
  %30 = call i32 @_Z7querymniii(i32 1, i32 %15, i32 %17)
  %31 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %30)
  br label %35

32:                                               ; preds = %12
  %33 = call i64 @_Z7querysmiii(i32 1, i32 %15, i32 %17)
  %34 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %33)
  br label %35

35:                                               ; preds = %24, %32, %29, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  %36 = load i32, i32* @m, align 4, !tbaa !15
  %37 = add nsw i32 %36, -1
  store i32 %37, i32* @m, align 4, !tbaa !15
  %38 = icmp eq i32 %36, 0
  br i1 %38, label %39, label %12, !llvm.loop !16

39:                                               ; preds = %35, %0
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z4Initv() local_unnamed_addr #7 {
  %1 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i32* nonnull @n, i32* nonnull @m)
  %2 = load i32, i32* @n, align 4, !tbaa !15
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %6

4:                                                ; preds = %6, %0
  %5 = phi i32 [ %2, %0 ], [ %11, %6 ]
  tail call void @_Z5buildiii(i32 1, i32 1, i32 %5)
  ret void

6:                                                ; preds = %0, %6
  %7 = phi i64 [ %10, %6 ], [ 1, %0 ]
  %8 = getelementptr inbounds [100010 x i32], [100010 x i32]* @A, i64 0, i64 %7
  %9 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %8)
  %10 = add nuw nsw i64 %7, 1
  %11 = load i32, i32* @n, align 4, !tbaa !15
  %12 = sext i32 %11 to i64
  %13 = icmp slt i64 %7, %12
  br i1 %13, label %6, label %4, !llvm.loop !18
}

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #9 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !19
  %2 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), %struct._IO_FILE* %1)
  %3 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i32* nonnull @n, i32* nonnull @m) #11
  %4 = load i32, i32* @n, align 4, !tbaa !15
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %14, label %6

6:                                                ; preds = %0, %6
  %7 = phi i64 [ %10, %6 ], [ 1, %0 ]
  %8 = getelementptr inbounds [100010 x i32], [100010 x i32]* @A, i64 0, i64 %7
  %9 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %8) #11
  %10 = add nuw nsw i64 %7, 1
  %11 = load i32, i32* @n, align 4, !tbaa !15
  %12 = sext i32 %11 to i64
  %13 = icmp slt i64 %7, %12
  br i1 %13, label %6, label %14, !llvm.loop !18

14:                                               ; preds = %6, %0
  %15 = phi i32 [ %4, %0 ], [ %11, %6 ]
  tail call void @_Z5buildiii(i32 1, i32 1, i32 %15) #11
  tail call void @_Z4Workv()
  ret i32 0
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_BoxOperations.cpp() #10 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #11
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #6 = { mustprogress nofree norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 4}
!4 = !{!"_ZTS4Node", !5, i64 0, !5, i64 4, !5, i64 8, !5, i64 12, !5, i64 16, !5, i64 20, !8, i64 24}
!5 = !{!"int", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!"long long", !6, i64 0}
!9 = !{!4, !5, i64 0}
!10 = !{!4, !8, i64 24}
!11 = !{!4, !5, i64 8}
!12 = !{!4, !5, i64 12}
!13 = !{!4, !5, i64 20}
!14 = !{!4, !5, i64 16}
!15 = !{!5, !5, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.mustprogress"}
!18 = distinct !{!18, !17}
!19 = !{!20, !20, i64 0}
!20 = !{!"any pointer", !6, i64 0}
