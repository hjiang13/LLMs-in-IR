digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x558fa3ec25b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([32 x\l... i8], [32 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.4, i64 0, i64 0), %struct._IO_FILE* %4)\l  %6 = bitcast i32* %1 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #15\l  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x\l... i8], [3 x i8]* @.str.5, i64 0, i64 0), i32* nonnull %1)\l  %8 = load i32, i32* %1, align 4, !tbaa !7\l  %9 = icmp sgt i32 %8, 0\l  br i1 %9, label %14, label %22\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ec25b0:s0 -> Node0x558fa3ec27e0;
	Node0x558fa3ec25b0:s1 -> Node0x558fa3ec7e30;
	Node0x558fa3ec7f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%10:\l10:                                               \l  %11 = bitcast i32* %2 to i8*\l  %12 = bitcast i32* %3 to i8*\l  %13 = icmp sgt i32 %19, 1\l  br i1 %13, label %28, label %22\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ec7f30:s0 -> Node0x558fa3ec8120;
	Node0x558fa3ec7f30:s1 -> Node0x558fa3ec7e30;
	Node0x558fa3ec27e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = phi i64 [ %18, %14 ], [ 0, %0 ]\l  %16 = getelementptr inbounds [223456 x i32], [223456 x i32]* @a, i64 0, i64\l... %15\l  %17 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x\l... i8], [3 x i8]* @.str.5, i64 0, i64 0), i32* nonnull %16)\l  %18 = add nuw nsw i64 %15, 1\l  %19 = load i32, i32* %1, align 4, !tbaa !7\l  %20 = sext i32 %19 to i64\l  %21 = icmp slt i64 %18, %20\l  br i1 %21, label %14, label %10, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ec27e0:s0 -> Node0x558fa3ec27e0;
	Node0x558fa3ec27e0:s1 -> Node0x558fa3ec7f30;
	Node0x558fa3ec7e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%22:\l22:                                               \l  call void @_Z3dfsii(i32 0, i32 -1)\l  %23 = load i32, i32* %1, align 4, !tbaa !7\l  %24 = load i64, i64* getelementptr inbounds ([223456 x\l... %\"class.std::multiset\"], [223456 x %\"class.std::multiset\"]* @s, i64 0, i64 0,\l... i32 0, i32 0, i32 1, i32 1), align 8, !tbaa !11\l  %25 = trunc i64 %24 to i32\l  %26 = sub nsw i32 %23, %25\l  %27 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1)\l... getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i32 %26)\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #15\l  ret i32 0\l}"];
	Node0x558fa3ec8120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%28:\l28:                                               \l  %29 = phi i32 [ %130, %129 ], [ 0, %10 ]\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #15\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #15\l  %30 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @.str.6, i64 0, i64 0), i32* nonnull %2, i32* nonnull %3)\l  %31 = load i32, i32* %2, align 4, !tbaa !7\l  %32 = add nsw i32 %31, -1\l  store i32 %32, i32* %2, align 4, !tbaa !7\l  %33 = load i32, i32* %3, align 4, !tbaa !7\l  %34 = add nsw i32 %33, -1\l  store i32 %34, i32* %3, align 4, !tbaa !7\l  %35 = sext i32 %32 to i64\l  %36 = getelementptr inbounds [223456 x %\"class.std::vector\"], [223456 x\l... %\"class.std::vector\"]* @g, i64 0, i64 %35, i32 0, i32 0, i32 0, i32 1\l  %37 = load i32*, i32** %36, align 8, !tbaa !16\l  %38 = getelementptr inbounds [223456 x %\"class.std::vector\"], [223456 x\l... %\"class.std::vector\"]* @g, i64 0, i64 %35, i32 0, i32 0, i32 0, i32 2\l  %39 = load i32*, i32** %38, align 8, !tbaa !18\l  %40 = icmp eq i32* %37, %39\l  br i1 %40, label %43, label %41\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ec8120:s0 -> Node0x558fa3ec9f80;
	Node0x558fa3ec8120:s1 -> Node0x558fa3eca010;
	Node0x558fa3eca010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%41:\l41:                                               \l  store i32 %34, i32* %37, align 4, !tbaa !7\l  %42 = getelementptr inbounds i32, i32* %37, i64 1\l  store i32* %42, i32** %36, align 8, !tbaa !16\l  br label %81\l}"];
	Node0x558fa3eca010 -> Node0x558fa3eca920;
	Node0x558fa3ec9f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%43:\l43:                                               \l  %44 = getelementptr inbounds [223456 x %\"class.std::vector\"], [223456 x\l... %\"class.std::vector\"]* @g, i64 0, i64 %35, i32 0, i32 0, i32 0, i32 0\l  %45 = load i32*, i32** %44, align 8, !tbaa !19\l  %46 = ptrtoint i32* %37 to i64\l  %47 = ptrtoint i32* %45 to i64\l  %48 = sub i64 %46, %47\l  %49 = ashr exact i64 %48, 2\l  %50 = icmp eq i64 %48, 9223372036854775804\l  br i1 %50, label %51, label %52\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ec9f80:s0 -> Node0x558fa3ecb450;
	Node0x558fa3ec9f80:s1 -> Node0x558fa3ecb4a0;
	Node0x558fa3ecb450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%51:\l51:                                               \l  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str.8, i64 0, i64 0)) #16\l  unreachable\l}"];
	Node0x558fa3ecb4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%52:\l52:                                               \l  %53 = icmp eq i64 %48, 0\l  %54 = select i1 %53, i64 1, i64 %49\l  %55 = add nsw i64 %54, %49\l  %56 = icmp ult i64 %55, %49\l  %57 = icmp ugt i64 %55, 2305843009213693951\l  %58 = or i1 %56, %57\l  %59 = select i1 %58, i64 2305843009213693951, i64 %55\l  %60 = icmp eq i64 %59, 0\l  br i1 %60, label %66, label %61\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ecb4a0:s0 -> Node0x558fa3ecbe10;
	Node0x558fa3ecb4a0:s1 -> Node0x558fa3ecbe60;
	Node0x558fa3ecbe60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%61:\l61:                                               \l  %62 = shl nuw nsw i64 %59, 2\l  %63 = call noalias nonnull i8* @_Znwm(i64 %62) #17\l  %64 = bitcast i8* %63 to i32*\l  %65 = load i32, i32* %3, align 4, !tbaa !7\l  br label %66\l}"];
	Node0x558fa3ecbe60 -> Node0x558fa3ecbe10;
	Node0x558fa3ecbe10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%66:\l66:                                               \l  %67 = phi i32 [ %65, %61 ], [ %34, %52 ]\l  %68 = phi i32* [ %64, %61 ], [ null, %52 ]\l  %69 = getelementptr inbounds i32, i32* %68, i64 %49\l  store i32 %67, i32* %69, align 4, !tbaa !7\l  %70 = icmp sgt i64 %48, 0\l  br i1 %70, label %71, label %74\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ecbe10:s0 -> Node0x558fa3ecc980;
	Node0x558fa3ecbe10:s1 -> Node0x558fa3ecc9d0;
	Node0x558fa3ecc980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%71:\l71:                                               \l  %72 = bitcast i32* %68 to i8*\l  %73 = bitcast i32* %45 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64\l... %48, i1 false) #15\l  br label %74\l}"];
	Node0x558fa3ecc980 -> Node0x558fa3ecc9d0;
	Node0x558fa3ecc9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%74:\l74:                                               \l  %75 = getelementptr inbounds i32, i32* %69, i64 1\l  %76 = icmp eq i32* %45, null\l  br i1 %76, label %79, label %77\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ecc9d0:s0 -> Node0x558fa3ecd090;
	Node0x558fa3ecc9d0:s1 -> Node0x558fa3ecd0e0;
	Node0x558fa3ecd0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%77:\l77:                                               \l  %78 = bitcast i32* %45 to i8*\l  call void @_ZdlPv(i8* nonnull %78) #15\l  br label %79\l}"];
	Node0x558fa3ecd0e0 -> Node0x558fa3ecd090;
	Node0x558fa3ecd090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%79:\l79:                                               \l  store i32* %68, i32** %44, align 8, !tbaa !19\l  store i32* %75, i32** %36, align 8, !tbaa !16\l  %80 = getelementptr inbounds i32, i32* %68, i64 %59\l  store i32* %80, i32** %38, align 8, !tbaa !18\l  br label %81\l}"];
	Node0x558fa3ecd090 -> Node0x558fa3eca920;
	Node0x558fa3eca920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%81:\l81:                                               \l  %82 = load i32, i32* %3, align 4, !tbaa !7\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds [223456 x %\"class.std::vector\"], [223456 x\l... %\"class.std::vector\"]* @g, i64 0, i64 %83, i32 0, i32 0, i32 0, i32 1\l  %85 = load i32*, i32** %84, align 8, !tbaa !16\l  %86 = getelementptr inbounds [223456 x %\"class.std::vector\"], [223456 x\l... %\"class.std::vector\"]* @g, i64 0, i64 %83, i32 0, i32 0, i32 0, i32 2\l  %87 = load i32*, i32** %86, align 8, !tbaa !18\l  %88 = icmp eq i32* %85, %87\l  br i1 %88, label %92, label %89\l|{<s0>T|<s1>F}}"];
	Node0x558fa3eca920:s0 -> Node0x558fa3ece190;
	Node0x558fa3eca920:s1 -> Node0x558fa3ece1e0;
	Node0x558fa3ece1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%89:\l89:                                               \l  %90 = load i32, i32* %2, align 4, !tbaa !7\l  store i32 %90, i32* %85, align 4, !tbaa !7\l  %91 = getelementptr inbounds i32, i32* %85, i64 1\l  store i32* %91, i32** %84, align 8, !tbaa !16\l  br label %129\l}"];
	Node0x558fa3ece1e0 -> Node0x558fa3ec90b0;
	Node0x558fa3ece190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%92:\l92:                                               \l  %93 = getelementptr inbounds [223456 x %\"class.std::vector\"], [223456 x\l... %\"class.std::vector\"]* @g, i64 0, i64 %83, i32 0, i32 0, i32 0, i32 0\l  %94 = load i32*, i32** %93, align 8, !tbaa !19\l  %95 = ptrtoint i32* %85 to i64\l  %96 = ptrtoint i32* %94 to i64\l  %97 = sub i64 %95, %96\l  %98 = ashr exact i64 %97, 2\l  %99 = icmp eq i64 %97, 9223372036854775804\l  br i1 %99, label %100, label %101\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ece190:s0 -> Node0x558fa3ec09b0;
	Node0x558fa3ece190:s1 -> Node0x558fa3ec0a00;
	Node0x558fa3ec09b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%100:\l100:                                              \l  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x\l... i8], [26 x i8]* @.str.8, i64 0, i64 0)) #16\l  unreachable\l}"];
	Node0x558fa3ec0a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%101:\l101:                                              \l  %102 = icmp eq i64 %97, 0\l  %103 = select i1 %102, i64 1, i64 %98\l  %104 = add nsw i64 %103, %98\l  %105 = icmp ult i64 %104, %98\l  %106 = icmp ugt i64 %104, 2305843009213693951\l  %107 = or i1 %105, %106\l  %108 = select i1 %107, i64 2305843009213693951, i64 %104\l  %109 = icmp eq i64 %108, 0\l  br i1 %109, label %114, label %110\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ec0a00:s0 -> Node0x558fa3ec1150;
	Node0x558fa3ec0a00:s1 -> Node0x558fa3ec11a0;
	Node0x558fa3ec11a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%110:\l110:                                              \l  %111 = shl nuw nsw i64 %108, 2\l  %112 = call noalias nonnull i8* @_Znwm(i64 %111) #17\l  %113 = bitcast i8* %112 to i32*\l  br label %114\l}"];
	Node0x558fa3ec11a0 -> Node0x558fa3ec1150;
	Node0x558fa3ec1150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%114:\l114:                                              \l  %115 = phi i32* [ %113, %110 ], [ null, %101 ]\l  %116 = getelementptr inbounds i32, i32* %115, i64 %98\l  %117 = load i32, i32* %2, align 4, !tbaa !7\l  store i32 %117, i32* %116, align 4, !tbaa !7\l  %118 = icmp sgt i64 %97, 0\l  br i1 %118, label %119, label %122\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ec1150:s0 -> Node0x558fa3ec16e0;
	Node0x558fa3ec1150:s1 -> Node0x558fa3ed0c80;
	Node0x558fa3ec16e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%119:\l119:                                              \l  %120 = bitcast i32* %115 to i8*\l  %121 = bitcast i32* %94 to i8*\l  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121,\l... i64 %97, i1 false) #15\l  br label %122\l}"];
	Node0x558fa3ec16e0 -> Node0x558fa3ed0c80;
	Node0x558fa3ed0c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%122:\l122:                                              \l  %123 = getelementptr inbounds i32, i32* %116, i64 1\l  %124 = icmp eq i32* %94, null\l  br i1 %124, label %127, label %125\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ed0c80:s0 -> Node0x558fa3ed1170;
	Node0x558fa3ed0c80:s1 -> Node0x558fa3ed11c0;
	Node0x558fa3ed11c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%125:\l125:                                              \l  %126 = bitcast i32* %94 to i8*\l  call void @_ZdlPv(i8* nonnull %126) #15\l  br label %127\l}"];
	Node0x558fa3ed11c0 -> Node0x558fa3ed1170;
	Node0x558fa3ed1170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%127:\l127:                                              \l  store i32* %115, i32** %93, align 8, !tbaa !19\l  store i32* %123, i32** %84, align 8, !tbaa !16\l  %128 = getelementptr inbounds i32, i32* %115, i64 %108\l  store i32* %128, i32** %86, align 8, !tbaa !18\l  br label %129\l}"];
	Node0x558fa3ed1170 -> Node0x558fa3ec90b0;
	Node0x558fa3ec90b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%129:\l129:                                              \l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #15\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #15\l  %130 = add nuw nsw i32 %29, 1\l  %131 = load i32, i32* %1, align 4, !tbaa !7\l  %132 = add nsw i32 %131, -1\l  %133 = icmp slt i32 %130, %132\l  br i1 %133, label %28, label %22, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x558fa3ec90b0:s0 -> Node0x558fa3ec8120;
	Node0x558fa3ec90b0:s1 -> Node0x558fa3ec7e30;
}
