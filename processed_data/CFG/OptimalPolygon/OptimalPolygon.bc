; ModuleID = '../../Benchmarks/OptimalPolygon/OptimalPolygon.cpp'
source_filename = "../../Benchmarks/OptimalPolygon/OptimalPolygon.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" = type { double*, double*, double* }
%"struct.std::pair" = type { double, %"struct.std::pair.5" }
%"struct.std::pair.5" = type { double, double }
%"struct.std::pair.13" = type <{ double, i32, [4 x i8] }>

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_ = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_less_iterEEvT_T0_SD_T1_T2_ = comdat any

$_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_SC_SC_T0_ = comdat any

$_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_ = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_T0_ = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_less_iterEEvT_T0_SC_T1_T2_ = comdat any

$_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_SB_SB_T0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [30 x i8] c"../input_files/OptimalPolygon\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str.2 = private unnamed_addr constant [14 x i8] c"%d %.8f %.8f\0A\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_OptimalPolygon.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind uwtable willreturn
define dso_local double @_Z4distdddd(double %0, double %1, double %2, double %3) local_unnamed_addr #3 {
  %5 = insertelement <2 x double> poison, double %0, i32 0
  %6 = insertelement <2 x double> %5, double %1, i32 1
  %7 = insertelement <2 x double> poison, double %2, i32 0
  %8 = insertelement <2 x double> %7, double %3, i32 1
  %9 = fsub <2 x double> %6, %8
  %10 = fmul <2 x double> %9, %9
  %11 = shufflevector <2 x double> %10, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %12 = fadd <2 x double> %10, %11
  %13 = extractelement <2 x double> %12, i32 0
  %14 = tail call double @sqrt(double %13) #16
  ret double %14
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local double @sqrt(double) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nounwind uwtable willreturn
define dso_local double @_Z4areadddddd(double %0, double %1, double %2, double %3, double %4, double %5) local_unnamed_addr #3 {
  %7 = insertelement <2 x double> poison, double %0, i32 0
  %8 = insertelement <2 x double> %7, double %1, i32 1
  %9 = insertelement <2 x double> poison, double %2, i32 0
  %10 = insertelement <2 x double> %9, double %3, i32 1
  %11 = fsub <2 x double> %8, %10
  %12 = fmul <2 x double> %11, %11
  %13 = shufflevector <2 x double> %12, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %14 = fadd <2 x double> %12, %13
  %15 = extractelement <2 x double> %14, i32 0
  %16 = tail call double @sqrt(double %15) #16
  %17 = insertelement <2 x double> poison, double %4, i32 0
  %18 = insertelement <2 x double> %17, double %5, i32 1
  %19 = fsub <2 x double> %10, %18
  %20 = fmul <2 x double> %19, %19
  %21 = shufflevector <2 x double> %20, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %22 = fadd <2 x double> %20, %21
  %23 = extractelement <2 x double> %22, i32 0
  %24 = tail call double @sqrt(double %23) #16
  %25 = fsub <2 x double> %18, %8
  %26 = fmul <2 x double> %25, %25
  %27 = shufflevector <2 x double> %26, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %28 = fadd <2 x double> %26, %27
  %29 = extractelement <2 x double> %28, i32 0
  %30 = tail call double @sqrt(double %29) #16
  %31 = fadd double %16, %24
  %32 = fadd double %31, %30
  %33 = fmul double %32, 5.000000e-01
  %34 = fsub double %33, %16
  %35 = fmul double %33, %34
  %36 = fsub double %33, %24
  %37 = fmul double %36, %35
  %38 = fsub double %33, %30
  %39 = fmul double %38, %37
  %40 = tail call double @sqrt(double %39) #16
  ret double %40
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: uwtable
define dso_local double @_Z5scoreddSt6vectorIdSaIdEES1_(double %0, double %1, %"class.std::vector"* nocapture readonly %2, %"class.std::vector"* nocapture readonly %3) local_unnamed_addr #6 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load double*, double** %5, align 8, !tbaa !3
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load double*, double** %7, align 8, !tbaa !8
  %9 = ptrtoint double* %6 to i64
  %10 = ptrtoint double* %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = shl i64 %11, 29
  %15 = ashr exact i64 %14, 32
  %16 = icmp slt i64 %14, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0)) #17
  unreachable

18:                                               ; preds = %4
  %19 = icmp eq i64 %14, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  %21 = mul nuw nsw i64 %15, 24
  %22 = tail call noalias nonnull i8* @_Znwm(i64 %21) #18
  %23 = bitcast i8* %22 to %"struct.std::pair"*
  %24 = getelementptr %"struct.std::pair", %"struct.std::pair"* %23, i64 %15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 %21, i1 false)
  br label %25

25:                                               ; preds = %18, %20
  %26 = phi %"struct.std::pair"* [ %23, %20 ], [ null, %18 ]
  %27 = phi %"struct.std::pair"* [ %24, %20 ], [ null, %18 ]
  %28 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = icmp sgt i32 %13, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = and i64 %12, 4294967295
  %32 = load double*, double** %28, align 8, !tbaa !8
  %33 = load double*, double** %7, align 8, !tbaa !8
  br label %151

34:                                               ; preds = %151, %25
  %35 = icmp eq %"struct.std::pair"* %26, %27
  br i1 %35, label %92, label %36

36:                                               ; preds = %34
  %37 = ptrtoint %"struct.std::pair"* %27 to i64
  %38 = ptrtoint %"struct.std::pair"* %26 to i64
  %39 = sub i64 %37, %38
  %40 = sdiv exact i64 %39, 24
  %41 = tail call i64 @llvm.ctlz.i64(i64 %40, i1 true) #16, !range !9
  %42 = shl nuw nsw i64 %41, 1
  %43 = xor i64 %42, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(%"struct.std::pair"* %26, %"struct.std::pair"* %27, i64 %43)
          to label %44 unwind label %176

44:                                               ; preds = %36
  %45 = icmp sgt i64 %39, 384
  br i1 %45, label %46, label %91

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 16
  invoke void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_(%"struct.std::pair"* %26, %"struct.std::pair"* nonnull %47)
          to label %48 unwind label %176

48:                                               ; preds = %46
  %49 = icmp eq %"struct.std::pair"* %47, %27
  br i1 %49, label %92, label %50

50:                                               ; preds = %48, %86
  %51 = phi %"struct.std::pair"* [ %89, %86 ], [ %47, %48 ]
  %52 = bitcast %"struct.std::pair"* %51 to <2 x double>*
  %53 = load <2 x double>, <2 x double>* %52, align 8
  %54 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i64 0, i32 1, i32 1
  %55 = load double, double* %54, align 8
  %56 = extractelement <2 x double> %53, i32 0
  %57 = extractelement <2 x double> %53, i32 1
  br label %58

58:                                               ; preds = %79, %50
  %59 = phi %"struct.std::pair"* [ %51, %50 ], [ %60, %79 ]
  %60 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i64 -1
  %61 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %60, i64 0, i32 0
  %62 = load double, double* %61, align 8, !tbaa !10
  %63 = fcmp olt double %56, %62
  br i1 %63, label %64, label %67

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i64 -1, i32 1, i32 0
  %66 = load double, double* %65, align 8, !tbaa !14
  br label %79

67:                                               ; preds = %58
  %68 = fcmp olt double %62, %56
  br i1 %68, label %86, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i64 -1, i32 1, i32 0
  %71 = load double, double* %70, align 8, !tbaa !15
  %72 = fcmp olt double %57, %71
  br i1 %72, label %79, label %73

73:                                               ; preds = %69
  %74 = fcmp olt double %71, %57
  br i1 %74, label %86, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i64 -1, i32 1, i32 1
  %77 = load double, double* %76, align 8, !tbaa !16
  %78 = fcmp olt double %55, %77
  br i1 %78, label %79, label %86

79:                                               ; preds = %75, %69, %64
  %80 = phi double [ %66, %64 ], [ %71, %69 ], [ %71, %75 ]
  %81 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i64 0, i32 0
  store double %62, double* %81, align 8, !tbaa !10
  %82 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i64 0, i32 1, i32 0
  store double %80, double* %82, align 8, !tbaa !15
  %83 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i64 -1, i32 1, i32 1
  %84 = load double, double* %83, align 8, !tbaa !14
  %85 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i64 0, i32 1, i32 1
  store double %84, double* %85, align 8, !tbaa !16
  br label %58, !llvm.loop !17

86:                                               ; preds = %75, %73, %67
  %87 = bitcast %"struct.std::pair"* %59 to <2 x double>*
  store <2 x double> %53, <2 x double>* %87, align 8, !tbaa !14
  %88 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i64 0, i32 1, i32 1
  store double %55, double* %88, align 8, !tbaa !16
  %89 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %51, i64 1
  %90 = icmp eq %"struct.std::pair"* %89, %27
  br i1 %90, label %92, label %50, !llvm.loop !19

91:                                               ; preds = %44
  invoke void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_(%"struct.std::pair"* %26, %"struct.std::pair"* %27)
          to label %92 unwind label %176

92:                                               ; preds = %86, %91, %34, %48
  br i1 %29, label %93, label %234

93:                                               ; preds = %92
  %94 = load double*, double** %7, align 8, !tbaa !8
  %95 = load double*, double** %28, align 8, !tbaa !8
  %96 = and i64 %12, 4294967295
  %97 = icmp ult i64 %96, 3
  br i1 %97, label %98, label %115

98:                                               ; preds = %138, %115, %93
  %99 = phi i64 [ 0, %115 ], [ 0, %93 ], [ %137, %138 ]
  %100 = sub nsw i64 %12, %99
  %101 = add nsw i64 %99, 1
  %102 = and i64 %100, 1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 %99, i32 1, i32 0
  %106 = load double, double* %105, align 8, !tbaa !20
  %107 = getelementptr inbounds double, double* %94, i64 %99
  store double %106, double* %107, align 8, !tbaa !14
  %108 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 %99, i32 1, i32 1
  %109 = load double, double* %108, align 8, !tbaa !21
  %110 = getelementptr inbounds double, double* %95, i64 %99
  store double %109, double* %110, align 8, !tbaa !14
  %111 = add nuw nsw i64 %99, 1
  br label %112

112:                                              ; preds = %104, %98
  %113 = phi i64 [ %99, %98 ], [ %111, %104 ]
  %114 = icmp eq i64 %96, %101
  br i1 %114, label %173, label %181

115:                                              ; preds = %93
  %116 = getelementptr double, double* %94, i64 %96
  %117 = getelementptr double, double* %95, i64 %96
  %118 = getelementptr %"struct.std::pair", %"struct.std::pair"* %26, i64 0, i32 1, i32 0
  %119 = getelementptr %"struct.std::pair", %"struct.std::pair"* %26, i64 %96
  %120 = icmp ult double* %94, %117
  %121 = icmp ult double* %95, %116
  %122 = and i1 %120, %121
  %123 = getelementptr %"struct.std::pair", %"struct.std::pair"* %119, i64 0, i32 0
  %124 = icmp ult double* %94, %123
  %125 = icmp ult double* %118, %116
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = getelementptr %"struct.std::pair", %"struct.std::pair"* %119, i64 0, i32 0
  %129 = icmp ult double* %95, %128
  %130 = icmp ult double* %118, %117
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  br i1 %132, label %98, label %133

133:                                              ; preds = %115
  %134 = and i64 %12, 1
  %135 = icmp eq i64 %134, 0
  %136 = select i1 %135, i64 2, i64 %134
  %137 = sub nsw i64 %96, %136
  br label %138

138:                                              ; preds = %138, %133
  %139 = phi i64 [ 0, %133 ], [ %149, %138 ]
  %140 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 %139, i32 1, i32 0
  %141 = bitcast double* %140 to <6 x double>*
  %142 = load <6 x double>, <6 x double>* %141, align 8, !tbaa !14
  %143 = shufflevector <6 x double> %142, <6 x double> poison, <2 x i32> <i32 0, i32 3>
  %144 = shufflevector <6 x double> %142, <6 x double> poison, <2 x i32> <i32 1, i32 4>
  %145 = getelementptr inbounds double, double* %94, i64 %139
  %146 = bitcast double* %145 to <2 x double>*
  store <2 x double> %143, <2 x double>* %146, align 8, !tbaa !14, !alias.scope !22, !noalias !25
  %147 = getelementptr inbounds double, double* %95, i64 %139
  %148 = bitcast double* %147 to <2 x double>*
  store <2 x double> %144, <2 x double>* %148, align 8, !tbaa !14, !alias.scope !28, !noalias !29
  %149 = add nuw i64 %139, 2
  %150 = icmp eq i64 %149, %137
  br i1 %150, label %98, label %138, !llvm.loop !30

151:                                              ; preds = %30, %151
  %152 = phi double* [ %33, %30 ], [ %163, %151 ]
  %153 = phi double* [ %32, %30 ], [ %167, %151 ]
  %154 = phi i64 [ 0, %30 ], [ %171, %151 ]
  %155 = getelementptr inbounds double, double* %153, i64 %154
  %156 = load double, double* %155, align 8, !tbaa !14
  %157 = fsub double %156, %1
  %158 = getelementptr inbounds double, double* %152, i64 %154
  %159 = load double, double* %158, align 8, !tbaa !14
  %160 = fsub double %159, %0
  %161 = tail call double @atan2(double %157, double %160) #16
  %162 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 %154, i32 0
  store double %161, double* %162, align 8, !tbaa !10
  %163 = load double*, double** %7, align 8, !tbaa !8
  %164 = getelementptr inbounds double, double* %163, i64 %154
  %165 = load double, double* %164, align 8, !tbaa !14
  %166 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 %154, i32 1, i32 0
  store double %165, double* %166, align 8, !tbaa !20
  %167 = load double*, double** %28, align 8, !tbaa !8
  %168 = getelementptr inbounds double, double* %167, i64 %154
  %169 = load double, double* %168, align 8, !tbaa !14
  %170 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 %154, i32 1, i32 1
  store double %169, double* %170, align 8, !tbaa !21
  %171 = add nuw nsw i64 %154, 1
  %172 = icmp eq i64 %171, %31
  br i1 %172, label %34, label %151, !llvm.loop !32

173:                                              ; preds = %181, %112
  br i1 %29, label %174, label %234

174:                                              ; preds = %173
  %175 = and i64 %12, 4294967295
  br label %205

176:                                              ; preds = %91, %46, %36
  %177 = landingpad { i8*, i32 }
          cleanup
  %178 = icmp eq %"struct.std::pair"* %26, null
  br i1 %178, label %303, label %179

179:                                              ; preds = %176
  %180 = bitcast %"struct.std::pair"* %26 to i8*
  tail call void @_ZdlPv(i8* nonnull %180) #16
  br label %303

181:                                              ; preds = %112, %181
  %182 = phi i64 [ %196, %181 ], [ %113, %112 ]
  %183 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 %182, i32 1, i32 0
  %184 = load double, double* %183, align 8, !tbaa !20
  %185 = getelementptr inbounds double, double* %94, i64 %182
  store double %184, double* %185, align 8, !tbaa !14
  %186 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 %182, i32 1, i32 1
  %187 = load double, double* %186, align 8, !tbaa !21
  %188 = getelementptr inbounds double, double* %95, i64 %182
  store double %187, double* %188, align 8, !tbaa !14
  %189 = add nuw nsw i64 %182, 1
  %190 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 %189, i32 1, i32 0
  %191 = load double, double* %190, align 8, !tbaa !20
  %192 = getelementptr inbounds double, double* %94, i64 %189
  store double %191, double* %192, align 8, !tbaa !14
  %193 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %26, i64 %189, i32 1, i32 1
  %194 = load double, double* %193, align 8, !tbaa !21
  %195 = getelementptr inbounds double, double* %95, i64 %189
  store double %194, double* %195, align 8, !tbaa !14
  %196 = add nuw nsw i64 %182, 2
  %197 = icmp eq i64 %196, %96
  br i1 %197, label %173, label %181, !llvm.loop !33

198:                                              ; preds = %205
  br i1 %29, label %199, label %234

199:                                              ; preds = %198
  %200 = and i64 %12, 4294967295
  %201 = insertelement <2 x double> poison, double %0, i32 0
  %202 = insertelement <2 x double> %201, double %1, i32 1
  %203 = insertelement <2 x double> poison, double %0, i32 0
  %204 = insertelement <2 x double> %203, double %1, i32 1
  br label %252

205:                                              ; preds = %174, %205
  %206 = phi i64 [ 0, %174 ], [ %214, %205 ]
  %207 = phi double [ 0.000000e+00, %174 ], [ %232, %205 ]
  %208 = load double*, double** %7, align 8, !tbaa !8
  %209 = getelementptr inbounds double, double* %208, i64 %206
  %210 = load double, double* %209, align 8, !tbaa !14
  %211 = load double*, double** %28, align 8, !tbaa !8
  %212 = getelementptr inbounds double, double* %211, i64 %206
  %213 = load double, double* %212, align 8, !tbaa !14
  %214 = add nuw nsw i64 %206, 1
  %215 = icmp eq i64 %214, %175
  %216 = and i64 %214, 4294967295
  %217 = select i1 %215, i64 0, i64 %216
  %218 = getelementptr inbounds double, double* %208, i64 %217
  %219 = load double, double* %218, align 8, !tbaa !14
  %220 = getelementptr inbounds double, double* %211, i64 %217
  %221 = load double, double* %220, align 8, !tbaa !14
  %222 = insertelement <2 x double> poison, double %210, i32 0
  %223 = insertelement <2 x double> %222, double %213, i32 1
  %224 = insertelement <2 x double> poison, double %219, i32 0
  %225 = insertelement <2 x double> %224, double %221, i32 1
  %226 = fsub <2 x double> %223, %225
  %227 = fmul <2 x double> %226, %226
  %228 = shufflevector <2 x double> %227, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %229 = fadd <2 x double> %227, %228
  %230 = extractelement <2 x double> %229, i32 0
  %231 = tail call double @sqrt(double %230) #16
  %232 = fadd double %207, %231
  %233 = icmp eq i64 %214, %175
  br i1 %233, label %198, label %205, !llvm.loop !34

234:                                              ; preds = %252, %92, %173, %198
  %235 = phi double [ %232, %198 ], [ 0.000000e+00, %173 ], [ 0.000000e+00, %92 ], [ %232, %252 ]
  %236 = phi double [ 0.000000e+00, %198 ], [ 0.000000e+00, %173 ], [ 0.000000e+00, %92 ], [ %301, %252 ]
  %237 = sitofp i32 %13 to double
  %238 = fdiv double 0x400921FB54442D18, %237
  %239 = tail call double @tan(double %238) #16
  %240 = icmp eq %"struct.std::pair"* %26, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %234
  %242 = bitcast %"struct.std::pair"* %26 to i8*
  tail call void @_ZdlPv(i8* nonnull %242) #16
  br label %243

243:                                              ; preds = %234, %241
  %244 = lshr exact i64 %11, 1
  %245 = trunc i64 %244 to i32
  %246 = and i32 %245, -4
  %247 = sitofp i32 %246 to double
  %248 = fmul double %239, %247
  %249 = fmul double %235, %235
  %250 = fdiv double %249, %236
  %251 = fdiv double %248, %250
  ret double %251

252:                                              ; preds = %199, %252
  %253 = phi i64 [ 0, %199 ], [ %261, %252 ]
  %254 = phi double [ 0.000000e+00, %199 ], [ %301, %252 ]
  %255 = load double*, double** %7, align 8, !tbaa !8
  %256 = getelementptr inbounds double, double* %255, i64 %253
  %257 = load double, double* %256, align 8, !tbaa !14
  %258 = load double*, double** %28, align 8, !tbaa !8
  %259 = getelementptr inbounds double, double* %258, i64 %253
  %260 = load double, double* %259, align 8, !tbaa !14
  %261 = add nuw nsw i64 %253, 1
  %262 = icmp eq i64 %261, %200
  %263 = and i64 %261, 4294967295
  %264 = select i1 %262, i64 0, i64 %263
  %265 = getelementptr inbounds double, double* %255, i64 %264
  %266 = load double, double* %265, align 8, !tbaa !14
  %267 = getelementptr inbounds double, double* %258, i64 %264
  %268 = load double, double* %267, align 8, !tbaa !14
  %269 = insertelement <2 x double> poison, double %257, i32 0
  %270 = insertelement <2 x double> %269, double %260, i32 1
  %271 = fsub <2 x double> %202, %270
  %272 = fmul <2 x double> %271, %271
  %273 = shufflevector <2 x double> %272, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %274 = fadd <2 x double> %272, %273
  %275 = extractelement <2 x double> %274, i32 0
  %276 = tail call double @sqrt(double %275) #16
  %277 = insertelement <2 x double> poison, double %266, i32 0
  %278 = insertelement <2 x double> %277, double %268, i32 1
  %279 = fsub <2 x double> %270, %278
  %280 = fmul <2 x double> %279, %279
  %281 = shufflevector <2 x double> %280, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %282 = fadd <2 x double> %280, %281
  %283 = extractelement <2 x double> %282, i32 0
  %284 = tail call double @sqrt(double %283) #16
  %285 = fsub <2 x double> %278, %204
  %286 = fmul <2 x double> %285, %285
  %287 = shufflevector <2 x double> %286, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %288 = fadd <2 x double> %286, %287
  %289 = extractelement <2 x double> %288, i32 0
  %290 = tail call double @sqrt(double %289) #16
  %291 = fadd double %276, %284
  %292 = fadd double %291, %290
  %293 = fmul double %292, 5.000000e-01
  %294 = fsub double %293, %276
  %295 = fmul double %293, %294
  %296 = fsub double %293, %284
  %297 = fmul double %296, %295
  %298 = fsub double %293, %290
  %299 = fmul double %298, %297
  %300 = tail call double @sqrt(double %299) #16
  %301 = fadd double %254, %300
  %302 = icmp eq i64 %261, %200
  br i1 %302, label %234, label %252, !llvm.loop !35

303:                                              ; preds = %179, %176
  resume { i8*, i32 } %177
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local double @atan2(double, double) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local double @tan(double) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local double @acos(double) local_unnamed_addr #4

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #7 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca double, align 8
  %3 = alloca %"class.std::vector", align 8
  %4 = alloca %"class.std::vector", align 8
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !36
  %6 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %5)
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #16
  %8 = bitcast double* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %10 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSi10_M_extractIdEERSiRT_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %9, double* nonnull align 8 dereferenceable(8) %2)
  %11 = load i32, i32* %1, align 4, !tbaa !37
  %12 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %11)
  %13 = bitcast %"class.std::basic_ostream"* %12 to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !39
  %15 = getelementptr i8, i8* %14, i64 -24
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::basic_ostream"* %12 to i8*
  %19 = add nsw i64 %17, 240
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to %"class.std::ctype"**
  %22 = load %"class.std::ctype"*, %"class.std::ctype"** %21, align 8, !tbaa !41
  %23 = icmp eq %"class.std::ctype"* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %0
  call void @_ZSt16__throw_bad_castv() #17
  unreachable

25:                                               ; preds = %0
  %26 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %22, i64 0, i32 8
  %27 = load i8, i8* %26, align 8, !tbaa !44
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %22, i64 0, i32 9, i64 10
  %31 = load i8, i8* %30, align 1, !tbaa !46
  br label %38

32:                                               ; preds = %25
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %22)
  %33 = bitcast %"class.std::ctype"* %22 to i8 (%"class.std::ctype"*, i8)***
  %34 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %33, align 8, !tbaa !39
  %35 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %34, i64 6
  %36 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %35, align 8
  %37 = call signext i8 %36(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %22, i8 signext 10)
  br label %38

38:                                               ; preds = %29, %32
  %39 = phi i8 [ %31, %29 ], [ %37, %32 ]
  %40 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %12, i8 signext %39)
  %41 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %40)
  %42 = load i32, i32* %1, align 4, !tbaa !37
  %43 = sext i32 %42 to i64
  %44 = icmp slt i32 %42, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0)) #17
  unreachable

46:                                               ; preds = %38
  %47 = icmp eq i32 %42, 0
  br i1 %47, label %136, label %48

48:                                               ; preds = %46
  %49 = shl nuw nsw i64 %43, 3
  %50 = call noalias nonnull i8* @_Znwm(i64 %49) #18
  %51 = bitcast i8* %50 to double*
  %52 = getelementptr double, double* %51, i64 %43
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 %49, i1 false)
  %53 = load i32, i32* %1, align 4, !tbaa !37
  %54 = sext i32 %53 to i64
  %55 = icmp slt i32 %53, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %48
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0)) #17
          to label %57 unwind label %79

57:                                               ; preds = %56
  unreachable

58:                                               ; preds = %48
  %59 = icmp eq i32 %53, 0
  br i1 %59, label %136, label %60

60:                                               ; preds = %58
  %61 = shl nuw nsw i64 %54, 3
  %62 = invoke noalias nonnull i8* @_Znwm(i64 %61) #18
          to label %63 unwind label %79

63:                                               ; preds = %60
  %64 = bitcast i8* %62 to double*
  %65 = getelementptr double, double* %64, i64 %54
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 %61, i1 false)
  %66 = load i32, i32* %1, align 4, !tbaa !37
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %81, label %136

68:                                               ; preds = %88
  %69 = icmp sgt i32 %90, 0
  br i1 %69, label %70, label %136

70:                                               ; preds = %68
  %71 = sitofp i32 %90 to double
  %72 = zext i32 %90 to i64
  %73 = insertelement <2 x double> poison, double %71, i32 0
  %74 = shufflevector <2 x double> %73, <2 x double> poison, <2 x i32> zeroinitializer
  %75 = and i64 %72, 1
  %76 = icmp eq i32 %90, 1
  br i1 %76, label %95, label %77

77:                                               ; preds = %70
  %78 = and i64 %72, 4294967294
  br label %112

79:                                               ; preds = %56, %60
  %80 = landingpad { i8*, i32 }
          cleanup
  br label %815

81:                                               ; preds = %63, %88
  %82 = phi i64 [ %89, %88 ], [ 0, %63 ]
  %83 = getelementptr inbounds double, double* %51, i64 %82
  %84 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSi10_M_extractIdEERSiRT_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, double* nonnull align 8 dereferenceable(8) %83)
          to label %85 unwind label %93

85:                                               ; preds = %81
  %86 = getelementptr inbounds double, double* %64, i64 %82
  %87 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSi10_M_extractIdEERSiRT_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %84, double* nonnull align 8 dereferenceable(8) %86)
          to label %88 unwind label %93

88:                                               ; preds = %85
  %89 = add nuw nsw i64 %82, 1
  %90 = load i32, i32* %1, align 4, !tbaa !37
  %91 = sext i32 %90 to i64
  %92 = icmp slt i64 %89, %91
  br i1 %92, label %81, label %68, !llvm.loop !47

93:                                               ; preds = %81, %85
  %94 = landingpad { i8*, i32 }
          cleanup
  br label %806

95:                                               ; preds = %112, %70
  %96 = phi <2 x double> [ undef, %70 ], [ %132, %112 ]
  %97 = phi i64 [ 0, %70 ], [ %133, %112 ]
  %98 = phi <2 x double> [ zeroinitializer, %70 ], [ %132, %112 ]
  %99 = icmp eq i64 %75, 0
  br i1 %99, label %109, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds double, double* %64, i64 %97
  %102 = load double, double* %101, align 8, !tbaa !14
  %103 = insertelement <2 x double> poison, double %102, i32 0
  %104 = getelementptr inbounds double, double* %51, i64 %97
  %105 = load double, double* %104, align 8, !tbaa !14
  %106 = insertelement <2 x double> %103, double %105, i32 1
  %107 = fdiv <2 x double> %106, %74
  %108 = fadd <2 x double> %98, %107
  br label %109

109:                                              ; preds = %95, %100
  %110 = phi <2 x double> [ %96, %95 ], [ %108, %100 ]
  %111 = fadd <2 x double> %110, <double 1.000000e-05, double 1.000000e-05>
  br i1 %69, label %155, label %136

112:                                              ; preds = %112, %77
  %113 = phi i64 [ 0, %77 ], [ %133, %112 ]
  %114 = phi <2 x double> [ zeroinitializer, %77 ], [ %132, %112 ]
  %115 = phi i64 [ %78, %77 ], [ %134, %112 ]
  %116 = getelementptr inbounds double, double* %51, i64 %113
  %117 = load double, double* %116, align 8, !tbaa !14
  %118 = getelementptr inbounds double, double* %64, i64 %113
  %119 = load double, double* %118, align 8, !tbaa !14
  %120 = insertelement <2 x double> poison, double %119, i32 0
  %121 = insertelement <2 x double> %120, double %117, i32 1
  %122 = fdiv <2 x double> %121, %74
  %123 = fadd <2 x double> %114, %122
  %124 = or i64 %113, 1
  %125 = getelementptr inbounds double, double* %51, i64 %124
  %126 = load double, double* %125, align 8, !tbaa !14
  %127 = getelementptr inbounds double, double* %64, i64 %124
  %128 = load double, double* %127, align 8, !tbaa !14
  %129 = insertelement <2 x double> poison, double %128, i32 0
  %130 = insertelement <2 x double> %129, double %126, i32 1
  %131 = fdiv <2 x double> %130, %74
  %132 = fadd <2 x double> %123, %131
  %133 = add nuw nsw i64 %113, 2
  %134 = add i64 %115, -2
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %95, label %112, !llvm.loop !48

136:                                              ; preds = %155, %109, %63, %58, %46, %68
  %137 = phi i32 [ %90, %109 ], [ %66, %63 ], [ 0, %58 ], [ 0, %46 ], [ %90, %68 ], [ %170, %155 ]
  %138 = phi double* [ %65, %109 ], [ %65, %63 ], [ null, %58 ], [ null, %46 ], [ %65, %68 ], [ %65, %155 ]
  %139 = phi double* [ %52, %109 ], [ %52, %63 ], [ %52, %58 ], [ null, %46 ], [ %52, %68 ], [ %52, %155 ]
  %140 = phi double* [ %51, %109 ], [ %51, %63 ], [ %51, %58 ], [ null, %46 ], [ %51, %68 ], [ %51, %155 ]
  %141 = phi double* [ %64, %109 ], [ %64, %63 ], [ null, %58 ], [ null, %46 ], [ %64, %68 ], [ %64, %155 ]
  %142 = phi double [ 0.000000e+00, %109 ], [ 0.000000e+00, %63 ], [ 0.000000e+00, %58 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %68 ], [ %173, %155 ]
  %143 = phi <2 x double> [ %111, %109 ], [ <double 1.000000e-05, double 1.000000e-05>, %63 ], [ <double 1.000000e-05, double 1.000000e-05>, %58 ], [ <double 1.000000e-05, double 1.000000e-05>, %46 ], [ <double 1.000000e-05, double 1.000000e-05>, %68 ], [ %111, %155 ]
  %144 = sext i32 %137 to i64
  %145 = icmp slt i32 %137, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %136
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0)) #17
          to label %147 unwind label %566

147:                                              ; preds = %146
  unreachable

148:                                              ; preds = %136
  %149 = icmp eq i32 %137, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %148
  %151 = getelementptr double, double* null, i64 %144
  br label %187

152:                                              ; preds = %148
  %153 = shl nuw nsw i64 %144, 3
  %154 = invoke noalias nonnull i8* @_Znwm(i64 %153) #18
          to label %177 unwind label %566

155:                                              ; preds = %109, %155
  %156 = phi i64 [ %174, %155 ], [ 0, %109 ]
  %157 = phi double [ %173, %155 ], [ 0.000000e+00, %109 ]
  %158 = getelementptr inbounds double, double* %51, i64 %156
  %159 = load double, double* %158, align 8, !tbaa !14
  %160 = getelementptr inbounds double, double* %64, i64 %156
  %161 = load double, double* %160, align 8, !tbaa !14
  %162 = insertelement <2 x double> poison, double %161, i32 0
  %163 = insertelement <2 x double> %162, double %159, i32 1
  %164 = fsub <2 x double> %111, %163
  %165 = fmul <2 x double> %164, %164
  %166 = shufflevector <2 x double> %165, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %167 = fadd <2 x double> %166, %165
  %168 = extractelement <2 x double> %167, i64 0
  %169 = call double @sqrt(double %168) #16
  %170 = load i32, i32* %1, align 4, !tbaa !37
  %171 = sitofp i32 %170 to double
  %172 = fdiv double %169, %171
  %173 = fadd double %157, %172
  %174 = add nuw nsw i64 %156, 1
  %175 = sext i32 %170 to i64
  %176 = icmp slt i64 %174, %175
  br i1 %176, label %155, label %136, !llvm.loop !49

177:                                              ; preds = %152
  %178 = bitcast i8* %154 to double*
  %179 = getelementptr double, double* %178, i64 %144
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 0, i64 %153, i1 false)
  %180 = load i32, i32* %1, align 4, !tbaa !37
  %181 = sext i32 %180 to i64
  %182 = icmp slt i32 %180, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %177
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0)) #17
          to label %184 unwind label %568

184:                                              ; preds = %183
  unreachable

185:                                              ; preds = %177
  %186 = icmp eq i32 %180, 0
  br i1 %186, label %187, label %193

187:                                              ; preds = %150, %185
  %188 = phi double* [ %151, %150 ], [ %179, %185 ]
  %189 = phi double* [ null, %150 ], [ %178, %185 ]
  %190 = phi double* [ null, %150 ], [ %179, %185 ]
  %191 = phi i64 [ 0, %150 ], [ %181, %185 ]
  %192 = getelementptr double, double* null, i64 %191
  br label %199

193:                                              ; preds = %185
  %194 = shl nuw nsw i64 %181, 3
  %195 = invoke noalias nonnull i8* @_Znwm(i64 %194) #18
          to label %196 unwind label %568

196:                                              ; preds = %193
  %197 = bitcast i8* %195 to double*
  %198 = getelementptr double, double* %197, i64 %181
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 0, i64 %194, i1 false)
  br label %199

199:                                              ; preds = %196, %187
  %200 = phi double* [ %179, %196 ], [ %188, %187 ]
  %201 = phi double* [ %179, %196 ], [ %190, %187 ]
  %202 = phi double* [ %178, %196 ], [ %189, %187 ]
  %203 = phi double* [ %198, %196 ], [ %192, %187 ]
  %204 = phi double* [ %197, %196 ], [ null, %187 ]
  %205 = phi double* [ %198, %196 ], [ null, %187 ]
  %206 = fmul double %142, 3.000000e-01
  %207 = extractelement <2 x double> %143, i32 1
  %208 = fsub double %207, %206
  %209 = fadd double %207, %206
  %210 = fadd double %209, 1.000000e-05
  %211 = extractelement <2 x double> %143, i32 0
  %212 = fsub double %211, %206
  %213 = fadd double %211, %206
  %214 = fadd double %213, 1.000000e-05
  %215 = fmul double %142, 1.000000e-02
  %216 = fmul double %142, 3.000000e+00
  %217 = ptrtoint double* %139 to i64
  %218 = ptrtoint double* %140 to i64
  %219 = sub i64 %217, %218
  %220 = ashr exact i64 %219, 3
  %221 = icmp eq i64 %219, 0
  %222 = icmp ugt i64 %220, 1152921504606846975
  %223 = bitcast double* %140 to i8*
  %224 = ptrtoint double* %138 to i64
  %225 = ptrtoint double* %141 to i64
  %226 = sub i64 %224, %225
  %227 = ashr exact i64 %226, 3
  %228 = icmp eq i64 %226, 0
  %229 = icmp ugt i64 %227, 1152921504606846975
  %230 = bitcast double* %141 to i8*
  %231 = bitcast %"class.std::vector"* %3 to i8*
  %232 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %233 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %234 = bitcast %"class.std::vector"* %4 to i8*
  %235 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %236 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %237 = fcmp ole double %208, %210
  %238 = fcmp ole double %212, %214
  %239 = select i1 %237, i1 %238, i1 false
  %240 = fcmp olt double %215, %216
  %241 = select i1 %239, i1 %240, i1 false
  br i1 %241, label %242, label %559

242:                                              ; preds = %199
  %243 = getelementptr inbounds double, double* null, i64 %220
  %244 = getelementptr inbounds double, double* null, i64 %227
  %245 = bitcast %"class.std::vector"* %3 to i8**
  %246 = bitcast %"class.std::vector"* %3 to i64*
  %247 = bitcast %"class.std::vector"* %4 to i8**
  %248 = bitcast %"class.std::vector"* %4 to i64*
  br label %249

249:                                              ; preds = %242, %544
  %250 = phi double [ %435, %544 ], [ undef, %242 ]
  %251 = phi double [ %434, %544 ], [ undef, %242 ]
  %252 = phi double [ %433, %544 ], [ 0.000000e+00, %242 ]
  %253 = phi double [ %545, %544 ], [ %208, %242 ]
  %254 = phi double* [ %432, %544 ], [ %203, %242 ]
  %255 = phi double* [ %431, %544 ], [ %205, %242 ]
  %256 = phi double* [ %430, %544 ], [ %204, %242 ]
  %257 = phi double* [ %429, %544 ], [ %200, %242 ]
  %258 = phi double* [ %428, %544 ], [ %201, %242 ]
  %259 = phi double* [ %427, %544 ], [ %202, %242 ]
  %260 = insertelement <2 x double> poison, double %253, i32 0
  br label %261

261:                                              ; preds = %541, %249
  %262 = phi double [ %250, %249 ], [ %435, %541 ]
  %263 = phi double [ %251, %249 ], [ %434, %541 ]
  %264 = phi double [ %252, %249 ], [ %433, %541 ]
  %265 = phi double [ %212, %249 ], [ %542, %541 ]
  %266 = phi double* [ %254, %249 ], [ %432, %541 ]
  %267 = phi double* [ %255, %249 ], [ %431, %541 ]
  %268 = phi double* [ %256, %249 ], [ %430, %541 ]
  %269 = phi double* [ %257, %249 ], [ %429, %541 ]
  %270 = phi double* [ %258, %249 ], [ %428, %541 ]
  %271 = phi double* [ %259, %249 ], [ %427, %541 ]
  %272 = insertelement <2 x double> %260, double %265, i32 1
  br label %273

273:                                              ; preds = %443, %261
  %274 = phi double [ %262, %261 ], [ %435, %443 ]
  %275 = phi double [ %263, %261 ], [ %434, %443 ]
  %276 = phi double [ %264, %261 ], [ %433, %443 ]
  %277 = phi double [ %215, %261 ], [ %444, %443 ]
  %278 = phi double* [ %266, %261 ], [ %432, %443 ]
  %279 = phi double* [ %267, %261 ], [ %431, %443 ]
  %280 = phi double* [ %268, %261 ], [ %430, %443 ]
  %281 = phi double* [ %269, %261 ], [ %429, %443 ]
  %282 = phi double* [ %270, %261 ], [ %428, %443 ]
  %283 = phi double* [ %271, %261 ], [ %427, %443 ]
  br i1 %221, label %289, label %284

284:                                              ; preds = %273
  br i1 %222, label %570, label %285

285:                                              ; preds = %284
  %286 = invoke noalias nonnull i8* @_Znwm(i64 %219) #18
          to label %287 unwind label %547

287:                                              ; preds = %285
  %288 = bitcast i8* %286 to double*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %286, i8* align 8 %223, i64 %219, i1 false) #16
  br label %289

289:                                              ; preds = %287, %273
  %290 = phi double* [ %288, %287 ], [ null, %273 ]
  %291 = getelementptr inbounds double, double* %290, i64 %220
  br i1 %228, label %297, label %292

292:                                              ; preds = %289
  br i1 %229, label %572, label %293

293:                                              ; preds = %292
  %294 = invoke noalias nonnull i8* @_Znwm(i64 %226) #18
          to label %295 unwind label %549

295:                                              ; preds = %293
  %296 = bitcast i8* %294 to double*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %294, i8* align 8 %230, i64 %226, i1 false) #16
  br label %297

297:                                              ; preds = %295, %289
  %298 = phi double* [ %296, %295 ], [ null, %289 ]
  %299 = getelementptr inbounds double, double* %298, i64 %227
  %300 = fmul double %277, %277
  %301 = load i32, i32* %1, align 4, !tbaa !37
  %302 = icmp sgt i32 %301, 0
  br i1 %302, label %446, label %303

303:                                              ; preds = %522, %297
  %304 = ptrtoint double* %291 to i64
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %231, i8 0, i64 24, i1 false) #16
  br i1 %221, label %305, label %306

305:                                              ; preds = %303
  store i64 0, i64* %246, align 8
  store double* %243, double** %233, align 8, !tbaa !50
  br label %313

306:                                              ; preds = %303
  br i1 %222, label %574, label %307

307:                                              ; preds = %306
  %308 = invoke noalias nonnull i8* @_Znwm(i64 %219) #18
          to label %309 unwind label %551

309:                                              ; preds = %307
  %310 = bitcast i8* %308 to double*
  store i8* %308, i8** %245, align 8, !tbaa !8
  %311 = getelementptr inbounds double, double* %310, i64 %220
  store double* %311, double** %233, align 8, !tbaa !50
  %312 = bitcast double* %290 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %308, i8* align 8 %312, i64 %219, i1 false) #16
  br label %313

313:                                              ; preds = %305, %309
  %314 = phi double* [ %243, %305 ], [ %311, %309 ]
  %315 = phi double* [ null, %305 ], [ %310, %309 ]
  store double* %314, double** %232, align 8, !tbaa !3
  %316 = ptrtoint double* %299 to i64
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %234, i8 0, i64 24, i1 false) #16
  br i1 %228, label %317, label %318

317:                                              ; preds = %313
  store i64 0, i64* %248, align 8
  store double* %244, double** %236, align 8, !tbaa !50
  br label %325

318:                                              ; preds = %313
  br i1 %229, label %580, label %319

319:                                              ; preds = %318
  %320 = invoke noalias nonnull i8* @_Znwm(i64 %226) #18
          to label %321 unwind label %554

321:                                              ; preds = %319
  %322 = bitcast i8* %320 to double*
  store i8* %320, i8** %247, align 8, !tbaa !8
  %323 = getelementptr inbounds double, double* %322, i64 %227
  store double* %323, double** %236, align 8, !tbaa !50
  %324 = bitcast double* %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %320, i8* align 8 %324, i64 %226, i1 false) #16
  br label %325

325:                                              ; preds = %317, %321
  %326 = phi double* [ %244, %317 ], [ %323, %321 ]
  %327 = phi double* [ null, %317 ], [ %322, %321 ]
  store double* %326, double** %235, align 8, !tbaa !3
  %328 = invoke double @_Z5scoreddSt6vectorIdSaIdEES1_(double %253, double %265, %"class.std::vector"* nonnull %3, %"class.std::vector"* nonnull %4)
          to label %329 unwind label %556

329:                                              ; preds = %325
  %330 = icmp eq double* %327, null
  br i1 %330, label %333, label %331

331:                                              ; preds = %329
  %332 = bitcast double* %327 to i8*
  call void @_ZdlPv(i8* nonnull %332) #16
  br label %333

333:                                              ; preds = %331, %329
  %334 = icmp eq double* %315, null
  br i1 %334, label %337, label %335

335:                                              ; preds = %333
  %336 = bitcast double* %315 to i8*
  call void @_ZdlPv(i8* nonnull %336) #16
  br label %337

337:                                              ; preds = %335, %333
  %338 = fcmp ogt double %328, %276
  br i1 %338, label %339, label %426

339:                                              ; preds = %337
  %340 = ptrtoint double* %281 to i64
  %341 = ptrtoint double* %283 to i64
  %342 = sub i64 %340, %341
  %343 = ashr exact i64 %342, 3
  %344 = icmp ugt i64 %220, %343
  br i1 %344, label %367, label %345

345:                                              ; preds = %339
  %346 = ptrtoint double* %282 to i64
  %347 = sub i64 %346, %341
  %348 = ashr exact i64 %347, 3
  %349 = icmp ult i64 %348, %220
  br i1 %349, label %354, label %350

350:                                              ; preds = %345
  br i1 %221, label %379, label %351

351:                                              ; preds = %350
  %352 = bitcast double* %283 to i8*
  %353 = bitcast double* %290 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %352, i8* align 8 %353, i64 %219, i1 false) #16
  br label %379

354:                                              ; preds = %345
  %355 = icmp eq i64 %347, 0
  br i1 %355, label %359, label %356

356:                                              ; preds = %354
  %357 = bitcast double* %283 to i8*
  %358 = bitcast double* %290 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %357, i8* align 8 %358, i64 %347, i1 false) #16
  br label %359

359:                                              ; preds = %356, %354
  %360 = getelementptr inbounds double, double* %290, i64 %348
  %361 = ptrtoint double* %360 to i64
  %362 = sub i64 %304, %361
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %379, label %364

364:                                              ; preds = %359
  %365 = bitcast double* %282 to i8*
  %366 = bitcast double* %360 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %365, i8* align 8 %366, i64 %362, i1 false) #16
  br label %379

367:                                              ; preds = %339
  %368 = invoke noalias nonnull i8* @_Znwm(i64 %219) #18
          to label %369 unwind label %551

369:                                              ; preds = %367
  %370 = bitcast i8* %368 to double*
  br i1 %221, label %373, label %371

371:                                              ; preds = %369
  %372 = bitcast double* %290 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %368, i8* align 8 %372, i64 %219, i1 false) #16
  br label %373

373:                                              ; preds = %371, %369
  %374 = icmp eq double* %283, null
  br i1 %374, label %377, label %375

375:                                              ; preds = %373
  %376 = bitcast double* %283 to i8*
  call void @_ZdlPv(i8* nonnull %376) #16
  br label %377

377:                                              ; preds = %375, %373
  %378 = getelementptr inbounds double, double* %370, i64 %220
  br label %379

379:                                              ; preds = %377, %364, %359, %351, %350
  %380 = phi double* [ %370, %377 ], [ %283, %359 ], [ %283, %364 ], [ %283, %350 ], [ %283, %351 ]
  %381 = phi double* [ %378, %377 ], [ %281, %359 ], [ %281, %364 ], [ %281, %350 ], [ %281, %351 ]
  %382 = getelementptr inbounds double, double* %380, i64 %220
  %383 = ptrtoint double* %278 to i64
  %384 = ptrtoint double* %280 to i64
  %385 = sub i64 %383, %384
  %386 = ashr exact i64 %385, 3
  %387 = icmp ugt i64 %227, %386
  br i1 %387, label %410, label %388

388:                                              ; preds = %379
  %389 = ptrtoint double* %279 to i64
  %390 = sub i64 %389, %384
  %391 = ashr exact i64 %390, 3
  %392 = icmp ult i64 %391, %227
  br i1 %392, label %397, label %393

393:                                              ; preds = %388
  br i1 %228, label %422, label %394

394:                                              ; preds = %393
  %395 = bitcast double* %280 to i8*
  %396 = bitcast double* %298 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %395, i8* align 8 %396, i64 %226, i1 false) #16
  br label %422

397:                                              ; preds = %388
  %398 = icmp eq i64 %390, 0
  br i1 %398, label %402, label %399

399:                                              ; preds = %397
  %400 = bitcast double* %280 to i8*
  %401 = bitcast double* %298 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %400, i8* align 8 %401, i64 %390, i1 false) #16
  br label %402

402:                                              ; preds = %399, %397
  %403 = getelementptr inbounds double, double* %298, i64 %391
  %404 = ptrtoint double* %403 to i64
  %405 = sub i64 %316, %404
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %422, label %407

407:                                              ; preds = %402
  %408 = bitcast double* %279 to i8*
  %409 = bitcast double* %403 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %408, i8* align 8 %409, i64 %405, i1 false) #16
  br label %422

410:                                              ; preds = %379
  %411 = invoke noalias nonnull i8* @_Znwm(i64 %226) #18
          to label %412 unwind label %551

412:                                              ; preds = %410
  %413 = bitcast i8* %411 to double*
  br i1 %228, label %416, label %414

414:                                              ; preds = %412
  %415 = bitcast double* %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %411, i8* align 8 %415, i64 %226, i1 false) #16
  br label %416

416:                                              ; preds = %414, %412
  %417 = icmp eq double* %280, null
  br i1 %417, label %420, label %418

418:                                              ; preds = %416
  %419 = bitcast double* %280 to i8*
  call void @_ZdlPv(i8* nonnull %419) #16
  br label %420

420:                                              ; preds = %418, %416
  %421 = getelementptr inbounds double, double* %413, i64 %227
  br label %422

422:                                              ; preds = %420, %407, %402, %394, %393
  %423 = phi double* [ %413, %420 ], [ %280, %402 ], [ %280, %407 ], [ %280, %393 ], [ %280, %394 ]
  %424 = phi double* [ %421, %420 ], [ %278, %402 ], [ %278, %407 ], [ %278, %393 ], [ %278, %394 ]
  %425 = getelementptr inbounds double, double* %423, i64 %227
  br label %426

426:                                              ; preds = %422, %337
  %427 = phi double* [ %380, %422 ], [ %283, %337 ]
  %428 = phi double* [ %382, %422 ], [ %282, %337 ]
  %429 = phi double* [ %381, %422 ], [ %281, %337 ]
  %430 = phi double* [ %423, %422 ], [ %280, %337 ]
  %431 = phi double* [ %425, %422 ], [ %279, %337 ]
  %432 = phi double* [ %424, %422 ], [ %278, %337 ]
  %433 = phi double [ %328, %422 ], [ %276, %337 ]
  %434 = phi double [ %265, %422 ], [ %275, %337 ]
  %435 = phi double [ %253, %422 ], [ %274, %337 ]
  %436 = icmp eq double* %298, null
  br i1 %436, label %439, label %437

437:                                              ; preds = %426
  %438 = bitcast double* %298 to i8*
  call void @_ZdlPv(i8* nonnull %438) #16
  br label %439

439:                                              ; preds = %437, %426
  %440 = icmp eq double* %290, null
  br i1 %440, label %443, label %441

441:                                              ; preds = %439
  %442 = bitcast double* %290 to i8*
  call void @_ZdlPv(i8* nonnull %442) #16
  br label %443

443:                                              ; preds = %441, %439
  %444 = fadd double %215, %277
  %445 = fcmp olt double %444, %216
  br i1 %445, label %273, label %541, !llvm.loop !51

446:                                              ; preds = %297, %522
  %447 = phi i64 [ %537, %522 ], [ 0, %297 ]
  %448 = getelementptr inbounds double, double* %290, i64 %447
  %449 = load double, double* %448, align 8, !tbaa !14
  %450 = getelementptr inbounds double, double* %298, i64 %447
  %451 = load double, double* %450, align 8, !tbaa !14
  %452 = insertelement <2 x double> poison, double %449, i32 0
  %453 = insertelement <2 x double> %452, double %451, i32 1
  %454 = fsub <2 x double> %272, %453
  %455 = fmul <2 x double> %454, %454
  %456 = shufflevector <2 x double> %455, <2 x double> poison, <2 x i32> <i32 1, i32 undef>
  %457 = fadd <2 x double> %455, %456
  %458 = extractelement <2 x double> %457, i32 0
  %459 = call double @sqrt(double %458) #16
  %460 = load double, double* %2, align 8, !tbaa !14
  %461 = fadd double %277, %460
  %462 = fcmp ult double %459, %461
  br i1 %462, label %468, label %463

463:                                              ; preds = %446
  %464 = load double, double* %448, align 8, !tbaa !14
  %465 = fsub double %253, %464
  %466 = load double, double* %450, align 8, !tbaa !14
  %467 = fsub double %265, %466
  br label %522

468:                                              ; preds = %446
  %469 = fsub double %277, %460
  %470 = fcmp ugt double %459, %469
  br i1 %470, label %476, label %471

471:                                              ; preds = %468
  %472 = load double, double* %448, align 8, !tbaa !14
  %473 = fsub double %472, %253
  %474 = load double, double* %450, align 8, !tbaa !14
  %475 = fsub double %474, %265
  br label %522

476:                                              ; preds = %468
  %477 = fcmp ogt double %459, %277
  %478 = fmul double %459, %459
  %479 = fmul double %460, %460
  %480 = fadd double %478, %479
  %481 = fsub double %480, %300
  br i1 %477, label %502, label %482

482:                                              ; preds = %476
  %483 = fneg double %481
  %484 = fmul double %459, 2.000000e+00
  %485 = fmul double %484, %460
  %486 = fdiv double %483, %485
  %487 = call double @acos(double %486) #16
  %488 = load double, double* %448, align 8, !tbaa !14
  %489 = fsub double %488, %253
  %490 = load double, double* %450, align 8, !tbaa !14
  %491 = fsub double %490, %265
  %492 = call double @cos(double %487) #16
  %493 = fmul double %489, %492
  %494 = call double @sin(double %487) #16
  %495 = fmul double %491, %494
  %496 = fsub double %493, %495
  %497 = call double @sin(double %487) #16
  %498 = fmul double %489, %497
  %499 = call double @cos(double %487) #16
  %500 = fmul double %491, %499
  %501 = fadd double %498, %500
  br label %522

502:                                              ; preds = %476
  %503 = fmul double %459, 2.000000e+00
  %504 = fmul double %503, %460
  %505 = fdiv double %481, %504
  %506 = call double @acos(double %505) #16
  %507 = fneg double %506
  %508 = load double, double* %448, align 8, !tbaa !14
  %509 = fsub double %253, %508
  %510 = load double, double* %450, align 8, !tbaa !14
  %511 = fsub double %265, %510
  %512 = call double @cos(double %506)
  %513 = fmul double %509, %512
  %514 = call double @sin(double %507) #16
  %515 = fmul double %511, %514
  %516 = fsub double %513, %515
  %517 = call double @sin(double %507) #16
  %518 = fmul double %509, %517
  %519 = call double @cos(double %506)
  %520 = fmul double %511, %519
  %521 = fadd double %518, %520
  br label %522

522:                                              ; preds = %502, %482, %471, %463
  %523 = phi double [ %465, %463 ], [ %473, %471 ], [ %516, %502 ], [ %496, %482 ]
  %524 = phi double [ %467, %463 ], [ %475, %471 ], [ %521, %502 ], [ %501, %482 ]
  %525 = fmul double %523, %523
  %526 = fmul double %524, %524
  %527 = fadd double %525, %526
  %528 = call double @sqrt(double %527) #16
  %529 = load double, double* %2, align 8, !tbaa !14
  %530 = fdiv double %529, %528
  %531 = fmul double %523, %530
  %532 = fmul double %524, %530
  %533 = load double, double* %448, align 8, !tbaa !14
  %534 = fadd double %533, %531
  store double %534, double* %448, align 8, !tbaa !14
  %535 = load double, double* %450, align 8, !tbaa !14
  %536 = fadd double %532, %535
  store double %536, double* %450, align 8, !tbaa !14
  %537 = add nuw nsw i64 %447, 1
  %538 = load i32, i32* %1, align 4, !tbaa !37
  %539 = sext i32 %538 to i64
  %540 = icmp slt i64 %537, %539
  br i1 %540, label %446, label %303, !llvm.loop !52

541:                                              ; preds = %443
  %542 = fadd double %206, %265
  %543 = fcmp ugt double %542, %214
  br i1 %543, label %544, label %261, !llvm.loop !53

544:                                              ; preds = %541
  %545 = fadd double %206, %253
  %546 = fcmp ugt double %545, %210
  br i1 %546, label %559, label %249, !llvm.loop !54

547:                                              ; preds = %285
  %548 = landingpad { i8*, i32 }
          cleanup
  br label %790

549:                                              ; preds = %293
  %550 = landingpad { i8*, i32 }
          cleanup
  br label %599

551:                                              ; preds = %410, %367, %307
  %552 = phi double* [ %283, %307 ], [ %283, %367 ], [ %380, %410 ]
  %553 = landingpad { i8*, i32 }
          cleanup
  br label %593

554:                                              ; preds = %319
  %555 = landingpad { i8*, i32 }
          cleanup
  br label %588

556:                                              ; preds = %325
  %557 = landingpad { i8*, i32 }
          cleanup
  %558 = icmp eq double* %327, null
  br i1 %558, label %588, label %586

559:                                              ; preds = %544, %199
  %560 = phi double* [ %202, %199 ], [ %427, %544 ]
  %561 = phi double* [ %204, %199 ], [ %430, %544 ]
  %562 = phi double [ undef, %199 ], [ %434, %544 ]
  %563 = phi double [ undef, %199 ], [ %435, %544 ]
  %564 = load i32, i32* %1, align 4, !tbaa !37
  %565 = icmp sgt i32 %564, 0
  br i1 %565, label %658, label %605

566:                                              ; preds = %152, %146
  %567 = landingpad { i8*, i32 }
          cleanup
  br label %803

568:                                              ; preds = %183, %193
  %569 = landingpad { i8*, i32 }
          cleanup
  br label %799

570:                                              ; preds = %284
  invoke void @_ZSt17__throw_bad_allocv() #17
          to label %571 unwind label %576

571:                                              ; preds = %570
  unreachable

572:                                              ; preds = %292
  invoke void @_ZSt17__throw_bad_allocv() #17
          to label %573 unwind label %578

573:                                              ; preds = %572
  unreachable

574:                                              ; preds = %306
  invoke void @_ZSt17__throw_bad_allocv() #17
          to label %575 unwind label %582

575:                                              ; preds = %574
  unreachable

576:                                              ; preds = %570
  %577 = landingpad { i8*, i32 }
          cleanup
  br label %790

578:                                              ; preds = %572
  %579 = landingpad { i8*, i32 }
          cleanup
  br label %599

580:                                              ; preds = %318
  invoke void @_ZSt17__throw_bad_allocv() #17
          to label %581 unwind label %584

581:                                              ; preds = %580
  unreachable

582:                                              ; preds = %574
  %583 = landingpad { i8*, i32 }
          cleanup
  br label %593

584:                                              ; preds = %580
  %585 = landingpad { i8*, i32 }
          cleanup
  br label %588

586:                                              ; preds = %556
  %587 = bitcast double* %327 to i8*
  call void @_ZdlPv(i8* nonnull %587) #16
  br label %588

588:                                              ; preds = %554, %584, %586, %556
  %589 = phi { i8*, i32 } [ %557, %556 ], [ %557, %586 ], [ %555, %554 ], [ %585, %584 ]
  %590 = icmp eq double* %315, null
  br i1 %590, label %593, label %591

591:                                              ; preds = %588
  %592 = bitcast double* %315 to i8*
  call void @_ZdlPv(i8* nonnull %592) #16
  br label %593

593:                                              ; preds = %551, %582, %591, %588
  %594 = phi double* [ %283, %588 ], [ %283, %591 ], [ %552, %551 ], [ %283, %582 ]
  %595 = phi { i8*, i32 } [ %589, %588 ], [ %589, %591 ], [ %553, %551 ], [ %583, %582 ]
  %596 = icmp eq double* %298, null
  br i1 %596, label %599, label %597

597:                                              ; preds = %593
  %598 = bitcast double* %298 to i8*
  call void @_ZdlPv(i8* nonnull %598) #16
  br label %599

599:                                              ; preds = %549, %578, %597, %593
  %600 = phi double* [ %594, %593 ], [ %594, %597 ], [ %283, %549 ], [ %283, %578 ]
  %601 = phi { i8*, i32 } [ %595, %593 ], [ %595, %597 ], [ %550, %549 ], [ %579, %578 ]
  %602 = icmp eq double* %290, null
  br i1 %602, label %790, label %603

603:                                              ; preds = %599
  %604 = bitcast double* %290 to i8*
  call void @_ZdlPv(i8* nonnull %604) #16
  br label %790

605:                                              ; preds = %658, %559
  %606 = phi i32 [ %564, %559 ], [ %667, %658 ]
  %607 = sext i32 %606 to i64
  %608 = icmp slt i32 %606, 0
  br i1 %608, label %609, label %611

609:                                              ; preds = %605
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0)) #17
          to label %610 unwind label %691

610:                                              ; preds = %609
  unreachable

611:                                              ; preds = %605
  %612 = icmp eq i32 %606, 0
  br i1 %612, label %709, label %613

613:                                              ; preds = %611
  %614 = shl nuw nsw i64 %607, 4
  %615 = invoke noalias nonnull i8* @_Znwm(i64 %614) #18
          to label %616 unwind label %691

616:                                              ; preds = %613
  %617 = bitcast i8* %615 to %"struct.std::pair.13"*
  %618 = add nsw i64 %607, -1
  %619 = and i64 %607, 7
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %631, label %621

621:                                              ; preds = %616, %621
  %622 = phi %"struct.std::pair.13"* [ %628, %621 ], [ %617, %616 ]
  %623 = phi i64 [ %627, %621 ], [ %607, %616 ]
  %624 = phi i64 [ %629, %621 ], [ %619, %616 ]
  %625 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %622, i64 0, i32 0
  store double 0.000000e+00, double* %625, align 8, !tbaa !55
  %626 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %622, i64 0, i32 1
  store i32 0, i32* %626, align 8, !tbaa !57
  %627 = add i64 %623, -1
  %628 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %622, i64 1
  %629 = add i64 %624, -1
  %630 = icmp eq i64 %629, 0
  br i1 %630, label %631, label %621, !llvm.loop !58

631:                                              ; preds = %621, %616
  %632 = phi %"struct.std::pair.13"* [ undef, %616 ], [ %628, %621 ]
  %633 = phi %"struct.std::pair.13"* [ %617, %616 ], [ %628, %621 ]
  %634 = phi i64 [ %607, %616 ], [ %627, %621 ]
  %635 = icmp ult i64 %618, 7
  br i1 %635, label %670, label %636

636:                                              ; preds = %631, %636
  %637 = phi %"struct.std::pair.13"* [ %656, %636 ], [ %633, %631 ]
  %638 = phi i64 [ %655, %636 ], [ %634, %631 ]
  %639 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 0, i32 0
  store double 0.000000e+00, double* %639, align 8, !tbaa !55
  %640 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 0, i32 1
  store i32 0, i32* %640, align 8, !tbaa !57
  %641 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 1, i32 0
  store double 0.000000e+00, double* %641, align 8, !tbaa !55
  %642 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 1, i32 1
  store i32 0, i32* %642, align 8, !tbaa !57
  %643 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 2, i32 0
  store double 0.000000e+00, double* %643, align 8, !tbaa !55
  %644 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 2, i32 1
  store i32 0, i32* %644, align 8, !tbaa !57
  %645 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 3, i32 0
  store double 0.000000e+00, double* %645, align 8, !tbaa !55
  %646 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 3, i32 1
  store i32 0, i32* %646, align 8, !tbaa !57
  %647 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 4, i32 0
  store double 0.000000e+00, double* %647, align 8, !tbaa !55
  %648 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 4, i32 1
  store i32 0, i32* %648, align 8, !tbaa !57
  %649 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 5, i32 0
  store double 0.000000e+00, double* %649, align 8, !tbaa !55
  %650 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 5, i32 1
  store i32 0, i32* %650, align 8, !tbaa !57
  %651 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 6, i32 0
  store double 0.000000e+00, double* %651, align 8, !tbaa !55
  %652 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 6, i32 1
  store i32 0, i32* %652, align 8, !tbaa !57
  %653 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 7, i32 0
  store double 0.000000e+00, double* %653, align 8, !tbaa !55
  %654 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 7, i32 1
  store i32 0, i32* %654, align 8, !tbaa !57
  %655 = add i64 %638, -8
  %656 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %637, i64 8
  %657 = icmp eq i64 %655, 0
  br i1 %657, label %670, label %636, !llvm.loop !60

658:                                              ; preds = %559, %658
  %659 = phi i64 [ %660, %658 ], [ 0, %559 ]
  %660 = add nuw nsw i64 %659, 1
  %661 = getelementptr inbounds double, double* %560, i64 %659
  %662 = load double, double* %661, align 8, !tbaa !14
  %663 = getelementptr inbounds double, double* %561, i64 %659
  %664 = load double, double* %663, align 8, !tbaa !14
  %665 = trunc i64 %660 to i32
  %666 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 %665, double %662, double %664)
  %667 = load i32, i32* %1, align 4, !tbaa !37
  %668 = sext i32 %667 to i64
  %669 = icmp slt i64 %660, %668
  br i1 %669, label %658, label %605, !llvm.loop !61

670:                                              ; preds = %636, %631
  %671 = phi %"struct.std::pair.13"* [ %632, %631 ], [ %656, %636 ]
  %672 = load i32, i32* %1, align 4, !tbaa !37
  %673 = icmp sgt i32 %672, 0
  br i1 %673, label %693, label %674

674:                                              ; preds = %693, %670
  %675 = phi i32 [ %672, %670 ], [ %706, %693 ]
  %676 = icmp eq %"struct.std::pair.13"* %671, %617
  br i1 %676, label %688, label %677

677:                                              ; preds = %674
  %678 = ptrtoint %"struct.std::pair.13"* %671 to i64
  %679 = ptrtoint i8* %615 to i64
  %680 = sub i64 %678, %679
  %681 = ashr exact i64 %680, 4
  %682 = call i64 @llvm.ctlz.i64(i64 %681, i1 true) #16, !range !9
  %683 = shl nuw nsw i64 %682, 1
  %684 = xor i64 %683, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_(%"struct.std::pair.13"* nonnull %617, %"struct.std::pair.13"* nonnull %671, i64 %684)
          to label %685 unwind label %781

685:                                              ; preds = %677
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_T0_(%"struct.std::pair.13"* nonnull %617, %"struct.std::pair.13"* nonnull %671)
          to label %686 unwind label %781

686:                                              ; preds = %685
  %687 = load i32, i32* %1, align 4, !tbaa !37
  br label %688

688:                                              ; preds = %686, %674
  %689 = phi i32 [ %687, %686 ], [ %675, %674 ]
  %690 = icmp sgt i32 %689, 0
  br i1 %690, label %741, label %709

691:                                              ; preds = %613, %609
  %692 = landingpad { i8*, i32 }
          cleanup
  br label %790

693:                                              ; preds = %670, %693
  %694 = phi i64 [ %703, %693 ], [ 0, %670 ]
  %695 = getelementptr inbounds double, double* %561, i64 %694
  %696 = load double, double* %695, align 8, !tbaa !14
  %697 = fsub double %696, %562
  %698 = getelementptr inbounds double, double* %560, i64 %694
  %699 = load double, double* %698, align 8, !tbaa !14
  %700 = fsub double %699, %563
  %701 = call double @atan2(double %697, double %700) #16
  %702 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %617, i64 %694, i32 0
  store double %701, double* %702, align 8, !tbaa !55
  %703 = add nuw nsw i64 %694, 1
  %704 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %617, i64 %694, i32 1
  %705 = trunc i64 %703 to i32
  store i32 %705, i32* %704, align 8, !tbaa !57
  %706 = load i32, i32* %1, align 4, !tbaa !37
  %707 = sext i32 %706 to i64
  %708 = icmp slt i64 %703, %707
  br i1 %708, label %693, label %674, !llvm.loop !62

709:                                              ; preds = %757, %611, %688
  %710 = phi %"struct.std::pair.13"* [ %617, %688 ], [ null, %611 ], [ %617, %757 ]
  %711 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !39
  %712 = getelementptr i8, i8* %711, i64 -24
  %713 = bitcast i8* %712 to i64*
  %714 = load i64, i64* %713, align 8
  %715 = add nsw i64 %714, 240
  %716 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %715
  %717 = bitcast i8* %716 to %"class.std::ctype"**
  %718 = load %"class.std::ctype"*, %"class.std::ctype"** %717, align 8, !tbaa !41
  %719 = icmp eq %"class.std::ctype"* %718, null
  br i1 %719, label %720, label %722

720:                                              ; preds = %709
  invoke void @_ZSt16__throw_bad_castv() #17
          to label %721 unwind label %783

721:                                              ; preds = %720
  unreachable

722:                                              ; preds = %709
  %723 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %718, i64 0, i32 8
  %724 = load i8, i8* %723, align 8, !tbaa !44
  %725 = icmp eq i8 %724, 0
  br i1 %725, label %729, label %726

726:                                              ; preds = %722
  %727 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %718, i64 0, i32 9, i64 10
  %728 = load i8, i8* %727, align 1, !tbaa !46
  br label %736

729:                                              ; preds = %722
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %718)
          to label %730 unwind label %783

730:                                              ; preds = %729
  %731 = bitcast %"class.std::ctype"* %718 to i8 (%"class.std::ctype"*, i8)***
  %732 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %731, align 8, !tbaa !39
  %733 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %732, i64 6
  %734 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %733, align 8
  %735 = invoke signext i8 %734(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %718, i8 signext 10)
          to label %736 unwind label %783

736:                                              ; preds = %730, %726
  %737 = phi i8 [ %728, %726 ], [ %735, %730 ]
  %738 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 signext %737)
          to label %739 unwind label %783

739:                                              ; preds = %736
  %740 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %738)
          to label %762 unwind label %783

741:                                              ; preds = %688, %757
  %742 = phi i64 [ %759, %757 ], [ 0, %688 ]
  %743 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %617, i64 %742, i32 1
  %744 = load i32, i32* %743, align 8, !tbaa !57
  %745 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %744)
          to label %746 unwind label %755

746:                                              ; preds = %741
  %747 = load i32, i32* %1, align 4, !tbaa !37
  %748 = add nsw i32 %747, -1
  %749 = sext i32 %748 to i64
  %750 = icmp slt i64 %742, %749
  br i1 %750, label %751, label %757

751:                                              ; preds = %746
  %752 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1)
          to label %753 unwind label %755

753:                                              ; preds = %751
  %754 = load i32, i32* %1, align 4, !tbaa !37
  br label %757

755:                                              ; preds = %741, %751
  %756 = landingpad { i8*, i32 }
          cleanup
  br label %786

757:                                              ; preds = %753, %746
  %758 = phi i32 [ %754, %753 ], [ %747, %746 ]
  %759 = add nuw nsw i64 %742, 1
  %760 = sext i32 %758 to i64
  %761 = icmp slt i64 %759, %760
  br i1 %761, label %741, label %709, !llvm.loop !63

762:                                              ; preds = %739
  %763 = icmp eq %"struct.std::pair.13"* %710, null
  br i1 %763, label %766, label %764

764:                                              ; preds = %762
  %765 = bitcast %"struct.std::pair.13"* %710 to i8*
  call void @_ZdlPv(i8* nonnull %765) #16
  br label %766

766:                                              ; preds = %762, %764
  %767 = icmp eq double* %561, null
  br i1 %767, label %770, label %768

768:                                              ; preds = %766
  %769 = bitcast double* %561 to i8*
  call void @_ZdlPv(i8* nonnull %769) #16
  br label %770

770:                                              ; preds = %766, %768
  %771 = icmp eq double* %560, null
  br i1 %771, label %774, label %772

772:                                              ; preds = %770
  %773 = bitcast double* %560 to i8*
  call void @_ZdlPv(i8* nonnull %773) #16
  br label %774

774:                                              ; preds = %770, %772
  %775 = icmp eq double* %141, null
  br i1 %775, label %777, label %776

776:                                              ; preds = %774
  call void @_ZdlPv(i8* nonnull %230) #16
  br label %777

777:                                              ; preds = %774, %776
  %778 = icmp eq double* %140, null
  br i1 %778, label %780, label %779

779:                                              ; preds = %777
  call void @_ZdlPv(i8* nonnull %223) #16
  br label %780

780:                                              ; preds = %777, %779
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #16
  ret i32 0

781:                                              ; preds = %677, %685
  %782 = landingpad { i8*, i32 }
          cleanup
  br label %786

783:                                              ; preds = %720, %729, %730, %736, %739
  %784 = landingpad { i8*, i32 }
          cleanup
  %785 = icmp eq %"struct.std::pair.13"* %710, null
  br i1 %785, label %790, label %786

786:                                              ; preds = %781, %755, %783
  %787 = phi %"struct.std::pair.13"* [ %617, %755 ], [ %710, %783 ], [ %617, %781 ]
  %788 = phi { i8*, i32 } [ %756, %755 ], [ %784, %783 ], [ %782, %781 ]
  %789 = bitcast %"struct.std::pair.13"* %787 to i8*
  call void @_ZdlPv(i8* nonnull %789) #16
  br label %790

790:                                              ; preds = %547, %576, %691, %783, %786, %599, %603
  %791 = phi double* [ %600, %599 ], [ %600, %603 ], [ %560, %786 ], [ %560, %783 ], [ %560, %691 ], [ %283, %547 ], [ %283, %576 ]
  %792 = phi double* [ %280, %599 ], [ %280, %603 ], [ %561, %786 ], [ %561, %783 ], [ %561, %691 ], [ %280, %547 ], [ %280, %576 ]
  %793 = phi { i8*, i32 } [ %601, %599 ], [ %601, %603 ], [ %788, %786 ], [ %784, %783 ], [ %692, %691 ], [ %548, %547 ], [ %577, %576 ]
  %794 = icmp eq double* %792, null
  br i1 %794, label %797, label %795

795:                                              ; preds = %790
  %796 = bitcast double* %792 to i8*
  call void @_ZdlPv(i8* nonnull %796) #16
  br label %797

797:                                              ; preds = %795, %790
  %798 = icmp eq double* %791, null
  br i1 %798, label %803, label %799

799:                                              ; preds = %568, %797
  %800 = phi { i8*, i32 } [ %569, %568 ], [ %793, %797 ]
  %801 = phi double* [ %178, %568 ], [ %791, %797 ]
  %802 = bitcast double* %801 to i8*
  call void @_ZdlPv(i8* nonnull %802) #16
  br label %803

803:                                              ; preds = %566, %797, %799
  %804 = phi { i8*, i32 } [ %567, %566 ], [ %793, %797 ], [ %800, %799 ]
  %805 = icmp eq double* %141, null
  br i1 %805, label %811, label %806

806:                                              ; preds = %93, %803
  %807 = phi { i8*, i32 } [ %94, %93 ], [ %804, %803 ]
  %808 = phi double* [ %51, %93 ], [ %140, %803 ]
  %809 = phi double* [ %64, %93 ], [ %141, %803 ]
  %810 = bitcast double* %809 to i8*
  call void @_ZdlPv(i8* nonnull %810) #16
  br label %811

811:                                              ; preds = %806, %803
  %812 = phi double* [ %140, %803 ], [ %808, %806 ]
  %813 = phi { i8*, i32 } [ %804, %803 ], [ %807, %806 ]
  %814 = icmp eq double* %812, null
  br i1 %814, label %819, label %815

815:                                              ; preds = %79, %811
  %816 = phi { i8*, i32 } [ %80, %79 ], [ %813, %811 ]
  %817 = phi double* [ %51, %79 ], [ %812, %811 ]
  %818 = bitcast double* %817 to i8*
  call void @_ZdlPv(i8* nonnull %818) #16
  br label %819

819:                                              ; preds = %815, %811
  %820 = phi { i8*, i32 } [ %816, %815 ], [ %813, %811 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #16
  resume { i8*, i32 } %820
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local double @cos(double) local_unnamed_addr #4

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local double @sin(double) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #9

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #12

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(%"struct.std::pair"* %0, %"struct.std::pair"* %1, i64 %2) local_unnamed_addr #6 comdat {
  %4 = alloca %"struct.std::pair", align 8
  %5 = ptrtoint %"struct.std::pair"* %0 to i64
  %6 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 1
  %7 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1, i32 1
  %10 = ptrtoint %"struct.std::pair"* %1 to i64
  %11 = sub i64 %10, %5
  %12 = icmp sgt i64 %11, 384
  br i1 %12, label %13, label %114

13:                                               ; preds = %3, %109
  %14 = phi i64 [ %112, %109 ], [ %11, %3 ]
  %15 = phi i64 [ %110, %109 ], [ %2, %3 ]
  %16 = phi %"struct.std::pair"* [ %53, %109 ], [ %1, %3 ]
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %18, label %44

18:                                               ; preds = %13
  %19 = udiv exact i64 %14, 24
  %20 = add nsw i64 %19, -2
  %21 = lshr i64 %20, 1
  br label %22

22:                                               ; preds = %22, %18
  %23 = phi i64 [ %21, %18 ], [ %26, %22 ]
  %24 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %23
  tail call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_less_iterEEvT_T0_SD_T1_T2_(%"struct.std::pair"* %0, i64 %23, i64 %19, %"struct.std::pair"* nonnull byval(%"struct.std::pair") align 8 %24)
  %25 = icmp eq i64 %23, 0
  %26 = add nsw i64 %23, -1
  br i1 %25, label %27, label %22, !llvm.loop !64

27:                                               ; preds = %22
  %28 = bitcast %"struct.std::pair"* %4 to i8*
  %29 = icmp sgt i64 %14, 24
  br i1 %29, label %30, label %114

30:                                               ; preds = %27, %30
  %31 = phi %"struct.std::pair"* [ %32, %30 ], [ %16, %27 ]
  %32 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %31, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28)
  %33 = bitcast %"struct.std::pair"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %28, i8* noundef nonnull align 8 dereferenceable(24) %33, i64 24, i1 false)
  %34 = load double, double* %7, align 8, !tbaa !14
  %35 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %32, i64 0, i32 0
  store double %34, double* %35, align 8, !tbaa !10
  %36 = load double, double* %8, align 8, !tbaa !14
  %37 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %31, i64 -1, i32 1, i32 0
  store double %36, double* %37, align 8, !tbaa !15
  %38 = load double, double* %9, align 8, !tbaa !14
  %39 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %31, i64 -1, i32 1, i32 1
  store double %38, double* %39, align 8, !tbaa !16
  %40 = ptrtoint %"struct.std::pair"* %32 to i64
  %41 = sub i64 %40, %5
  %42 = sdiv exact i64 %41, 24
  tail call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_less_iterEEvT_T0_SD_T1_T2_(%"struct.std::pair"* %0, i64 0, i64 %42, %"struct.std::pair"* nonnull byval(%"struct.std::pair") align 8 %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28)
  %43 = icmp sgt i64 %41, 24
  br i1 %43, label %30, label %114, !llvm.loop !65

44:                                               ; preds = %13
  %45 = udiv i64 %14, 48
  %46 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %45
  %47 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %16, i64 -1
  tail call void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_SC_SC_T0_(%"struct.std::pair"* %0, %"struct.std::pair"* nonnull %6, %"struct.std::pair"* %46, %"struct.std::pair"* nonnull %47)
  br label %48

48:                                               ; preds = %98, %44
  %49 = phi %"struct.std::pair"* [ %6, %44 ], [ %108, %98 ]
  %50 = phi %"struct.std::pair"* [ %16, %44 ], [ %77, %98 ]
  %51 = load double, double* %7, align 8, !tbaa !10
  br label %52

52:                                               ; preds = %71, %48
  %53 = phi %"struct.std::pair"* [ %49, %48 ], [ %72, %71 ]
  %54 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %53, i64 0, i32 0
  %55 = load double, double* %54, align 8, !tbaa !10
  %56 = fcmp olt double %55, %51
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = fcmp olt double %51, %55
  br i1 %58, label %73, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %53, i64 0, i32 1, i32 0
  %61 = load double, double* %60, align 8, !tbaa !15
  %62 = load double, double* %8, align 8, !tbaa !15
  %63 = fcmp olt double %61, %62
  br i1 %63, label %71, label %64

64:                                               ; preds = %59
  %65 = fcmp olt double %62, %61
  br i1 %65, label %73, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %53, i64 0, i32 1, i32 1
  %68 = load double, double* %67, align 8, !tbaa !16
  %69 = load double, double* %9, align 8, !tbaa !16
  %70 = fcmp olt double %68, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %66, %59, %52
  %72 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %53, i64 1
  br label %52, !llvm.loop !66

73:                                               ; preds = %66, %64, %57
  %74 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %53, i64 0, i32 0
  br label %75

75:                                               ; preds = %95, %73
  %76 = phi %"struct.std::pair"* [ %50, %73 ], [ %77, %95 ]
  %77 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %76, i64 -1
  %78 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %77, i64 0, i32 0
  %79 = load double, double* %78, align 8, !tbaa !10
  %80 = fcmp olt double %51, %79
  br i1 %80, label %95, label %81

81:                                               ; preds = %75
  %82 = fcmp olt double %79, %51
  br i1 %82, label %96, label %83

83:                                               ; preds = %81
  %84 = load double, double* %8, align 8, !tbaa !15
  %85 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %76, i64 -1, i32 1, i32 0
  %86 = load double, double* %85, align 8, !tbaa !15
  %87 = fcmp olt double %84, %86
  br i1 %87, label %95, label %88

88:                                               ; preds = %83
  %89 = fcmp olt double %86, %84
  br i1 %89, label %96, label %90

90:                                               ; preds = %88
  %91 = load double, double* %9, align 8, !tbaa !16
  %92 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %76, i64 -1, i32 1, i32 1
  %93 = load double, double* %92, align 8, !tbaa !16
  %94 = fcmp olt double %91, %93
  br i1 %94, label %95, label %96

95:                                               ; preds = %90, %83, %75
  br label %75, !llvm.loop !67

96:                                               ; preds = %90, %88, %81
  %97 = icmp ult %"struct.std::pair"* %53, %77
  br i1 %97, label %98, label %109

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %77, i64 0, i32 0
  store double %79, double* %74, align 8, !tbaa !14
  store double %55, double* %99, align 8, !tbaa !14
  %100 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %53, i64 0, i32 1, i32 0
  %101 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %76, i64 -1, i32 1, i32 0
  %102 = load double, double* %100, align 8, !tbaa !14
  %103 = load double, double* %101, align 8, !tbaa !14
  store double %103, double* %100, align 8, !tbaa !14
  store double %102, double* %101, align 8, !tbaa !14
  %104 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %53, i64 0, i32 1, i32 1
  %105 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %76, i64 -1, i32 1, i32 1
  %106 = load double, double* %104, align 8, !tbaa !14
  %107 = load double, double* %105, align 8, !tbaa !14
  store double %107, double* %104, align 8, !tbaa !14
  store double %106, double* %105, align 8, !tbaa !14
  %108 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %53, i64 1
  br label %48, !llvm.loop !68

109:                                              ; preds = %96
  %110 = add nsw i64 %15, -1
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(%"struct.std::pair"* %53, %"struct.std::pair"* %16, i64 %110)
  %111 = ptrtoint %"struct.std::pair"* %53 to i64
  %112 = sub i64 %111, %5
  %113 = icmp sgt i64 %112, 384
  br i1 %113, label %13, label %114, !llvm.loop !69

114:                                              ; preds = %109, %30, %3, %27
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_less_iterEEvT_T0_SD_T1_T2_(%"struct.std::pair"* %0, i64 %1, i64 %2, %"struct.std::pair"* byval(%"struct.std::pair") align 8 %3) local_unnamed_addr #6 comdat {
  %5 = add nsw i64 %2, -1
  %6 = sdiv i64 %5, 2
  %7 = icmp sgt i64 %6, %1
  br i1 %7, label %8, label %45

8:                                                ; preds = %4, %35
  %9 = phi i64 [ %37, %35 ], [ %1, %4 ]
  %10 = shl i64 %9, 1
  %11 = add i64 %10, 2
  %12 = or i64 %10, 1
  %13 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %11, i32 0
  %14 = load double, double* %13, align 8, !tbaa !10
  %15 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %12, i32 0
  %16 = load double, double* %15, align 8, !tbaa !10
  %17 = fcmp olt double %14, %16
  br i1 %17, label %34, label %18

18:                                               ; preds = %8
  %19 = fcmp olt double %16, %14
  br i1 %19, label %35, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %11, i32 1, i32 0
  %22 = load double, double* %21, align 8, !tbaa !15
  %23 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %12, i32 1, i32 0
  %24 = load double, double* %23, align 8, !tbaa !15
  %25 = fcmp olt double %22, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %20
  %27 = fcmp olt double %24, %22
  br i1 %27, label %35, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %11, i32 1, i32 1
  %30 = load double, double* %29, align 8, !tbaa !16
  %31 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %12, i32 1, i32 1
  %32 = load double, double* %31, align 8, !tbaa !16
  %33 = fcmp olt double %30, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %20, %8, %28
  br label %35

35:                                               ; preds = %26, %18, %28, %34
  %36 = phi double [ %16, %34 ], [ %14, %28 ], [ %14, %18 ], [ %14, %26 ]
  %37 = phi i64 [ %12, %34 ], [ %11, %28 ], [ %11, %18 ], [ %11, %26 ]
  %38 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %9, i32 0
  store double %36, double* %38, align 8, !tbaa !10
  %39 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %37, i32 1, i32 0
  %40 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %9, i32 1, i32 0
  %41 = bitcast double* %39 to <2 x double>*
  %42 = load <2 x double>, <2 x double>* %41, align 8, !tbaa !14
  %43 = bitcast double* %40 to <2 x double>*
  store <2 x double> %42, <2 x double>* %43, align 8, !tbaa !14
  %44 = icmp slt i64 %37, %6
  br i1 %44, label %8, label %45, !llvm.loop !70

45:                                               ; preds = %35, %4
  %46 = phi i64 [ %1, %4 ], [ %37, %35 ]
  %47 = and i64 %2, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %45
  %50 = add nsw i64 %2, -2
  %51 = sdiv i64 %50, 2
  %52 = icmp eq i64 %46, %51
  br i1 %52, label %53, label %65

53:                                               ; preds = %49
  %54 = shl i64 %46, 1
  %55 = or i64 %54, 1
  %56 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %55, i32 0
  %57 = load double, double* %56, align 8, !tbaa !14
  %58 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %46, i32 0
  store double %57, double* %58, align 8, !tbaa !10
  %59 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %55, i32 1, i32 0
  %60 = load double, double* %59, align 8, !tbaa !14
  %61 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %46, i32 1, i32 0
  store double %60, double* %61, align 8, !tbaa !15
  %62 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %55, i32 1, i32 1
  %63 = load double, double* %62, align 8, !tbaa !14
  %64 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %46, i32 1, i32 1
  store double %63, double* %64, align 8, !tbaa !16
  br label %65

65:                                               ; preds = %53, %49, %45
  %66 = phi i64 [ %55, %53 ], [ %46, %49 ], [ %46, %45 ]
  %67 = bitcast %"struct.std::pair"* %3 to <2 x double>*
  %68 = load <2 x double>, <2 x double>* %67, align 8
  %69 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1, i32 1
  %70 = load double, double* %69, align 8
  %71 = icmp sgt i64 %66, %1
  br i1 %71, label %72, label %105

72:                                               ; preds = %65
  %73 = extractelement <2 x double> %68, i32 0
  %74 = extractelement <2 x double> %68, i32 1
  br label %75

75:                                               ; preds = %72, %97
  %76 = phi i64 [ %78, %97 ], [ %66, %72 ]
  %77 = add nsw i64 %76, -1
  %78 = sdiv i64 %77, 2
  %79 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %78, i32 0
  %80 = load double, double* %79, align 8, !tbaa !10
  %81 = fcmp olt double %80, %73
  br i1 %81, label %82, label %85

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %78, i32 1, i32 0
  %84 = load double, double* %83, align 8, !tbaa !14
  br label %97

85:                                               ; preds = %75
  %86 = fcmp olt double %73, %80
  br i1 %86, label %105, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %78, i32 1, i32 0
  %89 = load double, double* %88, align 8, !tbaa !15
  %90 = fcmp olt double %89, %74
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = fcmp olt double %74, %89
  br i1 %92, label %105, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %78, i32 1, i32 1
  %95 = load double, double* %94, align 8, !tbaa !16
  %96 = fcmp olt double %95, %70
  br i1 %96, label %97, label %105

97:                                               ; preds = %93, %87, %82
  %98 = phi double [ %84, %82 ], [ %89, %87 ], [ %89, %93 ]
  %99 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %76, i32 0
  store double %80, double* %99, align 8, !tbaa !10
  %100 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %76, i32 1, i32 0
  store double %98, double* %100, align 8, !tbaa !15
  %101 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %78, i32 1, i32 1
  %102 = load double, double* %101, align 8, !tbaa !14
  %103 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %76, i32 1, i32 1
  store double %102, double* %103, align 8, !tbaa !16
  %104 = icmp sgt i64 %78, %1
  br i1 %104, label %75, label %105, !llvm.loop !71

105:                                              ; preds = %85, %91, %93, %97, %65
  %106 = phi i64 [ %66, %65 ], [ %76, %93 ], [ %78, %97 ], [ %76, %85 ], [ %76, %91 ]
  %107 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %106, i32 0
  %108 = bitcast double* %107 to <2 x double>*
  store <2 x double> %68, <2 x double>* %108, align 8, !tbaa !14
  %109 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 %106, i32 1, i32 1
  store double %70, double* %109, align 8, !tbaa !16
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_SC_SC_T0_(%"struct.std::pair"* %0, %"struct.std::pair"* %1, %"struct.std::pair"* %2, %"struct.std::pair"* %3) local_unnamed_addr #13 comdat {
  %5 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8, !tbaa !10
  %7 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 0
  %8 = load double, double* %7, align 8, !tbaa !10
  %9 = fcmp olt double %6, %8
  br i1 %9, label %26, label %10

10:                                               ; preds = %4
  %11 = fcmp olt double %8, %6
  br i1 %11, label %73, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1, i32 0
  %14 = load double, double* %13, align 8, !tbaa !15
  %15 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1, i32 0
  %16 = load double, double* %15, align 8, !tbaa !15
  %17 = fcmp olt double %14, %16
  br i1 %17, label %26, label %18

18:                                               ; preds = %12
  %19 = fcmp olt double %16, %14
  br i1 %19, label %73, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1, i32 1
  %22 = load double, double* %21, align 8, !tbaa !16
  %23 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1, i32 1
  %24 = load double, double* %23, align 8, !tbaa !16
  %25 = fcmp olt double %22, %24
  br i1 %25, label %26, label %73

26:                                               ; preds = %12, %4, %20
  %27 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 0
  %28 = load double, double* %27, align 8, !tbaa !10
  %29 = fcmp olt double %8, %28
  br i1 %29, label %46, label %30

30:                                               ; preds = %26
  %31 = fcmp olt double %28, %8
  br i1 %31, label %49, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1, i32 0
  %34 = load double, double* %33, align 8, !tbaa !15
  %35 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1, i32 0
  %36 = load double, double* %35, align 8, !tbaa !15
  %37 = fcmp olt double %34, %36
  br i1 %37, label %46, label %38

38:                                               ; preds = %32
  %39 = fcmp olt double %36, %34
  br i1 %39, label %49, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1, i32 1
  %42 = load double, double* %41, align 8, !tbaa !16
  %43 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1, i32 1
  %44 = load double, double* %43, align 8, !tbaa !16
  %45 = fcmp olt double %42, %44
  br i1 %45, label %46, label %49

46:                                               ; preds = %32, %26, %40
  %47 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %48 = load double, double* %47, align 8, !tbaa !14
  store double %8, double* %47, align 8, !tbaa !14
  store double %48, double* %7, align 8, !tbaa !14
  br label %120

49:                                               ; preds = %38, %30, %40
  %50 = fcmp olt double %6, %28
  br i1 %50, label %67, label %51

51:                                               ; preds = %49
  %52 = fcmp olt double %28, %6
  br i1 %52, label %70, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1, i32 0
  %55 = load double, double* %54, align 8, !tbaa !15
  %56 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1, i32 0
  %57 = load double, double* %56, align 8, !tbaa !15
  %58 = fcmp olt double %55, %57
  br i1 %58, label %67, label %59

59:                                               ; preds = %53
  %60 = fcmp olt double %57, %55
  br i1 %60, label %70, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1, i32 1
  %63 = load double, double* %62, align 8, !tbaa !16
  %64 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1, i32 1
  %65 = load double, double* %64, align 8, !tbaa !16
  %66 = fcmp olt double %63, %65
  br i1 %66, label %67, label %70

67:                                               ; preds = %53, %49, %61
  %68 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %69 = load double, double* %68, align 8, !tbaa !14
  store double %28, double* %68, align 8, !tbaa !14
  store double %69, double* %27, align 8, !tbaa !14
  br label %120

70:                                               ; preds = %59, %51, %61
  %71 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %72 = load double, double* %71, align 8, !tbaa !14
  store double %6, double* %71, align 8, !tbaa !14
  store double %72, double* %5, align 8, !tbaa !14
  br label %120

73:                                               ; preds = %18, %10, %20
  %74 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 0
  %75 = load double, double* %74, align 8, !tbaa !10
  %76 = fcmp olt double %6, %75
  br i1 %76, label %93, label %77

77:                                               ; preds = %73
  %78 = fcmp olt double %75, %6
  br i1 %78, label %96, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1, i32 0
  %81 = load double, double* %80, align 8, !tbaa !15
  %82 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1, i32 0
  %83 = load double, double* %82, align 8, !tbaa !15
  %84 = fcmp olt double %81, %83
  br i1 %84, label %93, label %85

85:                                               ; preds = %79
  %86 = fcmp olt double %83, %81
  br i1 %86, label %96, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1, i64 0, i32 1, i32 1
  %89 = load double, double* %88, align 8, !tbaa !16
  %90 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1, i32 1
  %91 = load double, double* %90, align 8, !tbaa !16
  %92 = fcmp olt double %89, %91
  br i1 %92, label %93, label %96

93:                                               ; preds = %79, %73, %87
  %94 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %95 = load double, double* %94, align 8, !tbaa !14
  store double %6, double* %94, align 8, !tbaa !14
  store double %95, double* %5, align 8, !tbaa !14
  br label %120

96:                                               ; preds = %85, %77, %87
  %97 = fcmp olt double %8, %75
  br i1 %97, label %114, label %98

98:                                               ; preds = %96
  %99 = fcmp olt double %75, %8
  br i1 %99, label %117, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1, i32 0
  %102 = load double, double* %101, align 8, !tbaa !15
  %103 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1, i32 0
  %104 = load double, double* %103, align 8, !tbaa !15
  %105 = fcmp olt double %102, %104
  br i1 %105, label %114, label %106

106:                                              ; preds = %100
  %107 = fcmp olt double %104, %102
  br i1 %107, label %117, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1, i32 1
  %110 = load double, double* %109, align 8, !tbaa !16
  %111 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i64 0, i32 1, i32 1
  %112 = load double, double* %111, align 8, !tbaa !16
  %113 = fcmp olt double %110, %112
  br i1 %113, label %114, label %117

114:                                              ; preds = %100, %96, %108
  %115 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %116 = load double, double* %115, align 8, !tbaa !14
  store double %75, double* %115, align 8, !tbaa !14
  store double %116, double* %74, align 8, !tbaa !14
  br label %120

117:                                              ; preds = %106, %98, %108
  %118 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %119 = load double, double* %118, align 8, !tbaa !14
  store double %8, double* %118, align 8, !tbaa !14
  store double %119, double* %7, align 8, !tbaa !14
  br label %120

120:                                              ; preds = %93, %117, %114, %46, %70, %67
  %121 = phi %"struct.std::pair"* [ %1, %93 ], [ %2, %117 ], [ %3, %114 ], [ %2, %46 ], [ %1, %70 ], [ %3, %67 ]
  %122 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1, i32 0
  %123 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %121, i64 0, i32 1, i32 0
  %124 = load double, double* %122, align 8, !tbaa !14
  %125 = load double, double* %123, align 8, !tbaa !14
  store double %125, double* %122, align 8, !tbaa !14
  store double %124, double* %123, align 8, !tbaa !14
  %126 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1, i32 1
  %127 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %121, i64 0, i32 1, i32 1
  %128 = load double, double* %126, align 8, !tbaa !14
  %129 = load double, double* %127, align 8, !tbaa !14
  store double %129, double* %126, align 8, !tbaa !14
  store double %128, double* %127, align 8, !tbaa !14
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIdS2_IddEESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_(%"struct.std::pair"* %0, %"struct.std::pair"* %1) local_unnamed_addr #6 comdat {
  %3 = icmp eq %"struct.std::pair"* %0, %1
  br i1 %3, label %101, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 0, i32 1, i32 1
  %8 = ptrtoint %"struct.std::pair"* %0 to i64
  %9 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i64 1
  %10 = icmp eq %"struct.std::pair"* %9, %1
  br i1 %10, label %101, label %11

11:                                               ; preds = %4, %98
  %12 = phi %"struct.std::pair"* [ %99, %98 ], [ %9, %4 ]
  %13 = phi %"struct.std::pair"* [ %12, %98 ], [ %0, %4 ]
  %14 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %12, i64 0, i32 0
  %15 = load double, double* %14, align 8, !tbaa !10
  %16 = load double, double* %5, align 8, !tbaa !10
  %17 = fcmp olt double %15, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i64 1, i32 1, i32 0
  %20 = load double, double* %19, align 8
  br label %35

21:                                               ; preds = %11
  %22 = fcmp olt double %16, %15
  %23 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i64 1, i32 1, i32 0
  %24 = load double, double* %23, align 8
  br i1 %22, label %63, label %25

25:                                               ; preds = %21
  %26 = load double, double* %6, align 8, !tbaa !15
  %27 = fcmp olt double %24, %26
  br i1 %27, label %35, label %28

28:                                               ; preds = %25
  %29 = fcmp olt double %26, %24
  br i1 %29, label %63, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i64 1, i32 1, i32 1
  %32 = load double, double* %31, align 8, !tbaa !16
  %33 = load double, double* %7, align 8, !tbaa !16
  %34 = fcmp olt double %32, %33
  br i1 %34, label %35, label %63

35:                                               ; preds = %18, %25, %30
  %36 = phi double [ %20, %18 ], [ %24, %25 ], [ %24, %30 ]
  %37 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i64 1, i32 1, i32 1
  %38 = load double, double* %37, align 8
  %39 = ptrtoint %"struct.std::pair"* %12 to i64
  %40 = sub i64 %39, %8
  %41 = icmp sgt i64 %40, 0
  br i1 %41, label %42, label %62

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i64 2
  %44 = udiv exact i64 %40, 24
  br label %45

45:                                               ; preds = %45, %42
  %46 = phi i64 [ %60, %45 ], [ %44, %42 ]
  %47 = phi %"struct.std::pair"* [ %50, %45 ], [ %43, %42 ]
  %48 = phi %"struct.std::pair"* [ %49, %45 ], [ %12, %42 ]
  %49 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %48, i64 -1
  %50 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %47, i64 -1
  %51 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %49, i64 0, i32 0
  %52 = load double, double* %51, align 8, !tbaa !14
  %53 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %50, i64 0, i32 0
  store double %52, double* %53, align 8, !tbaa !10
  %54 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %48, i64 -1, i32 1, i32 0
  %55 = load double, double* %54, align 8, !tbaa !14
  %56 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %47, i64 -1, i32 1, i32 0
  store double %55, double* %56, align 8, !tbaa !15
  %57 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %48, i64 -1, i32 1, i32 1
  %58 = load double, double* %57, align 8, !tbaa !14
  %59 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %47, i64 -1, i32 1, i32 1
  store double %58, double* %59, align 8, !tbaa !16
  %60 = add nsw i64 %46, -1
  %61 = icmp sgt i64 %46, 1
  br i1 %61, label %45, label %62, !llvm.loop !72

62:                                               ; preds = %45, %35
  store double %15, double* %5, align 8, !tbaa !10
  store double %36, double* %6, align 8, !tbaa !15
  store double %38, double* %7, align 8, !tbaa !16
  br label %98

63:                                               ; preds = %21, %28, %30
  %64 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i64 1, i32 1, i32 1
  %65 = load double, double* %64, align 8
  br label %66

66:                                               ; preds = %87, %63
  %67 = phi %"struct.std::pair"* [ %12, %63 ], [ %68, %87 ]
  %68 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 -1
  %69 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %68, i64 0, i32 0
  %70 = load double, double* %69, align 8, !tbaa !10
  %71 = fcmp olt double %15, %70
  br i1 %71, label %72, label %75

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 -1, i32 1, i32 0
  %74 = load double, double* %73, align 8, !tbaa !14
  br label %87

75:                                               ; preds = %66
  %76 = fcmp olt double %70, %15
  br i1 %76, label %94, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 -1, i32 1, i32 0
  %79 = load double, double* %78, align 8, !tbaa !15
  %80 = fcmp olt double %24, %79
  br i1 %80, label %87, label %81

81:                                               ; preds = %77
  %82 = fcmp olt double %79, %24
  br i1 %82, label %94, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 -1, i32 1, i32 1
  %85 = load double, double* %84, align 8, !tbaa !16
  %86 = fcmp olt double %65, %85
  br i1 %86, label %87, label %94

87:                                               ; preds = %83, %77, %72
  %88 = phi double [ %74, %72 ], [ %79, %77 ], [ %79, %83 ]
  %89 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 0, i32 0
  store double %70, double* %89, align 8, !tbaa !10
  %90 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 0, i32 1, i32 0
  store double %88, double* %90, align 8, !tbaa !15
  %91 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 -1, i32 1, i32 1
  %92 = load double, double* %91, align 8, !tbaa !14
  %93 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 0, i32 1, i32 1
  store double %92, double* %93, align 8, !tbaa !16
  br label %66, !llvm.loop !17

94:                                               ; preds = %75, %81, %83
  %95 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 0, i32 0
  store double %15, double* %95, align 8, !tbaa !10
  %96 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 0, i32 1, i32 0
  store double %24, double* %96, align 8, !tbaa !15
  %97 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %67, i64 0, i32 1, i32 1
  store double %65, double* %97, align 8, !tbaa !16
  br label %98

98:                                               ; preds = %62, %94
  %99 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %12, i64 1
  %100 = icmp eq %"struct.std::pair"* %99, %1
  br i1 %100, label %101, label %11, !llvm.loop !73

101:                                              ; preds = %98, %4, %2
  ret void
}

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSi10_M_extractIdEERSiRT_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), double* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #9

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #12

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_(%"struct.std::pair.13"* %0, %"struct.std::pair.13"* %1, i64 %2) local_unnamed_addr #6 comdat {
  %4 = ptrtoint %"struct.std::pair.13"* %0 to i64
  %5 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 1
  %6 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 1
  %8 = ptrtoint %"struct.std::pair.13"* %1 to i64
  %9 = sub i64 %8, %4
  %10 = icmp sgt i64 %9, 256
  br i1 %10, label %11, label %95

11:                                               ; preds = %3, %90
  %12 = phi i64 [ %93, %90 ], [ %9, %3 ]
  %13 = phi i64 [ %91, %90 ], [ %2, %3 ]
  %14 = phi %"struct.std::pair.13"* [ %52, %90 ], [ %1, %3 ]
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %16, label %43

16:                                               ; preds = %11
  %17 = lshr exact i64 %12, 4
  %18 = add nsw i64 %17, -2
  %19 = lshr i64 %18, 1
  br label %20

20:                                               ; preds = %20, %16
  %21 = phi i64 [ %19, %16 ], [ %27, %20 ]
  %22 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %21, i32 0
  %23 = load double, double* %22, align 8
  %24 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %21, i32 1
  %25 = load i32, i32* %24, align 8
  tail call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_less_iterEEvT_T0_SC_T1_T2_(%"struct.std::pair.13"* %0, i64 %21, i64 %17, double %23, i32 %25)
  %26 = icmp eq i64 %21, 0
  %27 = add nsw i64 %21, -1
  br i1 %26, label %28, label %20, !llvm.loop !74

28:                                               ; preds = %20
  %29 = icmp sgt i64 %12, 16
  br i1 %29, label %30, label %95

30:                                               ; preds = %28, %30
  %31 = phi %"struct.std::pair.13"* [ %32, %30 ], [ %14, %28 ]
  %32 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %31, i64 -1
  %33 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %32, i64 0, i32 0
  %34 = load double, double* %33, align 8
  %35 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %31, i64 -1, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = load double, double* %6, align 8, !tbaa !14
  store double %37, double* %33, align 8, !tbaa !55
  %38 = load i32, i32* %7, align 8, !tbaa !37
  store i32 %38, i32* %35, align 8, !tbaa !57
  %39 = ptrtoint %"struct.std::pair.13"* %32 to i64
  %40 = sub i64 %39, %4
  %41 = ashr exact i64 %40, 4
  tail call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_less_iterEEvT_T0_SC_T1_T2_(%"struct.std::pair.13"* nonnull %0, i64 0, i64 %41, double %34, i32 %36)
  %42 = icmp sgt i64 %40, 16
  br i1 %42, label %30, label %95, !llvm.loop !75

43:                                               ; preds = %11
  %44 = lshr i64 %12, 5
  %45 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %44
  %46 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %14, i64 -1
  tail call void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_SB_SB_T0_(%"struct.std::pair.13"* %0, %"struct.std::pair.13"* nonnull %5, %"struct.std::pair.13"* %45, %"struct.std::pair.13"* nonnull %46)
  br label %47

47:                                               ; preds = %83, %43
  %48 = phi %"struct.std::pair.13"* [ %5, %43 ], [ %89, %83 ]
  %49 = phi %"struct.std::pair.13"* [ %14, %43 ], [ %69, %83 ]
  %50 = load double, double* %6, align 8, !tbaa !55
  br label %51

51:                                               ; preds = %63, %47
  %52 = phi %"struct.std::pair.13"* [ %48, %47 ], [ %64, %63 ]
  %53 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %52, i64 0, i32 0
  %54 = load double, double* %53, align 8, !tbaa !55
  %55 = fcmp olt double %54, %50
  br i1 %55, label %63, label %56

56:                                               ; preds = %51
  %57 = fcmp olt double %50, %54
  br i1 %57, label %65, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %52, i64 0, i32 1
  %60 = load i32, i32* %59, align 8, !tbaa !57
  %61 = load i32, i32* %7, align 8, !tbaa !57
  %62 = icmp slt i32 %60, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %58, %51
  %64 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %52, i64 1
  br label %51, !llvm.loop !76

65:                                               ; preds = %58, %56
  %66 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %52, i64 0, i32 0
  br label %67

67:                                               ; preds = %80, %65
  %68 = phi %"struct.std::pair.13"* [ %49, %65 ], [ %69, %80 ]
  %69 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %68, i64 -1
  %70 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %69, i64 0, i32 0
  %71 = load double, double* %70, align 8, !tbaa !55
  %72 = fcmp olt double %50, %71
  br i1 %72, label %80, label %73

73:                                               ; preds = %67
  %74 = fcmp olt double %71, %50
  br i1 %74, label %81, label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %7, align 8, !tbaa !57
  %77 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %68, i64 -1, i32 1
  %78 = load i32, i32* %77, align 8, !tbaa !57
  %79 = icmp slt i32 %76, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %75, %67
  br label %67, !llvm.loop !77

81:                                               ; preds = %75, %73
  %82 = icmp ult %"struct.std::pair.13"* %52, %69
  br i1 %82, label %83, label %90

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %69, i64 0, i32 0
  store double %71, double* %66, align 8, !tbaa !14
  store double %54, double* %84, align 8, !tbaa !14
  %85 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %52, i64 0, i32 1
  %86 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %68, i64 -1, i32 1
  %87 = load i32, i32* %85, align 8, !tbaa !37
  %88 = load i32, i32* %86, align 8, !tbaa !37
  store i32 %88, i32* %85, align 8, !tbaa !37
  store i32 %87, i32* %86, align 8, !tbaa !37
  %89 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %52, i64 1
  br label %47, !llvm.loop !78

90:                                               ; preds = %81
  %91 = add nsw i64 %13, -1
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_(%"struct.std::pair.13"* %52, %"struct.std::pair.13"* %14, i64 %91)
  %92 = ptrtoint %"struct.std::pair.13"* %52 to i64
  %93 = sub i64 %92, %4
  %94 = icmp sgt i64 %93, 256
  br i1 %94, label %11, label %95, !llvm.loop !79

95:                                               ; preds = %90, %30, %3, %28
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_T0_(%"struct.std::pair.13"* %0, %"struct.std::pair.13"* %1) local_unnamed_addr #6 comdat {
  %3 = ptrtoint %"struct.std::pair.13"* %1 to i64
  %4 = ptrtoint %"struct.std::pair.13"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 256
  br i1 %6, label %7, label %149

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 1
  br label %10

10:                                               ; preds = %7, %112
  %11 = phi i64 [ 0, %7 ], [ %115, %112 ]
  %12 = phi i64 [ 1, %7 ], [ %113, %112 ]
  %13 = phi %"struct.std::pair.13"* [ %0, %7 ], [ %15, %112 ]
  %14 = add i64 %11, 1
  %15 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %12
  %16 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %15, i64 0, i32 0
  %17 = load double, double* %16, align 8, !tbaa !55
  %18 = load double, double* %8, align 8, !tbaa !55
  %19 = fcmp olt double %17, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %13, i64 1, i32 1
  %22 = load i32, i32* %21, align 8
  br label %31

23:                                               ; preds = %10
  %24 = fcmp olt double %18, %17
  %25 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %13, i64 1, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %27, label %28

27:                                               ; preds = %28, %23
  br label %90

28:                                               ; preds = %23
  %29 = load i32, i32* %9, align 8, !tbaa !57
  %30 = icmp slt i32 %26, %29
  br i1 %30, label %31, label %27

31:                                               ; preds = %20, %28
  %32 = phi i32 [ %22, %20 ], [ %26, %28 ]
  %33 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %13, i64 2
  %34 = and i64 %14, 3
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %52, label %36

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %49, %36 ], [ %12, %31 ]
  %38 = phi %"struct.std::pair.13"* [ %42, %36 ], [ %33, %31 ]
  %39 = phi %"struct.std::pair.13"* [ %41, %36 ], [ %15, %31 ]
  %40 = phi i64 [ %50, %36 ], [ %34, %31 ]
  %41 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %39, i64 -1
  %42 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %38, i64 -1
  %43 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %41, i64 0, i32 0
  %44 = load double, double* %43, align 8, !tbaa !14
  %45 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %42, i64 0, i32 0
  store double %44, double* %45, align 8, !tbaa !55
  %46 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %39, i64 -1, i32 1
  %47 = load i32, i32* %46, align 8, !tbaa !37
  %48 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %38, i64 -1, i32 1
  store i32 %47, i32* %48, align 8, !tbaa !57
  %49 = add nsw i64 %37, -1
  %50 = add i64 %40, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %36, !llvm.loop !80

52:                                               ; preds = %36, %31
  %53 = phi i64 [ %12, %31 ], [ %49, %36 ]
  %54 = phi %"struct.std::pair.13"* [ %33, %31 ], [ %42, %36 ]
  %55 = phi %"struct.std::pair.13"* [ %15, %31 ], [ %41, %36 ]
  %56 = icmp ult i64 %11, 3
  br i1 %56, label %89, label %57

57:                                               ; preds = %52, %57
  %58 = phi i64 [ %87, %57 ], [ %53, %52 ]
  %59 = phi %"struct.std::pair.13"* [ %80, %57 ], [ %54, %52 ]
  %60 = phi %"struct.std::pair.13"* [ %79, %57 ], [ %55, %52 ]
  %61 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %60, i64 -1, i32 0
  %62 = load double, double* %61, align 8, !tbaa !14
  %63 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %59, i64 -1, i32 0
  store double %62, double* %63, align 8, !tbaa !55
  %64 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %60, i64 -1, i32 1
  %65 = load i32, i32* %64, align 8, !tbaa !37
  %66 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %59, i64 -1, i32 1
  store i32 %65, i32* %66, align 8, !tbaa !57
  %67 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %60, i64 -2, i32 0
  %68 = load double, double* %67, align 8, !tbaa !14
  %69 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %59, i64 -2, i32 0
  store double %68, double* %69, align 8, !tbaa !55
  %70 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %60, i64 -2, i32 1
  %71 = load i32, i32* %70, align 8, !tbaa !37
  %72 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %59, i64 -2, i32 1
  store i32 %71, i32* %72, align 8, !tbaa !57
  %73 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %60, i64 -3, i32 0
  %74 = load double, double* %73, align 8, !tbaa !14
  %75 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %59, i64 -3, i32 0
  store double %74, double* %75, align 8, !tbaa !55
  %76 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %60, i64 -3, i32 1
  %77 = load i32, i32* %76, align 8, !tbaa !37
  %78 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %59, i64 -3, i32 1
  store i32 %77, i32* %78, align 8, !tbaa !57
  %79 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %60, i64 -4
  %80 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %59, i64 -4
  %81 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %79, i64 0, i32 0
  %82 = load double, double* %81, align 8, !tbaa !14
  %83 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %80, i64 0, i32 0
  store double %82, double* %83, align 8, !tbaa !55
  %84 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %60, i64 -4, i32 1
  %85 = load i32, i32* %84, align 8, !tbaa !37
  %86 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %59, i64 -4, i32 1
  store i32 %85, i32* %86, align 8, !tbaa !57
  %87 = add nsw i64 %58, -4
  %88 = icmp sgt i64 %58, 4
  br i1 %88, label %57, label %89, !llvm.loop !81

89:                                               ; preds = %57, %52
  store double %17, double* %8, align 8, !tbaa !55
  store i32 %32, i32* %9, align 8, !tbaa !57
  br label %112

90:                                               ; preds = %27, %105
  %91 = phi %"struct.std::pair.13"* [ %92, %105 ], [ %15, %27 ]
  %92 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %91, i64 -1
  %93 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %92, i64 0, i32 0
  %94 = load double, double* %93, align 8, !tbaa !55
  %95 = fcmp olt double %17, %94
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %91, i64 -1, i32 1
  %98 = load i32, i32* %97, align 8, !tbaa !37
  br label %105

99:                                               ; preds = %90
  %100 = fcmp olt double %94, %17
  br i1 %100, label %109, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %91, i64 -1, i32 1
  %103 = load i32, i32* %102, align 8, !tbaa !57
  %104 = icmp slt i32 %26, %103
  br i1 %104, label %105, label %109

105:                                              ; preds = %101, %96
  %106 = phi i32 [ %98, %96 ], [ %103, %101 ]
  %107 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %91, i64 0, i32 0
  store double %94, double* %107, align 8, !tbaa !55
  %108 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %91, i64 0, i32 1
  store i32 %106, i32* %108, align 8, !tbaa !57
  br label %90, !llvm.loop !82

109:                                              ; preds = %101, %99
  %110 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %91, i64 0, i32 0
  store double %17, double* %110, align 8, !tbaa !55
  %111 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %91, i64 0, i32 1
  store i32 %26, i32* %111, align 8, !tbaa !57
  br label %112

112:                                              ; preds = %109, %89
  %113 = add nuw nsw i64 %12, 1
  %114 = icmp eq i64 %113, 16
  %115 = add i64 %11, 1
  br i1 %114, label %116, label %10, !llvm.loop !83

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 16
  %118 = icmp eq %"struct.std::pair.13"* %117, %1
  br i1 %118, label %222, label %119

119:                                              ; preds = %116, %144
  %120 = phi %"struct.std::pair.13"* [ %147, %144 ], [ %117, %116 ]
  %121 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %120, i64 0, i32 0
  %122 = load double, double* %121, align 8
  %123 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %120, i64 0, i32 1
  %124 = load i32, i32* %123, align 8
  br label %125

125:                                              ; preds = %140, %119
  %126 = phi %"struct.std::pair.13"* [ %120, %119 ], [ %127, %140 ]
  %127 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %126, i64 -1
  %128 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %127, i64 0, i32 0
  %129 = load double, double* %128, align 8, !tbaa !55
  %130 = fcmp olt double %122, %129
  br i1 %130, label %131, label %134

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %126, i64 -1, i32 1
  %133 = load i32, i32* %132, align 8, !tbaa !37
  br label %140

134:                                              ; preds = %125
  %135 = fcmp olt double %129, %122
  br i1 %135, label %144, label %136

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %126, i64 -1, i32 1
  %138 = load i32, i32* %137, align 8, !tbaa !57
  %139 = icmp slt i32 %124, %138
  br i1 %139, label %140, label %144

140:                                              ; preds = %136, %131
  %141 = phi i32 [ %133, %131 ], [ %138, %136 ]
  %142 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %126, i64 0, i32 0
  store double %129, double* %142, align 8, !tbaa !55
  %143 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %126, i64 0, i32 1
  store i32 %141, i32* %143, align 8, !tbaa !57
  br label %125, !llvm.loop !82

144:                                              ; preds = %136, %134
  %145 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %126, i64 0, i32 0
  store double %122, double* %145, align 8, !tbaa !55
  %146 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %126, i64 0, i32 1
  store i32 %124, i32* %146, align 8, !tbaa !57
  %147 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %120, i64 1
  %148 = icmp eq %"struct.std::pair.13"* %147, %1
  br i1 %148, label %222, label %119, !llvm.loop !84

149:                                              ; preds = %2
  %150 = icmp eq %"struct.std::pair.13"* %0, %1
  br i1 %150, label %222, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 0
  %153 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 1
  %154 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 1
  %155 = icmp eq %"struct.std::pair.13"* %154, %1
  br i1 %155, label %222, label %156

156:                                              ; preds = %151, %219
  %157 = phi %"struct.std::pair.13"* [ %220, %219 ], [ %154, %151 ]
  %158 = phi %"struct.std::pair.13"* [ %157, %219 ], [ %0, %151 ]
  %159 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %157, i64 0, i32 0
  %160 = load double, double* %159, align 8, !tbaa !55
  %161 = load double, double* %152, align 8, !tbaa !55
  %162 = fcmp olt double %160, %161
  br i1 %162, label %163, label %166

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %158, i64 1, i32 1
  %165 = load i32, i32* %164, align 8
  br label %174

166:                                              ; preds = %156
  %167 = fcmp olt double %161, %160
  %168 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %158, i64 1, i32 1
  %169 = load i32, i32* %168, align 8
  br i1 %167, label %170, label %171

170:                                              ; preds = %171, %166
  br label %197

171:                                              ; preds = %166
  %172 = load i32, i32* %153, align 8, !tbaa !57
  %173 = icmp slt i32 %169, %172
  br i1 %173, label %174, label %170

174:                                              ; preds = %171, %163
  %175 = phi i32 [ %165, %163 ], [ %169, %171 ]
  %176 = ptrtoint %"struct.std::pair.13"* %157 to i64
  %177 = sub i64 %176, %4
  %178 = icmp sgt i64 %177, 0
  br i1 %178, label %179, label %196

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %158, i64 2
  %181 = lshr exact i64 %177, 4
  br label %182

182:                                              ; preds = %182, %179
  %183 = phi i64 [ %194, %182 ], [ %181, %179 ]
  %184 = phi %"struct.std::pair.13"* [ %187, %182 ], [ %180, %179 ]
  %185 = phi %"struct.std::pair.13"* [ %186, %182 ], [ %157, %179 ]
  %186 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %185, i64 -1
  %187 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %184, i64 -1
  %188 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %186, i64 0, i32 0
  %189 = load double, double* %188, align 8, !tbaa !14
  %190 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %187, i64 0, i32 0
  store double %189, double* %190, align 8, !tbaa !55
  %191 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %185, i64 -1, i32 1
  %192 = load i32, i32* %191, align 8, !tbaa !37
  %193 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %184, i64 -1, i32 1
  store i32 %192, i32* %193, align 8, !tbaa !57
  %194 = add nsw i64 %183, -1
  %195 = icmp sgt i64 %183, 1
  br i1 %195, label %182, label %196, !llvm.loop !81

196:                                              ; preds = %182, %174
  store double %160, double* %152, align 8, !tbaa !55
  store i32 %175, i32* %153, align 8, !tbaa !57
  br label %219

197:                                              ; preds = %170, %212
  %198 = phi %"struct.std::pair.13"* [ %199, %212 ], [ %157, %170 ]
  %199 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %198, i64 -1
  %200 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %199, i64 0, i32 0
  %201 = load double, double* %200, align 8, !tbaa !55
  %202 = fcmp olt double %160, %201
  br i1 %202, label %203, label %206

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %198, i64 -1, i32 1
  %205 = load i32, i32* %204, align 8, !tbaa !37
  br label %212

206:                                              ; preds = %197
  %207 = fcmp olt double %201, %160
  br i1 %207, label %216, label %208

208:                                              ; preds = %206
  %209 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %198, i64 -1, i32 1
  %210 = load i32, i32* %209, align 8, !tbaa !57
  %211 = icmp slt i32 %169, %210
  br i1 %211, label %212, label %216

212:                                              ; preds = %208, %203
  %213 = phi i32 [ %205, %203 ], [ %210, %208 ]
  %214 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %198, i64 0, i32 0
  store double %201, double* %214, align 8, !tbaa !55
  %215 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %198, i64 0, i32 1
  store i32 %213, i32* %215, align 8, !tbaa !57
  br label %197, !llvm.loop !82

216:                                              ; preds = %208, %206
  %217 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %198, i64 0, i32 0
  store double %160, double* %217, align 8, !tbaa !55
  %218 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %198, i64 0, i32 1
  store i32 %169, i32* %218, align 8, !tbaa !57
  br label %219

219:                                              ; preds = %216, %196
  %220 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %157, i64 1
  %221 = icmp eq %"struct.std::pair.13"* %220, %1
  br i1 %221, label %222, label %156, !llvm.loop !83

222:                                              ; preds = %219, %144, %151, %149, %116
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_less_iterEEvT_T0_SC_T1_T2_(%"struct.std::pair.13"* %0, i64 %1, i64 %2, double %3, i32 %4) local_unnamed_addr #6 comdat {
  %6 = add nsw i64 %2, -1
  %7 = sdiv i64 %6, 2
  %8 = icmp sgt i64 %7, %1
  br i1 %8, label %9, label %36

9:                                                ; preds = %5, %28
  %10 = phi i64 [ %30, %28 ], [ %1, %5 ]
  %11 = shl i64 %10, 1
  %12 = add i64 %11, 2
  %13 = or i64 %11, 1
  %14 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %12, i32 0
  %15 = load double, double* %14, align 8, !tbaa !55
  %16 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %13, i32 0
  %17 = load double, double* %16, align 8, !tbaa !55
  %18 = fcmp olt double %15, %17
  br i1 %18, label %27, label %19

19:                                               ; preds = %9
  %20 = fcmp olt double %17, %15
  br i1 %20, label %28, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %12, i32 1
  %23 = load i32, i32* %22, align 8, !tbaa !57
  %24 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %13, i32 1
  %25 = load i32, i32* %24, align 8, !tbaa !57
  %26 = icmp slt i32 %23, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %9, %21
  br label %28

28:                                               ; preds = %19, %21, %27
  %29 = phi double [ %17, %27 ], [ %15, %21 ], [ %15, %19 ]
  %30 = phi i64 [ %13, %27 ], [ %12, %21 ], [ %12, %19 ]
  %31 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %10, i32 0
  store double %29, double* %31, align 8, !tbaa !55
  %32 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %30, i32 1
  %33 = load i32, i32* %32, align 8, !tbaa !37
  %34 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %10, i32 1
  store i32 %33, i32* %34, align 8, !tbaa !57
  %35 = icmp slt i64 %30, %7
  br i1 %35, label %9, label %36, !llvm.loop !85

36:                                               ; preds = %28, %5
  %37 = phi i64 [ %1, %5 ], [ %30, %28 ]
  %38 = and i64 %2, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %53

40:                                               ; preds = %36
  %41 = add nsw i64 %2, -2
  %42 = sdiv i64 %41, 2
  %43 = icmp eq i64 %37, %42
  br i1 %43, label %44, label %53

44:                                               ; preds = %40
  %45 = shl i64 %37, 1
  %46 = or i64 %45, 1
  %47 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %46, i32 0
  %48 = load double, double* %47, align 8, !tbaa !14
  %49 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %37, i32 0
  store double %48, double* %49, align 8, !tbaa !55
  %50 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %46, i32 1
  %51 = load i32, i32* %50, align 8, !tbaa !37
  %52 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %37, i32 1
  store i32 %51, i32* %52, align 8, !tbaa !57
  br label %53

53:                                               ; preds = %44, %40, %36
  %54 = phi i64 [ %46, %44 ], [ %37, %40 ], [ %37, %36 ]
  %55 = icmp sgt i64 %54, %1
  br i1 %55, label %56, label %77

56:                                               ; preds = %53, %72
  %57 = phi i64 [ %59, %72 ], [ %54, %53 ]
  %58 = add nsw i64 %57, -1
  %59 = sdiv i64 %58, 2
  %60 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %59, i32 0
  %61 = load double, double* %60, align 8, !tbaa !55
  %62 = fcmp olt double %61, %3
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %59, i32 1
  %65 = load i32, i32* %64, align 8, !tbaa !37
  br label %72

66:                                               ; preds = %56
  %67 = fcmp ogt double %61, %3
  br i1 %67, label %77, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %59, i32 1
  %70 = load i32, i32* %69, align 8, !tbaa !57
  %71 = icmp slt i32 %70, %4
  br i1 %71, label %72, label %77

72:                                               ; preds = %68, %63
  %73 = phi i32 [ %65, %63 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %57, i32 0
  store double %61, double* %74, align 8, !tbaa !55
  %75 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %57, i32 1
  store i32 %73, i32* %75, align 8, !tbaa !57
  %76 = icmp sgt i64 %59, %1
  br i1 %76, label %56, label %77, !llvm.loop !86

77:                                               ; preds = %66, %68, %72, %53
  %78 = phi i64 [ %54, %53 ], [ %57, %68 ], [ %59, %72 ], [ %57, %66 ]
  %79 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %78, i32 0
  store double %3, double* %79, align 8, !tbaa !55
  %80 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 %78, i32 1
  store i32 %4, i32* %80, align 8, !tbaa !57
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIdiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_SB_SB_T0_(%"struct.std::pair.13"* %0, %"struct.std::pair.13"* %1, %"struct.std::pair.13"* %2, %"struct.std::pair.13"* %3) local_unnamed_addr #13 comdat {
  %5 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8, !tbaa !55
  %7 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %2, i64 0, i32 0
  %8 = load double, double* %7, align 8, !tbaa !55
  %9 = fcmp olt double %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %4
  %11 = fcmp olt double %8, %6
  br i1 %11, label %66, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 8, !tbaa !57
  %15 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %2, i64 0, i32 1
  %16 = load i32, i32* %15, align 8, !tbaa !57
  %17 = icmp slt i32 %14, %16
  br i1 %17, label %18, label %66

18:                                               ; preds = %4, %12
  %19 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %3, i64 0, i32 0
  %20 = load double, double* %19, align 8, !tbaa !55
  %21 = fcmp olt double %8, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %2, i64 0, i32 1
  %24 = load i32, i32* %23, align 8, !tbaa !37
  br label %33

25:                                               ; preds = %18
  %26 = fcmp olt double %20, %8
  br i1 %26, label %40, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %2, i64 0, i32 1
  %29 = load i32, i32* %28, align 8, !tbaa !57
  %30 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %3, i64 0, i32 1
  %31 = load i32, i32* %30, align 8, !tbaa !57
  %32 = icmp slt i32 %29, %31
  br i1 %32, label %33, label %40

33:                                               ; preds = %22, %27
  %34 = phi i32 [ %24, %22 ], [ %29, %27 ]
  %35 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 0
  %36 = load double, double* %35, align 8, !tbaa !14
  store double %8, double* %35, align 8, !tbaa !14
  store double %36, double* %7, align 8, !tbaa !14
  %37 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %2, i64 0, i32 1
  %39 = load i32, i32* %37, align 8, !tbaa !37
  store i32 %34, i32* %37, align 8, !tbaa !37
  store i32 %39, i32* %38, align 8, !tbaa !37
  br label %114

40:                                               ; preds = %25, %27
  %41 = fcmp olt double %6, %20
  br i1 %41, label %42, label %45

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %3, i64 0, i32 1
  %44 = load i32, i32* %43, align 8, !tbaa !37
  br label %53

45:                                               ; preds = %40
  %46 = fcmp olt double %20, %6
  %47 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %1, i64 0, i32 1
  %48 = load i32, i32* %47, align 8, !tbaa !37
  br i1 %46, label %60, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %3, i64 0, i32 1
  %51 = load i32, i32* %50, align 8, !tbaa !57
  %52 = icmp slt i32 %48, %51
  br i1 %52, label %53, label %60

53:                                               ; preds = %42, %49
  %54 = phi i32 [ %44, %42 ], [ %51, %49 ]
  %55 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 0
  %56 = load double, double* %55, align 8, !tbaa !14
  store double %20, double* %55, align 8, !tbaa !14
  store double %56, double* %19, align 8, !tbaa !14
  %57 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 1
  %58 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %3, i64 0, i32 1
  %59 = load i32, i32* %57, align 8, !tbaa !37
  store i32 %54, i32* %57, align 8, !tbaa !37
  store i32 %59, i32* %58, align 8, !tbaa !37
  br label %114

60:                                               ; preds = %45, %49
  %61 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 0
  %62 = load double, double* %61, align 8, !tbaa !14
  store double %6, double* %61, align 8, !tbaa !14
  store double %62, double* %5, align 8, !tbaa !14
  %63 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %1, i64 0, i32 1
  %65 = load i32, i32* %63, align 8, !tbaa !37
  store i32 %48, i32* %63, align 8, !tbaa !37
  store i32 %65, i32* %64, align 8, !tbaa !37
  br label %114

66:                                               ; preds = %10, %12
  %67 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %3, i64 0, i32 0
  %68 = load double, double* %67, align 8, !tbaa !55
  %69 = fcmp olt double %6, %68
  br i1 %69, label %70, label %73

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %1, i64 0, i32 1
  %72 = load i32, i32* %71, align 8, !tbaa !37
  br label %81

73:                                               ; preds = %66
  %74 = fcmp olt double %68, %6
  br i1 %74, label %88, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %1, i64 0, i32 1
  %77 = load i32, i32* %76, align 8, !tbaa !57
  %78 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %3, i64 0, i32 1
  %79 = load i32, i32* %78, align 8, !tbaa !57
  %80 = icmp slt i32 %77, %79
  br i1 %80, label %81, label %88

81:                                               ; preds = %70, %75
  %82 = phi i32 [ %72, %70 ], [ %77, %75 ]
  %83 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 0
  %84 = load double, double* %83, align 8, !tbaa !14
  store double %6, double* %83, align 8, !tbaa !14
  store double %84, double* %5, align 8, !tbaa !14
  %85 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %1, i64 0, i32 1
  %87 = load i32, i32* %85, align 8, !tbaa !37
  store i32 %82, i32* %85, align 8, !tbaa !37
  store i32 %87, i32* %86, align 8, !tbaa !37
  br label %114

88:                                               ; preds = %73, %75
  %89 = fcmp olt double %8, %68
  br i1 %89, label %90, label %93

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %3, i64 0, i32 1
  %92 = load i32, i32* %91, align 8, !tbaa !37
  br label %101

93:                                               ; preds = %88
  %94 = fcmp olt double %68, %8
  %95 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %2, i64 0, i32 1
  %96 = load i32, i32* %95, align 8, !tbaa !37
  br i1 %94, label %108, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %3, i64 0, i32 1
  %99 = load i32, i32* %98, align 8, !tbaa !57
  %100 = icmp slt i32 %96, %99
  br i1 %100, label %101, label %108

101:                                              ; preds = %90, %97
  %102 = phi i32 [ %92, %90 ], [ %99, %97 ]
  %103 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 0
  %104 = load double, double* %103, align 8, !tbaa !14
  store double %68, double* %103, align 8, !tbaa !14
  store double %104, double* %67, align 8, !tbaa !14
  %105 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %3, i64 0, i32 1
  %107 = load i32, i32* %105, align 8, !tbaa !37
  store i32 %102, i32* %105, align 8, !tbaa !37
  store i32 %107, i32* %106, align 8, !tbaa !37
  br label %114

108:                                              ; preds = %93, %97
  %109 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 0
  %110 = load double, double* %109, align 8, !tbaa !14
  store double %8, double* %109, align 8, !tbaa !14
  store double %110, double* %7, align 8, !tbaa !14
  %111 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %0, i64 0, i32 1
  %112 = getelementptr inbounds %"struct.std::pair.13", %"struct.std::pair.13"* %2, i64 0, i32 1
  %113 = load i32, i32* %111, align 8, !tbaa !37
  store i32 %96, i32* %111, align 8, !tbaa !37
  store i32 %113, i32* %112, align 8, !tbaa !37
  br label %114

114:                                              ; preds = %81, %108, %101, %33, %60, %53
  ret void
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_OptimalPolygon.cpp() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #16
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #15

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nofree nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #6 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #13 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { nounwind }
attributes #17 = { noreturn }
attributes #18 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{i64 0, i64 65}
!10 = !{!11, !12, i64 0}
!11 = !{!"_ZTSSt4pairIdS_IddEE", !12, i64 0, !13, i64 8}
!12 = !{!"double", !6, i64 0}
!13 = !{!"_ZTSSt4pairIddE", !12, i64 0, !12, i64 8}
!14 = !{!12, !12, i64 0}
!15 = !{!13, !12, i64 0}
!16 = !{!13, !12, i64 8}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.mustprogress"}
!19 = distinct !{!19, !18}
!20 = !{!11, !12, i64 8}
!21 = !{!11, !12, i64 16}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26, !27}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !24}
!28 = !{!26}
!29 = !{!27}
!30 = distinct !{!30, !18, !31}
!31 = !{!"llvm.loop.isvectorized", i32 1}
!32 = distinct !{!32, !18}
!33 = distinct !{!33, !18, !31}
!34 = distinct !{!34, !18}
!35 = distinct !{!35, !18}
!36 = !{!5, !5, i64 0}
!37 = !{!38, !38, i64 0}
!38 = !{!"int", !6, i64 0}
!39 = !{!40, !40, i64 0}
!40 = !{!"vtable pointer", !7, i64 0}
!41 = !{!42, !5, i64 240}
!42 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !5, i64 216, !6, i64 224, !43, i64 225, !5, i64 232, !5, i64 240, !5, i64 248, !5, i64 256}
!43 = !{!"bool", !6, i64 0}
!44 = !{!45, !6, i64 56}
!45 = !{!"_ZTSSt5ctypeIcE", !5, i64 16, !43, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !6, i64 56, !6, i64 57, !6, i64 313, !6, i64 569}
!46 = !{!6, !6, i64 0}
!47 = distinct !{!47, !18}
!48 = distinct !{!48, !18}
!49 = distinct !{!49, !18}
!50 = !{!4, !5, i64 16}
!51 = distinct !{!51, !18}
!52 = distinct !{!52, !18}
!53 = distinct !{!53, !18}
!54 = distinct !{!54, !18}
!55 = !{!56, !12, i64 0}
!56 = !{!"_ZTSSt4pairIdiE", !12, i64 0, !38, i64 8}
!57 = !{!56, !38, i64 8}
!58 = distinct !{!58, !59}
!59 = !{!"llvm.loop.unroll.disable"}
!60 = distinct !{!60, !18}
!61 = distinct !{!61, !18}
!62 = distinct !{!62, !18}
!63 = distinct !{!63, !18}
!64 = distinct !{!64, !18}
!65 = distinct !{!65, !18}
!66 = distinct !{!66, !18}
!67 = distinct !{!67, !18}
!68 = distinct !{!68, !18}
!69 = distinct !{!69, !18}
!70 = distinct !{!70, !18}
!71 = distinct !{!71, !18}
!72 = distinct !{!72, !18}
!73 = distinct !{!73, !18}
!74 = distinct !{!74, !18}
!75 = distinct !{!75, !18}
!76 = distinct !{!76, !18}
!77 = distinct !{!77, !18}
!78 = distinct !{!78, !18}
!79 = distinct !{!79, !18}
!80 = distinct !{!80, !59}
!81 = distinct !{!81, !18}
!82 = distinct !{!82, !18}
!83 = distinct !{!83, !18}
!84 = distinct !{!84, !18}
!85 = distinct !{!85, !18}
!86 = distinct !{!86, !18}
