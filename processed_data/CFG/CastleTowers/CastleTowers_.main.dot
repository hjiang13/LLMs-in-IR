digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55a5934e1600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%0:\l  %1 = alloca i32, align 4\l  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %3 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([28 x\l... i8], [28 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %2)\l  %4 = bitcast i32* %1 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #13\l  %5 = call nonnull align 8 dereferenceable(16) %\"class.std::basic_istream\"*\l... @_ZNSirsERi(%\"class.std::basic_istream\"* nonnull align 8 dereferenceable(16)\l... @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)\l  %6 = load i32, i32* %1, align 4, !tbaa !7\l  %7 = sext i32 %6 to i64\l  %8 = icmp slt i32 %6, 0\l  br i1 %8, label %9, label %10\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e1600:s0 -> Node0x55a5934e1b80;
	Node0x55a5934e1600:s1 -> Node0x55a5934e2250;
	Node0x55a5934e1b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%9:\l9:                                                \l  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x\l... i8], [49 x i8]* @.str.2, i64 0, i64 0)) #14\l  unreachable\l}"];
	Node0x55a5934e2250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%10:\l10:                                               \l  %11 = icmp eq i32 %6, 0\l  br i1 %11, label %20, label %12\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e2250:s0 -> Node0x55a5934e2740;
	Node0x55a5934e2250:s1 -> Node0x55a5934e2790;
	Node0x55a5934e2790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%12:\l12:                                               \l  %13 = shl nuw nsw i64 %7, 2\l  %14 = call noalias nonnull i8* @_Znwm(i64 %13) #15\l  %15 = bitcast i8* %14 to i32*\l  %16 = getelementptr i32, i32* %15, i64 %7\l  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 %13, i1\l... false)\l  %17 = ptrtoint i32* %16 to i64\l  %18 = load i32, i32* %1, align 4, !tbaa !7\l  %19 = icmp sgt i32 %18, 0\l  br i1 %19, label %37, label %20\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e2790:s0 -> Node0x55a5934e3100;
	Node0x55a5934e2790:s1 -> Node0x55a5934e2740;
	Node0x55a5934e2740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%20:\l20:                                               \l  %21 = phi i64 [ %17, %12 ], [ 0, %10 ], [ %17, %41 ]\l  %22 = phi i32* [ %15, %12 ], [ null, %10 ], [ %15, %41 ]\l  %23 = phi i32 [ %18, %12 ], [ 0, %10 ], [ %43, %41 ]\l  %24 = ptrtoint i32* %22 to i64\l  %25 = sub i64 %21, %24\l  %26 = icmp eq i64 %25, 0\l  br i1 %26, label %48, label %27\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e2740:s0 -> Node0x55a5934e3690;
	Node0x55a5934e2740:s1 -> Node0x55a5934e3720;
	Node0x55a5934e3720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%27:\l27:                                               \l  %28 = ashr exact i64 %25, 2\l  %29 = icmp ugt i64 %28, 2305843009213693951\l  br i1 %29, label %30, label %32\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e3720:s0 -> Node0x55a5934e39d0;
	Node0x55a5934e3720:s1 -> Node0x55a5934e3a20;
	Node0x55a5934e39d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%30:\l30:                                               \l  invoke void @_ZSt17__throw_bad_allocv() #14\l          to label %31 unwind label %279\l}"];
	Node0x55a5934e39d0 -> Node0x55a5934e3b90;
	Node0x55a5934e39d0 -> Node0x55a5934e3be0;
	Node0x55a5934e3b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%31:\l31:                                               \l  unreachable\l}"];
	Node0x55a5934e3a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%32:\l32:                                               \l  %33 = invoke noalias nonnull i8* @_Znwm(i64 %25) #15\l          to label %34 unwind label %279\l}"];
	Node0x55a5934e3a20 -> Node0x55a5934e4150;
	Node0x55a5934e3a20 -> Node0x55a5934e3be0;
	Node0x55a5934e4150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%34:\l34:                                               \l  %35 = bitcast i8* %33 to i32*\l  %36 = bitcast i32* %22 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4\l... %36, i64 %25, i1 false) #13\l  br label %48\l}"];
	Node0x55a5934e4150 -> Node0x55a5934e3690;
	Node0x55a5934e3100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i64 [ %42, %41 ], [ 0, %12 ]\l  %39 = getelementptr inbounds i32, i32* %15, i64 %38\l  %40 = invoke nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"* @_ZNSirsERi(%\"class.std::basic_istream\"* nonnull\l... align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4\l... dereferenceable(4) %39)\l          to label %41 unwind label %46\l}"];
	Node0x55a5934e3100 -> Node0x55a5934e3200;
	Node0x55a5934e3100 -> Node0x55a5934e4fa0;
	Node0x55a5934e3200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = add nuw nsw i64 %38, 1\l  %43 = load i32, i32* %1, align 4, !tbaa !7\l  %44 = sext i32 %43 to i64\l  %45 = icmp slt i64 %42, %44\l  br i1 %45, label %37, label %20, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e3200:s0 -> Node0x55a5934e3100;
	Node0x55a5934e3200:s1 -> Node0x55a5934e2740;
	Node0x55a5934e4fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%46:\l46:                                               \l  %47 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %282\l}"];
	Node0x55a5934e4fa0 -> Node0x55a5934e54c0;
	Node0x55a5934e3690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%48:\l48:                                               \l  %49 = phi i32* [ %35, %34 ], [ null, %20 ]\l  %50 = load i32, i32* %49, align 4, !tbaa !7\l  %51 = icmp sgt i32 %23, 1\l  br i1 %51, label %52, label %127\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e3690:s0 -> Node0x55a5934e5730;
	Node0x55a5934e3690:s1 -> Node0x55a5934e5780;
	Node0x55a5934e5730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%52:\l52:                                               \l  %53 = zext i32 %23 to i64\l  %54 = add nsw i64 %53, -1\l  %55 = icmp ult i64 %54, 8\l  br i1 %55, label %124, label %56\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e5730:s0 -> Node0x55a5934e5a10;
	Node0x55a5934e5730:s1 -> Node0x55a5934e5a60;
	Node0x55a5934e5a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%56:\l56:                                               \l  %57 = and i64 %54, -8\l  %58 = or i64 %57, 1\l  %59 = insertelement \<4 x i32\> poison, i32 %50, i32 0\l  %60 = shufflevector \<4 x i32\> %59, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %61 = add nsw i64 %57, -8\l  %62 = lshr exact i64 %61, 3\l  %63 = add nuw nsw i64 %62, 1\l  %64 = and i64 %63, 1\l  %65 = icmp eq i64 %61, 0\l  br i1 %65, label %98, label %66\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e5a60:s0 -> Node0x55a5934e60f0;
	Node0x55a5934e5a60:s1 -> Node0x55a5934e6140;
	Node0x55a5934e6140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%66:\l66:                                               \l  %67 = and i64 %63, 4611686018427387902\l  br label %68\l}"];
	Node0x55a5934e6140 -> Node0x55a5934e6330;
	Node0x55a5934e6330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%68:\l68:                                               \l  %69 = phi i64 [ 0, %66 ], [ %95, %68 ]\l  %70 = phi \<4 x i32\> [ %60, %66 ], [ %93, %68 ]\l  %71 = phi \<4 x i32\> [ %60, %66 ], [ %94, %68 ]\l  %72 = phi i64 [ %67, %66 ], [ %96, %68 ]\l  %73 = or i64 %69, 1\l  %74 = getelementptr inbounds i32, i32* %49, i64 %73\l  %75 = bitcast i32* %74 to \<4 x i32\>*\l  %76 = load \<4 x i32\>, \<4 x i32\>* %75, align 4, !tbaa !7\l  %77 = getelementptr inbounds i32, i32* %74, i64 4\l  %78 = bitcast i32* %77 to \<4 x i32\>*\l  %79 = load \<4 x i32\>, \<4 x i32\>* %78, align 4, !tbaa !7\l  %80 = icmp slt \<4 x i32\> %70, %76\l  %81 = icmp slt \<4 x i32\> %71, %79\l  %82 = select \<4 x i1\> %80, \<4 x i32\> %76, \<4 x i32\> %70\l  %83 = select \<4 x i1\> %81, \<4 x i32\> %79, \<4 x i32\> %71\l  %84 = or i64 %69, 9\l  %85 = getelementptr inbounds i32, i32* %49, i64 %84\l  %86 = bitcast i32* %85 to \<4 x i32\>*\l  %87 = load \<4 x i32\>, \<4 x i32\>* %86, align 4, !tbaa !7\l  %88 = getelementptr inbounds i32, i32* %85, i64 4\l  %89 = bitcast i32* %88 to \<4 x i32\>*\l  %90 = load \<4 x i32\>, \<4 x i32\>* %89, align 4, !tbaa !7\l  %91 = icmp slt \<4 x i32\> %82, %87\l  %92 = icmp slt \<4 x i32\> %83, %90\l  %93 = select \<4 x i1\> %91, \<4 x i32\> %87, \<4 x i32\> %82\l  %94 = select \<4 x i1\> %92, \<4 x i32\> %90, \<4 x i32\> %83\l  %95 = add nuw i64 %69, 16\l  %96 = add i64 %72, -2\l  %97 = icmp eq i64 %96, 0\l  br i1 %97, label %98, label %68, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e6330:s0 -> Node0x55a5934e60f0;
	Node0x55a5934e6330:s1 -> Node0x55a5934e6330;
	Node0x55a5934e60f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%98:\l98:                                               \l  %99 = phi \<4 x i32\> [ undef, %56 ], [ %93, %68 ]\l  %100 = phi \<4 x i32\> [ undef, %56 ], [ %94, %68 ]\l  %101 = phi i64 [ 0, %56 ], [ %95, %68 ]\l  %102 = phi \<4 x i32\> [ %60, %56 ], [ %93, %68 ]\l  %103 = phi \<4 x i32\> [ %60, %56 ], [ %94, %68 ]\l  %104 = icmp eq i64 %64, 0\l  br i1 %104, label %117, label %105\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e60f0:s0 -> Node0x55a5934e7ad0;
	Node0x55a5934e60f0:s1 -> Node0x55a5934e7b20;
	Node0x55a5934e7b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%105:\l105:                                              \l  %106 = or i64 %101, 1\l  %107 = getelementptr inbounds i32, i32* %49, i64 %106\l  %108 = bitcast i32* %107 to \<4 x i32\>*\l  %109 = load \<4 x i32\>, \<4 x i32\>* %108, align 4, !tbaa !7\l  %110 = getelementptr inbounds i32, i32* %107, i64 4\l  %111 = bitcast i32* %110 to \<4 x i32\>*\l  %112 = load \<4 x i32\>, \<4 x i32\>* %111, align 4, !tbaa !7\l  %113 = icmp slt \<4 x i32\> %103, %112\l  %114 = select \<4 x i1\> %113, \<4 x i32\> %112, \<4 x i32\> %103\l  %115 = icmp slt \<4 x i32\> %102, %109\l  %116 = select \<4 x i1\> %115, \<4 x i32\> %109, \<4 x i32\> %102\l  br label %117\l}"];
	Node0x55a5934e7b20 -> Node0x55a5934e7ad0;
	Node0x55a5934e7ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%117:\l117:                                              \l  %118 = phi \<4 x i32\> [ %99, %98 ], [ %116, %105 ]\l  %119 = phi \<4 x i32\> [ %100, %98 ], [ %114, %105 ]\l  %120 = icmp sgt \<4 x i32\> %118, %119\l  %121 = select \<4 x i1\> %120, \<4 x i32\> %118, \<4 x i32\> %119\l  %122 = call i32 @llvm.vector.reduce.smax.v4i32(\<4 x i32\> %121)\l  %123 = icmp eq i64 %54, %57\l  br i1 %123, label %127, label %124\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e7ad0:s0 -> Node0x55a5934e5780;
	Node0x55a5934e7ad0:s1 -> Node0x55a5934e5a10;
	Node0x55a5934e5a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%124:\l124:                                              \l  %125 = phi i64 [ 1, %52 ], [ %58, %117 ]\l  %126 = phi i32 [ %50, %52 ], [ %122, %117 ]\l  br label %218\l}"];
	Node0x55a5934e5a10 -> Node0x55a5934e88f0;
	Node0x55a5934e5780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%127:\l127:                                              \l  %128 = phi i32 [ %50, %48 ], [ %122, %117 ], [ %224, %218 ]\l  %129 = icmp sgt i32 %23, 0\l  br i1 %129, label %130, label %237\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e5780:s0 -> Node0x55a5934e9320;
	Node0x55a5934e5780:s1 -> Node0x55a5934e9370;
	Node0x55a5934e9320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%130:\l130:                                              \l  %131 = zext i32 %23 to i64\l  %132 = icmp eq i32 %50, %128\l  %133 = zext i1 %132 to i32\l  %134 = icmp eq i32 %23, 1\l  br i1 %134, label %237, label %135, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e9320:s0 -> Node0x55a5934e9370;
	Node0x55a5934e9320:s1 -> Node0x55a5934e9670;
	Node0x55a5934e9670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%135:\l135:                                              \l  %136 = add nsw i64 %131, -1\l  %137 = icmp ult i64 %136, 8\l  br i1 %137, label %215, label %138\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e9670:s0 -> Node0x55a5934e9ea0;
	Node0x55a5934e9670:s1 -> Node0x55a5934e9ef0;
	Node0x55a5934e9ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%138:\l138:                                              \l  %139 = and i64 %136, -8\l  %140 = or i64 %139, 1\l  %141 = insertelement \<4 x i32\> \<i32 poison, i32 0, i32 0, i32 0\>, i32 %133,\l... i32 0\l  %142 = insertelement \<4 x i32\> poison, i32 %128, i32 0\l  %143 = shufflevector \<4 x i32\> %142, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %144 = insertelement \<4 x i32\> poison, i32 %128, i32 0\l  %145 = shufflevector \<4 x i32\> %144, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %146 = add nsw i64 %139, -8\l  %147 = lshr exact i64 %146, 3\l  %148 = add nuw nsw i64 %147, 1\l  %149 = and i64 %148, 1\l  %150 = icmp eq i64 %146, 0\l  br i1 %150, label %189, label %151\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e9ef0:s0 -> Node0x55a5934ea750;
	Node0x55a5934e9ef0:s1 -> Node0x55a5934ea7a0;
	Node0x55a5934ea7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%151:\l151:                                              \l  %152 = and i64 %148, 4611686018427387902\l  br label %153\l}"];
	Node0x55a5934ea7a0 -> Node0x55a5934ea970;
	Node0x55a5934ea970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%153:\l153:                                              \l  %154 = phi i64 [ 0, %151 ], [ %184, %153 ]\l  %155 = phi \<4 x i32\> [ %141, %151 ], [ %182, %153 ]\l  %156 = phi \<4 x i32\> [ zeroinitializer, %151 ], [ %183, %153 ]\l  %157 = phi i64 [ %152, %151 ], [ %185, %153 ]\l  %158 = or i64 %154, 1\l  %159 = getelementptr inbounds i32, i32* %49, i64 %158\l  %160 = bitcast i32* %159 to \<4 x i32\>*\l  %161 = load \<4 x i32\>, \<4 x i32\>* %160, align 4, !tbaa !7\l  %162 = getelementptr inbounds i32, i32* %159, i64 4\l  %163 = bitcast i32* %162 to \<4 x i32\>*\l  %164 = load \<4 x i32\>, \<4 x i32\>* %163, align 4, !tbaa !7\l  %165 = icmp eq \<4 x i32\> %161, %143\l  %166 = icmp eq \<4 x i32\> %164, %145\l  %167 = zext \<4 x i1\> %165 to \<4 x i32\>\l  %168 = zext \<4 x i1\> %166 to \<4 x i32\>\l  %169 = add \<4 x i32\> %155, %167\l  %170 = add \<4 x i32\> %156, %168\l  %171 = or i64 %154, 9\l  %172 = getelementptr inbounds i32, i32* %49, i64 %171\l  %173 = bitcast i32* %172 to \<4 x i32\>*\l  %174 = load \<4 x i32\>, \<4 x i32\>* %173, align 4, !tbaa !7\l  %175 = getelementptr inbounds i32, i32* %172, i64 4\l  %176 = bitcast i32* %175 to \<4 x i32\>*\l  %177 = load \<4 x i32\>, \<4 x i32\>* %176, align 4, !tbaa !7\l  %178 = icmp eq \<4 x i32\> %174, %143\l  %179 = icmp eq \<4 x i32\> %177, %145\l  %180 = zext \<4 x i1\> %178 to \<4 x i32\>\l  %181 = zext \<4 x i1\> %179 to \<4 x i32\>\l  %182 = add \<4 x i32\> %169, %180\l  %183 = add \<4 x i32\> %170, %181\l  %184 = add nuw i64 %154, 16\l  %185 = add i64 %157, -2\l  %186 = icmp eq i64 %185, 0\l  br i1 %186, label %187, label %153, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55a5934ea970:s0 -> Node0x55a5934ebcf0;
	Node0x55a5934ea970:s1 -> Node0x55a5934ea970;
	Node0x55a5934ebcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%187:\l187:                                              \l  %188 = or i64 %184, 1\l  br label %189\l}"];
	Node0x55a5934ebcf0 -> Node0x55a5934ea750;
	Node0x55a5934ea750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%189:\l189:                                              \l  %190 = phi \<4 x i32\> [ undef, %138 ], [ %182, %187 ]\l  %191 = phi \<4 x i32\> [ undef, %138 ], [ %183, %187 ]\l  %192 = phi i64 [ 1, %138 ], [ %188, %187 ]\l  %193 = phi \<4 x i32\> [ %141, %138 ], [ %182, %187 ]\l  %194 = phi \<4 x i32\> [ zeroinitializer, %138 ], [ %183, %187 ]\l  %195 = icmp eq i64 %149, 0\l  br i1 %195, label %209, label %196\l|{<s0>T|<s1>F}}"];
	Node0x55a5934ea750:s0 -> Node0x55a5934ec370;
	Node0x55a5934ea750:s1 -> Node0x55a5934ec3c0;
	Node0x55a5934ec3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%196:\l196:                                              \l  %197 = getelementptr inbounds i32, i32* %49, i64 %192\l  %198 = getelementptr inbounds i32, i32* %197, i64 4\l  %199 = bitcast i32* %198 to \<4 x i32\>*\l  %200 = load \<4 x i32\>, \<4 x i32\>* %199, align 4, !tbaa !7\l  %201 = icmp eq \<4 x i32\> %200, %145\l  %202 = zext \<4 x i1\> %201 to \<4 x i32\>\l  %203 = add \<4 x i32\> %194, %202\l  %204 = bitcast i32* %197 to \<4 x i32\>*\l  %205 = load \<4 x i32\>, \<4 x i32\>* %204, align 4, !tbaa !7\l  %206 = icmp eq \<4 x i32\> %205, %143\l  %207 = zext \<4 x i1\> %206 to \<4 x i32\>\l  %208 = add \<4 x i32\> %193, %207\l  br label %209\l}"];
	Node0x55a5934ec3c0 -> Node0x55a5934ec370;
	Node0x55a5934ec370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%209:\l209:                                              \l  %210 = phi \<4 x i32\> [ %190, %189 ], [ %208, %196 ]\l  %211 = phi \<4 x i32\> [ %191, %189 ], [ %203, %196 ]\l  %212 = add \<4 x i32\> %211, %210\l  %213 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %212)\l  %214 = icmp eq i64 %136, %139\l  br i1 %214, label %237, label %215\l|{<s0>T|<s1>F}}"];
	Node0x55a5934ec370:s0 -> Node0x55a5934e9370;
	Node0x55a5934ec370:s1 -> Node0x55a5934e9ea0;
	Node0x55a5934e9ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%215:\l215:                                              \l  %216 = phi i64 [ 1, %135 ], [ %140, %209 ]\l  %217 = phi i32 [ %133, %135 ], [ %213, %209 ]\l  br label %227\l}"];
	Node0x55a5934e9ea0 -> Node0x55a5934ed0f0;
	Node0x55a5934e88f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%218:\l218:                                              \l  %219 = phi i64 [ %225, %218 ], [ %125, %124 ]\l  %220 = phi i32 [ %224, %218 ], [ %126, %124 ]\l  %221 = getelementptr inbounds i32, i32* %49, i64 %219\l  %222 = load i32, i32* %221, align 4, !tbaa !7\l  %223 = icmp slt i32 %220, %222\l  %224 = select i1 %223, i32 %222, i32 %220\l  %225 = add nuw nsw i64 %219, 1\l  %226 = icmp eq i64 %225, %53\l  br i1 %226, label %127, label %218, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e88f0:s0 -> Node0x55a5934e5780;
	Node0x55a5934e88f0:s1 -> Node0x55a5934e88f0;
	Node0x55a5934ed0f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%227:\l227:                                              \l  %228 = phi i64 [ %235, %227 ], [ %216, %215 ]\l  %229 = phi i32 [ %234, %227 ], [ %217, %215 ]\l  %230 = getelementptr inbounds i32, i32* %49, i64 %228\l  %231 = load i32, i32* %230, align 4, !tbaa !7\l  %232 = icmp eq i32 %231, %128\l  %233 = zext i1 %232 to i32\l  %234 = add nuw nsw i32 %229, %233\l  %235 = add nuw nsw i64 %228, 1\l  %236 = icmp eq i64 %235, %131\l  br i1 %236, label %237, label %227, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x55a5934ed0f0:s0 -> Node0x55a5934e9370;
	Node0x55a5934ed0f0:s1 -> Node0x55a5934ed0f0;
	Node0x55a5934e9370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%237:\l237:                                              \l  %238 = phi i32 [ 0, %127 ], [ %133, %130 ], [ %213, %209 ], [ %234, %227 ]\l  %239 = bitcast i32* %49 to i8*\l  call void @_ZdlPv(i8* nonnull %239) #13\l  %240 = invoke nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSolsEi(%\"class.std::basic_ostream\"* nonnull\l... align 8 dereferenceable(8) @_ZSt4cout, i32 %238)\l          to label %241 unwind label %279\l}"];
	Node0x55a5934e9370 -> Node0x55a5934ee200;
	Node0x55a5934e9370 -> Node0x55a5934e3be0;
	Node0x55a5934ee200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%241:\l241:                                              \l  %242 = bitcast %\"class.std::basic_ostream\"* %240 to i8**\l  %243 = load i8*, i8** %242, align 8, !tbaa !18\l  %244 = getelementptr i8, i8* %243, i64 -24\l  %245 = bitcast i8* %244 to i64*\l  %246 = load i64, i64* %245, align 8\l  %247 = bitcast %\"class.std::basic_ostream\"* %240 to i8*\l  %248 = add nsw i64 %246, 240\l  %249 = getelementptr inbounds i8, i8* %247, i64 %248\l  %250 = bitcast i8* %249 to %\"class.std::ctype\"**\l  %251 = load %\"class.std::ctype\"*, %\"class.std::ctype\"** %250, align 8, !tbaa\l... !20\l  %252 = icmp eq %\"class.std::ctype\"* %251, null\l  br i1 %252, label %253, label %255\l|{<s0>T|<s1>F}}"];
	Node0x55a5934ee200:s0 -> Node0x55a5934d6530;
	Node0x55a5934ee200:s1 -> Node0x55a5934d65c0;
	Node0x55a5934d6530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%253:\l253:                                              \l  invoke void @_ZSt16__throw_bad_castv() #14\l          to label %254 unwind label %279\l}"];
	Node0x55a5934d6530 -> Node0x55a5934d6720;
	Node0x55a5934d6530 -> Node0x55a5934e3be0;
	Node0x55a5934d6720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4f69d970",label="{%254:\l254:                                              \l  unreachable\l}"];
	Node0x55a5934d65c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%255:\l255:                                              \l  %256 = getelementptr inbounds %\"class.std::ctype\", %\"class.std::ctype\"*\l... %251, i64 0, i32 8\l  %257 = load i8, i8* %256, align 8, !tbaa !23\l  %258 = icmp eq i8 %257, 0\l  br i1 %258, label %262, label %259\l|{<s0>T|<s1>F}}"];
	Node0x55a5934d65c0:s0 -> Node0x55a5934d6c70;
	Node0x55a5934d65c0:s1 -> Node0x55a5934d6d00;
	Node0x55a5934d6d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%259:\l259:                                              \l  %260 = getelementptr inbounds %\"class.std::ctype\", %\"class.std::ctype\"*\l... %251, i64 0, i32 9, i64 10\l  %261 = load i8, i8* %260, align 1, !tbaa !25\l  br label %269\l}"];
	Node0x55a5934d6d00 -> Node0x55a5934e8be0;
	Node0x55a5934d6c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%262:\l262:                                              \l  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%\"class.std::ctype\"* nonnull\l... align 8 dereferenceable(570) %251)\l          to label %263 unwind label %279\l}"];
	Node0x55a5934d6c70 -> Node0x55a5934e8d60;
	Node0x55a5934d6c70 -> Node0x55a5934e3be0;
	Node0x55a5934e8d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%263:\l263:                                              \l  %264 = bitcast %\"class.std::ctype\"* %251 to i8 (%\"class.std::ctype\"*, i8)***\l  %265 = load i8 (%\"class.std::ctype\"*, i8)**, i8 (%\"class.std::ctype\"*,\l... i8)*** %264, align 8, !tbaa !18\l  %266 = getelementptr inbounds i8 (%\"class.std::ctype\"*, i8)*, i8\l... (%\"class.std::ctype\"*, i8)** %265, i64 6\l  %267 = load i8 (%\"class.std::ctype\"*, i8)*, i8 (%\"class.std::ctype\"*, i8)**\l... %266, align 8\l  %268 = invoke signext i8 %267(%\"class.std::ctype\"* nonnull align 8\l... dereferenceable(570) %251, i8 signext 10)\l          to label %269 unwind label %279\l}"];
	Node0x55a5934e8d60 -> Node0x55a5934e8be0;
	Node0x55a5934e8d60 -> Node0x55a5934e3be0;
	Node0x55a5934e8be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%269:\l269:                                              \l  %270 = phi i8 [ %261, %259 ], [ %268, %263 ]\l  %271 = invoke nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSo3putEc(%\"class.std::basic_ostream\"*\l... nonnull align 8 dereferenceable(8) %240, i8 signext %270)\l          to label %272 unwind label %279\l}"];
	Node0x55a5934e8be0 -> Node0x55a5934f1660;
	Node0x55a5934e8be0 -> Node0x55a5934e3be0;
	Node0x55a5934f1660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%272:\l272:                                              \l  %273 = invoke nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSo5flushEv(%\"class.std::basic_ostream\"*\l... nonnull align 8 dereferenceable(8) %271)\l          to label %274 unwind label %279\l}"];
	Node0x55a5934f1660 -> Node0x55a5934f18f0;
	Node0x55a5934f1660 -> Node0x55a5934e3be0;
	Node0x55a5934f18f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%274:\l274:                                              \l  %275 = icmp eq i32* %22, null\l  br i1 %275, label %278, label %276\l|{<s0>T|<s1>F}}"];
	Node0x55a5934f18f0:s0 -> Node0x55a5934f1b40;
	Node0x55a5934f18f0:s1 -> Node0x55a5934f1b90;
	Node0x55a5934f1b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%276:\l276:                                              \l  %277 = bitcast i32* %22 to i8*\l  call void @_ZdlPv(i8* nonnull %277) #13\l  br label %278\l}"];
	Node0x55a5934f1b90 -> Node0x55a5934f1b40;
	Node0x55a5934f1b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%278:\l278:                                              \l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #13\l  ret i32 0\l}"];
	Node0x55a5934e3be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%279:\l279:                                              \l  %280 = landingpad \{ i8*, i32 \}\l          cleanup\l  %281 = icmp eq i32* %22, null\l  br i1 %281, label %286, label %282\l|{<s0>T|<s1>F}}"];
	Node0x55a5934e3be0:s0 -> Node0x55a5934f21a0;
	Node0x55a5934e3be0:s1 -> Node0x55a5934e54c0;
	Node0x55a5934e54c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%282:\l282:                                              \l  %283 = phi \{ i8*, i32 \} [ %47, %46 ], [ %280, %279 ]\l  %284 = phi i32* [ %15, %46 ], [ %22, %279 ]\l  %285 = bitcast i32* %284 to i8*\l  call void @_ZdlPv(i8* nonnull %285) #13\l  br label %286\l}"];
	Node0x55a5934e54c0 -> Node0x55a5934f21a0;
	Node0x55a5934f21a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%286:\l286:                                              \l  %287 = phi \{ i8*, i32 \} [ %283, %282 ], [ %280, %279 ]\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #13\l  resume \{ i8*, i32 \} %287\l}"];
}
