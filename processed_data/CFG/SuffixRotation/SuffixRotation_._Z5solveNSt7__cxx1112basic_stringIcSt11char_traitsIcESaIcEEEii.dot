digraph "CFG for '_Z5solveNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii' function" {
	label="CFG for '_Z5solveNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii' function";

	Node0x5581e7420350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%3:\l  store i32 %2, i32* @tk, align 4, !tbaa !3\l  store i32 %1, i32* @tio, align 4, !tbaa !3\l  %4 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %5 = load i64, i64* %4, align 8, !tbaa !7\l  %6 = trunc i64 %5 to i32\l  %7 = add nsw i32 %2, 1\l  %8 = sext i32 %7 to i64\l  %9 = getelementptr inbounds [32 x %\"class.std::__cxx11::basic_string\"], [32\l... x %\"class.std::__cxx11::basic_string\"]* @_Z2scB5cxx11, i64 0, i64 %8, i32 1\l  %10 = load i64, i64* %9, align 8, !tbaa !7\l  %11 = trunc i64 %10 to i32\l  %12 = sext i32 %2 to i64\l  %13 = sext i32 %1 to i64\l  %14 = getelementptr inbounds [32 x [1024 x i32]], [32 x [1024 x i32]]* @nci,\l... i64 0, i64 %12, i64 %13\l  %15 = load i32, i32* %14, align 4, !tbaa !3\l  %16 = getelementptr inbounds [32 x i32], [32 x i32]* @ng, i64 0, i64 %12\l  %17 = load i32, i32* %16, align 4, !tbaa !3\l  %18 = getelementptr inbounds [32 x %\"class.std::__cxx11::basic_string\"], [32\l... x %\"class.std::__cxx11::basic_string\"]* @_Z2scB5cxx11, i64 0, i64 %12, i32 1\l  %19 = load i64, i64* %18, align 8, !tbaa !7\l  %20 = urem i64 %13, %19\l  %21 = getelementptr inbounds [32 x %\"class.std::__cxx11::basic_string\"], [32\l... x %\"class.std::__cxx11::basic_string\"]* @_Z2scB5cxx11, i64 0, i64 %12, i32 0,\l... i32 0\l  %22 = load i8*, i8** %21, align 16, !tbaa !12\l  %23 = getelementptr inbounds i8, i8* %22, i64 %20\l  %24 = load i8, i8* %23, align 1, !tbaa !13\l  %25 = sext i8 %24 to i32\l  %26 = shl i32 %2, 24\l  %27 = add i32 %26, 1627389952\l  %28 = ashr exact i32 %27, 24\l  %29 = icmp eq i32 %28, %25\l  br i1 %29, label %30, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5581e7420350:s0 -> Node0x5581e7423920;
	Node0x5581e7420350:s1 -> Node0x5581e7425240;
	Node0x5581e7423920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%30:\l30:                                               \l  %31 = add i32 %1, -1\l  %32 = add i32 %31, %6\l  %33 = sext i32 %32 to i64\l  %34 = urem i64 %33, %19\l  %35 = getelementptr inbounds i8, i8* %22, i64 %34\l  %36 = load i8, i8* %35, align 1, !tbaa !13\l  %37 = icmp ne i8 %24, %36\l  br label %38\l}"];
	Node0x5581e7423920 -> Node0x5581e7425240;
	Node0x5581e7425240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%38:\l38:                                               \l  %39 = phi i1 [ false, %3 ], [ %37, %30 ]\l  %40 = getelementptr inbounds [32 x %\"class.std::vector\"], [32 x\l... %\"class.std::vector\"]* @p, i64 0, i64 %12, i32 0, i32 0, i32 0, i32 1\l  %41 = load i32*, i32** %40, align 8, !tbaa !14\l  %42 = getelementptr inbounds [32 x %\"class.std::vector\"], [32 x\l... %\"class.std::vector\"]* @p, i64 0, i64 %12, i32 0, i32 0, i32 0, i32 0\l  %43 = load i32*, i32** %42, align 8, !tbaa !16\l  %44 = ptrtoint i32* %41 to i64\l  %45 = ptrtoint i32* %43 to i64\l  %46 = sub i64 %44, %45\l  %47 = ashr exact i64 %46, 2\l  %48 = sub i32 %6, %1\l  %49 = shl i64 %5, 32\l  %50 = ashr exact i64 %49, 32\l  %51 = getelementptr inbounds [32 x [1024 x i32]], [32 x [1024 x i32]]* @nci,\l... i64 0, i64 %12, i64 %50\l  %52 = icmp ne i32 %17, 1\l  %53 = xor i1 %39, true\l  %54 = select i1 %52, i1 true, i1 %53\l  %55 = select i1 %54, i32 %17, i32 0\l  %56 = sext i1 %39 to i32\l  %57 = add i32 %17, %56\l  %58 = getelementptr inbounds [32 x [1024 x i32]], [32 x [1024 x i32]]* @d,\l... i64 0, i64 %12, i64 %13\l  %59 = add i32 %15, %11\l  %60 = icmp eq i64 %46, 0\l  br i1 %60, label %63, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5581e7425240:s0 -> Node0x5581e7426550;
	Node0x5581e7425240:s1 -> Node0x5581e74265e0;
	Node0x5581e74265e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%61:\l61:                                               \l  %62 = call i64 @llvm.umax.i64(i64 %47, i64 1)\l  br label %64\l}"];
	Node0x5581e74265e0 -> Node0x5581e7426970;
	Node0x5581e7426550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%63:\l63:                                               \l  ret void\l}"];
	Node0x5581e7426970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi i64 [ 0, %61 ], [ %105, %93 ]\l  %66 = add nsw i64 %65, -1\l  %67 = add nsw i64 %47, %66\l  %68 = urem i64 %67, %47\l  %69 = getelementptr inbounds i32, i32* %43, i64 %68\l  %70 = load i32, i32* %69, align 4, !tbaa !3\l  %71 = add i32 %48, %70\l  %72 = srem i32 %71, %6\l  %73 = getelementptr inbounds i32, i32* %43, i64 %65\l  %74 = load i32, i32* %73, align 4, !tbaa !3\l  %75 = add i32 %48, %74\l  %76 = srem i32 %75, %6\l  %77 = icmp sgt i32 %76, %72\l  %78 = add nsw i32 %76, %1\l  %79 = icmp sgt i32 %78, %6\l  br i1 %79, label %85, label %80\l|{<s0>T|<s1>F}}"];
	Node0x5581e7426970:s0 -> Node0x5581e74273a0;
	Node0x5581e7426970:s1 -> Node0x5581e7427430;
	Node0x5581e7427430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%80:\l80:                                               \l  %81 = sext i32 %78 to i64\l  %82 = getelementptr inbounds [32 x [1024 x i32]], [32 x [1024 x i32]]* @nci,\l... i64 0, i64 %12, i64 %81\l  %83 = load i32, i32* %82, align 4, !tbaa !3\l  %84 = sub nsw i32 %83, %15\l  br label %93\l}"];
	Node0x5581e7427430 -> Node0x5581e7426ab0;
	Node0x5581e74273a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%85:\l85:                                               \l  %86 = load i32, i32* %51, align 4, !tbaa !3\l  %87 = srem i32 %78, %6\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds [32 x [1024 x i32]], [32 x [1024 x i32]]* @nci,\l... i64 0, i64 %12, i64 %88\l  %90 = load i32, i32* %89, align 4, !tbaa !3\l  %91 = sub i32 %86, %15\l  %92 = add i32 %91, %90\l  br label %93\l}"];
	Node0x5581e74273a0 -> Node0x5581e7426ab0;
	Node0x5581e7426ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  %94 = phi i32 [ %84, %80 ], [ %92, %85 ]\l  %95 = select i1 %77, i32 %57, i32 %55\l  %96 = add i32 %59, %94\l  %97 = srem i32 %96, %11\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds [32 x [1024 x i32]], [32 x [1024 x i32]]* @d,\l... i64 0, i64 %8, i64 %98\l  %100 = load i32, i32* %99, align 4, !tbaa !3\l  %101 = add nsw i32 %100, %95\l  %102 = load i32, i32* %58, align 4, !tbaa !3\l  %103 = icmp slt i32 %101, %102\l  %104 = select i1 %103, i32 %101, i32 %102\l  store i32 %104, i32* %58, align 4, !tbaa !3\l  %105 = add nuw nsw i64 %65, 1\l  %106 = icmp eq i64 %105, %62\l  br i1 %106, label %63, label %64, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5581e7426ab0:s0 -> Node0x5581e7426550;
	Node0x5581e7426ab0:s1 -> Node0x5581e7426970;
}
