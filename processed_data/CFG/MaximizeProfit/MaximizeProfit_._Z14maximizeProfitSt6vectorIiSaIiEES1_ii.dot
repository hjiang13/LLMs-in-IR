digraph "CFG for '_Z14maximizeProfitSt6vectorIiSaIiEES1_ii' function" {
	label="CFG for '_Z14maximizeProfitSt6vectorIiSaIiEES1_ii' function";

	Node0x55f3930cd300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%4:\l  %5 = mul nsw i32 %3, %2\l  %6 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %7 = load i32*, i32** %6, align 8, !tbaa !3\l  %8 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %9 = load i32*, i32** %8, align 8, !tbaa !8\l  %10 = ptrtoint i32* %7 to i64\l  %11 = ptrtoint i32* %9 to i64\l  %12 = sub i64 %10, %11\l  %13 = icmp eq i64 %12, 0\l  br i1 %13, label %122, label %14\l|{<s0>T|<s1>F}}"];
	Node0x55f3930cd300:s0 -> Node0x55f3930cd350;
	Node0x55f3930cd300:s1 -> Node0x55f3930ce530;
	Node0x55f3930ce530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%14:\l14:                                               \l  %15 = ashr exact i64 %12, 2\l  %16 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %1,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %17 = load i32*, i32** %16, align 8, !tbaa !8\l  %18 = call i64 @llvm.umax.i64(i64 %15, i64 1)\l  %19 = icmp ult i64 %18, 8\l  br i1 %19, label %119, label %20\l|{<s0>T|<s1>F}}"];
	Node0x55f3930ce530:s0 -> Node0x55f3930cf1a0;
	Node0x55f3930ce530:s1 -> Node0x55f3930cf1f0;
	Node0x55f3930cf1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%20:\l20:                                               \l  %21 = and i64 %18, -8\l  %22 = insertelement \<4 x i32\> poison, i32 %5, i32 0\l  %23 = shufflevector \<4 x i32\> %22, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %24 = insertelement \<4 x i32\> poison, i32 %2, i32 0\l  %25 = shufflevector \<4 x i32\> %24, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %26 = insertelement \<4 x i32\> poison, i32 %2, i32 0\l  %27 = shufflevector \<4 x i32\> %26, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %28 = add i64 %21, -8\l  %29 = lshr exact i64 %28, 3\l  %30 = add nuw nsw i64 %29, 1\l  %31 = and i64 %30, 1\l  %32 = icmp eq i64 %28, 0\l  br i1 %32, label %84, label %33\l|{<s0>T|<s1>F}}"];
	Node0x55f3930cf1f0:s0 -> Node0x55f3930d0740;
	Node0x55f3930cf1f0:s1 -> Node0x55f3930d0790;
	Node0x55f3930d0790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%33:\l33:                                               \l  %34 = and i64 %30, 4611686018427387902\l  br label %35\l}"];
	Node0x55f3930d0790 -> Node0x55f3930d09b0;
	Node0x55f3930d09b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%35:\l35:                                               \l  %36 = phi i64 [ 0, %33 ], [ %81, %35 ]\l  %37 = phi \<4 x i32\> [ %23, %33 ], [ %79, %35 ]\l  %38 = phi \<4 x i32\> [ %23, %33 ], [ %80, %35 ]\l  %39 = phi i64 [ %34, %33 ], [ %82, %35 ]\l  %40 = getelementptr inbounds i32, i32* %9, i64 %36\l  %41 = bitcast i32* %40 to \<4 x i32\>*\l  %42 = load \<4 x i32\>, \<4 x i32\>* %41, align 4, !tbaa !9\l  %43 = getelementptr inbounds i32, i32* %40, i64 4\l  %44 = bitcast i32* %43 to \<4 x i32\>*\l  %45 = load \<4 x i32\>, \<4 x i32\>* %44, align 4, !tbaa !9\l  %46 = getelementptr inbounds i32, i32* %17, i64 %36\l  %47 = bitcast i32* %46 to \<4 x i32\>*\l  %48 = load \<4 x i32\>, \<4 x i32\>* %47, align 4, !tbaa !9\l  %49 = getelementptr inbounds i32, i32* %46, i64 4\l  %50 = bitcast i32* %49 to \<4 x i32\>*\l  %51 = load \<4 x i32\>, \<4 x i32\>* %50, align 4, !tbaa !9\l  %52 = mul \<4 x i32\> %42, %25\l  %53 = mul \<4 x i32\> %45, %27\l  %54 = mul \<4 x i32\> %52, %48\l  %55 = mul \<4 x i32\> %53, %51\l  %56 = icmp slt \<4 x i32\> %37, %54\l  %57 = icmp slt \<4 x i32\> %38, %55\l  %58 = select \<4 x i1\> %56, \<4 x i32\> %54, \<4 x i32\> %37\l  %59 = select \<4 x i1\> %57, \<4 x i32\> %55, \<4 x i32\> %38\l  %60 = or i64 %36, 8\l  %61 = getelementptr inbounds i32, i32* %9, i64 %60\l  %62 = bitcast i32* %61 to \<4 x i32\>*\l  %63 = load \<4 x i32\>, \<4 x i32\>* %62, align 4, !tbaa !9\l  %64 = getelementptr inbounds i32, i32* %61, i64 4\l  %65 = bitcast i32* %64 to \<4 x i32\>*\l  %66 = load \<4 x i32\>, \<4 x i32\>* %65, align 4, !tbaa !9\l  %67 = getelementptr inbounds i32, i32* %17, i64 %60\l  %68 = bitcast i32* %67 to \<4 x i32\>*\l  %69 = load \<4 x i32\>, \<4 x i32\>* %68, align 4, !tbaa !9\l  %70 = getelementptr inbounds i32, i32* %67, i64 4\l  %71 = bitcast i32* %70 to \<4 x i32\>*\l  %72 = load \<4 x i32\>, \<4 x i32\>* %71, align 4, !tbaa !9\l  %73 = mul \<4 x i32\> %63, %25\l  %74 = mul \<4 x i32\> %66, %27\l  %75 = mul \<4 x i32\> %73, %69\l  %76 = mul \<4 x i32\> %74, %72\l  %77 = icmp slt \<4 x i32\> %58, %75\l  %78 = icmp slt \<4 x i32\> %59, %76\l  %79 = select \<4 x i1\> %77, \<4 x i32\> %75, \<4 x i32\> %58\l  %80 = select \<4 x i1\> %78, \<4 x i32\> %76, \<4 x i32\> %59\l  %81 = add nuw i64 %36, 16\l  %82 = add i64 %39, -2\l  %83 = icmp eq i64 %82, 0\l  br i1 %83, label %84, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55f3930d09b0:s0 -> Node0x55f3930d0740;
	Node0x55f3930d09b0:s1 -> Node0x55f3930d09b0;
	Node0x55f3930d0740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%84:\l84:                                               \l  %85 = phi \<4 x i32\> [ undef, %20 ], [ %79, %35 ]\l  %86 = phi \<4 x i32\> [ undef, %20 ], [ %80, %35 ]\l  %87 = phi i64 [ 0, %20 ], [ %81, %35 ]\l  %88 = phi \<4 x i32\> [ %23, %20 ], [ %79, %35 ]\l  %89 = phi \<4 x i32\> [ %23, %20 ], [ %80, %35 ]\l  %90 = icmp eq i64 %31, 0\l  br i1 %90, label %112, label %91\l|{<s0>T|<s1>F}}"];
	Node0x55f3930d0740:s0 -> Node0x55f3930d3b40;
	Node0x55f3930d0740:s1 -> Node0x55f3930d3b90;
	Node0x55f3930d3b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%91:\l91:                                               \l  %92 = getelementptr inbounds i32, i32* %9, i64 %87\l  %93 = bitcast i32* %92 to \<4 x i32\>*\l  %94 = load \<4 x i32\>, \<4 x i32\>* %93, align 4, !tbaa !9\l  %95 = getelementptr inbounds i32, i32* %92, i64 4\l  %96 = bitcast i32* %95 to \<4 x i32\>*\l  %97 = load \<4 x i32\>, \<4 x i32\>* %96, align 4, !tbaa !9\l  %98 = getelementptr inbounds i32, i32* %17, i64 %87\l  %99 = bitcast i32* %98 to \<4 x i32\>*\l  %100 = load \<4 x i32\>, \<4 x i32\>* %99, align 4, !tbaa !9\l  %101 = getelementptr inbounds i32, i32* %98, i64 4\l  %102 = bitcast i32* %101 to \<4 x i32\>*\l  %103 = load \<4 x i32\>, \<4 x i32\>* %102, align 4, !tbaa !9\l  %104 = mul \<4 x i32\> %94, %25\l  %105 = mul \<4 x i32\> %97, %27\l  %106 = mul \<4 x i32\> %104, %100\l  %107 = mul \<4 x i32\> %105, %103\l  %108 = icmp slt \<4 x i32\> %89, %107\l  %109 = select \<4 x i1\> %108, \<4 x i32\> %107, \<4 x i32\> %89\l  %110 = icmp slt \<4 x i32\> %88, %106\l  %111 = select \<4 x i1\> %110, \<4 x i32\> %106, \<4 x i32\> %88\l  br label %112\l}"];
	Node0x55f3930d3b90 -> Node0x55f3930d3b40;
	Node0x55f3930d3b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%112:\l112:                                              \l  %113 = phi \<4 x i32\> [ %85, %84 ], [ %111, %91 ]\l  %114 = phi \<4 x i32\> [ %86, %84 ], [ %109, %91 ]\l  %115 = icmp sgt \<4 x i32\> %113, %114\l  %116 = select \<4 x i1\> %115, \<4 x i32\> %113, \<4 x i32\> %114\l  %117 = call i32 @llvm.vector.reduce.smax.v4i32(\<4 x i32\> %116)\l  %118 = icmp eq i64 %18, %21\l  br i1 %118, label %122, label %119\l|{<s0>T|<s1>F}}"];
	Node0x55f3930d3b40:s0 -> Node0x55f3930cd350;
	Node0x55f3930d3b40:s1 -> Node0x55f3930cf1a0;
	Node0x55f3930cf1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%119:\l119:                                              \l  %120 = phi i64 [ 0, %14 ], [ %21, %112 ]\l  %121 = phi i32 [ %5, %14 ], [ %117, %112 ]\l  br label %124\l}"];
	Node0x55f3930cf1a0 -> Node0x55f3930d4f30;
	Node0x55f3930cd350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%122:\l122:                                              \l  %123 = phi i32 [ %5, %4 ], [ %117, %112 ], [ %134, %124 ]\l  ret i32 %123\l}"];
	Node0x55f3930d4f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  %125 = phi i64 [ %135, %124 ], [ %120, %119 ]\l  %126 = phi i32 [ %134, %124 ], [ %121, %119 ]\l  %127 = getelementptr inbounds i32, i32* %9, i64 %125\l  %128 = load i32, i32* %127, align 4, !tbaa !9\l  %129 = getelementptr inbounds i32, i32* %17, i64 %125\l  %130 = load i32, i32* %129, align 4, !tbaa !9\l  %131 = mul i32 %128, %2\l  %132 = mul i32 %131, %130\l  %133 = icmp slt i32 %126, %132\l  %134 = select i1 %133, i32 %132, i32 %126\l  %135 = add nuw nsw i64 %125, 1\l  %136 = icmp eq i64 %135, %18\l  br i1 %136, label %122, label %124, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x55f3930d4f30:s0 -> Node0x55f3930cd350;
	Node0x55f3930d4f30:s1 -> Node0x55f3930d4f30;
}
