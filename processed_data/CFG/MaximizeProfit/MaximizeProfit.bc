; ModuleID = '../../Benchmarks/MaximizeProfit/MaximizeProfit.cpp'
source_filename = "../../Benchmarks/MaximizeProfit/MaximizeProfit.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [30 x i8] c"../input_files/MaximizeProfit\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str.2 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_MaximizeProfit.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind readonly uwtable willreturn
define dso_local i32 @_Z14maximizeProfitSt6vectorIiSaIiEES1_ii(%"class.std::vector"* nocapture readonly %0, %"class.std::vector"* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #3 {
  %5 = mul nsw i32 %3, %2
  %6 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8, !tbaa !3
  %8 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8, !tbaa !8
  %10 = ptrtoint i32* %7 to i64
  %11 = ptrtoint i32* %9 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %122, label %14

14:                                               ; preds = %4
  %15 = ashr exact i64 %12, 2
  %16 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8, !tbaa !8
  %18 = call i64 @llvm.umax.i64(i64 %15, i64 1)
  %19 = icmp ult i64 %18, 8
  br i1 %19, label %119, label %20

20:                                               ; preds = %14
  %21 = and i64 %18, -8
  %22 = insertelement <4 x i32> poison, i32 %5, i32 0
  %23 = shufflevector <4 x i32> %22, <4 x i32> poison, <4 x i32> zeroinitializer
  %24 = insertelement <4 x i32> poison, i32 %2, i32 0
  %25 = shufflevector <4 x i32> %24, <4 x i32> poison, <4 x i32> zeroinitializer
  %26 = insertelement <4 x i32> poison, i32 %2, i32 0
  %27 = shufflevector <4 x i32> %26, <4 x i32> poison, <4 x i32> zeroinitializer
  %28 = add i64 %21, -8
  %29 = lshr exact i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 1
  %32 = icmp eq i64 %28, 0
  br i1 %32, label %84, label %33

33:                                               ; preds = %20
  %34 = and i64 %30, 4611686018427387902
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %81, %35 ]
  %37 = phi <4 x i32> [ %23, %33 ], [ %79, %35 ]
  %38 = phi <4 x i32> [ %23, %33 ], [ %80, %35 ]
  %39 = phi i64 [ %34, %33 ], [ %82, %35 ]
  %40 = getelementptr inbounds i32, i32* %9, i64 %36
  %41 = bitcast i32* %40 to <4 x i32>*
  %42 = load <4 x i32>, <4 x i32>* %41, align 4, !tbaa !9
  %43 = getelementptr inbounds i32, i32* %40, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 4, !tbaa !9
  %46 = getelementptr inbounds i32, i32* %17, i64 %36
  %47 = bitcast i32* %46 to <4 x i32>*
  %48 = load <4 x i32>, <4 x i32>* %47, align 4, !tbaa !9
  %49 = getelementptr inbounds i32, i32* %46, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 4, !tbaa !9
  %52 = mul <4 x i32> %42, %25
  %53 = mul <4 x i32> %45, %27
  %54 = mul <4 x i32> %52, %48
  %55 = mul <4 x i32> %53, %51
  %56 = icmp slt <4 x i32> %37, %54
  %57 = icmp slt <4 x i32> %38, %55
  %58 = select <4 x i1> %56, <4 x i32> %54, <4 x i32> %37
  %59 = select <4 x i1> %57, <4 x i32> %55, <4 x i32> %38
  %60 = or i64 %36, 8
  %61 = getelementptr inbounds i32, i32* %9, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  %63 = load <4 x i32>, <4 x i32>* %62, align 4, !tbaa !9
  %64 = getelementptr inbounds i32, i32* %61, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  %66 = load <4 x i32>, <4 x i32>* %65, align 4, !tbaa !9
  %67 = getelementptr inbounds i32, i32* %17, i64 %60
  %68 = bitcast i32* %67 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 4, !tbaa !9
  %70 = getelementptr inbounds i32, i32* %67, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  %72 = load <4 x i32>, <4 x i32>* %71, align 4, !tbaa !9
  %73 = mul <4 x i32> %63, %25
  %74 = mul <4 x i32> %66, %27
  %75 = mul <4 x i32> %73, %69
  %76 = mul <4 x i32> %74, %72
  %77 = icmp slt <4 x i32> %58, %75
  %78 = icmp slt <4 x i32> %59, %76
  %79 = select <4 x i1> %77, <4 x i32> %75, <4 x i32> %58
  %80 = select <4 x i1> %78, <4 x i32> %76, <4 x i32> %59
  %81 = add nuw i64 %36, 16
  %82 = add i64 %39, -2
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %35, !llvm.loop !11

84:                                               ; preds = %35, %20
  %85 = phi <4 x i32> [ undef, %20 ], [ %79, %35 ]
  %86 = phi <4 x i32> [ undef, %20 ], [ %80, %35 ]
  %87 = phi i64 [ 0, %20 ], [ %81, %35 ]
  %88 = phi <4 x i32> [ %23, %20 ], [ %79, %35 ]
  %89 = phi <4 x i32> [ %23, %20 ], [ %80, %35 ]
  %90 = icmp eq i64 %31, 0
  br i1 %90, label %112, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds i32, i32* %9, i64 %87
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !tbaa !9
  %95 = getelementptr inbounds i32, i32* %92, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !tbaa !9
  %98 = getelementptr inbounds i32, i32* %17, i64 %87
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !tbaa !9
  %101 = getelementptr inbounds i32, i32* %98, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !tbaa !9
  %104 = mul <4 x i32> %94, %25
  %105 = mul <4 x i32> %97, %27
  %106 = mul <4 x i32> %104, %100
  %107 = mul <4 x i32> %105, %103
  %108 = icmp slt <4 x i32> %89, %107
  %109 = select <4 x i1> %108, <4 x i32> %107, <4 x i32> %89
  %110 = icmp slt <4 x i32> %88, %106
  %111 = select <4 x i1> %110, <4 x i32> %106, <4 x i32> %88
  br label %112

112:                                              ; preds = %84, %91
  %113 = phi <4 x i32> [ %85, %84 ], [ %111, %91 ]
  %114 = phi <4 x i32> [ %86, %84 ], [ %109, %91 ]
  %115 = icmp sgt <4 x i32> %113, %114
  %116 = select <4 x i1> %115, <4 x i32> %113, <4 x i32> %114
  %117 = call i32 @llvm.vector.reduce.smax.v4i32(<4 x i32> %116)
  %118 = icmp eq i64 %18, %21
  br i1 %118, label %122, label %119

119:                                              ; preds = %14, %112
  %120 = phi i64 [ 0, %14 ], [ %21, %112 ]
  %121 = phi i32 [ %5, %14 ], [ %117, %112 ]
  br label %124

122:                                              ; preds = %124, %112, %4
  %123 = phi i32 [ %5, %4 ], [ %117, %112 ], [ %134, %124 ]
  ret i32 %123

124:                                              ; preds = %119, %124
  %125 = phi i64 [ %135, %124 ], [ %120, %119 ]
  %126 = phi i32 [ %134, %124 ], [ %121, %119 ]
  %127 = getelementptr inbounds i32, i32* %9, i64 %125
  %128 = load i32, i32* %127, align 4, !tbaa !9
  %129 = getelementptr inbounds i32, i32* %17, i64 %125
  %130 = load i32, i32* %129, align 4, !tbaa !9
  %131 = mul i32 %128, %2
  %132 = mul i32 %131, %130
  %133 = icmp slt i32 %126, %132
  %134 = select i1 %133, i32 %132, i32 %126
  %135 = add nuw nsw i64 %125, 1
  %136 = icmp eq i64 %135, %18
  br i1 %136, label %122, label %124, !llvm.loop !14
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !16
  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %4)
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #15
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #15
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #15
  %9 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %10 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %9, i32* nonnull align 4 dereferenceable(4) %2)
  %11 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %10, i32* nonnull align 4 dereferenceable(4) %3)
  %12 = load i32, i32* %1, align 4, !tbaa !9
  %13 = sext i32 %12 to i64
  %14 = icmp slt i32 %12, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %0
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %0
  %17 = icmp eq i32 %12, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16
  %19 = shl nuw nsw i64 %13, 2
  %20 = call noalias nonnull i8* @_Znwm(i64 %19) #17
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr i32, i32* %21, i64 %13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 0, i64 %19, i1 false)
  %23 = load i32, i32* %1, align 4, !tbaa !9
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %42, %18, %16
  %26 = phi i32 [ %23, %18 ], [ 0, %16 ], [ %44, %42 ]
  %27 = phi i32* [ %22, %18 ], [ null, %16 ], [ %22, %42 ]
  %28 = phi i32* [ %21, %18 ], [ null, %16 ], [ %21, %42 ]
  %29 = sext i32 %26 to i64
  %30 = icmp slt i32 %26, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0)) #16
          to label %32 unwind label %71

32:                                               ; preds = %31
  unreachable

33:                                               ; preds = %25
  %34 = icmp eq i32 %26, 0
  br i1 %34, label %54, label %35

35:                                               ; preds = %33
  %36 = shl nuw nsw i64 %29, 2
  %37 = invoke noalias nonnull i8* @_Znwm(i64 %36) #17
          to label %49 unwind label %71

38:                                               ; preds = %18, %42
  %39 = phi i64 [ %43, %42 ], [ 0, %18 ]
  %40 = getelementptr inbounds i32, i32* %21, i64 %39
  %41 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %40)
          to label %42 unwind label %47

42:                                               ; preds = %38
  %43 = add nuw nsw i64 %39, 1
  %44 = load i32, i32* %1, align 4, !tbaa !9
  %45 = sext i32 %44 to i64
  %46 = icmp slt i64 %43, %45
  br i1 %46, label %38, label %25, !llvm.loop !17

47:                                               ; preds = %38
  %48 = landingpad { i8*, i32 }
          cleanup
  br label %299

49:                                               ; preds = %35
  %50 = bitcast i8* %37 to i32*
  %51 = getelementptr i32, i32* %50, i64 %29
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 0, i64 %36, i1 false)
  %52 = load i32, i32* %1, align 4, !tbaa !9
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %73, label %54

54:                                               ; preds = %77, %33, %49
  %55 = phi i32* [ %51, %49 ], [ null, %33 ], [ %51, %77 ]
  %56 = phi i32* [ %50, %49 ], [ null, %33 ], [ %50, %77 ]
  %57 = ptrtoint i32* %27 to i64
  %58 = ptrtoint i32* %28 to i64
  %59 = sub i64 %57, %58
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %84, label %61

61:                                               ; preds = %54
  %62 = ashr exact i64 %59, 2
  %63 = icmp ugt i64 %62, 2305843009213693951
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  invoke void @_ZSt17__throw_bad_allocv() #16
          to label %65 unwind label %282

65:                                               ; preds = %64
  unreachable

66:                                               ; preds = %61
  %67 = invoke noalias nonnull i8* @_Znwm(i64 %59) #17
          to label %68 unwind label %282

68:                                               ; preds = %66
  %69 = bitcast i8* %67 to i32*
  %70 = bitcast i32* %28 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %67, i8* align 4 %70, i64 %59, i1 false) #15
  br label %84

71:                                               ; preds = %35, %31
  %72 = landingpad { i8*, i32 }
          cleanup
  br label %296

73:                                               ; preds = %49, %77
  %74 = phi i64 [ %78, %77 ], [ 0, %49 ]
  %75 = getelementptr inbounds i32, i32* %50, i64 %74
  %76 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %75)
          to label %77 unwind label %82

77:                                               ; preds = %73
  %78 = add nuw nsw i64 %74, 1
  %79 = load i32, i32* %1, align 4, !tbaa !9
  %80 = sext i32 %79 to i64
  %81 = icmp slt i64 %78, %80
  br i1 %81, label %73, label %54, !llvm.loop !18

82:                                               ; preds = %73
  %83 = landingpad { i8*, i32 }
          cleanup
  br label %292

84:                                               ; preds = %54, %68
  %85 = phi i32* [ %69, %68 ], [ null, %54 ]
  %86 = ptrtoint i32* %55 to i64
  %87 = ptrtoint i32* %56 to i64
  %88 = sub i64 %86, %87
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %103, label %90

90:                                               ; preds = %84
  %91 = ashr exact i64 %88, 2
  %92 = icmp ugt i64 %91, 2305843009213693951
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  invoke void @_ZSt17__throw_bad_allocv() #16
          to label %94 unwind label %284

94:                                               ; preds = %93
  unreachable

95:                                               ; preds = %90
  %96 = invoke noalias nonnull i8* @_Znwm(i64 %88) #17
          to label %97 unwind label %284

97:                                               ; preds = %95
  %98 = bitcast i8* %96 to i32*
  %99 = bitcast i32* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %96, i8* align 4 %99, i64 %88, i1 false) #15
  %100 = load i32, i32* %2, align 4, !tbaa !9
  %101 = load i32, i32* %3, align 4, !tbaa !9
  %102 = mul nsw i32 %101, %100
  br i1 %60, label %229, label %107

103:                                              ; preds = %84
  %104 = load i32, i32* %2, align 4, !tbaa !9
  %105 = load i32, i32* %3, align 4, !tbaa !9
  %106 = mul nsw i32 %105, %104
  br i1 %60, label %233, label %107

107:                                              ; preds = %103, %97
  %108 = phi i32 [ %106, %103 ], [ %102, %97 ]
  %109 = phi i32 [ %104, %103 ], [ %100, %97 ]
  %110 = phi i32* [ null, %103 ], [ %98, %97 ]
  %111 = ashr exact i64 %59, 2
  %112 = call i64 @llvm.umax.i64(i64 %111, i64 1) #15
  %113 = icmp ult i64 %112, 8
  br i1 %113, label %213, label %114

114:                                              ; preds = %107
  %115 = and i64 %112, -8
  %116 = insertelement <4 x i32> poison, i32 %108, i32 0
  %117 = shufflevector <4 x i32> %116, <4 x i32> poison, <4 x i32> zeroinitializer
  %118 = insertelement <4 x i32> poison, i32 %109, i32 0
  %119 = shufflevector <4 x i32> %118, <4 x i32> poison, <4 x i32> zeroinitializer
  %120 = insertelement <4 x i32> poison, i32 %109, i32 0
  %121 = shufflevector <4 x i32> %120, <4 x i32> poison, <4 x i32> zeroinitializer
  %122 = add i64 %115, -8
  %123 = lshr exact i64 %122, 3
  %124 = add nuw nsw i64 %123, 1
  %125 = and i64 %124, 1
  %126 = icmp eq i64 %122, 0
  br i1 %126, label %178, label %127

127:                                              ; preds = %114
  %128 = and i64 %124, 4611686018427387902
  br label %129

129:                                              ; preds = %129, %127
  %130 = phi i64 [ 0, %127 ], [ %175, %129 ]
  %131 = phi <4 x i32> [ %117, %127 ], [ %173, %129 ]
  %132 = phi <4 x i32> [ %117, %127 ], [ %174, %129 ]
  %133 = phi i64 [ %128, %127 ], [ %176, %129 ]
  %134 = getelementptr inbounds i32, i32* %85, i64 %130
  %135 = bitcast i32* %134 to <4 x i32>*
  %136 = load <4 x i32>, <4 x i32>* %135, align 4, !tbaa !9
  %137 = getelementptr inbounds i32, i32* %134, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  %139 = load <4 x i32>, <4 x i32>* %138, align 4, !tbaa !9
  %140 = getelementptr inbounds i32, i32* %110, i64 %130
  %141 = bitcast i32* %140 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !tbaa !9
  %143 = getelementptr inbounds i32, i32* %140, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !tbaa !9
  %146 = mul <4 x i32> %136, %119
  %147 = mul <4 x i32> %139, %121
  %148 = mul <4 x i32> %146, %142
  %149 = mul <4 x i32> %147, %145
  %150 = icmp slt <4 x i32> %131, %148
  %151 = icmp slt <4 x i32> %132, %149
  %152 = select <4 x i1> %150, <4 x i32> %148, <4 x i32> %131
  %153 = select <4 x i1> %151, <4 x i32> %149, <4 x i32> %132
  %154 = or i64 %130, 8
  %155 = getelementptr inbounds i32, i32* %85, i64 %154
  %156 = bitcast i32* %155 to <4 x i32>*
  %157 = load <4 x i32>, <4 x i32>* %156, align 4, !tbaa !9
  %158 = getelementptr inbounds i32, i32* %155, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  %160 = load <4 x i32>, <4 x i32>* %159, align 4, !tbaa !9
  %161 = getelementptr inbounds i32, i32* %110, i64 %154
  %162 = bitcast i32* %161 to <4 x i32>*
  %163 = load <4 x i32>, <4 x i32>* %162, align 4, !tbaa !9
  %164 = getelementptr inbounds i32, i32* %161, i64 4
  %165 = bitcast i32* %164 to <4 x i32>*
  %166 = load <4 x i32>, <4 x i32>* %165, align 4, !tbaa !9
  %167 = mul <4 x i32> %157, %119
  %168 = mul <4 x i32> %160, %121
  %169 = mul <4 x i32> %167, %163
  %170 = mul <4 x i32> %168, %166
  %171 = icmp slt <4 x i32> %152, %169
  %172 = icmp slt <4 x i32> %153, %170
  %173 = select <4 x i1> %171, <4 x i32> %169, <4 x i32> %152
  %174 = select <4 x i1> %172, <4 x i32> %170, <4 x i32> %153
  %175 = add nuw i64 %130, 16
  %176 = add i64 %133, -2
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %129, !llvm.loop !19

178:                                              ; preds = %129, %114
  %179 = phi <4 x i32> [ undef, %114 ], [ %173, %129 ]
  %180 = phi <4 x i32> [ undef, %114 ], [ %174, %129 ]
  %181 = phi i64 [ 0, %114 ], [ %175, %129 ]
  %182 = phi <4 x i32> [ %117, %114 ], [ %173, %129 ]
  %183 = phi <4 x i32> [ %117, %114 ], [ %174, %129 ]
  %184 = icmp eq i64 %125, 0
  br i1 %184, label %206, label %185

185:                                              ; preds = %178
  %186 = getelementptr inbounds i32, i32* %85, i64 %181
  %187 = bitcast i32* %186 to <4 x i32>*
  %188 = load <4 x i32>, <4 x i32>* %187, align 4, !tbaa !9
  %189 = getelementptr inbounds i32, i32* %186, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  %191 = load <4 x i32>, <4 x i32>* %190, align 4, !tbaa !9
  %192 = getelementptr inbounds i32, i32* %110, i64 %181
  %193 = bitcast i32* %192 to <4 x i32>*
  %194 = load <4 x i32>, <4 x i32>* %193, align 4, !tbaa !9
  %195 = getelementptr inbounds i32, i32* %192, i64 4
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4, !tbaa !9
  %198 = mul <4 x i32> %188, %119
  %199 = mul <4 x i32> %191, %121
  %200 = mul <4 x i32> %198, %194
  %201 = mul <4 x i32> %199, %197
  %202 = icmp slt <4 x i32> %183, %201
  %203 = select <4 x i1> %202, <4 x i32> %201, <4 x i32> %183
  %204 = icmp slt <4 x i32> %182, %200
  %205 = select <4 x i1> %204, <4 x i32> %200, <4 x i32> %182
  br label %206

206:                                              ; preds = %178, %185
  %207 = phi <4 x i32> [ %179, %178 ], [ %205, %185 ]
  %208 = phi <4 x i32> [ %180, %178 ], [ %203, %185 ]
  %209 = icmp sgt <4 x i32> %207, %208
  %210 = select <4 x i1> %209, <4 x i32> %207, <4 x i32> %208
  %211 = call i32 @llvm.vector.reduce.smax.v4i32(<4 x i32> %210)
  %212 = icmp eq i64 %112, %115
  br i1 %212, label %229, label %213

213:                                              ; preds = %107, %206
  %214 = phi i64 [ 0, %107 ], [ %115, %206 ]
  %215 = phi i32 [ %108, %107 ], [ %211, %206 ]
  br label %216

216:                                              ; preds = %213, %216
  %217 = phi i64 [ %227, %216 ], [ %214, %213 ]
  %218 = phi i32 [ %226, %216 ], [ %215, %213 ]
  %219 = getelementptr inbounds i32, i32* %85, i64 %217
  %220 = load i32, i32* %219, align 4, !tbaa !9
  %221 = getelementptr inbounds i32, i32* %110, i64 %217
  %222 = load i32, i32* %221, align 4, !tbaa !9
  %223 = mul i32 %220, %109
  %224 = mul i32 %223, %222
  %225 = icmp slt i32 %218, %224
  %226 = select i1 %225, i32 %224, i32 %218
  %227 = add nuw nsw i64 %217, 1
  %228 = icmp eq i64 %227, %112
  br i1 %228, label %229, label %216, !llvm.loop !20

229:                                              ; preds = %216, %206, %97
  %230 = phi i32* [ %98, %97 ], [ %110, %206 ], [ %110, %216 ]
  %231 = phi i32 [ %102, %97 ], [ %211, %206 ], [ %226, %216 ]
  %232 = bitcast i32* %230 to i8*
  call void @_ZdlPv(i8* nonnull %232) #15
  br label %233

233:                                              ; preds = %103, %229
  %234 = phi i32 [ %231, %229 ], [ %106, %103 ]
  %235 = icmp eq i32* %85, null
  br i1 %235, label %238, label %236

236:                                              ; preds = %233
  %237 = bitcast i32* %85 to i8*
  call void @_ZdlPv(i8* nonnull %237) #15
  br label %238

238:                                              ; preds = %233, %236
  %239 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %234)
          to label %240 unwind label %282

240:                                              ; preds = %238
  %241 = bitcast %"class.std::basic_ostream"* %239 to i8**
  %242 = load i8*, i8** %241, align 8, !tbaa !21
  %243 = getelementptr i8, i8* %242, i64 -24
  %244 = bitcast i8* %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.std::basic_ostream"* %239 to i8*
  %247 = add nsw i64 %245, 240
  %248 = getelementptr inbounds i8, i8* %246, i64 %247
  %249 = bitcast i8* %248 to %"class.std::ctype"**
  %250 = load %"class.std::ctype"*, %"class.std::ctype"** %249, align 8, !tbaa !23
  %251 = icmp eq %"class.std::ctype"* %250, null
  br i1 %251, label %252, label %254

252:                                              ; preds = %240
  invoke void @_ZSt16__throw_bad_castv() #16
          to label %253 unwind label %282

253:                                              ; preds = %252
  unreachable

254:                                              ; preds = %240
  %255 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %250, i64 0, i32 8
  %256 = load i8, i8* %255, align 8, !tbaa !26
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %261, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %250, i64 0, i32 9, i64 10
  %260 = load i8, i8* %259, align 1, !tbaa !28
  br label %268

261:                                              ; preds = %254
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %250)
          to label %262 unwind label %282

262:                                              ; preds = %261
  %263 = bitcast %"class.std::ctype"* %250 to i8 (%"class.std::ctype"*, i8)***
  %264 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %263, align 8, !tbaa !21
  %265 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %264, i64 6
  %266 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %265, align 8
  %267 = invoke signext i8 %266(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %250, i8 signext 10)
          to label %268 unwind label %282

268:                                              ; preds = %262, %258
  %269 = phi i8 [ %260, %258 ], [ %267, %262 ]
  %270 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %239, i8 signext %269)
          to label %271 unwind label %282

271:                                              ; preds = %268
  %272 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %270)
          to label %273 unwind label %282

273:                                              ; preds = %271
  %274 = icmp eq i32* %56, null
  br i1 %274, label %277, label %275

275:                                              ; preds = %273
  %276 = bitcast i32* %56 to i8*
  call void @_ZdlPv(i8* nonnull %276) #15
  br label %277

277:                                              ; preds = %273, %275
  %278 = icmp eq i32* %28, null
  br i1 %278, label %281, label %279

279:                                              ; preds = %277
  %280 = bitcast i32* %28 to i8*
  call void @_ZdlPv(i8* nonnull %280) #15
  br label %281

281:                                              ; preds = %277, %279
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #15
  ret i32 0

282:                                              ; preds = %271, %268, %262, %261, %252, %66, %64, %238
  %283 = landingpad { i8*, i32 }
          cleanup
  br label %289

284:                                              ; preds = %93, %95
  %285 = landingpad { i8*, i32 }
          cleanup
  %286 = icmp eq i32* %85, null
  br i1 %286, label %289, label %287

287:                                              ; preds = %284
  %288 = bitcast i32* %85 to i8*
  call void @_ZdlPv(i8* nonnull %288) #15
  br label %289

289:                                              ; preds = %287, %284, %282
  %290 = phi { i8*, i32 } [ %283, %282 ], [ %285, %284 ], [ %285, %287 ]
  %291 = icmp eq i32* %56, null
  br i1 %291, label %296, label %292

292:                                              ; preds = %82, %289
  %293 = phi { i8*, i32 } [ %83, %82 ], [ %290, %289 ]
  %294 = phi i32* [ %50, %82 ], [ %56, %289 ]
  %295 = bitcast i32* %294 to i8*
  call void @_ZdlPv(i8* nonnull %295) #15
  br label %296

296:                                              ; preds = %71, %289, %292
  %297 = phi { i8*, i32 } [ %72, %71 ], [ %290, %289 ], [ %293, %292 ]
  %298 = icmp eq i32* %28, null
  br i1 %298, label %303, label %299

299:                                              ; preds = %47, %296
  %300 = phi { i8*, i32 } [ %48, %47 ], [ %297, %296 ]
  %301 = phi i32* [ %21, %47 ], [ %28, %296 ]
  %302 = bitcast i32* %301 to i8*
  call void @_ZdlPv(i8* nonnull %302) #15
  br label %303

303:                                              ; preds = %299, %296
  %304 = phi { i8*, i32 } [ %300, %299 ], [ %297, %296 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #15
  resume { i8*, i32 } %304
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare dso_local i32 @__gxx_personality_v0(...)

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #6

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #9

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #6

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_MaximizeProfit.cpp() #10 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #15
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #11

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #13

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.smax.v4i32(<4 x i32>) #14

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nofree nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #10 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { argmemonly nofree nounwind willreturn }
attributes #14 = { nofree nosync nounwind readnone willreturn }
attributes #15 = { nounwind }
attributes #16 = { noreturn }
attributes #17 = { allocsize(0) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !5, i64 0, !5, i64 8, !5, i64 16}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!4, !5, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !6, i64 0}
!11 = distinct !{!11, !12, !13}
!12 = !{!"llvm.loop.mustprogress"}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !12, !15, !13}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = !{!5, !5, i64 0}
!17 = distinct !{!17, !12}
!18 = distinct !{!18, !12}
!19 = distinct !{!19, !12, !13}
!20 = distinct !{!20, !12, !15, !13}
!21 = !{!22, !22, i64 0}
!22 = !{!"vtable pointer", !7, i64 0}
!23 = !{!24, !5, i64 240}
!24 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !5, i64 216, !6, i64 224, !25, i64 225, !5, i64 232, !5, i64 240, !5, i64 248, !5, i64 256}
!25 = !{!"bool", !6, i64 0}
!26 = !{!27, !6, i64 56}
!27 = !{!"_ZTSSt5ctypeIcE", !5, i64 16, !25, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !6, i64 56, !6, i64 57, !6, i64 313, !6, i64 569}
!28 = !{!6, !6, i64 0}
