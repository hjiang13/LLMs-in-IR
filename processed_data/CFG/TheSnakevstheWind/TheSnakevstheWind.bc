; ModuleID = '../../Benchmarks/TheSnakevstheWind/TheSnakevstheWind.cpp'
source_filename = "../../Benchmarks/TheSnakevstheWind/TheSnakevstheWind.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@n = dso_local global i32 0, align 4
@dd = dso_local local_unnamed_addr global i32 0, align 4
@dx = dso_local local_unnamed_addr global [4 x i32] [i32 0, i32 1, i32 0, i32 -1], align 16
@dy = dso_local local_unnamed_addr global [4 x i32] [i32 1, i32 0, i32 -1, i32 0], align 16
@vis = dso_local local_unnamed_addr global [63 x [63 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [33 x i8] c"../input_files/TheSnakevstheWind\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_TheSnakevstheWind.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local zeroext i1 @_Z3fitii(i32 %0, i32 %1) local_unnamed_addr #3 {
  %3 = icmp sgt i32 %0, -1
  br i1 %3, label %4, label %17

4:                                                ; preds = %2
  %5 = load i32, i32* @n, align 4, !tbaa !3
  %6 = icmp sgt i32 %5, %0
  %7 = icmp sgt i32 %1, -1
  %8 = select i1 %6, i1 %7, i1 false
  %9 = icmp sgt i32 %5, %1
  %10 = select i1 %8, i1 %9, i1 false
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = zext i32 %0 to i64
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds [63 x [63 x i32]], [63 x [63 x i32]]* @vis, i64 0, i64 %12, i64 %13
  %15 = load i32, i32* %14, align 4, !tbaa !3
  %16 = icmp eq i32 %15, 0
  br label %17

17:                                               ; preds = %11, %4, %2
  %18 = phi i1 [ false, %4 ], [ false, %2 ], [ %16, %11 ]
  ret i1 %18
}

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #4 {
  %1 = alloca i8, align 1
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !7
  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %4)
  %6 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %7 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8, !tbaa !9
  %8 = getelementptr i8, i8* %7, i64 -24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 216
  %12 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %11
  %13 = bitcast i8* %12 to %"class.std::basic_ostream"**
  store %"class.std::basic_ostream"* null, %"class.std::basic_ostream"** %13, align 8, !tbaa !11
  %14 = tail call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) @n)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #8
  %15 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i8* nonnull align 1 dereferenceable(1) %1)
  %16 = load i8, i8* %1, align 1, !tbaa !14
  switch i8 %16, label %19 [
    i8 101, label %20
    i8 115, label %17
    i8 119, label %18
  ]

17:                                               ; preds = %0
  br label %20

18:                                               ; preds = %0
  br label %20

19:                                               ; preds = %0
  br label %20

20:                                               ; preds = %0, %17, %19, %18
  %21 = phi i32 [ 1, %17 ], [ 3, %19 ], [ 2, %18 ], [ 0, %0 ]
  store i32 %21, i32* @dd, align 4, !tbaa !3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #8
  %22 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #8
  %23 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #8
  %24 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %2)
  %25 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %24, i32* nonnull align 4 dereferenceable(4) %3)
  %26 = load i32, i32* %2, align 4, !tbaa !3
  %27 = sext i32 %26 to i64
  %28 = load i32, i32* %3, align 4, !tbaa !3
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [63 x [63 x i32]], [63 x [63 x i32]]* @vis, i64 0, i64 %27, i64 %29
  store i32 1, i32* %30, align 4, !tbaa !3
  %31 = load i32, i32* @n, align 4, !tbaa !3
  %32 = mul i32 %31, %31
  %33 = load i32, i32* @dd, align 4
  %34 = add nsw i32 %33, 2
  %35 = srem i32 %34, 4
  %36 = sext i32 %33 to i64
  %37 = add nsw i32 %33, 1
  %38 = srem i32 %37, 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %39
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %39
  %42 = add nsw i32 %33, 3
  %43 = srem i32 %42, 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %44
  %46 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %44
  %47 = sext i32 %35 to i64
  %48 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %47
  %49 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %47
  %50 = icmp ult i32 %32, 2
  br i1 %50, label %56, label %51

51:                                               ; preds = %20
  %52 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %36
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %36
  %54 = load i32, i32* %53, align 4, !tbaa !3
  %55 = load i32, i32* %52, align 4, !tbaa !3
  br label %58

56:                                               ; preds = %121, %20
  %57 = icmp sgt i32 %31, 0
  br i1 %57, label %129, label %133

58:                                               ; preds = %51, %121
  %59 = phi i32 [ %28, %51 ], [ %122, %121 ]
  %60 = phi i32 [ %26, %51 ], [ %123, %121 ]
  %61 = phi i32 [ 2, %51 ], [ %127, %121 ]
  %62 = add nsw i32 %54, %60
  %63 = add nsw i32 %55, %59
  %64 = icmp sgt i32 %62, -1
  br i1 %64, label %65, label %78

65:                                               ; preds = %58
  %66 = icmp sgt i32 %31, %62
  %67 = icmp sgt i32 %63, -1
  %68 = select i1 %66, i1 %67, i1 false
  %69 = icmp sgt i32 %31, %63
  %70 = select i1 %68, i1 %69, i1 false
  br i1 %70, label %71, label %78

71:                                               ; preds = %65
  %72 = zext i32 %62 to i64
  %73 = zext i32 %63 to i64
  %74 = getelementptr inbounds [63 x [63 x i32]], [63 x [63 x i32]]* @vis, i64 0, i64 %72, i64 %73
  %75 = load i32, i32* %74, align 4, !tbaa !3
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %71
  store i32 %62, i32* %2, align 4, !tbaa !3
  store i32 %63, i32* %3, align 4, !tbaa !3
  br label %121

78:                                               ; preds = %58, %65, %71
  %79 = load i32, i32* %40, align 4, !tbaa !3
  %80 = add nsw i32 %79, %60
  %81 = load i32, i32* %41, align 4, !tbaa !3
  %82 = add nsw i32 %81, %59
  %83 = icmp sgt i32 %80, -1
  br i1 %83, label %84, label %97

84:                                               ; preds = %78
  %85 = icmp sgt i32 %31, %80
  %86 = icmp sgt i32 %82, -1
  %87 = select i1 %85, i1 %86, i1 false
  %88 = icmp sgt i32 %31, %82
  %89 = select i1 %87, i1 %88, i1 false
  br i1 %89, label %90, label %97

90:                                               ; preds = %84
  %91 = zext i32 %80 to i64
  %92 = zext i32 %82 to i64
  %93 = getelementptr inbounds [63 x [63 x i32]], [63 x [63 x i32]]* @vis, i64 0, i64 %91, i64 %92
  %94 = load i32, i32* %93, align 4, !tbaa !3
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %90
  store i32 %80, i32* %2, align 4, !tbaa !3
  store i32 %82, i32* %3, align 4, !tbaa !3
  br label %121

97:                                               ; preds = %78, %84, %90
  %98 = load i32, i32* %45, align 4, !tbaa !3
  %99 = add nsw i32 %98, %60
  %100 = load i32, i32* %46, align 4, !tbaa !3
  %101 = add nsw i32 %100, %59
  %102 = icmp sgt i32 %99, -1
  br i1 %102, label %103, label %116

103:                                              ; preds = %97
  %104 = icmp sgt i32 %31, %99
  %105 = icmp sgt i32 %101, -1
  %106 = select i1 %104, i1 %105, i1 false
  %107 = icmp sgt i32 %31, %101
  %108 = select i1 %106, i1 %107, i1 false
  br i1 %108, label %109, label %116

109:                                              ; preds = %103
  %110 = zext i32 %99 to i64
  %111 = zext i32 %101 to i64
  %112 = getelementptr inbounds [63 x [63 x i32]], [63 x [63 x i32]]* @vis, i64 0, i64 %110, i64 %111
  %113 = load i32, i32* %112, align 4, !tbaa !3
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %109
  store i32 %99, i32* %2, align 4, !tbaa !3
  store i32 %101, i32* %3, align 4, !tbaa !3
  br label %121

116:                                              ; preds = %97, %103, %109
  %117 = load i32, i32* %48, align 4, !tbaa !3
  %118 = add nsw i32 %117, %60
  store i32 %118, i32* %2, align 4, !tbaa !3
  %119 = load i32, i32* %49, align 4, !tbaa !3
  %120 = add nsw i32 %119, %59
  store i32 %120, i32* %3, align 4, !tbaa !3
  br label %121

121:                                              ; preds = %96, %116, %115, %77
  %122 = phi i32 [ %82, %96 ], [ %120, %116 ], [ %101, %115 ], [ %63, %77 ]
  %123 = phi i32 [ %80, %96 ], [ %118, %116 ], [ %99, %115 ], [ %62, %77 ]
  %124 = sext i32 %123 to i64
  %125 = sext i32 %122 to i64
  %126 = getelementptr inbounds [63 x [63 x i32]], [63 x [63 x i32]]* @vis, i64 0, i64 %124, i64 %125
  store i32 %61, i32* %126, align 4, !tbaa !3
  %127 = add nuw i32 %61, 1
  %128 = icmp eq i32 %61, %32
  br i1 %128, label %56, label %58, !llvm.loop !15

129:                                              ; preds = %56, %158
  %130 = phi i32 [ %163, %158 ], [ %31, %56 ]
  %131 = phi i64 [ %162, %158 ], [ 0, %56 ]
  %132 = icmp sgt i32 %130, 0
  br i1 %132, label %166, label %134

133:                                              ; preds = %158, %56
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #8
  ret i32 0

134:                                              ; preds = %166, %129
  %135 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !9
  %136 = getelementptr i8, i8* %135, i64 -24
  %137 = bitcast i8* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = add nsw i64 %138, 240
  %140 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %139
  %141 = bitcast i8* %140 to %"class.std::ctype"**
  %142 = load %"class.std::ctype"*, %"class.std::ctype"** %141, align 8, !tbaa !17
  %143 = icmp eq %"class.std::ctype"* %142, null
  br i1 %143, label %144, label %145

144:                                              ; preds = %134
  call void @_ZSt16__throw_bad_castv() #9
  unreachable

145:                                              ; preds = %134
  %146 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %142, i64 0, i32 8
  %147 = load i8, i8* %146, align 8, !tbaa !18
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %142, i64 0, i32 9, i64 10
  %151 = load i8, i8* %150, align 1, !tbaa !14
  br label %158

152:                                              ; preds = %145
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %142)
  %153 = bitcast %"class.std::ctype"* %142 to i8 (%"class.std::ctype"*, i8)***
  %154 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %153, align 8, !tbaa !9
  %155 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %154, i64 6
  %156 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %155, align 8
  %157 = call signext i8 %156(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %142, i8 signext 10)
  br label %158

158:                                              ; preds = %149, %152
  %159 = phi i8 [ %151, %149 ], [ %157, %152 ]
  %160 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 signext %159)
  %161 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %160)
  %162 = add nuw nsw i64 %131, 1
  %163 = load i32, i32* @n, align 4, !tbaa !3
  %164 = sext i32 %163 to i64
  %165 = icmp slt i64 %162, %164
  br i1 %165, label %129, label %133, !llvm.loop !20

166:                                              ; preds = %129, %166
  %167 = phi i64 [ %172, %166 ], [ 0, %129 ]
  %168 = getelementptr inbounds [63 x [63 x i32]], [63 x [63 x i32]]* @vis, i64 0, i64 %131, i64 %167
  %169 = load i32, i32* %168, align 4, !tbaa !3
  %170 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %169)
  %171 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %170, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1)
  %172 = add nuw nsw i64 %167, 1
  %173 = load i32, i32* @n, align 4, !tbaa !3
  %174 = sext i32 %173 to i64
  %175 = icmp slt i64 %172, %174
  br i1 %175, label %166, label %134, !llvm.loop !21
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

declare dso_local zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i8* nonnull align 1 dereferenceable(1)) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #6

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_TheSnakevstheWind.cpp() #7 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #6 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind }
attributes #9 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"int", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"any pointer", !5, i64 0}
!9 = !{!10, !10, i64 0}
!10 = !{!"vtable pointer", !6, i64 0}
!11 = !{!12, !8, i64 216}
!12 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !8, i64 216, !5, i64 224, !13, i64 225, !8, i64 232, !8, i64 240, !8, i64 248, !8, i64 256}
!13 = !{!"bool", !5, i64 0}
!14 = !{!5, !5, i64 0}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.mustprogress"}
!17 = !{!12, !8, i64 240}
!18 = !{!19, !5, i64 56}
!19 = !{!"_ZTSSt5ctypeIcE", !8, i64 16, !13, i64 24, !8, i64 32, !8, i64 40, !8, i64 48, !5, i64 56, !5, i64 57, !5, i64 313, !5, i64 569}
!20 = distinct !{!20, !16}
!21 = distinct !{!21, !16}
