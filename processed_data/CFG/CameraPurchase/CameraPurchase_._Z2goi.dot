digraph "CFG for '_Z2goi' function" {
	label="CFG for '_Z2goi' function";

	Node0x561c49851c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%1:\l  %2 = sext i32 %0 to i64\l  %3 = getelementptr inbounds [33 x %\"class.std::vector\"], [33 x\l... %\"class.std::vector\"]* @arr, i64 0, i64 %2, i32 0, i32 0, i32 0, i32 1\l  %4 = getelementptr inbounds [33 x %\"class.std::vector\"], [33 x\l... %\"class.std::vector\"]* @arr, i64 0, i64 %2, i32 0, i32 0, i32 0, i32 2\l  %5 = getelementptr inbounds [33 x %\"class.std::vector\"], [33 x\l... %\"class.std::vector\"]* @arr, i64 0, i64 %2, i32 0, i32 0, i32 0, i32 0\l  br label %7\l}"];
	Node0x561c49851c30 -> Node0x561c49852190;
	Node0x561c498521e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%6:\l6:                                                \l  ret void\l}"];
	Node0x561c49852190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%7:\l7:                                                \l  %8 = phi i32 [ 0, %1 ], [ %12, %70 ]\l  %9 = shl nuw nsw i32 1, %8\l  %10 = and i32 %9, %0\l  %11 = icmp ne i32 %10, 0\l  %12 = add nuw nsw i32 %8, 1\l  %13 = load i32, i32* @n, align 4\l  %14 = icmp sgt i32 %13, 0\l  %15 = select i1 %11, i1 %14, i1 false\l  br i1 %15, label %16, label %70\l|{<s0>T|<s1>F}}"];
	Node0x561c49852190:s0 -> Node0x561c49852000;
	Node0x561c49852190:s1 -> Node0x561c49854cd0;
	Node0x561c49852000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i64 [ %66, %65 ], [ 0, %7 ]\l  %18 = getelementptr inbounds [100005 x i32], [100005 x i32]* @brand, i64 0,\l... i64 %17\l  %19 = load i32, i32* %18, align 4, !tbaa !3\l  %20 = icmp eq i32 %19, %12\l  br i1 %20, label %21, label %65\l|{<s0>T|<s1>F}}"];
	Node0x561c49852000:s0 -> Node0x561c498557b0;
	Node0x561c49852000:s1 -> Node0x561c49855440;
	Node0x561c498557b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%21:\l21:                                               \l  %22 = getelementptr inbounds [100005 x i32], [100005 x i32]* @price, i64 0,\l... i64 %17\l  %23 = load i32*, i32** %3, align 8, !tbaa !7\l  %24 = load i32*, i32** %4, align 8, !tbaa !10\l  %25 = icmp eq i32* %23, %24\l  br i1 %25, label %29, label %26\l|{<s0>T|<s1>F}}"];
	Node0x561c498557b0:s0 -> Node0x561c49855d00;
	Node0x561c498557b0:s1 -> Node0x561c49855d90;
	Node0x561c49855d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%26:\l26:                                               \l  %27 = load i32, i32* %22, align 4, !tbaa !3\l  store i32 %27, i32* %23, align 4, !tbaa !3\l  %28 = getelementptr inbounds i32, i32* %23, i64 1\l  store i32* %28, i32** %3, align 8, !tbaa !7\l  br label %65\l}"];
	Node0x561c49855d90 -> Node0x561c49855440;
	Node0x561c49855d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%29:\l29:                                               \l  %30 = load i32*, i32** %5, align 8, !tbaa !11\l  %31 = ptrtoint i32* %23 to i64\l  %32 = ptrtoint i32* %30 to i64\l  %33 = sub i64 %31, %32\l  %34 = ashr exact i64 %33, 2\l  %35 = icmp eq i64 %33, 9223372036854775804\l  br i1 %35, label %36, label %37\l|{<s0>T|<s1>F}}"];
	Node0x561c49855d00:s0 -> Node0x561c498570e0;
	Node0x561c49855d00:s1 -> Node0x561c49857130;
	Node0x561c498570e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%36:\l36:                                               \l  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds\l... ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)) #13\l  unreachable\l}"];
	Node0x561c49857130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%37:\l37:                                               \l  %38 = icmp eq i64 %33, 0\l  %39 = select i1 %38, i64 1, i64 %34\l  %40 = add nsw i64 %39, %34\l  %41 = icmp ult i64 %40, %34\l  %42 = icmp ugt i64 %40, 2305843009213693951\l  %43 = or i1 %41, %42\l  %44 = select i1 %43, i64 2305843009213693951, i64 %40\l  %45 = icmp eq i64 %44, 0\l  br i1 %45, label %50, label %46\l|{<s0>T|<s1>F}}"];
	Node0x561c49857130:s0 -> Node0x561c49857a60;
	Node0x561c49857130:s1 -> Node0x561c49857ab0;
	Node0x561c49857ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%46:\l46:                                               \l  %47 = shl nuw nsw i64 %44, 2\l  %48 = tail call noalias nonnull i8* @_Znwm(i64 %47) #14\l  %49 = bitcast i8* %48 to i32*\l  br label %50\l}"];
	Node0x561c49857ab0 -> Node0x561c49857a60;
	Node0x561c49857a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%50:\l50:                                               \l  %51 = phi i32* [ %49, %46 ], [ null, %37 ]\l  %52 = getelementptr inbounds i32, i32* %51, i64 %34\l  %53 = load i32, i32* %22, align 4, !tbaa !3\l  store i32 %53, i32* %52, align 4, !tbaa !3\l  %54 = icmp sgt i64 %33, 0\l  br i1 %54, label %55, label %58\l|{<s0>T|<s1>F}}"];
	Node0x561c49857a60:s0 -> Node0x561c49858280;
	Node0x561c49857a60:s1 -> Node0x561c498582d0;
	Node0x561c49858280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%55:\l55:                                               \l  %56 = bitcast i32* %51 to i8*\l  %57 = bitcast i32* %30 to i8*\l  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57,\l... i64 %33, i1 false) #15\l  br label %58\l}"];
	Node0x561c49858280 -> Node0x561c498582d0;
	Node0x561c498582d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%58:\l58:                                               \l  %59 = getelementptr inbounds i32, i32* %52, i64 1\l  %60 = icmp eq i32* %30, null\l  br i1 %60, label %63, label %61\l|{<s0>T|<s1>F}}"];
	Node0x561c498582d0:s0 -> Node0x561c49858960;
	Node0x561c498582d0:s1 -> Node0x561c498589b0;
	Node0x561c498589b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%61:\l61:                                               \l  %62 = bitcast i32* %30 to i8*\l  tail call void @_ZdlPv(i8* nonnull %62) #15\l  br label %63\l}"];
	Node0x561c498589b0 -> Node0x561c49858960;
	Node0x561c49858960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%63:\l63:                                               \l  store i32* %51, i32** %5, align 8, !tbaa !11\l  store i32* %59, i32** %3, align 8, !tbaa !7\l  %64 = getelementptr inbounds i32, i32* %51, i64 %44\l  store i32* %64, i32** %4, align 8, !tbaa !10\l  br label %65\l}"];
	Node0x561c49858960 -> Node0x561c49855440;
	Node0x561c49855440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = add nuw nsw i64 %17, 1\l  %67 = load i32, i32* @n, align 4, !tbaa !3\l  %68 = sext i32 %67 to i64\l  %69 = icmp slt i64 %66, %68\l  br i1 %69, label %16, label %70, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x561c49855440:s0 -> Node0x561c49852000;
	Node0x561c49855440:s1 -> Node0x561c49854cd0;
	Node0x561c49854cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  %71 = icmp eq i32 %12, 6\l  br i1 %71, label %6, label %7, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x561c49854cd0:s0 -> Node0x561c498521e0;
	Node0x561c49854cd0:s1 -> Node0x561c49852190;
}
