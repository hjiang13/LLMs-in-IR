digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55556e023690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%0:\l  %1 = alloca i64, align 8\l  %2 = alloca %\"class.std::set\", align 8\l  %3 = alloca i32, align 4\l  %4 = alloca i64, align 8\l  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3\l  %6 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([21 x\l... i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8],\l... [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %5)\l  %7 = bitcast i64* %1 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13\l  %8 = getelementptr inbounds %\"class.std::set\", %\"class.std::set\"* %2, i64 0,\l... i32 0, i32 0, i32 0, i32 0, i32 0\l  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #13\l  %9 = getelementptr inbounds i8, i8* %8, i64 8\l  %10 = bitcast i8* %9 to i32*\l  store i32 0, i32* %10, align 8, !tbaa !7\l  %11 = getelementptr inbounds i8, i8* %8, i64 16\l  %12 = bitcast i8* %11 to %\"struct.std::_Rb_tree_node_base\"**\l  store %\"struct.std::_Rb_tree_node_base\"* null,\l... %\"struct.std::_Rb_tree_node_base\"** %12, align 8, !tbaa !12\l  %13 = getelementptr inbounds i8, i8* %8, i64 24\l  %14 = bitcast i8* %13 to i8**\l  store i8* %9, i8** %14, align 8, !tbaa !13\l  %15 = getelementptr inbounds i8, i8* %8, i64 32\l  %16 = bitcast i8* %15 to i8**\l  store i8* %9, i8** %16, align 8, !tbaa !14\l  %17 = getelementptr inbounds i8, i8* %8, i64 40\l  %18 = bitcast i8* %17 to i64*\l  store i64 0, i64* %18, align 8, !tbaa !15\l  %19 = bitcast i32* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #13\l  %20 = bitcast i64* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13\l  %21 = invoke nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"* @_ZNSirsERi(%\"class.std::basic_istream\"* nonnull\l... align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4\l... dereferenceable(4) %3)\l          to label %22 unwind label %154\l}"];
	Node0x55556e023690 -> Node0x55556e0264a0;
	Node0x55556e023690 -> Node0x55556e026530;
	Node0x55556e0264a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%22:\l22:                                               \l  %23 = invoke nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"*\l... @_ZNSi10_M_extractImEERSiRT_(%\"class.std::basic_istream\"* nonnull align 8\l... dereferenceable(16) @_ZSt3cin, i64* nonnull align 8 dereferenceable(8) %4)\l          to label %24 unwind label %154\l}"];
	Node0x55556e0264a0 -> Node0x55556e026850;
	Node0x55556e0264a0 -> Node0x55556e026530;
	Node0x55556e026850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%24:\l24:                                               \l  %25 = bitcast i8* %11 to %\"struct.std::_Rb_tree_node\"**\l  %26 = bitcast i8* %9 to %\"struct.std::_Rb_tree_node_base\"*\l  %27 = bitcast i8* %13 to %\"struct.std::_Rb_tree_node_base\"**\l  %28 = load i32, i32* %3, align 4, !tbaa !16\l  %29 = add nsw i32 %28, -1\l  store i32 %29, i32* %3, align 4, !tbaa !16\l  %30 = icmp sgt i32 %28, 0\l  br i1 %30, label %31, label %218\l|{<s0>T|<s1>F}}"];
	Node0x55556e026850:s0 -> Node0x55556e027580;
	Node0x55556e026850:s1 -> Node0x55556e027610;
	Node0x55556e027580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%31:\l31:                                               \l  %32 = phi i32 [ %214, %213 ], [ 0, %24 ]\l  %33 = invoke nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"*\l... @_ZNSi10_M_extractIlEERSiRT_(%\"class.std::basic_istream\"* nonnull align 8\l... dereferenceable(16) @_ZSt3cin, i64* nonnull align 8 dereferenceable(8) %1)\l          to label %34 unwind label %152\l}"];
	Node0x55556e027580 -> Node0x55556e027b00;
	Node0x55556e027580 -> Node0x55556e027b90;
	Node0x55556e027b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%34:\l34:                                               \l  %35 = load i64, i64* %1, align 8, !tbaa !18\l  %36 = load i64, i64* %4, align 8, !tbaa !18\l  %37 = add i64 %36, %35\l  %38 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %25, align 8, !tbaa !12\l  %39 = icmp eq %\"struct.std::_Rb_tree_node\"* %38, null\l  br i1 %39, label %175, label %40\l|{<s0>T|<s1>F}}"];
	Node0x55556e027b00:s0 -> Node0x55556e028e30;
	Node0x55556e027b00:s1 -> Node0x55556e028ec0;
	Node0x55556e028ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi %\"struct.std::_Rb_tree_node\"* [ %53, %40 ], [ %38, %34 ]\l  %42 = phi %\"struct.std::_Rb_tree_node_base\"* [ %50, %40 ], [ %26, %34 ]\l  %43 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %41, i64 0, i32 1\l  %44 = bitcast %\"struct.__gnu_cxx::__aligned_membuf\"* %43 to i64*\l  %45 = load i64, i64* %44, align 8, !tbaa !18\l  %46 = icmp slt i64 %45, %37\l  %47 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %41, i64 0, i32 0, i32 3\l  %48 = getelementptr %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %41, i64 0, i32 0\l  %49 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %41, i64 0, i32 0, i32 2\l  %50 = select i1 %46, %\"struct.std::_Rb_tree_node_base\"* %42,\l... %\"struct.std::_Rb_tree_node_base\"* %48\l  %51 = select i1 %46, %\"struct.std::_Rb_tree_node_base\"** %47,\l... %\"struct.std::_Rb_tree_node_base\"** %49\l  %52 = bitcast %\"struct.std::_Rb_tree_node_base\"** %51 to\l... %\"struct.std::_Rb_tree_node\"**\l  %53 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %52, align 8, !tbaa !3\l  %54 = icmp eq %\"struct.std::_Rb_tree_node\"* %53, null\l  br i1 %54, label %55, label %40, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x55556e028ec0:s0 -> Node0x55556e029e00;
	Node0x55556e028ec0:s1 -> Node0x55556e028ec0;
	Node0x55556e029e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%55:\l55:                                               \l  %56 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %50, %26\l  br i1 %56, label %65, label %57\l|{<s0>T|<s1>F}}"];
	Node0x55556e029e00:s0 -> Node0x55556e02a070;
	Node0x55556e029e00:s1 -> Node0x55556e02a0c0;
	Node0x55556e02a0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%57:\l57:                                               \l  %58 = select i1 %46, %\"struct.std::_Rb_tree_node_base\"* %42,\l... %\"struct.std::_Rb_tree_node_base\"* %48\l  %59 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %58, i64 1\l  %60 = bitcast %\"struct.std::_Rb_tree_node_base\"* %59 to i64*\l  %61 = load i64, i64* %60, align 8, !tbaa !18\l  %62 = icmp slt i64 %37, %61\l  %63 = select i1 %62, %\"struct.std::_Rb_tree_node_base\"* %26,\l... %\"struct.std::_Rb_tree_node_base\"* %50\l  %64 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %63, %26\l  br i1 %64, label %65, label %92\l|{<s0>T|<s1>F}}"];
	Node0x55556e02a0c0:s0 -> Node0x55556e02a070;
	Node0x55556e02a0c0:s1 -> Node0x55556e02a600;
	Node0x55556e02a070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%65:\l65:                                               \l  %66 = sub i64 %35, %36\l  br label %67\l}"];
	Node0x55556e02a070 -> Node0x55556e02a790;
	Node0x55556e02a790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%67:\l67:                                               \l  %68 = phi %\"struct.std::_Rb_tree_node\"* [ %80, %67 ], [ %38, %65 ]\l  %69 = phi %\"struct.std::_Rb_tree_node_base\"* [ %77, %67 ], [ %26, %65 ]\l  %70 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %68, i64 0, i32 1\l  %71 = bitcast %\"struct.__gnu_cxx::__aligned_membuf\"* %70 to i64*\l  %72 = load i64, i64* %71, align 8, !tbaa !18\l  %73 = icmp slt i64 %72, %66\l  %74 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %68, i64 0, i32 0, i32 3\l  %75 = getelementptr %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %68, i64 0, i32 0\l  %76 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %68, i64 0, i32 0, i32 2\l  %77 = select i1 %73, %\"struct.std::_Rb_tree_node_base\"* %69,\l... %\"struct.std::_Rb_tree_node_base\"* %75\l  %78 = select i1 %73, %\"struct.std::_Rb_tree_node_base\"** %74,\l... %\"struct.std::_Rb_tree_node_base\"** %76\l  %79 = bitcast %\"struct.std::_Rb_tree_node_base\"** %78 to\l... %\"struct.std::_Rb_tree_node\"**\l  %80 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %79, align 8, !tbaa !3\l  %81 = icmp eq %\"struct.std::_Rb_tree_node\"* %80, null\l  br i1 %81, label %82, label %67, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x55556e02a790:s0 -> Node0x55556e02afe0;
	Node0x55556e02a790:s1 -> Node0x55556e02a790;
	Node0x55556e02afe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%82:\l82:                                               \l  %83 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %77, %26\l  br i1 %83, label %159, label %84\l|{<s0>T|<s1>F}}"];
	Node0x55556e02afe0:s0 -> Node0x55556e02b780;
	Node0x55556e02afe0:s1 -> Node0x55556e02b7d0;
	Node0x55556e02b7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%84:\l84:                                               \l  %85 = select i1 %73, %\"struct.std::_Rb_tree_node_base\"* %69,\l... %\"struct.std::_Rb_tree_node_base\"* %75\l  %86 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %85, i64 1\l  %87 = bitcast %\"struct.std::_Rb_tree_node_base\"* %86 to i64*\l  %88 = load i64, i64* %87, align 8, !tbaa !18\l  %89 = icmp slt i64 %66, %88\l  %90 = select i1 %89, %\"struct.std::_Rb_tree_node_base\"* %26,\l... %\"struct.std::_Rb_tree_node_base\"* %77\l  %91 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %90, %26\l  br i1 %91, label %159, label %92\l|{<s0>T|<s1>F}}"];
	Node0x55556e02b7d0:s0 -> Node0x55556e02b780;
	Node0x55556e02b7d0:s1 -> Node0x55556e02a600;
	Node0x55556e02a600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%92:\l92:                                               \l  br label %93\l}"];
	Node0x55556e02a600 -> Node0x55556e02bd80;
	Node0x55556e02bd80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%93:\l93:                                               \l  %94 = phi %\"struct.std::_Rb_tree_node\"* [ %106, %93 ], [ %38, %92 ]\l  %95 = phi %\"struct.std::_Rb_tree_node_base\"* [ %103, %93 ], [ %26, %92 ]\l  %96 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %94, i64 0, i32 1\l  %97 = bitcast %\"struct.__gnu_cxx::__aligned_membuf\"* %96 to i64*\l  %98 = load i64, i64* %97, align 8, !tbaa !18\l  %99 = icmp slt i64 %98, %37\l  %100 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %94, i64 0, i32 0, i32 3\l  %101 = getelementptr %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %94, i64 0, i32 0\l  %102 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %94, i64 0, i32 0, i32 2\l  %103 = select i1 %99, %\"struct.std::_Rb_tree_node_base\"* %95,\l... %\"struct.std::_Rb_tree_node_base\"* %101\l  %104 = select i1 %99, %\"struct.std::_Rb_tree_node_base\"** %100,\l... %\"struct.std::_Rb_tree_node_base\"** %102\l  %105 = bitcast %\"struct.std::_Rb_tree_node_base\"** %104 to\l... %\"struct.std::_Rb_tree_node\"**\l  %106 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %105, align 8, !tbaa !3\l  %107 = icmp eq %\"struct.std::_Rb_tree_node\"* %106, null\l  br i1 %107, label %108, label %93, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x55556e02bd80:s0 -> Node0x55556e02c640;
	Node0x55556e02bd80:s1 -> Node0x55556e02bd80;
	Node0x55556e02c640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%108:\l108:                                              \l  %109 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %103, %26\l  br i1 %109, label %117, label %110\l|{<s0>T|<s1>F}}"];
	Node0x55556e02c640:s0 -> Node0x55556e02c7d0;
	Node0x55556e02c640:s1 -> Node0x55556e02c820;
	Node0x55556e02c820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%110:\l110:                                              \l  %111 = select i1 %99, %\"struct.std::_Rb_tree_node_base\"* %95,\l... %\"struct.std::_Rb_tree_node_base\"* %101\l  %112 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %111, i64 1\l  %113 = bitcast %\"struct.std::_Rb_tree_node_base\"* %112 to i64*\l  %114 = load i64, i64* %113, align 8, !tbaa !18\l  %115 = icmp slt i64 %37, %114\l  %116 = select i1 %115, %\"struct.std::_Rb_tree_node_base\"* %26,\l... %\"struct.std::_Rb_tree_node_base\"* %103\l  br label %117\l}"];
	Node0x55556e02c820 -> Node0x55556e02c7d0;
	Node0x55556e02c7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%117:\l117:                                              \l  %118 = phi %\"struct.std::_Rb_tree_node_base\"* [ %26, %108 ], [ %116, %110 ]\l  %119 = icmp ne %\"struct.std::_Rb_tree_node_base\"* %118, %26\l  %120 = sub i64 %35, %36\l  br label %121\l}"];
	Node0x55556e02c7d0 -> Node0x55556e02ced0;
	Node0x55556e02ced0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%121:\l121:                                              \l  %122 = phi %\"struct.std::_Rb_tree_node\"* [ %134, %121 ], [ %38, %117 ]\l  %123 = phi %\"struct.std::_Rb_tree_node_base\"* [ %131, %121 ], [ %26, %117 ]\l  %124 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %122, i64 0, i32 1\l  %125 = bitcast %\"struct.__gnu_cxx::__aligned_membuf\"* %124 to i64*\l  %126 = load i64, i64* %125, align 8, !tbaa !18\l  %127 = icmp slt i64 %126, %120\l  %128 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %122, i64 0, i32 0, i32 3\l  %129 = getelementptr %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %122, i64 0, i32 0\l  %130 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %122, i64 0, i32 0, i32 2\l  %131 = select i1 %127, %\"struct.std::_Rb_tree_node_base\"* %123,\l... %\"struct.std::_Rb_tree_node_base\"* %129\l  %132 = select i1 %127, %\"struct.std::_Rb_tree_node_base\"** %128,\l... %\"struct.std::_Rb_tree_node_base\"** %130\l  %133 = bitcast %\"struct.std::_Rb_tree_node_base\"** %132 to\l... %\"struct.std::_Rb_tree_node\"**\l  %134 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %133, align 8, !tbaa !3\l  %135 = icmp eq %\"struct.std::_Rb_tree_node\"* %134, null\l  br i1 %135, label %136, label %121, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x55556e02ced0:s0 -> Node0x55556e02e080;
	Node0x55556e02ced0:s1 -> Node0x55556e02ced0;
	Node0x55556e02e080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%136:\l136:                                              \l  %137 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %131, %26\l  br i1 %137, label %145, label %138\l|{<s0>T|<s1>F}}"];
	Node0x55556e02e080:s0 -> Node0x55556e02e210;
	Node0x55556e02e080:s1 -> Node0x55556e02e260;
	Node0x55556e02e260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%138:\l138:                                              \l  %139 = select i1 %127, %\"struct.std::_Rb_tree_node_base\"* %123,\l... %\"struct.std::_Rb_tree_node_base\"* %129\l  %140 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %139, i64 1\l  %141 = bitcast %\"struct.std::_Rb_tree_node_base\"* %140 to i64*\l  %142 = load i64, i64* %141, align 8, !tbaa !18\l  %143 = icmp slt i64 %120, %142\l  %144 = select i1 %143, %\"struct.std::_Rb_tree_node_base\"* %26,\l... %\"struct.std::_Rb_tree_node_base\"* %131\l  br label %145\l}"];
	Node0x55556e02e260 -> Node0x55556e02e210;
	Node0x55556e02e210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%145:\l145:                                              \l  %146 = phi %\"struct.std::_Rb_tree_node_base\"* [ %26, %136 ], [ %144, %138 ]\l  %147 = zext i1 %119 to i32\l  %148 = icmp ne %\"struct.std::_Rb_tree_node_base\"* %146, %26\l  %149 = zext i1 %148 to i32\l  %150 = add i32 %32, %147\l  %151 = add i32 %150, %149\l  br label %159\l}"];
	Node0x55556e02e210 -> Node0x55556e02b780;
	Node0x55556e027b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%152:\l152:                                              \l  %153 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %156\l}"];
	Node0x55556e027b90 -> Node0x55556e02eb60;
	Node0x55556e026530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%154:\l154:                                              \l  %155 = landingpad \{ i8*, i32 \}\l          cleanup\l  br label %156\l}"];
	Node0x55556e026530 -> Node0x55556e02eb60;
	Node0x55556e02eb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%156:\l156:                                              \l  %157 = phi \{ i8*, i32 \} [ %153, %152 ], [ %155, %154 ]\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #13\l  %158 = getelementptr inbounds %\"class.std::set\", %\"class.std::set\"* %2, i64\l... 0, i32 0\l  call void\l... @_ZNSt8_Rb_treeIllSt9_IdentityIlESt4lessIlESaIlEED2Ev(%\"class.std::_Rb_tree\"*\l... nonnull align 8 dereferenceable(48) %158) #13\l  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #13\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13\l  resume \{ i8*, i32 \} %157\l}"];
	Node0x55556e02b780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%159:\l159:                                              \l  %160 = phi i32 [ %151, %145 ], [ %32, %84 ], [ %32, %82 ]\l  br label %161\l}"];
	Node0x55556e02b780 -> Node0x55556e030080;
	Node0x55556e030080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%161:\l161:                                              \l  %162 = phi %\"struct.std::_Rb_tree_node\"* [ %171, %161 ], [ %38, %159 ]\l  %163 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %162, i64 0, i32 1\l  %164 = bitcast %\"struct.__gnu_cxx::__aligned_membuf\"* %163 to i64*\l  %165 = load i64, i64* %164, align 8, !tbaa !18\l  %166 = icmp slt i64 %35, %165\l  %167 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %162, i64 0, i32 0, i32 2\l  %168 = getelementptr inbounds %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %162, i64 0, i32 0, i32 3\l  %169 = select i1 %166, %\"struct.std::_Rb_tree_node_base\"** %167,\l... %\"struct.std::_Rb_tree_node_base\"** %168\l  %170 = bitcast %\"struct.std::_Rb_tree_node_base\"** %169 to\l... %\"struct.std::_Rb_tree_node\"**\l  %171 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %170, align 8, !tbaa !3\l  %172 = icmp eq %\"struct.std::_Rb_tree_node\"* %171, null\l  br i1 %172, label %173, label %161, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x55556e030080:s0 -> Node0x55556e030800;
	Node0x55556e030080:s1 -> Node0x55556e030080;
	Node0x55556e030800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%173:\l173:                                              \l  %174 = getelementptr %\"struct.std::_Rb_tree_node\",\l... %\"struct.std::_Rb_tree_node\"* %162, i64 0, i32 0\l  br i1 %166, label %175, label %182\l|{<s0>T|<s1>F}}"];
	Node0x55556e030800:s0 -> Node0x55556e028e30;
	Node0x55556e030800:s1 -> Node0x55556e030a40;
	Node0x55556e028e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%175:\l175:                                              \l  %176 = phi i32 [ %160, %173 ], [ %32, %34 ]\l  %177 = phi %\"struct.std::_Rb_tree_node_base\"* [ %174, %173 ], [ %26, %34 ]\l  %178 = load %\"struct.std::_Rb_tree_node_base\"*,\l... %\"struct.std::_Rb_tree_node_base\"** %27, align 8, !tbaa !13\l  %179 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %177, %178\l  br i1 %179, label %192, label %180\l|{<s0>T|<s1>F}}"];
	Node0x55556e028e30:s0 -> Node0x55556e0313b0;
	Node0x55556e028e30:s1 -> Node0x55556e031400;
	Node0x55556e031400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%180:\l180:                                              \l  %181 = call %\"struct.std::_Rb_tree_node_base\"*\l... @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%\"struct.std::_Rb_tree_node_b\l...ase\"* %177) #14\l  br label %182\l}"];
	Node0x55556e031400 -> Node0x55556e030a40;
	Node0x55556e030a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%182:\l182:                                              \l  %183 = phi i32 [ %176, %180 ], [ %160, %173 ]\l  %184 = phi %\"struct.std::_Rb_tree_node_base\"* [ %177, %180 ], [ %174, %173 ]\l  %185 = phi %\"struct.std::_Rb_tree_node_base\"* [ %181, %180 ], [ %174, %173 ]\l  %186 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %185, i64 1\l  %187 = bitcast %\"struct.std::_Rb_tree_node_base\"* %186 to i64*\l  %188 = load i64, i64* %187, align 8, !tbaa !18\l  %189 = icmp sge i64 %188, %35\l  %190 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %184, null\l  %191 = select i1 %189, i1 true, i1 %190\l  br i1 %191, label %213, label %194\l|{<s0>T|<s1>F}}"];
	Node0x55556e030a40:s0 -> Node0x55556e027780;
	Node0x55556e030a40:s1 -> Node0x55556e031d10;
	Node0x55556e0313b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%192:\l192:                                              \l  %193 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %177, null\l  br i1 %193, label %213, label %194\l|{<s0>T|<s1>F}}"];
	Node0x55556e0313b0:s0 -> Node0x55556e027780;
	Node0x55556e0313b0:s1 -> Node0x55556e031d10;
	Node0x55556e031d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%194:\l194:                                              \l  %195 = phi i32 [ %176, %192 ], [ %183, %182 ]\l  %196 = phi %\"struct.std::_Rb_tree_node_base\"* [ %177, %192 ], [ %184, %182 ]\l  %197 = icmp eq %\"struct.std::_Rb_tree_node_base\"* %196, %26\l  br i1 %197, label %203, label %198\l|{<s0>T|<s1>F}}"];
	Node0x55556e031d10:s0 -> Node0x55556e032140;
	Node0x55556e031d10:s1 -> Node0x55556e032190;
	Node0x55556e032190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%198:\l198:                                              \l  %199 = getelementptr inbounds %\"struct.std::_Rb_tree_node_base\",\l... %\"struct.std::_Rb_tree_node_base\"* %196, i64 1\l  %200 = bitcast %\"struct.std::_Rb_tree_node_base\"* %199 to i64*\l  %201 = load i64, i64* %200, align 8, !tbaa !18\l  %202 = icmp slt i64 %35, %201\l  br label %203\l}"];
	Node0x55556e032190 -> Node0x55556e032140;
	Node0x55556e032140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%203:\l203:                                              \l  %204 = phi i1 [ true, %194 ], [ %202, %198 ]\l  %205 = invoke noalias nonnull i8* @_Znwm(i64 40) #15\l          to label %206 unwind label %152\l}"];
	Node0x55556e032140 -> Node0x55556e0325c0;
	Node0x55556e032140 -> Node0x55556e027b90;
	Node0x55556e0325c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%206:\l206:                                              \l  %207 = getelementptr inbounds i8, i8* %205, i64 32\l  %208 = bitcast i8* %207 to i64*\l  %209 = load i64, i64* %1, align 8, !tbaa !18\l  store i64 %209, i64* %208, align 8, !tbaa !18\l  %210 = bitcast i8* %205 to %\"struct.std::_Rb_tree_node_base\"*\l  call void\l... @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext\l... %204, %\"struct.std::_Rb_tree_node_base\"* nonnull %210,\l... %\"struct.std::_Rb_tree_node_base\"* nonnull %196,\l... %\"struct.std::_Rb_tree_node_base\"* nonnull align 8 dereferenceable(32) %26)\l... #13\l  %211 = load i64, i64* %18, align 8, !tbaa !15\l  %212 = add i64 %211, 1\l  store i64 %212, i64* %18, align 8, !tbaa !15\l  br label %213\l}"];
	Node0x55556e0325c0 -> Node0x55556e027780;
	Node0x55556e027780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%213:\l213:                                              \l  %214 = phi i32 [ %195, %206 ], [ %176, %192 ], [ %183, %182 ]\l  %215 = load i32, i32* %3, align 4, !tbaa !16\l  %216 = add nsw i32 %215, -1\l  store i32 %216, i32* %3, align 4, !tbaa !16\l  %217 = icmp sgt i32 %215, 0\l  br i1 %217, label %31, label %218\l|{<s0>T|<s1>F}}"];
	Node0x55556e027780:s0 -> Node0x55556e027580;
	Node0x55556e027780:s1 -> Node0x55556e027610;
	Node0x55556e027610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%218:\l218:                                              \l  %219 = phi i32 [ 0, %24 ], [ %214, %213 ]\l  %220 = invoke nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSolsEi(%\"class.std::basic_ostream\"* nonnull\l... align 8 dereferenceable(8) @_ZSt4cout, i32 %219)\l          to label %221 unwind label %154\l}"];
	Node0x55556e027610 -> Node0x55556e033b00;
	Node0x55556e027610 -> Node0x55556e026530;
	Node0x55556e033b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%221:\l221:                                              \l  %222 = bitcast %\"class.std::basic_ostream\"* %220 to i8**\l  %223 = load i8*, i8** %222, align 8, !tbaa !22\l  %224 = getelementptr i8, i8* %223, i64 -24\l  %225 = bitcast i8* %224 to i64*\l  %226 = load i64, i64* %225, align 8\l  %227 = bitcast %\"class.std::basic_ostream\"* %220 to i8*\l  %228 = add nsw i64 %226, 240\l  %229 = getelementptr inbounds i8, i8* %227, i64 %228\l  %230 = bitcast i8* %229 to %\"class.std::ctype\"**\l  %231 = load %\"class.std::ctype\"*, %\"class.std::ctype\"** %230, align 8, !tbaa\l... !24\l  %232 = icmp eq %\"class.std::ctype\"* %231, null\l  br i1 %232, label %233, label %235\l|{<s0>T|<s1>F}}"];
	Node0x55556e033b00:s0 -> Node0x55556e034480;
	Node0x55556e033b00:s1 -> Node0x55556e0344d0;
	Node0x55556e034480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%233:\l233:                                              \l  invoke void @_ZSt16__throw_bad_castv() #16\l          to label %234 unwind label %154\l}"];
	Node0x55556e034480 -> Node0x55556e034660;
	Node0x55556e034480 -> Node0x55556e026530;
	Node0x55556e034660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%234:\l234:                                              \l  unreachable\l}"];
	Node0x55556e0344d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%235:\l235:                                              \l  %236 = getelementptr inbounds %\"class.std::ctype\", %\"class.std::ctype\"*\l... %231, i64 0, i32 8\l  %237 = load i8, i8* %236, align 8, !tbaa !27\l  %238 = icmp eq i8 %237, 0\l  br i1 %238, label %242, label %239\l|{<s0>T|<s1>F}}"];
	Node0x55556e0344d0:s0 -> Node0x55556e034be0;
	Node0x55556e0344d0:s1 -> Node0x55556e034c70;
	Node0x55556e034c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%239:\l239:                                              \l  %240 = getelementptr inbounds %\"class.std::ctype\", %\"class.std::ctype\"*\l... %231, i64 0, i32 9, i64 10\l  %241 = load i8, i8* %240, align 1, !tbaa !29\l  br label %249\l}"];
	Node0x55556e034c70 -> Node0x55556e035040;
	Node0x55556e034be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%242:\l242:                                              \l  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%\"class.std::ctype\"* nonnull\l... align 8 dereferenceable(570) %231)\l          to label %243 unwind label %154\l}"];
	Node0x55556e034be0 -> Node0x55556e0351c0;
	Node0x55556e034be0 -> Node0x55556e026530;
	Node0x55556e0351c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%243:\l243:                                              \l  %244 = bitcast %\"class.std::ctype\"* %231 to i8 (%\"class.std::ctype\"*, i8)***\l  %245 = load i8 (%\"class.std::ctype\"*, i8)**, i8 (%\"class.std::ctype\"*,\l... i8)*** %244, align 8, !tbaa !22\l  %246 = getelementptr inbounds i8 (%\"class.std::ctype\"*, i8)*, i8\l... (%\"class.std::ctype\"*, i8)** %245, i64 6\l  %247 = load i8 (%\"class.std::ctype\"*, i8)*, i8 (%\"class.std::ctype\"*, i8)**\l... %246, align 8\l  %248 = invoke signext i8 %247(%\"class.std::ctype\"* nonnull align 8\l... dereferenceable(570) %231, i8 signext 10)\l          to label %249 unwind label %154\l}"];
	Node0x55556e0351c0 -> Node0x55556e035040;
	Node0x55556e0351c0 -> Node0x55556e026530;
	Node0x55556e035040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%249:\l249:                                              \l  %250 = phi i8 [ %241, %239 ], [ %248, %243 ]\l  %251 = invoke nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSo3putEc(%\"class.std::basic_ostream\"*\l... nonnull align 8 dereferenceable(8) %220, i8 signext %250)\l          to label %252 unwind label %154\l}"];
	Node0x55556e035040 -> Node0x55556e035f00;
	Node0x55556e035040 -> Node0x55556e026530;
	Node0x55556e035f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%252:\l252:                                              \l  %253 = invoke nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSo5flushEv(%\"class.std::basic_ostream\"*\l... nonnull align 8 dereferenceable(8) %251)\l          to label %254 unwind label %154\l}"];
	Node0x55556e035f00 -> Node0x55556e0361c0;
	Node0x55556e035f00 -> Node0x55556e026530;
	Node0x55556e0361c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%254:\l254:                                              \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #13\l  %255 = getelementptr inbounds %\"class.std::set\", %\"class.std::set\"* %2, i64\l... 0, i32 0\l  %256 = load %\"struct.std::_Rb_tree_node\"*, %\"struct.std::_Rb_tree_node\"**\l... %25, align 8, !tbaa !12\l  invoke void\l... @_ZNSt8_Rb_treeIllSt9_IdentityIlESt4lessIlESaIlEE8_M_eraseEPSt13_Rb_tree_nodeI\l...lE(%\"class.std::_Rb_tree\"* nonnull align 8 dereferenceable(48) %255,\l... %\"struct.std::_Rb_tree_node\"* %256)\l          to label %260 unwind label %257\l}"];
	Node0x55556e0361c0 -> Node0x55556e02d460;
	Node0x55556e0361c0 -> Node0x55556e02d4b0;
	Node0x55556e02d4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%257:\l257:                                              \l  %258 = landingpad \{ i8*, i32 \}\l          catch i8* null\l  %259 = extractvalue \{ i8*, i32 \} %258, 0\l  call void @__clang_call_terminate(i8* %259) #17\l  unreachable\l}"];
	Node0x55556e02d460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%260:\l260:                                              \l  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #13\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13\l  ret i32 0\l}"];
}
