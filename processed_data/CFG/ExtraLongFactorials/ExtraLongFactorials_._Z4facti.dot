digraph "CFG for '_Z4facti' function" {
	label="CFG for '_Z4facti' function";

	Node0x5569a071c870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%1:\l  %2 = alloca [200 x i32], align 16\l  %3 = bitcast [200 x i32]* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 800, i8* nonnull %3) #9\l  %4 = getelementptr inbounds [200 x i32], [200 x i32]* %2, i64 0, i64 0\l  store i32 1, i32* %4, align 16, !tbaa !3\l  %5 = icmp slt i32 %0, 2\l  br i1 %5, label %8, label %11\l|{<s0>T|<s1>F}}"];
	Node0x5569a071c870:s0 -> Node0x5569a071ce30;
	Node0x5569a071c870:s1 -> Node0x5569a071cec0;
	Node0x5569a071d000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%6:\l6:                                                \l  %7 = icmp sgt i32 %45, 0\l  br i1 %7, label %8, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5569a071d000:s0 -> Node0x5569a071ce30;
	Node0x5569a071d000:s1 -> Node0x5569a071d120;
	Node0x5569a071ce30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%8:\l8:                                                \l  %9 = phi i32 [ %45, %6 ], [ 1, %1 ]\l  %10 = zext i32 %9 to i64\l  br label %48\l}"];
	Node0x5569a071ce30 -> Node0x5569a071d3c0;
	Node0x5569a071cec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%11:\l11:                                               \l  %12 = phi i32 [ %45, %44 ], [ 1, %1 ]\l  %13 = phi i32 [ %46, %44 ], [ 2, %1 ]\l  %14 = icmp sgt i32 %12, 0\l  br i1 %14, label %15, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5569a071cec0:s0 -> Node0x5569a071d700;
	Node0x5569a071cec0:s1 -> Node0x5569a071d480;
	Node0x5569a071d700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%15:\l15:                                               \l  %16 = zext i32 %12 to i64\l  br label %22\l}"];
	Node0x5569a071d700 -> Node0x5569a071d8b0;
	Node0x5569a071d970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%17:\l17:                                               \l  %18 = add i32 %28, 9\l  %19 = icmp ult i32 %18, 19\l  br i1 %19, label %44, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5569a071d970:s0 -> Node0x5569a071d480;
	Node0x5569a071d970:s1 -> Node0x5569a071dac0;
	Node0x5569a071dac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%20:\l20:                                               \l  %21 = sext i32 %12 to i64\l  br label %33\l}"];
	Node0x5569a071dac0 -> Node0x5569a071dc70;
	Node0x5569a071d8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = phi i64 [ 0, %15 ], [ %31, %22 ]\l  %24 = phi i32 [ 0, %15 ], [ %30, %22 ]\l  %25 = getelementptr inbounds [200 x i32], [200 x i32]* %2, i64 0, i64 %23\l  %26 = load i32, i32* %25, align 4, !tbaa !3\l  %27 = mul nsw i32 %26, %13\l  %28 = add nsw i32 %27, %24\l  %29 = srem i32 %28, 10\l  store i32 %29, i32* %25, align 4, !tbaa !3\l  %30 = sdiv i32 %28, 10\l  %31 = add nuw nsw i64 %23, 1\l  %32 = icmp eq i64 %31, %16\l  br i1 %32, label %17, label %22, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5569a071d8b0:s0 -> Node0x5569a071d970;
	Node0x5569a071d8b0:s1 -> Node0x5569a071d8b0;
	Node0x5569a071dc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%33:\l33:                                               \l  %34 = phi i64 [ %21, %20 ], [ %39, %33 ]\l  %35 = phi i32 [ %30, %20 ], [ %38, %33 ]\l  %36 = srem i32 %35, 10\l  %37 = getelementptr inbounds [200 x i32], [200 x i32]* %2, i64 0, i64 %34\l  store i32 %36, i32* %37, align 4, !tbaa !3\l  %38 = sdiv i32 %35, 10\l  %39 = add i64 %34, 1\l  %40 = add nsw i32 %35, 9\l  %41 = icmp ult i32 %40, 19\l  br i1 %41, label %42, label %33, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5569a071dc70:s0 -> Node0x5569a071f090;
	Node0x5569a071dc70:s1 -> Node0x5569a071dc70;
	Node0x5569a071f090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%42:\l42:                                               \l  %43 = trunc i64 %39 to i32\l  br label %44\l}"];
	Node0x5569a071f090 -> Node0x5569a071d480;
	Node0x5569a071d480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%44:\l44:                                               \l  %45 = phi i32 [ %12, %17 ], [ %43, %42 ], [ %12, %11 ]\l  %46 = add nuw i32 %13, 1\l  %47 = icmp eq i32 %13, %0\l  br i1 %47, label %6, label %11, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5569a071d480:s0 -> Node0x5569a071d000;
	Node0x5569a071d480:s1 -> Node0x5569a071cec0;
	Node0x5569a071d3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%48:\l48:                                               \l  %49 = phi i64 [ %10, %8 ], [ %57, %48 ]\l  %50 = phi i32 [ %9, %8 ], [ %51, %48 ]\l  %51 = add nsw i32 %50, -1\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds [200 x i32], [200 x i32]* %2, i64 0, i64 %52\l  %54 = load i32, i32* %53, align 4, !tbaa !3\l  %55 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1)\l... getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %54)\l  %56 = icmp sgt i64 %49, 1\l  %57 = add nsw i64 %49, -1\l  br i1 %56, label %48, label %58, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5569a071d3c0:s0 -> Node0x5569a071d3c0;
	Node0x5569a071d3c0:s1 -> Node0x5569a071d120;
	Node0x5569a071d120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%58:\l58:                                               \l  call void @llvm.lifetime.end.p0i8(i64 800, i8* nonnull %3) #9\l  ret void\l}"];
}
