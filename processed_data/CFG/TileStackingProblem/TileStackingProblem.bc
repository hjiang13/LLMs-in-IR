; ModuleID = '../../Benchmarks/TileStackingProblem/TileStackingProblem.cpp'
source_filename = "../../Benchmarks/TileStackingProblem/TileStackingProblem.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@dp = dso_local local_unnamed_addr global [10001 x [1001 x i32]] zeroinitializer, align 16
@dp_sum = dso_local local_unnamed_addr global [10001 x [1001 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [35 x i8] c"../input_files/TileStackingProblem\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@.str.2 = private unnamed_addr constant [17 x i8] c"n >= 1 && n <= N\00", align 1
@.str.3 = private unnamed_addr constant [61 x i8] c"../../Benchmarks/TileStackingProblem/TileStackingProblem.cpp\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [11 x i8] c"int main()\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"m >= 1 && m <= M\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"k >= 1 && k <= K\00", align 1
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_TileStackingProblem.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #3 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !3
  %5 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %4)
  %6 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  %10 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %11 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %10, i32* nonnull align 4 dereferenceable(4) %2)
  %12 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %11, i32* nonnull align 4 dereferenceable(4) %3)
  %13 = load i32, i32* %1, align 4, !tbaa !7
  %14 = add i32 %13, -1
  %15 = icmp ult i32 %14, 10000
  br i1 %15, label %17, label %16

16:                                               ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #9
  unreachable

17:                                               ; preds = %0
  %18 = load i32, i32* %2, align 4, !tbaa !7
  %19 = add i32 %18, -1
  %20 = icmp ult i32 %19, 1000
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #9
  unreachable

22:                                               ; preds = %17
  %23 = load i32, i32* %3, align 4, !tbaa !7
  %24 = add i32 %23, -1
  %25 = icmp ult i32 %24, 5000
  br i1 %25, label %26, label %101

26:                                               ; preds = %22
  %27 = add nuw nsw i32 %18, 1
  %28 = zext i32 %27 to i64
  %29 = icmp ult i32 %18, 7
  br i1 %29, label %99, label %30

30:                                               ; preds = %26
  %31 = and i64 %28, 4294967288
  %32 = add nsw i64 %31, -8
  %33 = lshr exact i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 3
  %36 = icmp ult i64 %32, 24
  br i1 %36, label %80, label %37

37:                                               ; preds = %30
  %38 = and i64 %34, 4611686018427387900
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %77, %39 ]
  %41 = phi i64 [ %38, %37 ], [ %78, %39 ]
  %42 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 0, i64 %40
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 16, !tbaa !7
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 16, !tbaa !7
  %46 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 0, i64 %40
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 16, !tbaa !7
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 16, !tbaa !7
  %50 = or i64 %40, 8
  %51 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 16, !tbaa !7
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 16, !tbaa !7
  %55 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 0, i64 %50
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 16, !tbaa !7
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 16, !tbaa !7
  %59 = or i64 %40, 16
  %60 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 16, !tbaa !7
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 16, !tbaa !7
  %64 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 0, i64 %59
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 16, !tbaa !7
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 16, !tbaa !7
  %68 = or i64 %40, 24
  %69 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 16, !tbaa !7
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 16, !tbaa !7
  %73 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 0, i64 %68
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 16, !tbaa !7
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 16, !tbaa !7
  %77 = add nuw i64 %40, 32
  %78 = add i64 %41, -4
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %39, !llvm.loop !9

80:                                               ; preds = %39, %30
  %81 = phi i64 [ 0, %30 ], [ %77, %39 ]
  %82 = icmp eq i64 %35, 0
  br i1 %82, label %97, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %94, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %95, %83 ], [ %35, %80 ]
  %86 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 0, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 16, !tbaa !7
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 16, !tbaa !7
  %90 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 0, i64 %84
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %91, align 16, !tbaa !7
  %92 = getelementptr inbounds i32, i32* %90, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %93, align 16, !tbaa !7
  %94 = add nuw i64 %84, 8
  %95 = add i64 %85, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %83, !llvm.loop !12

97:                                               ; preds = %83, %80
  %98 = icmp eq i64 %31, %28
  br i1 %98, label %102, label %99

99:                                               ; preds = %26, %97
  %100 = phi i64 [ 0, %26 ], [ %31, %97 ]
  br label %113

101:                                              ; preds = %22
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #9
  unreachable

102:                                              ; preds = %113, %97
  %103 = icmp slt i32 %13, 1
  br i1 %103, label %153, label %104

104:                                              ; preds = %102
  %105 = add nuw i32 %13, 1
  %106 = zext i32 %105 to i64
  %107 = add nsw i64 %106, -1
  %108 = add nsw i64 %106, -2
  %109 = and i64 %107, 1
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %104
  %112 = and i64 %107, -2
  br label %139

113:                                              ; preds = %99, %113
  %114 = phi i64 [ %117, %113 ], [ %100, %99 ]
  %115 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 0, i64 %114
  store i32 1, i32* %115, align 4, !tbaa !7
  %116 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 0, i64 %114
  store i32 1, i32* %116, align 4, !tbaa !7
  %117 = add nuw nsw i64 %114, 1
  %118 = icmp eq i64 %117, %28
  br i1 %118, label %102, label %113, !llvm.loop !14

119:                                              ; preds = %139, %104
  %120 = phi i64 [ 1, %104 ], [ %147, %139 ]
  %121 = icmp eq i64 %109, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 %120, i64 0
  store i32 0, i32* %123, align 4, !tbaa !7
  %124 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 %120, i64 0
  store i32 1, i32* %124, align 4, !tbaa !7
  br label %125

125:                                              ; preds = %119, %122
  %126 = xor i32 %23, -1
  %127 = icmp slt i32 %18, 1
  %128 = select i1 %127, i1 true, i1 %103
  br i1 %128, label %153, label %129

129:                                              ; preds = %125
  %130 = sext i32 %23 to i64
  %131 = add nuw i32 %13, 1
  %132 = add nuw i32 %18, 1
  %133 = zext i32 %132 to i64
  %134 = zext i32 %131 to i64
  %135 = and i64 %107, 1
  %136 = icmp eq i64 %108, 0
  %137 = and i64 %107, -2
  %138 = icmp eq i64 %135, 0
  br label %150

139:                                              ; preds = %139, %111
  %140 = phi i64 [ 1, %111 ], [ %147, %139 ]
  %141 = phi i64 [ %112, %111 ], [ %148, %139 ]
  %142 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 %140, i64 0
  store i32 0, i32* %142, align 4, !tbaa !7
  %143 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 %140, i64 0
  store i32 1, i32* %143, align 4, !tbaa !7
  %144 = add nuw nsw i64 %140, 1
  %145 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 %144, i64 0
  store i32 0, i32* %145, align 4, !tbaa !7
  %146 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 %144, i64 0
  store i32 1, i32* %146, align 4, !tbaa !7
  %147 = add nuw nsw i64 %140, 2
  %148 = add i64 %141, -2
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %119, label %139, !llvm.loop !16

150:                                              ; preds = %129, %219
  %151 = phi i64 [ 1, %129 ], [ %220, %219 ]
  %152 = add nsw i64 %151, -1
  br label %191

153:                                              ; preds = %219, %125, %102
  %154 = sext i32 %13 to i64
  %155 = sext i32 %18 to i64
  %156 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 %154, i64 %155
  %157 = load i32, i32* %156, align 4, !tbaa !7
  %158 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %157)
  %159 = bitcast %"class.std::basic_ostream"* %158 to i8**
  %160 = load i8*, i8** %159, align 8, !tbaa !17
  %161 = getelementptr i8, i8* %160, i64 -24
  %162 = bitcast i8* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.std::basic_ostream"* %158 to i8*
  %165 = add nsw i64 %163, 240
  %166 = getelementptr inbounds i8, i8* %164, i64 %165
  %167 = bitcast i8* %166 to %"class.std::ctype"**
  %168 = load %"class.std::ctype"*, %"class.std::ctype"** %167, align 8, !tbaa !19
  %169 = icmp eq %"class.std::ctype"* %168, null
  br i1 %169, label %170, label %171

170:                                              ; preds = %153
  call void @_ZSt16__throw_bad_castv() #10
  unreachable

171:                                              ; preds = %153
  %172 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %168, i64 0, i32 8
  %173 = load i8, i8* %172, align 8, !tbaa !22
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %168, i64 0, i32 9, i64 10
  %177 = load i8, i8* %176, align 1, !tbaa !24
  br label %184

178:                                              ; preds = %171
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %168)
  %179 = bitcast %"class.std::ctype"* %168 to i8 (%"class.std::ctype"*, i8)***
  %180 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %179, align 8, !tbaa !17
  %181 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %180, i64 6
  %182 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %181, align 8
  %183 = call signext i8 %182(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %168, i8 signext 10)
  br label %184

184:                                              ; preds = %175, %178
  %185 = phi i8 [ %177, %175 ], [ %183, %178 ]
  %186 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %158, i8 signext %185)
  %187 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %186)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  ret i32 0

188:                                              ; preds = %207
  %189 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 0, i64 %151
  %190 = load i32, i32* %189, align 4, !tbaa !7
  br i1 %136, label %210, label %222

191:                                              ; preds = %150, %207
  %192 = phi i64 [ 1, %150 ], [ %208, %207 ]
  %193 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 %192, i64 %152
  %194 = load i32, i32* %193, align 4, !tbaa !7
  %195 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 %192, i64 %151
  store i32 %194, i32* %195, align 4, !tbaa !7
  %196 = icmp sgt i64 %192, %130
  br i1 %196, label %197, label %207

197:                                              ; preds = %191
  %198 = trunc i64 %192 to i32
  %199 = add i32 %198, %126
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 %200, i64 %152
  %202 = load i32, i32* %201, align 4, !tbaa !7
  %203 = sub nsw i32 %194, %202
  store i32 %203, i32* %195, align 4, !tbaa !7
  %204 = icmp slt i32 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %197
  %206 = add nsw i32 %203, 1000000007
  store i32 %206, i32* %195, align 4, !tbaa !7
  br label %207

207:                                              ; preds = %191, %205, %197
  %208 = add nuw nsw i64 %192, 1
  %209 = icmp eq i64 %208, %134
  br i1 %209, label %188, label %191, !llvm.loop !25

210:                                              ; preds = %222, %188
  %211 = phi i32 [ %190, %188 ], [ %236, %222 ]
  %212 = phi i64 [ 1, %188 ], [ %237, %222 ]
  br i1 %138, label %219, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 %212, i64 %151
  %215 = load i32, i32* %214, align 4, !tbaa !7
  %216 = add nsw i32 %215, %211
  %217 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 %212, i64 %151
  %218 = srem i32 %216, 1000000007
  store i32 %218, i32* %217, align 4, !tbaa !7
  br label %219

219:                                              ; preds = %210, %213
  %220 = add nuw nsw i64 %151, 1
  %221 = icmp eq i64 %220, %133
  br i1 %221, label %153, label %150, !llvm.loop !26

222:                                              ; preds = %188, %222
  %223 = phi i32 [ %236, %222 ], [ %190, %188 ]
  %224 = phi i64 [ %237, %222 ], [ 1, %188 ]
  %225 = phi i64 [ %238, %222 ], [ %137, %188 ]
  %226 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 %224, i64 %151
  %227 = load i32, i32* %226, align 4, !tbaa !7
  %228 = add nsw i32 %227, %223
  %229 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 %224, i64 %151
  %230 = srem i32 %228, 1000000007
  store i32 %230, i32* %229, align 4, !tbaa !7
  %231 = add nuw nsw i64 %224, 1
  %232 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp, i64 0, i64 %231, i64 %151
  %233 = load i32, i32* %232, align 4, !tbaa !7
  %234 = add nsw i32 %233, %230
  %235 = getelementptr inbounds [10001 x [1001 x i32]], [10001 x [1001 x i32]]* @dp_sum, i64 0, i64 %231, i64 %151
  %236 = srem i32 %234, 1000000007
  store i32 %236, i32* %235, align 4, !tbaa !7
  %237 = add nuw nsw i64 %224, 2
  %238 = add i64 %225, -2
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %210, label %222, !llvm.loop !27
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

declare dso_local zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #6

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_TileStackingProblem.cpp() #7 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { noreturn nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { noreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = distinct !{!9, !10, !11}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !10, !15, !11}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = distinct !{!16, !10}
!17 = !{!18, !18, i64 0}
!18 = !{!"vtable pointer", !6, i64 0}
!19 = !{!20, !4, i64 240}
!20 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !4, i64 216, !5, i64 224, !21, i64 225, !4, i64 232, !4, i64 240, !4, i64 248, !4, i64 256}
!21 = !{!"bool", !5, i64 0}
!22 = !{!23, !5, i64 56}
!23 = !{!"_ZTSSt5ctypeIcE", !4, i64 16, !21, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !5, i64 56, !5, i64 57, !5, i64 313, !5, i64 569}
!24 = !{!5, !5, i64 0}
!25 = distinct !{!25, !10}
!26 = distinct !{!26, !10}
!27 = distinct !{!27, !10}
