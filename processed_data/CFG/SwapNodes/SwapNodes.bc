; ModuleID = '../../Benchmarks/SwapNodes/SwapNodes.cpp'
source_filename = "../../Benchmarks/SwapNodes/SwapNodes.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%struct.node = type { i32, %struct.node*, %struct.node* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<node *, std::allocator<node *>>::_Deque_impl" }
%"struct.std::_Deque_base<node *, std::allocator<node *>>::_Deque_impl" = type { %struct.node***, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { %struct.node**, %struct.node**, %struct.node**, %struct.node*** }

$_ZNSt5queueIP4nodeSt5dequeIS1_SaIS1_EEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt11_Deque_baseIP4nodeSaIS1_EE17_M_initialize_mapEm = comdat any

$_ZNSt5dequeIP4nodeSaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_ = comdat any

$_ZNSt5dequeIP4nodeSaIS1_EE17_M_reallocate_mapEmb = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [25 x i8] c"../input_files/SwapNodes\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZSt3cin = external dso_local global %"class.std::basic_istream", align 8
@.str.2 = private unnamed_addr constant [48 x i8] c"cannot create std::deque larger than max_size()\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_SwapNodes.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress uwtable
define dso_local void @_Z7InOrderP4node(%struct.node* readonly %0) local_unnamed_addr #3 {
  %2 = alloca i8, align 1
  %3 = icmp eq %struct.node* %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.node, %struct.node* %0, i64 0, i32 1
  %6 = load %struct.node*, %struct.node** %5, align 8, !tbaa !3
  tail call void @_Z7InOrderP4node(%struct.node* %6)
  %7 = getelementptr inbounds %struct.node, %struct.node* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8, !tbaa !9
  %9 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %8)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2)
  store i8 32, i8* %2, align 1, !tbaa !10
  %10 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %9, i8* nonnull %2, i64 1)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2)
  %11 = getelementptr inbounds %struct.node, %struct.node* %0, i64 0, i32 2
  %12 = load %struct.node*, %struct.node** %11, align 8, !tbaa !11
  call void @_Z7InOrderP4node(%struct.node* %12)
  br label %13

13:                                               ; preds = %1, %4
  ret void
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

; Function Attrs: uwtable
define dso_local void @_Z19swapSubtreesOfLevelP4nodei(%struct.node* %0, i32 %1) local_unnamed_addr #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::queue", align 8
  %4 = icmp eq %struct.node* %0, null
  br i1 %4, label %470, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::queue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %6, i8 0, i64 80, i1 false) #14
  call void @_ZNSt11_Deque_baseIP4nodeSaIS1_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* nonnull align 8 dereferenceable(80) %7, i64 0)
  %8 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  %9 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  %10 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 2
  %11 = load %struct.node**, %struct.node*** %10, align 8, !tbaa !17
  %12 = getelementptr inbounds %struct.node*, %struct.node** %11, i64 -1
  %13 = icmp eq %struct.node** %9, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %5
  store %struct.node* %0, %struct.node** %9, align 8, !tbaa !18
  %15 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  %16 = getelementptr inbounds %struct.node*, %struct.node** %15, i64 1
  store %struct.node** %16, %struct.node*** %8, align 8, !tbaa !12
  %17 = load %struct.node**, %struct.node*** %10, align 8, !tbaa !17
  br label %131

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 3
  %20 = load %struct.node***, %struct.node**** %19, align 8, !tbaa !19
  %21 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 3
  %22 = load %struct.node***, %struct.node**** %21, align 8, !tbaa !19
  %23 = ptrtoint %struct.node*** %20 to i64
  %24 = ptrtoint %struct.node*** %22 to i64
  %25 = sub i64 %23, %24
  %26 = shl i64 %25, 3
  %27 = add i64 %26, -64
  %28 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %29 = load %struct.node**, %struct.node*** %28, align 8, !tbaa !20
  %30 = ptrtoint %struct.node** %9 to i64
  %31 = ptrtoint %struct.node** %29 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = add nsw i64 %27, %33
  %35 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 2
  %36 = load %struct.node**, %struct.node*** %35, align 8, !tbaa !21
  %37 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %38 = load %struct.node**, %struct.node*** %37, align 8, !tbaa !22
  %39 = ptrtoint %struct.node** %36 to i64
  %40 = ptrtoint %struct.node** %38 to i64
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 3
  %43 = add nsw i64 %34, %42
  %44 = icmp eq i64 %43, 1152921504606846975
  br i1 %44, label %45, label %47

45:                                               ; preds = %18
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0)) #15
          to label %46 unwind label %398

46:                                               ; preds = %45
  unreachable

47:                                               ; preds = %18
  %48 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8, !tbaa !23
  %50 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %struct.node***, %struct.node**** %50, align 8, !tbaa !24
  %52 = ptrtoint %struct.node*** %51 to i64
  %53 = sub i64 %23, %52
  %54 = ashr exact i64 %53, 3
  %55 = sub i64 %49, %54
  %56 = icmp ult i64 %55, 2
  br i1 %56, label %57, label %120

57:                                               ; preds = %47
  %58 = ashr exact i64 %25, 3
  %59 = add nsw i64 %58, 1
  %60 = add nsw i64 %58, 2
  %61 = shl nsw i64 %60, 1
  %62 = icmp ugt i64 %49, %61
  br i1 %62, label %63, label %83

63:                                               ; preds = %57
  %64 = sub i64 %49, %60
  %65 = lshr i64 %64, 1
  %66 = getelementptr inbounds %struct.node**, %struct.node*** %51, i64 %65
  %67 = icmp ult %struct.node*** %66, %22
  %68 = getelementptr inbounds %struct.node**, %struct.node*** %20, i64 1
  %69 = ptrtoint %struct.node*** %68 to i64
  %70 = sub i64 %69, %24
  %71 = icmp eq i64 %70, 0
  br i1 %67, label %72, label %76

72:                                               ; preds = %63
  br i1 %71, label %112, label %73

73:                                               ; preds = %72
  %74 = bitcast %struct.node*** %66 to i8*
  %75 = bitcast %struct.node*** %22 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %75, i64 %70, i1 false) #14
  br label %112

76:                                               ; preds = %63
  br i1 %71, label %112, label %77

77:                                               ; preds = %76
  %78 = ashr exact i64 %70, 3
  %79 = sub nsw i64 %59, %78
  %80 = getelementptr inbounds %struct.node**, %struct.node*** %66, i64 %79
  %81 = bitcast %struct.node*** %80 to i8*
  %82 = bitcast %struct.node*** %22 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 %70, i1 false) #14
  br label %112

83:                                               ; preds = %57
  %84 = icmp eq i64 %49, 0
  %85 = select i1 %84, i64 1, i64 %49
  %86 = add i64 %49, 2
  %87 = add i64 %86, %85
  %88 = icmp ugt i64 %87, 1152921504606846975
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  invoke void @_ZSt17__throw_bad_allocv() #15
          to label %90 unwind label %398

90:                                               ; preds = %89
  unreachable

91:                                               ; preds = %83
  %92 = shl nuw nsw i64 %87, 3
  %93 = invoke noalias nonnull i8* @_Znwm(i64 %92) #16
          to label %94 unwind label %398

94:                                               ; preds = %91
  %95 = bitcast i8* %93 to %struct.node***
  %96 = sub nsw i64 %87, %60
  %97 = lshr i64 %96, 1
  %98 = getelementptr inbounds %struct.node**, %struct.node*** %95, i64 %97
  %99 = load %struct.node***, %struct.node**** %21, align 8, !tbaa !25
  %100 = load %struct.node***, %struct.node**** %19, align 8, !tbaa !26
  %101 = getelementptr inbounds %struct.node**, %struct.node*** %100, i64 1
  %102 = ptrtoint %struct.node*** %101 to i64
  %103 = ptrtoint %struct.node*** %99 to i64
  %104 = sub i64 %102, %103
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %94
  %107 = bitcast %struct.node*** %98 to i8*
  %108 = bitcast %struct.node*** %99 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %107, i8* align 8 %108, i64 %104, i1 false) #14
  br label %109

109:                                              ; preds = %106, %94
  %110 = bitcast %"class.std::queue"* %3 to i8**
  %111 = load i8*, i8** %110, align 8, !tbaa !24
  call void @_ZdlPv(i8* %111) #14
  store i8* %93, i8** %110, align 8, !tbaa !24
  store i64 %87, i64* %48, align 8, !tbaa !23
  br label %112

112:                                              ; preds = %109, %77, %76, %73, %72
  %113 = phi %struct.node*** [ %98, %109 ], [ %66, %76 ], [ %66, %77 ], [ %66, %72 ], [ %66, %73 ]
  store %struct.node*** %113, %struct.node**** %21, align 8, !tbaa !19
  %114 = load %struct.node**, %struct.node*** %113, align 8, !tbaa !18
  %115 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  store %struct.node** %114, %struct.node*** %115, align 8, !tbaa !20
  %116 = getelementptr inbounds %struct.node*, %struct.node** %114, i64 64
  store %struct.node** %116, %struct.node*** %35, align 8, !tbaa !21
  %117 = getelementptr inbounds %struct.node**, %struct.node*** %113, i64 %58
  store %struct.node*** %117, %struct.node**** %19, align 8, !tbaa !19
  %118 = load %struct.node**, %struct.node*** %117, align 8, !tbaa !18
  store %struct.node** %118, %struct.node*** %28, align 8, !tbaa !20
  %119 = getelementptr inbounds %struct.node*, %struct.node** %118, i64 64
  store %struct.node** %119, %struct.node*** %10, align 8, !tbaa !21
  br label %120

120:                                              ; preds = %112, %47
  %121 = invoke noalias nonnull i8* @_Znwm(i64 512) #16
          to label %122 unwind label %398

122:                                              ; preds = %120
  %123 = load %struct.node***, %struct.node**** %19, align 8, !tbaa !26
  %124 = getelementptr inbounds %struct.node**, %struct.node*** %123, i64 1
  %125 = bitcast %struct.node*** %124 to i8**
  store i8* %121, i8** %125, align 8, !tbaa !18
  %126 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  store %struct.node* %0, %struct.node** %126, align 8, !tbaa !18
  %127 = load %struct.node***, %struct.node**** %19, align 8, !tbaa !26
  %128 = getelementptr inbounds %struct.node**, %struct.node*** %127, i64 1
  store %struct.node*** %128, %struct.node**** %19, align 8, !tbaa !19
  %129 = load %struct.node**, %struct.node*** %128, align 8, !tbaa !18
  store %struct.node** %129, %struct.node*** %28, align 8, !tbaa !20
  %130 = getelementptr inbounds %struct.node*, %struct.node** %129, i64 64
  store %struct.node** %130, %struct.node*** %10, align 8, !tbaa !21
  store %struct.node** %129, %struct.node*** %8, align 8, !tbaa !12
  br label %131

131:                                              ; preds = %122, %14
  %132 = phi %struct.node** [ %130, %122 ], [ %17, %14 ]
  %133 = phi %struct.node** [ %129, %122 ], [ %16, %14 ]
  %134 = getelementptr inbounds %struct.node*, %struct.node** %132, i64 -1
  %135 = icmp eq %struct.node** %133, %134
  br i1 %135, label %139, label %136

136:                                              ; preds = %131
  store %struct.node* null, %struct.node** %133, align 8, !tbaa !18
  %137 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  %138 = getelementptr inbounds %struct.node*, %struct.node** %137, i64 1
  br label %252

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 3
  %141 = load %struct.node***, %struct.node**** %140, align 8, !tbaa !19
  %142 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 3
  %143 = load %struct.node***, %struct.node**** %142, align 8, !tbaa !19
  %144 = ptrtoint %struct.node*** %141 to i64
  %145 = ptrtoint %struct.node*** %143 to i64
  %146 = sub i64 %144, %145
  %147 = shl i64 %146, 3
  %148 = add i64 %147, -64
  %149 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %150 = load %struct.node**, %struct.node*** %149, align 8, !tbaa !20
  %151 = ptrtoint %struct.node** %133 to i64
  %152 = ptrtoint %struct.node** %150 to i64
  %153 = sub i64 %151, %152
  %154 = ashr exact i64 %153, 3
  %155 = add nsw i64 %148, %154
  %156 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 2
  %157 = load %struct.node**, %struct.node*** %156, align 8, !tbaa !21
  %158 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %159 = load %struct.node**, %struct.node*** %158, align 8, !tbaa !22
  %160 = ptrtoint %struct.node** %157 to i64
  %161 = ptrtoint %struct.node** %159 to i64
  %162 = sub i64 %160, %161
  %163 = ashr exact i64 %162, 3
  %164 = add nsw i64 %155, %163
  %165 = icmp eq i64 %164, 1152921504606846975
  br i1 %165, label %166, label %168

166:                                              ; preds = %139
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0)) #15
          to label %167 unwind label %400

167:                                              ; preds = %166
  unreachable

168:                                              ; preds = %139
  %169 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %170 = load i64, i64* %169, align 8, !tbaa !23
  %171 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %172 = load %struct.node***, %struct.node**** %171, align 8, !tbaa !24
  %173 = ptrtoint %struct.node*** %172 to i64
  %174 = sub i64 %144, %173
  %175 = ashr exact i64 %174, 3
  %176 = sub i64 %170, %175
  %177 = icmp ult i64 %176, 2
  br i1 %177, label %178, label %241

178:                                              ; preds = %168
  %179 = ashr exact i64 %146, 3
  %180 = add nsw i64 %179, 1
  %181 = add nsw i64 %179, 2
  %182 = shl nsw i64 %181, 1
  %183 = icmp ugt i64 %170, %182
  br i1 %183, label %184, label %204

184:                                              ; preds = %178
  %185 = sub i64 %170, %181
  %186 = lshr i64 %185, 1
  %187 = getelementptr inbounds %struct.node**, %struct.node*** %172, i64 %186
  %188 = icmp ult %struct.node*** %187, %143
  %189 = getelementptr inbounds %struct.node**, %struct.node*** %141, i64 1
  %190 = ptrtoint %struct.node*** %189 to i64
  %191 = sub i64 %190, %145
  %192 = icmp eq i64 %191, 0
  br i1 %188, label %193, label %197

193:                                              ; preds = %184
  br i1 %192, label %233, label %194

194:                                              ; preds = %193
  %195 = bitcast %struct.node*** %187 to i8*
  %196 = bitcast %struct.node*** %143 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %195, i8* nonnull align 8 %196, i64 %191, i1 false) #14
  br label %233

197:                                              ; preds = %184
  br i1 %192, label %233, label %198

198:                                              ; preds = %197
  %199 = ashr exact i64 %191, 3
  %200 = sub nsw i64 %180, %199
  %201 = getelementptr inbounds %struct.node**, %struct.node*** %187, i64 %200
  %202 = bitcast %struct.node*** %201 to i8*
  %203 = bitcast %struct.node*** %143 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 %191, i1 false) #14
  br label %233

204:                                              ; preds = %178
  %205 = icmp eq i64 %170, 0
  %206 = select i1 %205, i64 1, i64 %170
  %207 = add i64 %170, 2
  %208 = add i64 %207, %206
  %209 = icmp ugt i64 %208, 1152921504606846975
  br i1 %209, label %210, label %212

210:                                              ; preds = %204
  invoke void @_ZSt17__throw_bad_allocv() #15
          to label %211 unwind label %400

211:                                              ; preds = %210
  unreachable

212:                                              ; preds = %204
  %213 = shl nuw nsw i64 %208, 3
  %214 = invoke noalias nonnull i8* @_Znwm(i64 %213) #16
          to label %215 unwind label %400

215:                                              ; preds = %212
  %216 = bitcast i8* %214 to %struct.node***
  %217 = sub nsw i64 %208, %181
  %218 = lshr i64 %217, 1
  %219 = getelementptr inbounds %struct.node**, %struct.node*** %216, i64 %218
  %220 = load %struct.node***, %struct.node**** %142, align 8, !tbaa !25
  %221 = load %struct.node***, %struct.node**** %140, align 8, !tbaa !26
  %222 = getelementptr inbounds %struct.node**, %struct.node*** %221, i64 1
  %223 = ptrtoint %struct.node*** %222 to i64
  %224 = ptrtoint %struct.node*** %220 to i64
  %225 = sub i64 %223, %224
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %215
  %228 = bitcast %struct.node*** %219 to i8*
  %229 = bitcast %struct.node*** %220 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %228, i8* align 8 %229, i64 %225, i1 false) #14
  br label %230

230:                                              ; preds = %227, %215
  %231 = bitcast %"class.std::queue"* %3 to i8**
  %232 = load i8*, i8** %231, align 8, !tbaa !24
  call void @_ZdlPv(i8* %232) #14
  store i8* %214, i8** %231, align 8, !tbaa !24
  store i64 %208, i64* %169, align 8, !tbaa !23
  br label %233

233:                                              ; preds = %230, %198, %197, %194, %193
  %234 = phi %struct.node*** [ %219, %230 ], [ %187, %197 ], [ %187, %198 ], [ %187, %193 ], [ %187, %194 ]
  store %struct.node*** %234, %struct.node**** %142, align 8, !tbaa !19
  %235 = load %struct.node**, %struct.node*** %234, align 8, !tbaa !18
  %236 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  store %struct.node** %235, %struct.node*** %236, align 8, !tbaa !20
  %237 = getelementptr inbounds %struct.node*, %struct.node** %235, i64 64
  store %struct.node** %237, %struct.node*** %156, align 8, !tbaa !21
  %238 = getelementptr inbounds %struct.node**, %struct.node*** %234, i64 %179
  store %struct.node*** %238, %struct.node**** %140, align 8, !tbaa !19
  %239 = load %struct.node**, %struct.node*** %238, align 8, !tbaa !18
  store %struct.node** %239, %struct.node*** %149, align 8, !tbaa !20
  %240 = getelementptr inbounds %struct.node*, %struct.node** %239, i64 64
  store %struct.node** %240, %struct.node*** %10, align 8, !tbaa !21
  br label %241

241:                                              ; preds = %233, %168
  %242 = invoke noalias nonnull i8* @_Znwm(i64 512) #16
          to label %243 unwind label %400

243:                                              ; preds = %241
  %244 = load %struct.node***, %struct.node**** %140, align 8, !tbaa !26
  %245 = getelementptr inbounds %struct.node**, %struct.node*** %244, i64 1
  %246 = bitcast %struct.node*** %245 to i8**
  store i8* %242, i8** %246, align 8, !tbaa !18
  %247 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  store %struct.node* null, %struct.node** %247, align 8, !tbaa !18
  %248 = load %struct.node***, %struct.node**** %140, align 8, !tbaa !26
  %249 = getelementptr inbounds %struct.node**, %struct.node*** %248, i64 1
  store %struct.node*** %249, %struct.node**** %140, align 8, !tbaa !19
  %250 = load %struct.node**, %struct.node*** %249, align 8, !tbaa !18
  store %struct.node** %250, %struct.node*** %149, align 8, !tbaa !20
  %251 = getelementptr inbounds %struct.node*, %struct.node** %250, i64 64
  store %struct.node** %251, %struct.node*** %10, align 8, !tbaa !21
  br label %252

252:                                              ; preds = %243, %136
  %253 = phi %struct.node** [ %138, %136 ], [ %250, %243 ]
  store %struct.node** %253, %struct.node*** %8, align 8, !tbaa !12
  %254 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %255 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 2
  %256 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %257 = bitcast %struct.node*** %256 to i8**
  %258 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 3
  %259 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0
  %260 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 3
  %261 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %262 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %263 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %264 = bitcast %"class.std::queue"* %3 to i8**
  %265 = load %struct.node**, %struct.node*** %254, align 8, !tbaa !22
  %266 = icmp eq %struct.node** %253, %265
  br i1 %266, label %450, label %267

267:                                              ; preds = %252, %445
  %268 = phi %struct.node** [ %448, %445 ], [ %265, %252 ]
  %269 = phi i32 [ %446, %445 ], [ 1, %252 ]
  %270 = load %struct.node*, %struct.node** %268, align 8, !tbaa !18
  %271 = load %struct.node**, %struct.node*** %255, align 8, !tbaa !27
  %272 = getelementptr inbounds %struct.node*, %struct.node** %271, i64 -1
  %273 = icmp eq %struct.node** %268, %272
  br i1 %273, label %276, label %274

274:                                              ; preds = %267
  %275 = getelementptr inbounds %struct.node*, %struct.node** %268, i64 1
  br label %282

276:                                              ; preds = %267
  %277 = load i8*, i8** %257, align 8, !tbaa !28
  call void @_ZdlPv(i8* %277) #14
  %278 = load %struct.node***, %struct.node**** %258, align 8, !tbaa !25
  %279 = getelementptr inbounds %struct.node**, %struct.node*** %278, i64 1
  store %struct.node*** %279, %struct.node**** %258, align 8, !tbaa !19
  %280 = load %struct.node**, %struct.node*** %279, align 8, !tbaa !18
  store %struct.node** %280, %struct.node*** %256, align 8, !tbaa !20
  %281 = getelementptr inbounds %struct.node*, %struct.node** %280, i64 64
  store %struct.node** %281, %struct.node*** %255, align 8, !tbaa !21
  br label %282

282:                                              ; preds = %274, %276
  %283 = phi %struct.node** [ %271, %274 ], [ %281, %276 ]
  %284 = phi %struct.node** [ %275, %274 ], [ %280, %276 ]
  store %struct.node** %284, %struct.node*** %254, align 8, !tbaa !29
  %285 = icmp eq %struct.node* %270, null
  br i1 %285, label %286, label %412

286:                                              ; preds = %282
  %287 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !22
  %288 = icmp eq %struct.node** %287, %284
  br i1 %288, label %410, label %289

289:                                              ; preds = %286
  %290 = load %struct.node**, %struct.node*** %10, align 8, !tbaa !17
  %291 = getelementptr inbounds %struct.node*, %struct.node** %290, i64 -1
  %292 = icmp eq %struct.node** %287, %291
  br i1 %292, label %296, label %293

293:                                              ; preds = %289
  store %struct.node* null, %struct.node** %287, align 8, !tbaa !18
  %294 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  %295 = getelementptr inbounds %struct.node*, %struct.node** %294, i64 1
  br label %408

296:                                              ; preds = %289
  %297 = load %struct.node***, %struct.node**** %260, align 8, !tbaa !19
  %298 = load %struct.node***, %struct.node**** %258, align 8, !tbaa !19
  %299 = ptrtoint %struct.node*** %297 to i64
  %300 = ptrtoint %struct.node*** %298 to i64
  %301 = sub i64 %299, %300
  %302 = shl i64 %301, 3
  %303 = add i64 %302, -64
  %304 = load %struct.node**, %struct.node*** %261, align 8, !tbaa !20
  %305 = ptrtoint %struct.node** %287 to i64
  %306 = ptrtoint %struct.node** %304 to i64
  %307 = sub i64 %305, %306
  %308 = ashr exact i64 %307, 3
  %309 = add nsw i64 %303, %308
  %310 = ptrtoint %struct.node** %283 to i64
  %311 = ptrtoint %struct.node** %284 to i64
  %312 = sub i64 %310, %311
  %313 = ashr exact i64 %312, 3
  %314 = add nsw i64 %309, %313
  %315 = icmp eq i64 %314, 1152921504606846975
  br i1 %315, label %316, label %318

316:                                              ; preds = %296
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0)) #15
          to label %317 unwind label %406

317:                                              ; preds = %316
  unreachable

318:                                              ; preds = %296
  %319 = load i64, i64* %262, align 8, !tbaa !23
  %320 = load %struct.node***, %struct.node**** %263, align 8, !tbaa !24
  %321 = ptrtoint %struct.node*** %320 to i64
  %322 = sub i64 %299, %321
  %323 = ashr exact i64 %322, 3
  %324 = sub i64 %319, %323
  %325 = icmp ult i64 %324, 2
  br i1 %325, label %326, label %387

326:                                              ; preds = %318
  %327 = ashr exact i64 %301, 3
  %328 = add nsw i64 %327, 1
  %329 = add nsw i64 %327, 2
  %330 = shl nsw i64 %329, 1
  %331 = icmp ugt i64 %319, %330
  br i1 %331, label %332, label %352

332:                                              ; preds = %326
  %333 = sub i64 %319, %329
  %334 = lshr i64 %333, 1
  %335 = getelementptr inbounds %struct.node**, %struct.node*** %320, i64 %334
  %336 = icmp ult %struct.node*** %335, %298
  %337 = getelementptr inbounds %struct.node**, %struct.node*** %297, i64 1
  %338 = ptrtoint %struct.node*** %337 to i64
  %339 = sub i64 %338, %300
  %340 = icmp eq i64 %339, 0
  br i1 %336, label %341, label %345

341:                                              ; preds = %332
  br i1 %340, label %380, label %342

342:                                              ; preds = %341
  %343 = bitcast %struct.node*** %335 to i8*
  %344 = bitcast %struct.node*** %298 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* nonnull align 8 %344, i64 %339, i1 false) #14
  br label %380

345:                                              ; preds = %332
  br i1 %340, label %380, label %346

346:                                              ; preds = %345
  %347 = ashr exact i64 %339, 3
  %348 = sub nsw i64 %328, %347
  %349 = getelementptr inbounds %struct.node**, %struct.node*** %335, i64 %348
  %350 = bitcast %struct.node*** %349 to i8*
  %351 = bitcast %struct.node*** %298 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %350, i8* align 8 %351, i64 %339, i1 false) #14
  br label %380

352:                                              ; preds = %326
  %353 = icmp eq i64 %319, 0
  %354 = select i1 %353, i64 1, i64 %319
  %355 = add i64 %319, 2
  %356 = add i64 %355, %354
  %357 = icmp ugt i64 %356, 1152921504606846975
  br i1 %357, label %358, label %360

358:                                              ; preds = %352
  invoke void @_ZSt17__throw_bad_allocv() #15
          to label %359 unwind label %406

359:                                              ; preds = %358
  unreachable

360:                                              ; preds = %352
  %361 = shl nuw nsw i64 %356, 3
  %362 = invoke noalias nonnull i8* @_Znwm(i64 %361) #16
          to label %363 unwind label %404

363:                                              ; preds = %360
  %364 = bitcast i8* %362 to %struct.node***
  %365 = sub nsw i64 %356, %329
  %366 = lshr i64 %365, 1
  %367 = getelementptr inbounds %struct.node**, %struct.node*** %364, i64 %366
  %368 = load %struct.node***, %struct.node**** %258, align 8, !tbaa !25
  %369 = load %struct.node***, %struct.node**** %260, align 8, !tbaa !26
  %370 = getelementptr inbounds %struct.node**, %struct.node*** %369, i64 1
  %371 = ptrtoint %struct.node*** %370 to i64
  %372 = ptrtoint %struct.node*** %368 to i64
  %373 = sub i64 %371, %372
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %378, label %375

375:                                              ; preds = %363
  %376 = bitcast %struct.node*** %367 to i8*
  %377 = bitcast %struct.node*** %368 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %376, i8* align 8 %377, i64 %373, i1 false) #14
  br label %378

378:                                              ; preds = %375, %363
  %379 = load i8*, i8** %264, align 8, !tbaa !24
  call void @_ZdlPv(i8* %379) #14
  store i8* %362, i8** %264, align 8, !tbaa !24
  store i64 %356, i64* %262, align 8, !tbaa !23
  br label %380

380:                                              ; preds = %378, %346, %345, %342, %341
  %381 = phi %struct.node*** [ %367, %378 ], [ %335, %345 ], [ %335, %346 ], [ %335, %341 ], [ %335, %342 ]
  store %struct.node*** %381, %struct.node**** %258, align 8, !tbaa !19
  %382 = load %struct.node**, %struct.node*** %381, align 8, !tbaa !18
  store %struct.node** %382, %struct.node*** %256, align 8, !tbaa !20
  %383 = getelementptr inbounds %struct.node*, %struct.node** %382, i64 64
  store %struct.node** %383, %struct.node*** %255, align 8, !tbaa !21
  %384 = getelementptr inbounds %struct.node**, %struct.node*** %381, i64 %327
  store %struct.node*** %384, %struct.node**** %260, align 8, !tbaa !19
  %385 = load %struct.node**, %struct.node*** %384, align 8, !tbaa !18
  store %struct.node** %385, %struct.node*** %261, align 8, !tbaa !20
  %386 = getelementptr inbounds %struct.node*, %struct.node** %385, i64 64
  store %struct.node** %386, %struct.node*** %10, align 8, !tbaa !21
  br label %387

387:                                              ; preds = %380, %318
  %388 = invoke noalias nonnull i8* @_Znwm(i64 512) #16
          to label %389 unwind label %404

389:                                              ; preds = %387
  %390 = load %struct.node***, %struct.node**** %260, align 8, !tbaa !26
  %391 = getelementptr inbounds %struct.node**, %struct.node*** %390, i64 1
  %392 = bitcast %struct.node*** %391 to i8**
  store i8* %388, i8** %392, align 8, !tbaa !18
  %393 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  store %struct.node* null, %struct.node** %393, align 8, !tbaa !18
  %394 = load %struct.node***, %struct.node**** %260, align 8, !tbaa !26
  %395 = getelementptr inbounds %struct.node**, %struct.node*** %394, i64 1
  store %struct.node*** %395, %struct.node**** %260, align 8, !tbaa !19
  %396 = load %struct.node**, %struct.node*** %395, align 8, !tbaa !18
  store %struct.node** %396, %struct.node*** %261, align 8, !tbaa !20
  %397 = getelementptr inbounds %struct.node*, %struct.node** %396, i64 64
  store %struct.node** %397, %struct.node*** %10, align 8, !tbaa !21
  br label %408

398:                                              ; preds = %91, %89, %120, %45
  %399 = landingpad { i8*, i32 }
          cleanup
  br label %471

400:                                              ; preds = %212, %210, %241, %166
  %401 = landingpad { i8*, i32 }
          cleanup
  br label %471

402:                                              ; preds = %444, %431
  %403 = landingpad { i8*, i32 }
          cleanup
  br label %471

404:                                              ; preds = %387, %360
  %405 = landingpad { i8*, i32 }
          cleanup
  br label %471

406:                                              ; preds = %316, %358
  %407 = landingpad { i8*, i32 }
          cleanup
  br label %471

408:                                              ; preds = %389, %293
  %409 = phi %struct.node** [ %295, %293 ], [ %396, %389 ]
  store %struct.node** %409, %struct.node*** %8, align 8, !tbaa !12
  br label %410

410:                                              ; preds = %408, %286
  %411 = add nsw i32 %269, 1
  br label %445

412:                                              ; preds = %282
  %413 = icmp eq i32 %269, %1
  %414 = getelementptr inbounds %struct.node, %struct.node* %270, i64 0, i32 1
  %415 = load %struct.node*, %struct.node** %414, align 8, !tbaa !3
  br i1 %413, label %416, label %419

416:                                              ; preds = %412
  %417 = getelementptr inbounds %struct.node, %struct.node* %270, i64 0, i32 2
  %418 = load %struct.node*, %struct.node** %417, align 8, !tbaa !11
  store %struct.node* %418, %struct.node** %414, align 8, !tbaa !3
  store %struct.node* %415, %struct.node** %417, align 8, !tbaa !11
  br label %419

419:                                              ; preds = %412, %416
  %420 = phi %struct.node* [ %418, %416 ], [ %415, %412 ]
  %421 = getelementptr inbounds %struct.node, %struct.node* %270, i64 0, i32 1
  %422 = icmp eq %struct.node* %420, null
  br i1 %422, label %432, label %423

423:                                              ; preds = %419
  %424 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  %425 = load %struct.node**, %struct.node*** %10, align 8, !tbaa !17
  %426 = getelementptr inbounds %struct.node*, %struct.node** %425, i64 -1
  %427 = icmp eq %struct.node** %424, %426
  br i1 %427, label %431, label %428

428:                                              ; preds = %423
  store %struct.node* %420, %struct.node** %424, align 8, !tbaa !18
  %429 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  %430 = getelementptr inbounds %struct.node*, %struct.node** %429, i64 1
  store %struct.node** %430, %struct.node*** %8, align 8, !tbaa !12
  br label %432

431:                                              ; preds = %423
  invoke void @_ZNSt5dequeIP4nodeSaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_(%"class.std::deque"* nonnull align 8 dereferenceable(80) %259, %struct.node** nonnull align 8 dereferenceable(8) %421)
          to label %432 unwind label %402

432:                                              ; preds = %428, %431, %419
  %433 = getelementptr inbounds %struct.node, %struct.node* %270, i64 0, i32 2
  %434 = load %struct.node*, %struct.node** %433, align 8, !tbaa !11
  %435 = icmp eq %struct.node* %434, null
  br i1 %435, label %445, label %436

436:                                              ; preds = %432
  %437 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  %438 = load %struct.node**, %struct.node*** %10, align 8, !tbaa !17
  %439 = getelementptr inbounds %struct.node*, %struct.node** %438, i64 -1
  %440 = icmp eq %struct.node** %437, %439
  br i1 %440, label %444, label %441

441:                                              ; preds = %436
  store %struct.node* %434, %struct.node** %437, align 8, !tbaa !18
  %442 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !12
  %443 = getelementptr inbounds %struct.node*, %struct.node** %442, i64 1
  store %struct.node** %443, %struct.node*** %8, align 8, !tbaa !12
  br label %445

444:                                              ; preds = %436
  invoke void @_ZNSt5dequeIP4nodeSaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_(%"class.std::deque"* nonnull align 8 dereferenceable(80) %259, %struct.node** nonnull align 8 dereferenceable(8) %433)
          to label %445 unwind label %402

445:                                              ; preds = %441, %444, %432, %410
  %446 = phi i32 [ %411, %410 ], [ %269, %432 ], [ %269, %444 ], [ %269, %441 ]
  %447 = load %struct.node**, %struct.node*** %8, align 8, !tbaa !22
  %448 = load %struct.node**, %struct.node*** %254, align 8, !tbaa !22
  %449 = icmp eq %struct.node** %447, %448
  br i1 %449, label %450, label %267, !llvm.loop !30

450:                                              ; preds = %445, %252
  %451 = load %struct.node***, %struct.node**** %263, align 8, !tbaa !24
  %452 = icmp eq %struct.node*** %451, null
  br i1 %452, label %469, label %453

453:                                              ; preds = %450
  %454 = bitcast %struct.node*** %451 to i8*
  %455 = load %struct.node***, %struct.node**** %258, align 8, !tbaa !25
  %456 = load %struct.node***, %struct.node**** %260, align 8, !tbaa !26
  %457 = getelementptr inbounds %struct.node**, %struct.node*** %456, i64 1
  %458 = icmp ult %struct.node*** %455, %457
  br i1 %458, label %459, label %467

459:                                              ; preds = %453, %459
  %460 = phi %struct.node*** [ %463, %459 ], [ %455, %453 ]
  %461 = bitcast %struct.node*** %460 to i8**
  %462 = load i8*, i8** %461, align 8, !tbaa !18
  call void @_ZdlPv(i8* %462) #14
  %463 = getelementptr inbounds %struct.node**, %struct.node*** %460, i64 1
  %464 = icmp ult %struct.node*** %460, %456
  br i1 %464, label %459, label %465, !llvm.loop !32

465:                                              ; preds = %459
  %466 = load i8*, i8** %264, align 8, !tbaa !24
  br label %467

467:                                              ; preds = %465, %453
  %468 = phi i8* [ %466, %465 ], [ %454, %453 ]
  call void @_ZdlPv(i8* %468) #14
  br label %469

469:                                              ; preds = %450, %467
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #14
  br label %470

470:                                              ; preds = %2, %469
  ret void

471:                                              ; preds = %404, %406, %402, %400, %398
  %472 = phi { i8*, i32 } [ %401, %400 ], [ %399, %398 ], [ %403, %402 ], [ %405, %404 ], [ %407, %406 ]
  call void @_ZNSt5queueIP4nodeSt5dequeIS1_SaIS1_EEED2Ev(%"class.std::queue"* nonnull align 8 dereferenceable(80) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #14
  resume { i8*, i32 } %472
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZNSt5queueIP4nodeSt5dequeIS1_SaIS1_EEED2Ev(%"class.std::queue"* nonnull align 8 dereferenceable(80) %0) unnamed_addr #6 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.node***, %struct.node**** %2, align 8, !tbaa !24
  %4 = icmp eq %struct.node*** %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = bitcast %struct.node*** %3 to i8*
  %7 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 3
  %8 = load %struct.node***, %struct.node**** %7, align 8, !tbaa !25
  %9 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 3
  %10 = load %struct.node***, %struct.node**** %9, align 8, !tbaa !26
  %11 = getelementptr inbounds %struct.node**, %struct.node*** %10, i64 1
  %12 = icmp ult %struct.node*** %8, %11
  br i1 %12, label %13, label %22

13:                                               ; preds = %5, %13
  %14 = phi %struct.node*** [ %17, %13 ], [ %8, %5 ]
  %15 = bitcast %struct.node*** %14 to i8**
  %16 = load i8*, i8** %15, align 8, !tbaa !18
  tail call void @_ZdlPv(i8* %16) #14
  %17 = getelementptr inbounds %struct.node**, %struct.node*** %14, i64 1
  %18 = icmp ult %struct.node*** %14, %10
  br i1 %18, label %13, label %19, !llvm.loop !32

19:                                               ; preds = %13
  %20 = bitcast %"class.std::queue"* %0 to i8**
  %21 = load i8*, i8** %20, align 8, !tbaa !24
  br label %22

22:                                               ; preds = %19, %5
  %23 = phi i8* [ %21, %19 ], [ %6, %5 ]
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %1, %22
  ret void
}

; Function Attrs: norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #7 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca %"class.std::queue", align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !18
  %8 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %struct._IO_FILE* %7)
  %9 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #14
  %10 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %11 = bitcast %"class.std::queue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %11, i8 0, i64 80, i1 false) #14
  call void @_ZNSt11_Deque_baseIP4nodeSaIS1_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* nonnull align 8 dereferenceable(80) %12, i64 0)
  %13 = load i32, i32* %1, align 4, !tbaa !33
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %274

15:                                               ; preds = %0
  %16 = invoke noalias nonnull dereferenceable(24) i8* @_Znwm(i64 24) #17
          to label %17 unwind label %268

17:                                               ; preds = %15
  %18 = bitcast i8* %16 to %struct.node*
  %19 = getelementptr inbounds %struct.node, %struct.node* %18, i64 0, i32 0
  store i32 1, i32* %19, align 8, !tbaa !9
  %20 = getelementptr inbounds %struct.node, %struct.node* %18, i64 0, i32 1
  %21 = bitcast %struct.node** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %21, i8 0, i64 16, i1 false) #14
  %22 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  %23 = load %struct.node**, %struct.node*** %22, align 8, !tbaa !12
  %24 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 2
  %25 = load %struct.node**, %struct.node*** %24, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.node*, %struct.node** %25, i64 -1
  %27 = icmp eq %struct.node** %23, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %17
  %29 = bitcast %struct.node** %23 to i8**
  store i8* %16, i8** %29, align 8, !tbaa !18
  %30 = load %struct.node**, %struct.node*** %22, align 8, !tbaa !12
  %31 = getelementptr inbounds %struct.node*, %struct.node** %30, i64 1
  store %struct.node** %31, %struct.node*** %22, align 8, !tbaa !12
  %32 = load %struct.node**, %struct.node*** %24, align 8, !tbaa !17
  br label %147

33:                                               ; preds = %17
  %34 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 3
  %35 = load %struct.node***, %struct.node**** %34, align 8, !tbaa !19
  %36 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 3
  %37 = load %struct.node***, %struct.node**** %36, align 8, !tbaa !19
  %38 = ptrtoint %struct.node*** %35 to i64
  %39 = ptrtoint %struct.node*** %37 to i64
  %40 = sub i64 %38, %39
  %41 = shl i64 %40, 3
  %42 = add i64 %41, -64
  %43 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %44 = load %struct.node**, %struct.node*** %43, align 8, !tbaa !20
  %45 = ptrtoint %struct.node** %23 to i64
  %46 = ptrtoint %struct.node** %44 to i64
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %42, %48
  %50 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 2
  %51 = load %struct.node**, %struct.node*** %50, align 8, !tbaa !21
  %52 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %53 = load %struct.node**, %struct.node*** %52, align 8, !tbaa !22
  %54 = ptrtoint %struct.node** %51 to i64
  %55 = ptrtoint %struct.node** %53 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %49, %57
  %59 = icmp eq i64 %58, 1152921504606846975
  br i1 %59, label %60, label %62

60:                                               ; preds = %33
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0)) #15
          to label %61 unwind label %268

61:                                               ; preds = %60
  unreachable

62:                                               ; preds = %33
  %63 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8, !tbaa !23
  %65 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %struct.node***, %struct.node**** %65, align 8, !tbaa !24
  %67 = ptrtoint %struct.node*** %66 to i64
  %68 = sub i64 %38, %67
  %69 = ashr exact i64 %68, 3
  %70 = sub i64 %64, %69
  %71 = icmp ult i64 %70, 2
  br i1 %71, label %72, label %135

72:                                               ; preds = %62
  %73 = ashr exact i64 %40, 3
  %74 = add nsw i64 %73, 1
  %75 = add nsw i64 %73, 2
  %76 = shl nsw i64 %75, 1
  %77 = icmp ugt i64 %64, %76
  br i1 %77, label %78, label %98

78:                                               ; preds = %72
  %79 = sub i64 %64, %75
  %80 = lshr i64 %79, 1
  %81 = getelementptr inbounds %struct.node**, %struct.node*** %66, i64 %80
  %82 = icmp ult %struct.node*** %81, %37
  %83 = getelementptr inbounds %struct.node**, %struct.node*** %35, i64 1
  %84 = ptrtoint %struct.node*** %83 to i64
  %85 = sub i64 %84, %39
  %86 = icmp eq i64 %85, 0
  br i1 %82, label %87, label %91

87:                                               ; preds = %78
  br i1 %86, label %127, label %88

88:                                               ; preds = %87
  %89 = bitcast %struct.node*** %81 to i8*
  %90 = bitcast %struct.node*** %37 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %90, i64 %85, i1 false) #14
  br label %127

91:                                               ; preds = %78
  br i1 %86, label %127, label %92

92:                                               ; preds = %91
  %93 = ashr exact i64 %85, 3
  %94 = sub nsw i64 %74, %93
  %95 = getelementptr inbounds %struct.node**, %struct.node*** %81, i64 %94
  %96 = bitcast %struct.node*** %95 to i8*
  %97 = bitcast %struct.node*** %37 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 %85, i1 false) #14
  br label %127

98:                                               ; preds = %72
  %99 = icmp eq i64 %64, 0
  %100 = select i1 %99, i64 1, i64 %64
  %101 = add i64 %64, 2
  %102 = add i64 %101, %100
  %103 = icmp ugt i64 %102, 1152921504606846975
  br i1 %103, label %104, label %106

104:                                              ; preds = %98
  invoke void @_ZSt17__throw_bad_allocv() #15
          to label %105 unwind label %268

105:                                              ; preds = %104
  unreachable

106:                                              ; preds = %98
  %107 = shl nuw nsw i64 %102, 3
  %108 = invoke noalias nonnull i8* @_Znwm(i64 %107) #16
          to label %109 unwind label %268

109:                                              ; preds = %106
  %110 = bitcast i8* %108 to %struct.node***
  %111 = sub nsw i64 %102, %75
  %112 = lshr i64 %111, 1
  %113 = getelementptr inbounds %struct.node**, %struct.node*** %110, i64 %112
  %114 = load %struct.node***, %struct.node**** %36, align 8, !tbaa !25
  %115 = load %struct.node***, %struct.node**** %34, align 8, !tbaa !26
  %116 = getelementptr inbounds %struct.node**, %struct.node*** %115, i64 1
  %117 = ptrtoint %struct.node*** %116 to i64
  %118 = ptrtoint %struct.node*** %114 to i64
  %119 = sub i64 %117, %118
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %109
  %122 = bitcast %struct.node*** %113 to i8*
  %123 = bitcast %struct.node*** %114 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %122, i8* align 8 %123, i64 %119, i1 false) #14
  br label %124

124:                                              ; preds = %121, %109
  %125 = bitcast %"class.std::queue"* %2 to i8**
  %126 = load i8*, i8** %125, align 8, !tbaa !24
  call void @_ZdlPv(i8* %126) #14
  store i8* %108, i8** %125, align 8, !tbaa !24
  store i64 %102, i64* %63, align 8, !tbaa !23
  br label %127

127:                                              ; preds = %124, %92, %91, %88, %87
  %128 = phi %struct.node*** [ %113, %124 ], [ %81, %91 ], [ %81, %92 ], [ %81, %87 ], [ %81, %88 ]
  store %struct.node*** %128, %struct.node**** %36, align 8, !tbaa !19
  %129 = load %struct.node**, %struct.node*** %128, align 8, !tbaa !18
  %130 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  store %struct.node** %129, %struct.node*** %130, align 8, !tbaa !20
  %131 = getelementptr inbounds %struct.node*, %struct.node** %129, i64 64
  store %struct.node** %131, %struct.node*** %50, align 8, !tbaa !21
  %132 = getelementptr inbounds %struct.node**, %struct.node*** %128, i64 %73
  store %struct.node*** %132, %struct.node**** %34, align 8, !tbaa !19
  %133 = load %struct.node**, %struct.node*** %132, align 8, !tbaa !18
  store %struct.node** %133, %struct.node*** %43, align 8, !tbaa !20
  %134 = getelementptr inbounds %struct.node*, %struct.node** %133, i64 64
  store %struct.node** %134, %struct.node*** %24, align 8, !tbaa !21
  br label %135

135:                                              ; preds = %127, %62
  %136 = invoke noalias nonnull i8* @_Znwm(i64 512) #16
          to label %137 unwind label %268

137:                                              ; preds = %135
  %138 = load %struct.node***, %struct.node**** %34, align 8, !tbaa !26
  %139 = getelementptr inbounds %struct.node**, %struct.node*** %138, i64 1
  %140 = bitcast %struct.node*** %139 to i8**
  store i8* %136, i8** %140, align 8, !tbaa !18
  %141 = bitcast %struct.node*** %22 to i8***
  %142 = load i8**, i8*** %141, align 8, !tbaa !12
  store i8* %16, i8** %142, align 8, !tbaa !18
  %143 = load %struct.node***, %struct.node**** %34, align 8, !tbaa !26
  %144 = getelementptr inbounds %struct.node**, %struct.node*** %143, i64 1
  store %struct.node*** %144, %struct.node**** %34, align 8, !tbaa !19
  %145 = load %struct.node**, %struct.node*** %144, align 8, !tbaa !18
  store %struct.node** %145, %struct.node*** %43, align 8, !tbaa !20
  %146 = getelementptr inbounds %struct.node*, %struct.node** %145, i64 64
  store %struct.node** %146, %struct.node*** %24, align 8, !tbaa !21
  store %struct.node** %145, %struct.node*** %22, align 8, !tbaa !12
  br label %147

147:                                              ; preds = %137, %28
  %148 = phi %struct.node** [ %146, %137 ], [ %32, %28 ]
  %149 = phi %struct.node** [ %145, %137 ], [ %31, %28 ]
  %150 = getelementptr inbounds %struct.node*, %struct.node** %148, i64 -1
  %151 = icmp eq %struct.node** %149, %150
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  store %struct.node* null, %struct.node** %149, align 8, !tbaa !18
  %153 = load %struct.node**, %struct.node*** %22, align 8, !tbaa !12
  %154 = getelementptr inbounds %struct.node*, %struct.node** %153, i64 1
  br label %272

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 3
  %157 = load %struct.node***, %struct.node**** %156, align 8, !tbaa !19
  %158 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 3
  %159 = load %struct.node***, %struct.node**** %158, align 8, !tbaa !19
  %160 = ptrtoint %struct.node*** %157 to i64
  %161 = ptrtoint %struct.node*** %159 to i64
  %162 = sub i64 %160, %161
  %163 = shl i64 %162, 3
  %164 = add i64 %163, -64
  %165 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %166 = load %struct.node**, %struct.node*** %165, align 8, !tbaa !20
  %167 = ptrtoint %struct.node** %149 to i64
  %168 = ptrtoint %struct.node** %166 to i64
  %169 = sub i64 %167, %168
  %170 = ashr exact i64 %169, 3
  %171 = add nsw i64 %164, %170
  %172 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 2
  %173 = load %struct.node**, %struct.node*** %172, align 8, !tbaa !21
  %174 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %175 = load %struct.node**, %struct.node*** %174, align 8, !tbaa !22
  %176 = ptrtoint %struct.node** %173 to i64
  %177 = ptrtoint %struct.node** %175 to i64
  %178 = sub i64 %176, %177
  %179 = ashr exact i64 %178, 3
  %180 = add nsw i64 %171, %179
  %181 = icmp eq i64 %180, 1152921504606846975
  br i1 %181, label %182, label %184

182:                                              ; preds = %155
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0)) #15
          to label %183 unwind label %270

183:                                              ; preds = %182
  unreachable

184:                                              ; preds = %155
  %185 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %186 = load i64, i64* %185, align 8, !tbaa !23
  %187 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %struct.node***, %struct.node**** %187, align 8, !tbaa !24
  %189 = ptrtoint %struct.node*** %188 to i64
  %190 = sub i64 %160, %189
  %191 = ashr exact i64 %190, 3
  %192 = sub i64 %186, %191
  %193 = icmp ult i64 %192, 2
  br i1 %193, label %194, label %257

194:                                              ; preds = %184
  %195 = ashr exact i64 %162, 3
  %196 = add nsw i64 %195, 1
  %197 = add nsw i64 %195, 2
  %198 = shl nsw i64 %197, 1
  %199 = icmp ugt i64 %186, %198
  br i1 %199, label %200, label %220

200:                                              ; preds = %194
  %201 = sub i64 %186, %197
  %202 = lshr i64 %201, 1
  %203 = getelementptr inbounds %struct.node**, %struct.node*** %188, i64 %202
  %204 = icmp ult %struct.node*** %203, %159
  %205 = getelementptr inbounds %struct.node**, %struct.node*** %157, i64 1
  %206 = ptrtoint %struct.node*** %205 to i64
  %207 = sub i64 %206, %161
  %208 = icmp eq i64 %207, 0
  br i1 %204, label %209, label %213

209:                                              ; preds = %200
  br i1 %208, label %249, label %210

210:                                              ; preds = %209
  %211 = bitcast %struct.node*** %203 to i8*
  %212 = bitcast %struct.node*** %159 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %211, i8* nonnull align 8 %212, i64 %207, i1 false) #14
  br label %249

213:                                              ; preds = %200
  br i1 %208, label %249, label %214

214:                                              ; preds = %213
  %215 = ashr exact i64 %207, 3
  %216 = sub nsw i64 %196, %215
  %217 = getelementptr inbounds %struct.node**, %struct.node*** %203, i64 %216
  %218 = bitcast %struct.node*** %217 to i8*
  %219 = bitcast %struct.node*** %159 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %207, i1 false) #14
  br label %249

220:                                              ; preds = %194
  %221 = icmp eq i64 %186, 0
  %222 = select i1 %221, i64 1, i64 %186
  %223 = add i64 %186, 2
  %224 = add i64 %223, %222
  %225 = icmp ugt i64 %224, 1152921504606846975
  br i1 %225, label %226, label %228

226:                                              ; preds = %220
  invoke void @_ZSt17__throw_bad_allocv() #15
          to label %227 unwind label %270

227:                                              ; preds = %226
  unreachable

228:                                              ; preds = %220
  %229 = shl nuw nsw i64 %224, 3
  %230 = invoke noalias nonnull i8* @_Znwm(i64 %229) #16
          to label %231 unwind label %270

231:                                              ; preds = %228
  %232 = bitcast i8* %230 to %struct.node***
  %233 = sub nsw i64 %224, %197
  %234 = lshr i64 %233, 1
  %235 = getelementptr inbounds %struct.node**, %struct.node*** %232, i64 %234
  %236 = load %struct.node***, %struct.node**** %158, align 8, !tbaa !25
  %237 = load %struct.node***, %struct.node**** %156, align 8, !tbaa !26
  %238 = getelementptr inbounds %struct.node**, %struct.node*** %237, i64 1
  %239 = ptrtoint %struct.node*** %238 to i64
  %240 = ptrtoint %struct.node*** %236 to i64
  %241 = sub i64 %239, %240
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %246, label %243

243:                                              ; preds = %231
  %244 = bitcast %struct.node*** %235 to i8*
  %245 = bitcast %struct.node*** %236 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %244, i8* align 8 %245, i64 %241, i1 false) #14
  br label %246

246:                                              ; preds = %243, %231
  %247 = bitcast %"class.std::queue"* %2 to i8**
  %248 = load i8*, i8** %247, align 8, !tbaa !24
  call void @_ZdlPv(i8* %248) #14
  store i8* %230, i8** %247, align 8, !tbaa !24
  store i64 %224, i64* %185, align 8, !tbaa !23
  br label %249

249:                                              ; preds = %246, %214, %213, %210, %209
  %250 = phi %struct.node*** [ %235, %246 ], [ %203, %213 ], [ %203, %214 ], [ %203, %209 ], [ %203, %210 ]
  store %struct.node*** %250, %struct.node**** %158, align 8, !tbaa !19
  %251 = load %struct.node**, %struct.node*** %250, align 8, !tbaa !18
  %252 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  store %struct.node** %251, %struct.node*** %252, align 8, !tbaa !20
  %253 = getelementptr inbounds %struct.node*, %struct.node** %251, i64 64
  store %struct.node** %253, %struct.node*** %172, align 8, !tbaa !21
  %254 = getelementptr inbounds %struct.node**, %struct.node*** %250, i64 %195
  store %struct.node*** %254, %struct.node**** %156, align 8, !tbaa !19
  %255 = load %struct.node**, %struct.node*** %254, align 8, !tbaa !18
  store %struct.node** %255, %struct.node*** %165, align 8, !tbaa !20
  %256 = getelementptr inbounds %struct.node*, %struct.node** %255, i64 64
  store %struct.node** %256, %struct.node*** %24, align 8, !tbaa !21
  br label %257

257:                                              ; preds = %249, %184
  %258 = invoke noalias nonnull i8* @_Znwm(i64 512) #16
          to label %259 unwind label %270

259:                                              ; preds = %257
  %260 = load %struct.node***, %struct.node**** %156, align 8, !tbaa !26
  %261 = getelementptr inbounds %struct.node**, %struct.node*** %260, i64 1
  %262 = bitcast %struct.node*** %261 to i8**
  store i8* %258, i8** %262, align 8, !tbaa !18
  %263 = load %struct.node**, %struct.node*** %22, align 8, !tbaa !12
  store %struct.node* null, %struct.node** %263, align 8, !tbaa !18
  %264 = load %struct.node***, %struct.node**** %156, align 8, !tbaa !26
  %265 = getelementptr inbounds %struct.node**, %struct.node*** %264, i64 1
  store %struct.node*** %265, %struct.node**** %156, align 8, !tbaa !19
  %266 = load %struct.node**, %struct.node*** %265, align 8, !tbaa !18
  store %struct.node** %266, %struct.node*** %165, align 8, !tbaa !20
  %267 = getelementptr inbounds %struct.node*, %struct.node** %266, i64 64
  store %struct.node** %267, %struct.node*** %24, align 8, !tbaa !21
  br label %272

268:                                              ; preds = %106, %104, %135, %60, %15
  %269 = landingpad { i8*, i32 }
          cleanup
  br label %582

270:                                              ; preds = %228, %226, %257, %182
  %271 = landingpad { i8*, i32 }
          cleanup
  br label %582

272:                                              ; preds = %259, %152
  %273 = phi %struct.node** [ %154, %152 ], [ %266, %259 ]
  store %struct.node** %273, %struct.node*** %22, align 8, !tbaa !12
  br label %274

274:                                              ; preds = %272, %0
  %275 = phi %struct.node* [ null, %0 ], [ %18, %272 ]
  %276 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  %277 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %278 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 2
  %279 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %280 = bitcast %struct.node*** %279 to i8**
  %281 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 3
  %282 = bitcast i32* %3 to i8*
  %283 = bitcast i32* %4 to i8*
  %284 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 2
  %285 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0
  %286 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 3
  %287 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %288 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %289 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %290 = bitcast %"class.std::queue"* %2 to i8**
  %291 = load i32, i32* %1, align 4, !tbaa !33
  %292 = icmp sgt i32 %291, 0
  br i1 %292, label %293, label %491

293:                                              ; preds = %274, %487
  %294 = phi i32 [ %489, %487 ], [ 1, %274 ]
  %295 = load %struct.node**, %struct.node*** %276, align 8, !tbaa !22
  %296 = load %struct.node**, %struct.node*** %277, align 8, !tbaa !22
  %297 = icmp eq %struct.node** %295, %296
  br i1 %297, label %491, label %298

298:                                              ; preds = %293
  %299 = load %struct.node*, %struct.node** %296, align 8, !tbaa !18
  %300 = load %struct.node**, %struct.node*** %278, align 8, !tbaa !27
  %301 = getelementptr inbounds %struct.node*, %struct.node** %300, i64 -1
  %302 = icmp eq %struct.node** %296, %301
  br i1 %302, label %305, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %struct.node*, %struct.node** %296, i64 1
  br label %311

305:                                              ; preds = %298
  %306 = load i8*, i8** %280, align 8, !tbaa !28
  call void @_ZdlPv(i8* %306) #14
  %307 = load %struct.node***, %struct.node**** %281, align 8, !tbaa !25
  %308 = getelementptr inbounds %struct.node**, %struct.node*** %307, i64 1
  store %struct.node*** %308, %struct.node**** %281, align 8, !tbaa !19
  %309 = load %struct.node**, %struct.node*** %308, align 8, !tbaa !18
  store %struct.node** %309, %struct.node*** %279, align 8, !tbaa !20
  %310 = getelementptr inbounds %struct.node*, %struct.node** %309, i64 64
  store %struct.node** %310, %struct.node*** %278, align 8, !tbaa !21
  br label %311

311:                                              ; preds = %303, %305
  %312 = phi %struct.node** [ %300, %303 ], [ %310, %305 ]
  %313 = phi %struct.node** [ %304, %303 ], [ %309, %305 ]
  store %struct.node** %313, %struct.node*** %277, align 8, !tbaa !29
  %314 = icmp eq %struct.node* %299, null
  br i1 %314, label %315, label %436

315:                                              ; preds = %311
  %316 = load %struct.node**, %struct.node*** %276, align 8, !tbaa !22
  %317 = icmp eq %struct.node** %316, %313
  br i1 %317, label %433, label %318

318:                                              ; preds = %315
  %319 = load %struct.node**, %struct.node*** %284, align 8, !tbaa !17
  %320 = getelementptr inbounds %struct.node*, %struct.node** %319, i64 -1
  %321 = icmp eq %struct.node** %316, %320
  br i1 %321, label %325, label %322

322:                                              ; preds = %318
  store %struct.node* null, %struct.node** %316, align 8, !tbaa !18
  %323 = load %struct.node**, %struct.node*** %276, align 8, !tbaa !12
  %324 = getelementptr inbounds %struct.node*, %struct.node** %323, i64 1
  br label %431

325:                                              ; preds = %318
  %326 = load %struct.node***, %struct.node**** %286, align 8, !tbaa !19
  %327 = load %struct.node***, %struct.node**** %281, align 8, !tbaa !19
  %328 = ptrtoint %struct.node*** %326 to i64
  %329 = ptrtoint %struct.node*** %327 to i64
  %330 = sub i64 %328, %329
  %331 = shl i64 %330, 3
  %332 = add i64 %331, -64
  %333 = load %struct.node**, %struct.node*** %287, align 8, !tbaa !20
  %334 = ptrtoint %struct.node** %316 to i64
  %335 = ptrtoint %struct.node** %333 to i64
  %336 = sub i64 %334, %335
  %337 = ashr exact i64 %336, 3
  %338 = add nsw i64 %332, %337
  %339 = ptrtoint %struct.node** %312 to i64
  %340 = ptrtoint %struct.node** %313 to i64
  %341 = sub i64 %339, %340
  %342 = ashr exact i64 %341, 3
  %343 = add nsw i64 %338, %342
  %344 = icmp eq i64 %343, 1152921504606846975
  br i1 %344, label %345, label %347

345:                                              ; preds = %325
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0)) #15
          to label %346 unwind label %429

346:                                              ; preds = %345
  unreachable

347:                                              ; preds = %325
  %348 = load i64, i64* %288, align 8, !tbaa !23
  %349 = load %struct.node***, %struct.node**** %289, align 8, !tbaa !24
  %350 = ptrtoint %struct.node*** %349 to i64
  %351 = sub i64 %328, %350
  %352 = ashr exact i64 %351, 3
  %353 = sub i64 %348, %352
  %354 = icmp ult i64 %353, 2
  br i1 %354, label %355, label %416

355:                                              ; preds = %347
  %356 = ashr exact i64 %330, 3
  %357 = add nsw i64 %356, 1
  %358 = add nsw i64 %356, 2
  %359 = shl nsw i64 %358, 1
  %360 = icmp ugt i64 %348, %359
  br i1 %360, label %361, label %381

361:                                              ; preds = %355
  %362 = sub i64 %348, %358
  %363 = lshr i64 %362, 1
  %364 = getelementptr inbounds %struct.node**, %struct.node*** %349, i64 %363
  %365 = icmp ult %struct.node*** %364, %327
  %366 = getelementptr inbounds %struct.node**, %struct.node*** %326, i64 1
  %367 = ptrtoint %struct.node*** %366 to i64
  %368 = sub i64 %367, %329
  %369 = icmp eq i64 %368, 0
  br i1 %365, label %370, label %374

370:                                              ; preds = %361
  br i1 %369, label %409, label %371

371:                                              ; preds = %370
  %372 = bitcast %struct.node*** %364 to i8*
  %373 = bitcast %struct.node*** %327 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %372, i8* nonnull align 8 %373, i64 %368, i1 false) #14
  br label %409

374:                                              ; preds = %361
  br i1 %369, label %409, label %375

375:                                              ; preds = %374
  %376 = ashr exact i64 %368, 3
  %377 = sub nsw i64 %357, %376
  %378 = getelementptr inbounds %struct.node**, %struct.node*** %364, i64 %377
  %379 = bitcast %struct.node*** %378 to i8*
  %380 = bitcast %struct.node*** %327 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %379, i8* align 8 %380, i64 %368, i1 false) #14
  br label %409

381:                                              ; preds = %355
  %382 = icmp eq i64 %348, 0
  %383 = select i1 %382, i64 1, i64 %348
  %384 = add i64 %348, 2
  %385 = add i64 %384, %383
  %386 = icmp ugt i64 %385, 1152921504606846975
  br i1 %386, label %387, label %389

387:                                              ; preds = %381
  invoke void @_ZSt17__throw_bad_allocv() #15
          to label %388 unwind label %429

388:                                              ; preds = %387
  unreachable

389:                                              ; preds = %381
  %390 = shl nuw nsw i64 %385, 3
  %391 = invoke noalias nonnull i8* @_Znwm(i64 %390) #16
          to label %392 unwind label %427

392:                                              ; preds = %389
  %393 = bitcast i8* %391 to %struct.node***
  %394 = sub nsw i64 %385, %358
  %395 = lshr i64 %394, 1
  %396 = getelementptr inbounds %struct.node**, %struct.node*** %393, i64 %395
  %397 = load %struct.node***, %struct.node**** %281, align 8, !tbaa !25
  %398 = load %struct.node***, %struct.node**** %286, align 8, !tbaa !26
  %399 = getelementptr inbounds %struct.node**, %struct.node*** %398, i64 1
  %400 = ptrtoint %struct.node*** %399 to i64
  %401 = ptrtoint %struct.node*** %397 to i64
  %402 = sub i64 %400, %401
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %407, label %404

404:                                              ; preds = %392
  %405 = bitcast %struct.node*** %396 to i8*
  %406 = bitcast %struct.node*** %397 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %405, i8* align 8 %406, i64 %402, i1 false) #14
  br label %407

407:                                              ; preds = %404, %392
  %408 = load i8*, i8** %290, align 8, !tbaa !24
  call void @_ZdlPv(i8* %408) #14
  store i8* %391, i8** %290, align 8, !tbaa !24
  store i64 %385, i64* %288, align 8, !tbaa !23
  br label %409

409:                                              ; preds = %407, %375, %374, %371, %370
  %410 = phi %struct.node*** [ %396, %407 ], [ %364, %374 ], [ %364, %375 ], [ %364, %370 ], [ %364, %371 ]
  store %struct.node*** %410, %struct.node**** %281, align 8, !tbaa !19
  %411 = load %struct.node**, %struct.node*** %410, align 8, !tbaa !18
  store %struct.node** %411, %struct.node*** %279, align 8, !tbaa !20
  %412 = getelementptr inbounds %struct.node*, %struct.node** %411, i64 64
  store %struct.node** %412, %struct.node*** %278, align 8, !tbaa !21
  %413 = getelementptr inbounds %struct.node**, %struct.node*** %410, i64 %356
  store %struct.node*** %413, %struct.node**** %286, align 8, !tbaa !19
  %414 = load %struct.node**, %struct.node*** %413, align 8, !tbaa !18
  store %struct.node** %414, %struct.node*** %287, align 8, !tbaa !20
  %415 = getelementptr inbounds %struct.node*, %struct.node** %414, i64 64
  store %struct.node** %415, %struct.node*** %284, align 8, !tbaa !21
  br label %416

416:                                              ; preds = %409, %347
  %417 = invoke noalias nonnull i8* @_Znwm(i64 512) #16
          to label %418 unwind label %427

418:                                              ; preds = %416
  %419 = load %struct.node***, %struct.node**** %286, align 8, !tbaa !26
  %420 = getelementptr inbounds %struct.node**, %struct.node*** %419, i64 1
  %421 = bitcast %struct.node*** %420 to i8**
  store i8* %417, i8** %421, align 8, !tbaa !18
  %422 = load %struct.node**, %struct.node*** %276, align 8, !tbaa !12
  store %struct.node* null, %struct.node** %422, align 8, !tbaa !18
  %423 = load %struct.node***, %struct.node**** %286, align 8, !tbaa !26
  %424 = getelementptr inbounds %struct.node**, %struct.node*** %423, i64 1
  store %struct.node*** %424, %struct.node**** %286, align 8, !tbaa !19
  %425 = load %struct.node**, %struct.node*** %424, align 8, !tbaa !18
  store %struct.node** %425, %struct.node*** %287, align 8, !tbaa !20
  %426 = getelementptr inbounds %struct.node*, %struct.node** %425, i64 64
  store %struct.node** %426, %struct.node*** %284, align 8, !tbaa !21
  br label %431

427:                                              ; preds = %416, %389
  %428 = landingpad { i8*, i32 }
          cleanup
  br label %582

429:                                              ; preds = %345, %387
  %430 = landingpad { i8*, i32 }
          cleanup
  br label %582

431:                                              ; preds = %418, %322
  %432 = phi %struct.node** [ %324, %322 ], [ %425, %418 ]
  store %struct.node** %432, %struct.node*** %276, align 8, !tbaa !12
  br label %433

433:                                              ; preds = %431, %315
  %434 = add nsw i32 %294, 1
  %435 = load i32, i32* %1, align 4, !tbaa !33
  br label %487

436:                                              ; preds = %311
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %282) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %283) #14
  %437 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %3)
          to label %438 unwind label %461

438:                                              ; preds = %436
  %439 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) %437, i32* nonnull align 4 dereferenceable(4) %4)
          to label %440 unwind label %461

440:                                              ; preds = %438
  %441 = load i32, i32* %3, align 4, !tbaa !33
  %442 = icmp eq i32 %441, -1
  br i1 %442, label %463, label %443

443:                                              ; preds = %440
  %444 = invoke noalias nonnull dereferenceable(24) i8* @_Znwm(i64 24) #17
          to label %445 unwind label %461

445:                                              ; preds = %443
  %446 = bitcast i8* %444 to %struct.node*
  %447 = getelementptr inbounds %struct.node, %struct.node* %446, i64 0, i32 0
  store i32 %441, i32* %447, align 8, !tbaa !9
  %448 = getelementptr inbounds %struct.node, %struct.node* %446, i64 0, i32 1
  %449 = bitcast %struct.node** %448 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %449, i8 0, i64 16, i1 false) #14
  %450 = getelementptr inbounds %struct.node, %struct.node* %299, i64 0, i32 1
  %451 = bitcast %struct.node** %450 to i8**
  store i8* %444, i8** %451, align 8, !tbaa !3
  %452 = load %struct.node**, %struct.node*** %276, align 8, !tbaa !12
  %453 = load %struct.node**, %struct.node*** %284, align 8, !tbaa !17
  %454 = getelementptr inbounds %struct.node*, %struct.node** %453, i64 -1
  %455 = icmp eq %struct.node** %452, %454
  br i1 %455, label %460, label %456

456:                                              ; preds = %445
  %457 = bitcast %struct.node** %452 to i8**
  store i8* %444, i8** %457, align 8, !tbaa !18
  %458 = load %struct.node**, %struct.node*** %276, align 8, !tbaa !12
  %459 = getelementptr inbounds %struct.node*, %struct.node** %458, i64 1
  store %struct.node** %459, %struct.node*** %276, align 8, !tbaa !12
  br label %463

460:                                              ; preds = %445
  invoke void @_ZNSt5dequeIP4nodeSaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_(%"class.std::deque"* nonnull align 8 dereferenceable(80) %285, %struct.node** nonnull align 8 dereferenceable(8) %450)
          to label %463 unwind label %461

461:                                              ; preds = %483, %460, %466, %443, %438, %436
  %462 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %283) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %282) #14
  br label %582

463:                                              ; preds = %456, %460, %440
  %464 = load i32, i32* %4, align 4, !tbaa !33
  %465 = icmp eq i32 %464, -1
  br i1 %465, label %484, label %466

466:                                              ; preds = %463
  %467 = invoke noalias nonnull dereferenceable(24) i8* @_Znwm(i64 24) #17
          to label %468 unwind label %461

468:                                              ; preds = %466
  %469 = bitcast i8* %467 to %struct.node*
  %470 = getelementptr inbounds %struct.node, %struct.node* %469, i64 0, i32 0
  store i32 %464, i32* %470, align 8, !tbaa !9
  %471 = getelementptr inbounds %struct.node, %struct.node* %469, i64 0, i32 1
  %472 = bitcast %struct.node** %471 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %472, i8 0, i64 16, i1 false) #14
  %473 = getelementptr inbounds %struct.node, %struct.node* %299, i64 0, i32 2
  %474 = bitcast %struct.node** %473 to i8**
  store i8* %467, i8** %474, align 8, !tbaa !11
  %475 = load %struct.node**, %struct.node*** %276, align 8, !tbaa !12
  %476 = load %struct.node**, %struct.node*** %284, align 8, !tbaa !17
  %477 = getelementptr inbounds %struct.node*, %struct.node** %476, i64 -1
  %478 = icmp eq %struct.node** %475, %477
  br i1 %478, label %483, label %479

479:                                              ; preds = %468
  %480 = bitcast %struct.node** %475 to i8**
  store i8* %467, i8** %480, align 8, !tbaa !18
  %481 = load %struct.node**, %struct.node*** %276, align 8, !tbaa !12
  %482 = getelementptr inbounds %struct.node*, %struct.node** %481, i64 1
  store %struct.node** %482, %struct.node*** %276, align 8, !tbaa !12
  br label %484

483:                                              ; preds = %468
  invoke void @_ZNSt5dequeIP4nodeSaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_(%"class.std::deque"* nonnull align 8 dereferenceable(80) %285, %struct.node** nonnull align 8 dereferenceable(8) %473)
          to label %484 unwind label %461

484:                                              ; preds = %479, %483, %463
  %485 = load i32, i32* %1, align 4, !tbaa !33
  %486 = add nsw i32 %485, -1
  store i32 %486, i32* %1, align 4, !tbaa !33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %283) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %282) #14
  br label %487

487:                                              ; preds = %484, %433
  %488 = phi i32 [ %435, %433 ], [ %486, %484 ]
  %489 = phi i32 [ %434, %433 ], [ %294, %484 ]
  %490 = icmp sgt i32 %488, 0
  br i1 %490, label %293, label %491, !llvm.loop !34

491:                                              ; preds = %293, %487, %274
  %492 = phi i32 [ 1, %274 ], [ %489, %487 ], [ %294, %293 ]
  %493 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %493) #14
  %494 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %5)
          to label %495 unwind label %512

495:                                              ; preds = %491
  %496 = load i32, i32* %5, align 4, !tbaa !33
  %497 = bitcast i32* %6 to i8*
  %498 = icmp sgt i32 %496, 0
  br i1 %498, label %499, label %560

499:                                              ; preds = %495, %554
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %497) #14
  %500 = invoke nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %6)
          to label %501 unwind label %514

501:                                              ; preds = %499
  %502 = load i32, i32* %6, align 4, !tbaa !33
  %503 = icmp sgt i32 %502, %492
  br i1 %503, label %522, label %504

504:                                              ; preds = %501, %507
  %505 = phi i32 [ %509, %507 ], [ %502, %501 ]
  %506 = phi i32 [ %510, %507 ], [ 2, %501 ]
  invoke void @_Z19swapSubtreesOfLevelP4nodei(%struct.node* %275, i32 %505)
          to label %507 unwind label %516

507:                                              ; preds = %504
  %508 = load i32, i32* %6, align 4, !tbaa !33
  %509 = mul nsw i32 %508, %506
  %510 = add nuw nsw i32 %506, 1
  %511 = icmp sgt i32 %509, %492
  br i1 %511, label %522, label %504, !llvm.loop !35

512:                                              ; preds = %491
  %513 = landingpad { i8*, i32 }
          cleanup
  br label %580

514:                                              ; preds = %499
  %515 = landingpad { i8*, i32 }
          cleanup
  br label %558

516:                                              ; preds = %504
  %517 = landingpad { i8*, i32 }
          cleanup
  br label %558

518:                                              ; preds = %552, %549, %543, %542, %522
  %519 = landingpad { i8*, i32 }
          cleanup
  br label %558

520:                                              ; preds = %533
  %521 = landingpad { i8*, i32 }
          cleanup
  br label %558

522:                                              ; preds = %507, %501
  invoke void @_Z7InOrderP4node(%struct.node* %275)
          to label %523 unwind label %518

523:                                              ; preds = %522
  %524 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !36
  %525 = getelementptr i8, i8* %524, i64 -24
  %526 = bitcast i8* %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = add nsw i64 %527, 240
  %529 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %528
  %530 = bitcast i8* %529 to %"class.std::ctype"**
  %531 = load %"class.std::ctype"*, %"class.std::ctype"** %530, align 8, !tbaa !38
  %532 = icmp eq %"class.std::ctype"* %531, null
  br i1 %532, label %533, label %535

533:                                              ; preds = %523
  invoke void @_ZSt16__throw_bad_castv() #15
          to label %534 unwind label %520

534:                                              ; preds = %533
  unreachable

535:                                              ; preds = %523
  %536 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %531, i64 0, i32 8
  %537 = load i8, i8* %536, align 8, !tbaa !41
  %538 = icmp eq i8 %537, 0
  br i1 %538, label %542, label %539

539:                                              ; preds = %535
  %540 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %531, i64 0, i32 9, i64 10
  %541 = load i8, i8* %540, align 1, !tbaa !10
  br label %549

542:                                              ; preds = %535
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %531)
          to label %543 unwind label %518

543:                                              ; preds = %542
  %544 = bitcast %"class.std::ctype"* %531 to i8 (%"class.std::ctype"*, i8)***
  %545 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %544, align 8, !tbaa !36
  %546 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %545, i64 6
  %547 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %546, align 8
  %548 = invoke signext i8 %547(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %531, i8 signext 10)
          to label %549 unwind label %518

549:                                              ; preds = %543, %539
  %550 = phi i8 [ %541, %539 ], [ %548, %543 ]
  %551 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 signext %550)
          to label %552 unwind label %518

552:                                              ; preds = %549
  %553 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %551)
          to label %554 unwind label %518

554:                                              ; preds = %552
  %555 = load i32, i32* %5, align 4, !tbaa !33
  %556 = add nsw i32 %555, -1
  store i32 %556, i32* %5, align 4, !tbaa !33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %497) #14
  %557 = icmp sgt i32 %555, 1
  br i1 %557, label %499, label %560, !llvm.loop !43

558:                                              ; preds = %516, %520, %518, %514
  %559 = phi { i8*, i32 } [ %515, %514 ], [ %517, %516 ], [ %519, %518 ], [ %521, %520 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %497) #14
  br label %580

560:                                              ; preds = %554, %495
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %493) #14
  %561 = load %struct.node***, %struct.node**** %289, align 8, !tbaa !24
  %562 = icmp eq %struct.node*** %561, null
  br i1 %562, label %579, label %563

563:                                              ; preds = %560
  %564 = bitcast %struct.node*** %561 to i8*
  %565 = load %struct.node***, %struct.node**** %281, align 8, !tbaa !25
  %566 = load %struct.node***, %struct.node**** %286, align 8, !tbaa !26
  %567 = getelementptr inbounds %struct.node**, %struct.node*** %566, i64 1
  %568 = icmp ult %struct.node*** %565, %567
  br i1 %568, label %569, label %577

569:                                              ; preds = %563, %569
  %570 = phi %struct.node*** [ %573, %569 ], [ %565, %563 ]
  %571 = bitcast %struct.node*** %570 to i8**
  %572 = load i8*, i8** %571, align 8, !tbaa !18
  call void @_ZdlPv(i8* %572) #14
  %573 = getelementptr inbounds %struct.node**, %struct.node*** %570, i64 1
  %574 = icmp ult %struct.node*** %570, %566
  br i1 %574, label %569, label %575, !llvm.loop !32

575:                                              ; preds = %569
  %576 = load i8*, i8** %290, align 8, !tbaa !24
  br label %577

577:                                              ; preds = %575, %563
  %578 = phi i8* [ %576, %575 ], [ %564, %563 ]
  call void @_ZdlPv(i8* %578) #14
  br label %579

579:                                              ; preds = %560, %577
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #14
  ret i32 0

580:                                              ; preds = %558, %512
  %581 = phi { i8*, i32 } [ %559, %558 ], [ %513, %512 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %493) #14
  br label %582

582:                                              ; preds = %427, %429, %580, %461, %270, %268
  %583 = phi { i8*, i32 } [ %271, %270 ], [ %269, %268 ], [ %581, %580 ], [ %462, %461 ], [ %428, %427 ], [ %430, %429 ]
  call void @_ZNSt5queueIP4nodeSt5dequeIS1_SaIS1_EEED2Ev(%"class.std::queue"* nonnull align 8 dereferenceable(80) %2) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #14
  resume { i8*, i32 } %583
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #10 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #14
  tail call void @_ZSt9terminatev() #18
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt11_Deque_baseIP4nodeSaIS1_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* nonnull align 8 dereferenceable(80) %0, i64 %1) local_unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = lshr i64 %1, 6
  %4 = add nuw nsw i64 %3, 1
  %5 = icmp ugt i64 %3, 5
  %6 = select i1 %5, i64 %3, i64 5
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 1
  store i64 %7, i64* %8, align 8, !tbaa !23
  %9 = shl nuw nsw i64 %7, 3
  %10 = tail call noalias nonnull i8* @_Znwm(i64 %9) #16
  %11 = bitcast i8* %10 to %struct.node***
  %12 = bitcast %"class.std::_Deque_base"* %0 to i8**
  store i8* %10, i8** %12, align 8, !tbaa !24
  %13 = load i64, i64* %8, align 8, !tbaa !23
  %14 = sub i64 %13, %4
  %15 = lshr i64 %14, 1
  %16 = getelementptr inbounds %struct.node**, %struct.node*** %11, i64 %15
  %17 = getelementptr inbounds %struct.node**, %struct.node*** %16, i64 %4
  br label %18

18:                                               ; preds = %2, %21
  %19 = phi %struct.node*** [ %23, %21 ], [ %16, %2 ]
  %20 = invoke noalias nonnull i8* @_Znwm(i64 512) #16
          to label %21 unwind label %25

21:                                               ; preds = %18
  %22 = bitcast %struct.node*** %19 to i8**
  store i8* %20, i8** %22, align 8, !tbaa !18
  %23 = getelementptr inbounds %struct.node**, %struct.node*** %19, i64 1
  %24 = icmp ult %struct.node*** %23, %17
  br i1 %24, label %18, label %51, !llvm.loop !44

25:                                               ; preds = %18
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  %28 = tail call i8* @__cxa_begin_catch(i8* %27) #14
  %29 = icmp ugt %struct.node*** %19, %16
  br i1 %29, label %30, label %36

30:                                               ; preds = %25, %30
  %31 = phi %struct.node*** [ %34, %30 ], [ %16, %25 ]
  %32 = bitcast %struct.node*** %31 to i8**
  %33 = load i8*, i8** %32, align 8, !tbaa !18
  tail call void @_ZdlPv(i8* %33) #14
  %34 = getelementptr inbounds %struct.node**, %struct.node*** %31, i64 1
  %35 = icmp ult %struct.node*** %34, %19
  br i1 %35, label %30, label %36, !llvm.loop !32

36:                                               ; preds = %30, %25
  invoke void @__cxa_rethrow() #15
          to label %42 unwind label %37

37:                                               ; preds = %36
  %38 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @__cxa_end_catch()
          to label %43 unwind label %39

39:                                               ; preds = %37
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  tail call void @__clang_call_terminate(i8* %41) #18
  unreachable

42:                                               ; preds = %36
  unreachable

43:                                               ; preds = %37
  %44 = extractvalue { i8*, i32 } %38, 0
  %45 = tail call i8* @__cxa_begin_catch(i8* %44) #14
  %46 = load i8*, i8** %12, align 8, !tbaa !24
  tail call void @_ZdlPv(i8* %46) #14
  %47 = bitcast %"class.std::_Deque_base"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %47, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #15
          to label %70 unwind label %48

48:                                               ; preds = %43
  %49 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %50 unwind label %67

50:                                               ; preds = %48
  resume { i8*, i32 } %49

51:                                               ; preds = %21
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 2, i32 3
  store %struct.node*** %16, %struct.node**** %52, align 8, !tbaa !19
  %53 = load %struct.node**, %struct.node*** %16, align 8, !tbaa !18
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 2, i32 1
  store %struct.node** %53, %struct.node*** %54, align 8, !tbaa !20
  %55 = getelementptr inbounds %struct.node*, %struct.node** %53, i64 64
  %56 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 2, i32 2
  store %struct.node** %55, %struct.node*** %56, align 8, !tbaa !21
  %57 = getelementptr inbounds %struct.node**, %struct.node*** %17, i64 -1
  %58 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 3, i32 3
  store %struct.node*** %57, %struct.node**** %58, align 8, !tbaa !19
  %59 = load %struct.node**, %struct.node*** %57, align 8, !tbaa !18
  %60 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 3, i32 1
  store %struct.node** %59, %struct.node*** %60, align 8, !tbaa !20
  %61 = getelementptr inbounds %struct.node*, %struct.node** %59, i64 64
  %62 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 3, i32 2
  store %struct.node** %61, %struct.node*** %62, align 8, !tbaa !21
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 2, i32 0
  store %struct.node** %53, %struct.node*** %63, align 8, !tbaa !29
  %64 = and i64 %1, 63
  %65 = getelementptr inbounds %struct.node*, %struct.node** %59, i64 %64
  %66 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 3, i32 0
  store %struct.node** %65, %struct.node*** %66, align 8, !tbaa !12
  ret void

67:                                               ; preds = %48
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  tail call void @__clang_call_terminate(i8* %69) #18
  unreachable

70:                                               ; preds = %43
  unreachable
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #11

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt5dequeIP4nodeSaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_(%"class.std::deque"* nonnull align 8 dereferenceable(80) %0, %struct.node** nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 3
  %4 = load %struct.node***, %struct.node**** %3, align 8, !tbaa !19
  %5 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 3
  %6 = load %struct.node***, %struct.node**** %5, align 8, !tbaa !19
  %7 = ptrtoint %struct.node*** %4 to i64
  %8 = ptrtoint %struct.node*** %6 to i64
  %9 = sub i64 %7, %8
  %10 = shl i64 %9, 3
  %11 = add i64 %10, -64
  %12 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %13 = load %struct.node**, %struct.node*** %12, align 8, !tbaa !22
  %14 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1
  %15 = load %struct.node**, %struct.node*** %14, align 8, !tbaa !20
  %16 = ptrtoint %struct.node** %13 to i64
  %17 = ptrtoint %struct.node** %15 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %11, %19
  %21 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 2
  %22 = load %struct.node**, %struct.node*** %21, align 8, !tbaa !21
  %23 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %24 = load %struct.node**, %struct.node*** %23, align 8, !tbaa !22
  %25 = ptrtoint %struct.node** %22 to i64
  %26 = ptrtoint %struct.node** %24 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %20, %28
  %30 = icmp eq i64 %29, 1152921504606846975
  br i1 %30, label %31, label %32

31:                                               ; preds = %2
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0)) #15
  unreachable

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8, !tbaa !23
  %35 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %struct.node***, %struct.node**** %35, align 8, !tbaa !24
  %37 = ptrtoint %struct.node*** %36 to i64
  %38 = sub i64 %7, %37
  %39 = ashr exact i64 %38, 3
  %40 = sub i64 %34, %39
  %41 = icmp ult i64 %40, 2
  br i1 %41, label %42, label %43

42:                                               ; preds = %32
  tail call void @_ZNSt5dequeIP4nodeSaIS1_EE17_M_reallocate_mapEmb(%"class.std::deque"* nonnull align 8 dereferenceable(80) %0, i64 1, i1 zeroext false)
  br label %43

43:                                               ; preds = %32, %42
  %44 = tail call noalias nonnull i8* @_Znwm(i64 512) #16
  %45 = load %struct.node***, %struct.node**** %3, align 8, !tbaa !26
  %46 = getelementptr inbounds %struct.node**, %struct.node*** %45, i64 1
  %47 = bitcast %struct.node*** %46 to i8**
  store i8* %44, i8** %47, align 8, !tbaa !18
  %48 = load %struct.node**, %struct.node*** %12, align 8, !tbaa !12
  %49 = load %struct.node*, %struct.node** %1, align 8, !tbaa !18
  store %struct.node* %49, %struct.node** %48, align 8, !tbaa !18
  %50 = load %struct.node***, %struct.node**** %3, align 8, !tbaa !26
  %51 = getelementptr inbounds %struct.node**, %struct.node*** %50, i64 1
  store %struct.node*** %51, %struct.node**** %3, align 8, !tbaa !19
  %52 = load %struct.node**, %struct.node*** %51, align 8, !tbaa !18
  store %struct.node** %52, %struct.node*** %14, align 8, !tbaa !20
  %53 = getelementptr inbounds %struct.node*, %struct.node** %52, i64 64
  %54 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 2
  store %struct.node** %53, %struct.node*** %54, align 8, !tbaa !21
  store %struct.node** %52, %struct.node*** %12, align 8, !tbaa !12
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #11

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt5dequeIP4nodeSaIS1_EE17_M_reallocate_mapEmb(%"class.std::deque"* nonnull align 8 dereferenceable(80) %0, i64 %1, i1 zeroext %2) local_unnamed_addr #4 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 3
  %5 = load %struct.node***, %struct.node**** %4, align 8, !tbaa !26
  %6 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 3
  %7 = load %struct.node***, %struct.node**** %6, align 8, !tbaa !25
  %8 = ptrtoint %struct.node*** %5 to i64
  %9 = ptrtoint %struct.node*** %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 3
  %12 = add nsw i64 %11, 1
  %13 = add i64 %12, %1
  %14 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !tbaa !23
  %16 = shl i64 %13, 1
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %18, label %42

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %struct.node***, %struct.node**** %19, align 8, !tbaa !24
  %21 = sub i64 %15, %13
  %22 = lshr i64 %21, 1
  %23 = select i1 %2, i64 %1, i64 0
  %24 = add nsw i64 %22, %23
  %25 = getelementptr inbounds %struct.node**, %struct.node*** %20, i64 %24
  %26 = icmp ult %struct.node*** %25, %7
  %27 = getelementptr inbounds %struct.node**, %struct.node*** %5, i64 1
  %28 = ptrtoint %struct.node*** %27 to i64
  %29 = sub i64 %28, %9
  %30 = icmp eq i64 %29, 0
  br i1 %26, label %31, label %35

31:                                               ; preds = %18
  br i1 %30, label %71, label %32

32:                                               ; preds = %31
  %33 = bitcast %struct.node*** %25 to i8*
  %34 = bitcast %struct.node*** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %34, i64 %29, i1 false) #14
  br label %71

35:                                               ; preds = %18
  br i1 %30, label %71, label %36

36:                                               ; preds = %35
  %37 = ashr exact i64 %29, 3
  %38 = sub nsw i64 %12, %37
  %39 = getelementptr inbounds %struct.node**, %struct.node*** %25, i64 %38
  %40 = bitcast %struct.node*** %39 to i8*
  %41 = bitcast %struct.node*** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %29, i1 false) #14
  br label %71

42:                                               ; preds = %3
  %43 = icmp ult i64 %15, %1
  %44 = select i1 %43, i64 %1, i64 %15
  %45 = add i64 %15, 2
  %46 = add i64 %45, %44
  %47 = icmp ugt i64 %46, 1152921504606846975
  br i1 %47, label %48, label %49

48:                                               ; preds = %42
  tail call void @_ZSt17__throw_bad_allocv() #15
  unreachable

49:                                               ; preds = %42
  %50 = shl nuw nsw i64 %46, 3
  %51 = tail call noalias nonnull i8* @_Znwm(i64 %50) #16
  %52 = bitcast i8* %51 to %struct.node***
  %53 = sub i64 %46, %13
  %54 = lshr i64 %53, 1
  %55 = select i1 %2, i64 %1, i64 0
  %56 = add nsw i64 %54, %55
  %57 = getelementptr inbounds %struct.node**, %struct.node*** %52, i64 %56
  %58 = load %struct.node***, %struct.node**** %6, align 8, !tbaa !25
  %59 = load %struct.node***, %struct.node**** %4, align 8, !tbaa !26
  %60 = getelementptr inbounds %struct.node**, %struct.node*** %59, i64 1
  %61 = ptrtoint %struct.node*** %60 to i64
  %62 = ptrtoint %struct.node*** %58 to i64
  %63 = sub i64 %61, %62
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %49
  %66 = bitcast %struct.node*** %57 to i8*
  %67 = bitcast %struct.node*** %58 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 8 %67, i64 %63, i1 false) #14
  br label %68

68:                                               ; preds = %49, %65
  %69 = bitcast %"class.std::deque"* %0 to i8**
  %70 = load i8*, i8** %69, align 8, !tbaa !24
  tail call void @_ZdlPv(i8* %70) #14
  store i8* %51, i8** %69, align 8, !tbaa !24
  store i64 %46, i64* %14, align 8, !tbaa !23
  br label %71

71:                                               ; preds = %32, %31, %36, %35, %68
  %72 = phi %struct.node*** [ %57, %68 ], [ %25, %35 ], [ %25, %36 ], [ %25, %31 ], [ %25, %32 ]
  store %struct.node*** %72, %struct.node**** %6, align 8, !tbaa !19
  %73 = load %struct.node**, %struct.node*** %72, align 8, !tbaa !18
  %74 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  store %struct.node** %73, %struct.node*** %74, align 8, !tbaa !20
  %75 = getelementptr inbounds %struct.node*, %struct.node** %73, i64 64
  %76 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 2
  store %struct.node** %75, %struct.node*** %76, align 8, !tbaa !21
  %77 = getelementptr inbounds %struct.node**, %struct.node*** %72, i64 %11
  store %struct.node*** %77, %struct.node**** %4, align 8, !tbaa !19
  %78 = load %struct.node**, %struct.node*** %77, align 8, !tbaa !18
  %79 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1
  store %struct.node** %78, %struct.node*** %79, align 8, !tbaa !20
  %80 = getelementptr inbounds %struct.node*, %struct.node** %78, i64 64
  %81 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 2
  store %struct.node** %80, %struct.node*** %81, align 8, !tbaa !21
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #12

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #11

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_SwapNodes.cpp() #4 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #14
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #6 = { inlinehint nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noinline noreturn nounwind }
attributes #11 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nounwind }
attributes #15 = { noreturn }
attributes #16 = { allocsize(0) }
attributes #17 = { builtin allocsize(0) }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !8, i64 8}
!4 = !{!"_ZTS4node", !5, i64 0, !8, i64 8, !8, i64 16}
!5 = !{!"int", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!"any pointer", !6, i64 0}
!9 = !{!4, !5, i64 0}
!10 = !{!6, !6, i64 0}
!11 = !{!4, !8, i64 16}
!12 = !{!13, !8, i64 48}
!13 = !{!"_ZTSSt11_Deque_baseIP4nodeSaIS1_EE", !14, i64 0}
!14 = !{!"_ZTSNSt11_Deque_baseIP4nodeSaIS1_EE11_Deque_implE", !8, i64 0, !15, i64 8, !16, i64 16, !16, i64 48}
!15 = !{!"long", !6, i64 0}
!16 = !{!"_ZTSSt15_Deque_iteratorIP4nodeRS1_PS1_E", !8, i64 0, !8, i64 8, !8, i64 16, !8, i64 24}
!17 = !{!13, !8, i64 64}
!18 = !{!8, !8, i64 0}
!19 = !{!16, !8, i64 24}
!20 = !{!16, !8, i64 8}
!21 = !{!16, !8, i64 16}
!22 = !{!16, !8, i64 0}
!23 = !{!13, !15, i64 8}
!24 = !{!13, !8, i64 0}
!25 = !{!13, !8, i64 40}
!26 = !{!13, !8, i64 72}
!27 = !{!13, !8, i64 32}
!28 = !{!13, !8, i64 24}
!29 = !{!13, !8, i64 16}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.mustprogress"}
!32 = distinct !{!32, !31}
!33 = !{!5, !5, i64 0}
!34 = distinct !{!34, !31}
!35 = distinct !{!35, !31}
!36 = !{!37, !37, i64 0}
!37 = !{!"vtable pointer", !7, i64 0}
!38 = !{!39, !8, i64 240}
!39 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !8, i64 216, !6, i64 224, !40, i64 225, !8, i64 232, !8, i64 240, !8, i64 248, !8, i64 256}
!40 = !{!"bool", !6, i64 0}
!41 = !{!42, !6, i64 56}
!42 = !{!"_ZTSSt5ctypeIcE", !8, i64 16, !40, i64 24, !8, i64 32, !8, i64 40, !8, i64 48, !6, i64 56, !6, i64 57, !6, i64 313, !6, i64 569}
!43 = distinct !{!43, !31}
!44 = distinct !{!44, !31}
