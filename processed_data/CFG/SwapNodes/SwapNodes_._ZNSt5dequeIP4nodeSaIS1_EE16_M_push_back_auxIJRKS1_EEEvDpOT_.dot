digraph "CFG for '_ZNSt5dequeIP4nodeSaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_' function" {
	label="CFG for '_ZNSt5dequeIP4nodeSaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_' function";

	Node0x55df71070530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = getelementptr inbounds %\"class.std::deque\", %\"class.std::deque\"* %0,\l... i64 0, i32 0, i32 0, i32 3, i32 3\l  %4 = load %struct.node***, %struct.node**** %3, align 8, !tbaa !3\l  %5 = getelementptr inbounds %\"class.std::deque\", %\"class.std::deque\"* %0,\l... i64 0, i32 0, i32 0, i32 2, i32 3\l  %6 = load %struct.node***, %struct.node**** %5, align 8, !tbaa !3\l  %7 = ptrtoint %struct.node*** %4 to i64\l  %8 = ptrtoint %struct.node*** %6 to i64\l  %9 = sub i64 %7, %8\l  %10 = shl i64 %9, 3\l  %11 = add i64 %10, -64\l  %12 = getelementptr inbounds %\"class.std::deque\", %\"class.std::deque\"* %0,\l... i64 0, i32 0, i32 0, i32 3, i32 0\l  %13 = load %struct.node**, %struct.node*** %12, align 8, !tbaa !8\l  %14 = getelementptr inbounds %\"class.std::deque\", %\"class.std::deque\"* %0,\l... i64 0, i32 0, i32 0, i32 3, i32 1\l  %15 = load %struct.node**, %struct.node*** %14, align 8, !tbaa !9\l  %16 = ptrtoint %struct.node** %13 to i64\l  %17 = ptrtoint %struct.node** %15 to i64\l  %18 = sub i64 %16, %17\l  %19 = ashr exact i64 %18, 3\l  %20 = add nsw i64 %11, %19\l  %21 = getelementptr inbounds %\"class.std::deque\", %\"class.std::deque\"* %0,\l... i64 0, i32 0, i32 0, i32 2, i32 2\l  %22 = load %struct.node**, %struct.node*** %21, align 8, !tbaa !10\l  %23 = getelementptr inbounds %\"class.std::deque\", %\"class.std::deque\"* %0,\l... i64 0, i32 0, i32 0, i32 2, i32 0\l  %24 = load %struct.node**, %struct.node*** %23, align 8, !tbaa !8\l  %25 = ptrtoint %struct.node** %22 to i64\l  %26 = ptrtoint %struct.node** %24 to i64\l  %27 = sub i64 %25, %26\l  %28 = ashr exact i64 %27, 3\l  %29 = add nsw i64 %20, %28\l  %30 = icmp eq i64 %29, 1152921504606846975\l  br i1 %30, label %31, label %32\l|{<s0>T|<s1>F}}"];
	Node0x55df71070530:s0 -> Node0x55df71070580;
	Node0x55df71070530:s1 -> Node0x55df71071790;
	Node0x55df71070580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%31:\l31:                                               \l  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds\l... ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0)) #14\l  unreachable\l}"];
	Node0x55df71071790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = getelementptr inbounds %\"class.std::deque\", %\"class.std::deque\"* %0,\l... i64 0, i32 0, i32 0, i32 1\l  %34 = load i64, i64* %33, align 8, !tbaa !11\l  %35 = getelementptr inbounds %\"class.std::deque\", %\"class.std::deque\"* %0,\l... i64 0, i32 0, i32 0, i32 0\l  %36 = load %struct.node***, %struct.node**** %35, align 8, !tbaa !15\l  %37 = ptrtoint %struct.node*** %36 to i64\l  %38 = sub i64 %7, %37\l  %39 = ashr exact i64 %38, 3\l  %40 = sub i64 %34, %39\l  %41 = icmp ult i64 %40, 2\l  br i1 %41, label %42, label %43\l|{<s0>T|<s1>F}}"];
	Node0x55df71071790:s0 -> Node0x55df71071f60;
	Node0x55df71071790:s1 -> Node0x55df71071fb0;
	Node0x55df71071f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%42:\l42:                                               \l  tail call void\l... @_ZNSt5dequeIP4nodeSaIS1_EE17_M_reallocate_mapEmb(%\"class.std::deque\"*\l... nonnull align 8 dereferenceable(80) %0, i64 1, i1 zeroext false)\l  br label %43\l}"];
	Node0x55df71071f60 -> Node0x55df71071fb0;
	Node0x55df71071fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = tail call noalias nonnull i8* @_Znwm(i64 512) #15\l  %45 = load %struct.node***, %struct.node**** %3, align 8, !tbaa !16\l  %46 = getelementptr inbounds %struct.node**, %struct.node*** %45, i64 1\l  %47 = bitcast %struct.node*** %46 to i8**\l  store i8* %44, i8** %47, align 8, !tbaa !17\l  %48 = load %struct.node**, %struct.node*** %12, align 8, !tbaa !18\l  %49 = load %struct.node*, %struct.node** %1, align 8, !tbaa !17\l  store %struct.node* %49, %struct.node** %48, align 8, !tbaa !17\l  %50 = load %struct.node***, %struct.node**** %3, align 8, !tbaa !16\l  %51 = getelementptr inbounds %struct.node**, %struct.node*** %50, i64 1\l  store %struct.node*** %51, %struct.node**** %3, align 8, !tbaa !3\l  %52 = load %struct.node**, %struct.node*** %51, align 8, !tbaa !17\l  store %struct.node** %52, %struct.node*** %14, align 8, !tbaa !9\l  %53 = getelementptr inbounds %struct.node*, %struct.node** %52, i64 64\l  %54 = getelementptr inbounds %\"class.std::deque\", %\"class.std::deque\"* %0,\l... i64 0, i32 0, i32 0, i32 3, i32 2\l  store %struct.node** %53, %struct.node*** %54, align 8, !tbaa !10\l  store %struct.node** %52, %struct.node*** %12, align 8, !tbaa !18\l  ret void\l}"];
}
