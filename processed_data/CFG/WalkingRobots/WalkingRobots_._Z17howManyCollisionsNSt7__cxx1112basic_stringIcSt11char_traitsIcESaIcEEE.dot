digraph "CFG for '_Z17howManyCollisionsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function" {
	label="CFG for '_Z17howManyCollisionsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' function";

	Node0x5631b14ce890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%1:\l  %2 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 1\l  %3 = load i64, i64* %2, align 8, !tbaa !3\l  %4 = trunc i64 %3 to i32\l  %5 = icmp sgt i32 %4, 0\l  br i1 %5, label %6, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5631b14ce890:s0 -> Node0x5631b14cf700;
	Node0x5631b14ce890:s1 -> Node0x5631b14cf790;
	Node0x5631b14cf700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%6:\l6:                                                \l  %7 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %8 = load i8*, i8** %7, align 8, !tbaa !10\l  %9 = and i64 %3, 4294967295\l  br label %10\l}"];
	Node0x5631b14cf700 -> Node0x5631b14cf620;
	Node0x5631b14cf620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = phi i64 [ 0, %6 ], [ %18, %16 ]\l  %12 = phi i32 [ %4, %6 ], [ %17, %16 ]\l  %13 = getelementptr inbounds i8, i8* %8, i64 %11\l  %14 = load i8, i8* %13, align 1, !tbaa !11\l  %15 = icmp eq i8 %14, 108\l  br i1 %15, label %16, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5631b14cf620:s0 -> Node0x5631b14cfc30;
	Node0x5631b14cf620:s1 -> Node0x5631b14d0120;
	Node0x5631b14cfc30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = add nsw i32 %12, -1\l  %18 = add nuw nsw i64 %11, 1\l  %19 = icmp eq i64 %18, %9\l  br i1 %19, label %20, label %10, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5631b14cfc30:s0 -> Node0x5631b14d0120;
	Node0x5631b14cfc30:s1 -> Node0x5631b14cf620;
	Node0x5631b14d0120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%20:\l20:                                               \l  %21 = phi i32 [ 0, %16 ], [ %12, %10 ]\l  br i1 %5, label %22, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5631b14d0120:s0 -> Node0x5631b14d05b0;
	Node0x5631b14d0120:s1 -> Node0x5631b14cf790;
	Node0x5631b14d05b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%22:\l22:                                               \l  %23 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %24 = load i8*, i8** %23, align 8, !tbaa !10\l  %25 = and i64 %3, 4294967295\l  %26 = sub i32 %21, %4\l  br label %27\l}"];
	Node0x5631b14d05b0 -> Node0x5631b14d0e50;
	Node0x5631b14d0e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%27:\l27:                                               \l  %28 = phi i64 [ %25, %22 ], [ %39, %36 ]\l  %29 = phi i32 [ %4, %22 ], [ %31, %36 ]\l  %30 = phi i32 [ %21, %22 ], [ %37, %36 ]\l  %31 = add nsw i32 %29, -1\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds i8, i8* %24, i64 %32\l  %34 = load i8, i8* %33, align 1, !tbaa !11\l  %35 = icmp eq i8 %34, 114\l  br i1 %35, label %36, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5631b14d0e50:s0 -> Node0x5631b14d0f10;
	Node0x5631b14d0e50:s1 -> Node0x5631b14d1d10;
	Node0x5631b14d0f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%36:\l36:                                               \l  %37 = add nsw i32 %30, -1\l  %38 = icmp sgt i64 %28, 1\l  %39 = add nsw i64 %28, -1\l  br i1 %38, label %27, label %40, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5631b14d0f10:s0 -> Node0x5631b14d0e50;
	Node0x5631b14d0f10:s1 -> Node0x5631b14d1d10;
	Node0x5631b14d1d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%40:\l40:                                               \l  %41 = phi i32 [ %26, %36 ], [ %30, %27 ]\l  br i1 %5, label %42, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5631b14d1d10:s0 -> Node0x5631b14d21c0;
	Node0x5631b14d1d10:s1 -> Node0x5631b14cf790;
	Node0x5631b14d21c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%42:\l42:                                               \l  %43 = getelementptr inbounds %\"class.std::__cxx11::basic_string\",\l... %\"class.std::__cxx11::basic_string\"* %0, i64 0, i32 0, i32 0\l  %44 = load i8*, i8** %43, align 8, !tbaa !10\l  %45 = and i64 %3, 4294967295\l  %46 = icmp ult i64 %9, 8\l  br i1 %46, label %73, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5631b14d21c0:s0 -> Node0x5631b14d2450;
	Node0x5631b14d21c0:s1 -> Node0x5631b14d24a0;
	Node0x5631b14d24a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%47:\l47:                                               \l  %48 = and i64 %3, 7\l  %49 = sub nsw i64 %9, %48\l  %50 = insertelement \<4 x i32\> \<i32 poison, i32 0, i32 0, i32 0\>, i32 %41,\l... i32 0\l  br label %51\l}"];
	Node0x5631b14d24a0 -> Node0x5631b14d44a0;
	Node0x5631b14d44a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%51:\l51:                                               \l  %52 = phi i64 [ 0, %47 ], [ %67, %51 ]\l  %53 = phi \<4 x i32\> [ %50, %47 ], [ %65, %51 ]\l  %54 = phi \<4 x i32\> [ zeroinitializer, %47 ], [ %66, %51 ]\l  %55 = getelementptr inbounds i8, i8* %44, i64 %52\l  %56 = bitcast i8* %55 to \<4 x i8\>*\l  %57 = load \<4 x i8\>, \<4 x i8\>* %56, align 1, !tbaa !11\l  %58 = getelementptr inbounds i8, i8* %55, i64 4\l  %59 = bitcast i8* %58 to \<4 x i8\>*\l  %60 = load \<4 x i8\>, \<4 x i8\>* %59, align 1, !tbaa !11\l  %61 = icmp eq \<4 x i8\> %57, \<i8 100, i8 100, i8 100, i8 100\>\l  %62 = icmp eq \<4 x i8\> %60, \<i8 100, i8 100, i8 100, i8 100\>\l  %63 = sext \<4 x i1\> %61 to \<4 x i32\>\l  %64 = sext \<4 x i1\> %62 to \<4 x i32\>\l  %65 = add \<4 x i32\> %53, %63\l  %66 = add \<4 x i32\> %54, %64\l  %67 = add nuw i64 %52, 8\l  %68 = icmp eq i64 %67, %49\l  br i1 %68, label %69, label %51, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5631b14d44a0:s0 -> Node0x5631b14d54b0;
	Node0x5631b14d44a0:s1 -> Node0x5631b14d44a0;
	Node0x5631b14d54b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%69:\l69:                                               \l  %70 = add \<4 x i32\> %66, %65\l  %71 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %70)\l  %72 = icmp eq i64 %48, 0\l  br i1 %72, label %76, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5631b14d54b0:s0 -> Node0x5631b14cf790;
	Node0x5631b14d54b0:s1 -> Node0x5631b14d2450;
	Node0x5631b14d2450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%73:\l73:                                               \l  %74 = phi i64 [ 0, %42 ], [ %49, %69 ]\l  %75 = phi i32 [ %41, %42 ], [ %71, %69 ]\l  br label %78\l}"];
	Node0x5631b14d2450 -> Node0x5631b14d5b80;
	Node0x5631b14cf790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%76:\l76:                                               \l  %77 = phi i32 [ %41, %40 ], [ %21, %20 ], [ %4, %1 ], [ %71, %69 ], [ %85,\l... %78 ]\l  ret i32 %77\l}"];
	Node0x5631b14d5b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%78:\l78:                                               \l  %79 = phi i64 [ %86, %78 ], [ %74, %73 ]\l  %80 = phi i32 [ %85, %78 ], [ %75, %73 ]\l  %81 = getelementptr inbounds i8, i8* %44, i64 %79\l  %82 = load i8, i8* %81, align 1, !tbaa !11\l  %83 = icmp eq i8 %82, 100\l  %84 = sext i1 %83 to i32\l  %85 = add nsw i32 %80, %84\l  %86 = add nuw nsw i64 %79, 1\l  %87 = icmp eq i64 %86, %45\l  br i1 %87, label %76, label %78, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5631b14d5b80:s0 -> Node0x5631b14cf790;
	Node0x5631b14d5b80:s1 -> Node0x5631b14d5b80;
}
