; ModuleID = '../../Benchmarks/SimpleTreeCounting/SimpleTreeCounting.cpp'
source_filename = "../../Benchmarks/SimpleTreeCounting/SimpleTreeCounting.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct.T = type { i8, [2 x %struct.T*], %struct.T*, %struct.T*, i32, i32 }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, T *>, std::_Select1st<std::pair<const std::pair<int, int>, T *>>, std::less<std::pair<int, int>>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::pair<int, int>, std::pair<const std::pair<int, int>, T *>, std::_Select1st<std::pair<const std::pair<int, int>, T *>>, std::less<std::pair<int, int>>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"struct.std::piecewise_construct_t" = type { i8 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [16 x i8] }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { %"struct.std::pair"* }
%"struct.std::pair" = type { i32, i32 }
%"class.std::tuple.3" = type { i8 }

$_ZNSt3mapISt4pairIiiEP1TSt4lessIS1_ESaIS0_IKS1_S3_EEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEESt17_Rb_tree_iteratorIS5_ESt23_Rb_tree_const_iteratorIS5_EDpOT_ = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@f1 = dso_local global [800000 x %struct.T] zeroinitializer, align 16
@ff = dso_local local_unnamed_addr global %struct.T* getelementptr inbounds ([800000 x %struct.T], [800000 x %struct.T]* @f1, i64 0, i64 0), align 8
@f = dso_local local_unnamed_addr global [800000 x %struct.T*] zeroinitializer, align 16
@null = dso_local local_unnamed_addr global %struct.T* null, align 8
@n = dso_local global i32 0, align 4
@q = dso_local global i32 0, align 4
@a = dso_local global [800000 x i32] zeroinitializer, align 16
@b = dso_local global [800000 x i32] zeroinitializer, align 16
@c = dso_local global [800000 x i32] zeroinitializer, align 16
@Map = dso_local global %"class.std::map" zeroinitializer, align 8
@B = dso_local local_unnamed_addr global [1100000 x i64] zeroinitializer, align 16
@.str = private unnamed_addr constant [34 x i8] c"../input_files/SimpleTreeCounting\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_SimpleTreeCounting.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3mapISt4pairIiiEP1TSt4lessIS1_ESaIS0_IKS1_S3_EEED2Ev(%"class.std::map"* nonnull align 8 dereferenceable(48) %0) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::map", %"class.std::map"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.std::map", %"class.std::map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 16
  %5 = bitcast i8* %4 to %"struct.std::_Rb_tree_node"**
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8, !tbaa !3
  invoke void @_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %2, %"struct.std::_Rb_tree_node"* %6)
          to label %10 unwind label %7

7:                                                ; preds = %1
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  tail call void @__clang_call_terminate(i8* %9) #17
  unreachable

10:                                               ; preds = %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable
define dso_local void @_Z3addix(i32 %0, i64 %1) local_unnamed_addr #4 {
  %3 = icmp slt i32 %0, 1000001
  br i1 %3, label %4, label %14

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %12, %4 ], [ %0, %2 ]
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [1100000 x i64], [1100000 x i64]* @B, i64 0, i64 %6
  %8 = load i64, i64* %7, align 8, !tbaa !11
  %9 = add nsw i64 %8, %1
  store i64 %9, i64* %7, align 8, !tbaa !11
  %10 = sub nsw i32 0, %5
  %11 = and i32 %5, %10
  %12 = add nsw i32 %11, %5
  %13 = icmp slt i32 %12, 1000001
  br i1 %13, label %4, label %14, !llvm.loop !13

14:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i64 @_Z5queryi(i32 %0) local_unnamed_addr #5 {
  %2 = icmp eq i32 %0, 0
  br i1 %2, label %13, label %3

3:                                                ; preds = %1, %3
  %4 = phi i64 [ %9, %3 ], [ 0, %1 ]
  %5 = phi i32 [ %11, %3 ], [ %0, %1 ]
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [1100000 x i64], [1100000 x i64]* @B, i64 0, i64 %6
  %8 = load i64, i64* %7, align 8, !tbaa !11
  %9 = add nsw i64 %8, %4
  %10 = add i32 %5, -1
  %11 = and i32 %10, %5
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %3, !llvm.loop !15

13:                                               ; preds = %3, %1
  %14 = phi i64 [ 0, %1 ], [ %9, %3 ]
  ret i64 %14
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: uwtable
define dso_local %struct.T* @_Z3getii(i32 %0, i32 %1) local_unnamed_addr #7 personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca %"class.std::tuple", align 8
  %4 = alloca %"class.std::tuple.3", align 1
  %5 = alloca %"class.std::tuple", align 8
  %6 = alloca %"class.std::tuple.3", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = zext i32 %1 to i64
  %10 = shl nuw i64 %9, 32
  %11 = zext i32 %0 to i64
  %12 = or i64 %10, %11
  %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1) to %"struct.std::_Rb_tree_node"**), align 8, !tbaa !3
  %14 = icmp eq %"struct.std::_Rb_tree_node"* %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = load %struct.T*, %struct.T** @ff, align 8, !tbaa !16
  %17 = getelementptr inbounds %struct.T, %struct.T* %16, i64 1
  store %struct.T* %17, %struct.T** @ff, align 8, !tbaa !16
  %18 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #18
  store i64 %12, i64* %8, align 8
  br label %152

19:                                               ; preds = %2, %38
  %20 = phi %"struct.std::_Rb_tree_node"* [ %42, %38 ], [ %13, %2 ]
  %21 = phi %"struct.std::_Rb_tree_node_base"* [ %39, %38 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %2 ]
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %20, i64 0, i32 1
  %23 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %22 to i32*
  %24 = load i32, i32* %23, align 4, !tbaa !17
  %25 = icmp slt i32 %24, %0
  br i1 %25, label %36, label %26

26:                                               ; preds = %19
  %27 = icmp sgt i32 %24, %0
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %20, i64 0, i32 1, i32 0, i64 4
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4, !tbaa !20
  %32 = icmp slt i32 %31, %1
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %26
  %34 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %20, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %20, i64 0, i32 0, i32 2
  br label %38

36:                                               ; preds = %28, %19
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %20, i64 0, i32 0, i32 3
  br label %38

38:                                               ; preds = %36, %33
  %39 = phi %"struct.std::_Rb_tree_node_base"* [ %21, %36 ], [ %34, %33 ]
  %40 = phi %"struct.std::_Rb_tree_node_base"** [ %37, %36 ], [ %35, %33 ]
  %41 = bitcast %"struct.std::_Rb_tree_node_base"** %40 to %"struct.std::_Rb_tree_node"**
  %42 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %41, align 8, !tbaa !16
  %43 = icmp eq %"struct.std::_Rb_tree_node"* %42, null
  br i1 %43, label %44, label %19, !llvm.loop !21

44:                                               ; preds = %38
  %45 = icmp eq %"struct.std::_Rb_tree_node_base"* %39, bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)
  br i1 %45, label %109, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %39, i64 1
  %48 = bitcast %"struct.std::_Rb_tree_node_base"* %47 to %"struct.std::pair"*
  %49 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %47, i64 0, i32 0
  %50 = load i32, i32* %49, align 4, !tbaa !17
  %51 = icmp sgt i32 %50, %0
  br i1 %51, label %109, label %52

52:                                               ; preds = %46
  %53 = icmp slt i32 %50, %0
  br i1 %53, label %58, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %48, i64 0, i32 1
  %56 = load i32, i32* %55, align 4, !tbaa !20
  %57 = icmp sgt i32 %56, %1
  br i1 %57, label %109, label %58

58:                                               ; preds = %52, %54
  %59 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #18
  store i64 %12, i64* %7, align 8
  br label %60

60:                                               ; preds = %58, %79
  %61 = phi %"struct.std::_Rb_tree_node"* [ %83, %79 ], [ %13, %58 ]
  %62 = phi %"struct.std::_Rb_tree_node_base"* [ %80, %79 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %58 ]
  %63 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %61, i64 0, i32 1
  %64 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %63 to i32*
  %65 = load i32, i32* %64, align 4, !tbaa !17
  %66 = icmp slt i32 %65, %0
  br i1 %66, label %77, label %67

67:                                               ; preds = %60
  %68 = icmp sgt i32 %65, %0
  br i1 %68, label %74, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %61, i64 0, i32 1, i32 0, i64 4
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !20
  %73 = icmp slt i32 %72, %1
  br i1 %73, label %77, label %74

74:                                               ; preds = %69, %67
  %75 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %61, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %61, i64 0, i32 0, i32 2
  br label %79

77:                                               ; preds = %69, %60
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %61, i64 0, i32 0, i32 3
  br label %79

79:                                               ; preds = %77, %74
  %80 = phi %"struct.std::_Rb_tree_node_base"* [ %62, %77 ], [ %75, %74 ]
  %81 = phi %"struct.std::_Rb_tree_node_base"** [ %78, %77 ], [ %76, %74 ]
  %82 = bitcast %"struct.std::_Rb_tree_node_base"** %81 to %"struct.std::_Rb_tree_node"**
  %83 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %82, align 8, !tbaa !16
  %84 = icmp eq %"struct.std::_Rb_tree_node"* %83, null
  br i1 %84, label %85, label %60, !llvm.loop !22

85:                                               ; preds = %79
  %86 = icmp eq %"struct.std::_Rb_tree_node_base"* %80, bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)
  br i1 %86, label %99, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %80, i64 1
  %89 = bitcast %"struct.std::_Rb_tree_node_base"* %88 to %"struct.std::pair"*
  %90 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %88, i64 0, i32 0
  %91 = load i32, i32* %90, align 4, !tbaa !17
  %92 = icmp sgt i32 %91, %0
  br i1 %92, label %99, label %93

93:                                               ; preds = %87
  %94 = icmp slt i32 %91, %0
  br i1 %94, label %104, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %89, i64 0, i32 1
  %97 = load i32, i32* %96, align 4, !tbaa !20
  %98 = icmp sgt i32 %97, %1
  br i1 %98, label %99, label %104

99:                                               ; preds = %95, %87, %85
  %100 = bitcast %"class.std::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #18
  %101 = bitcast %"class.std::tuple"* %5 to i64**
  store i64* %7, i64** %101, align 8, !tbaa !16, !alias.scope !23
  %102 = getelementptr inbounds %"class.std::tuple.3", %"class.std::tuple.3"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %102) #18
  %103 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEESt17_Rb_tree_iteratorIS5_ESt23_Rb_tree_const_iteratorIS5_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0), %"struct.std::_Rb_tree_node_base"* %80, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* nonnull align 8 dereferenceable(8) %5, %"class.std::tuple.3"* nonnull align 1 dereferenceable(1) %6)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %102) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #18
  br label %104

104:                                              ; preds = %93, %95, %99
  %105 = phi %"struct.std::_Rb_tree_node_base"* [ %103, %99 ], [ %80, %95 ], [ %80, %93 ]
  %106 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %105, i64 1, i32 1
  %107 = bitcast %"struct.std::_Rb_tree_node_base"** %106 to %struct.T**
  %108 = load %struct.T*, %struct.T** %107, align 8, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #18
  br label %175

109:                                              ; preds = %54, %44, %46
  %110 = load %struct.T*, %struct.T** @ff, align 8, !tbaa !16
  %111 = getelementptr inbounds %struct.T, %struct.T* %110, i64 1
  store %struct.T* %111, %struct.T** @ff, align 8, !tbaa !16
  %112 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #18
  store i64 %12, i64* %8, align 8
  br i1 %14, label %152, label %113

113:                                              ; preds = %109, %132
  %114 = phi %"struct.std::_Rb_tree_node"* [ %136, %132 ], [ %13, %109 ]
  %115 = phi %"struct.std::_Rb_tree_node_base"* [ %133, %132 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %109 ]
  %116 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %114, i64 0, i32 1
  %117 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %116 to i32*
  %118 = load i32, i32* %117, align 4, !tbaa !17
  %119 = icmp slt i32 %118, %0
  br i1 %119, label %130, label %120

120:                                              ; preds = %113
  %121 = icmp sgt i32 %118, %0
  br i1 %121, label %127, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %114, i64 0, i32 1, i32 0, i64 4
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 4, !tbaa !20
  %126 = icmp slt i32 %125, %1
  br i1 %126, label %130, label %127

127:                                              ; preds = %122, %120
  %128 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %114, i64 0, i32 0
  %129 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %114, i64 0, i32 0, i32 2
  br label %132

130:                                              ; preds = %122, %113
  %131 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %114, i64 0, i32 0, i32 3
  br label %132

132:                                              ; preds = %130, %127
  %133 = phi %"struct.std::_Rb_tree_node_base"* [ %115, %130 ], [ %128, %127 ]
  %134 = phi %"struct.std::_Rb_tree_node_base"** [ %131, %130 ], [ %129, %127 ]
  %135 = bitcast %"struct.std::_Rb_tree_node_base"** %134 to %"struct.std::_Rb_tree_node"**
  %136 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %135, align 8, !tbaa !16
  %137 = icmp eq %"struct.std::_Rb_tree_node"* %136, null
  br i1 %137, label %138, label %113, !llvm.loop !22

138:                                              ; preds = %132
  %139 = icmp eq %"struct.std::_Rb_tree_node_base"* %133, bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*)
  br i1 %139, label %152, label %140

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %133, i64 1
  %142 = bitcast %"struct.std::_Rb_tree_node_base"* %141 to %"struct.std::pair"*
  %143 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %141, i64 0, i32 0
  %144 = load i32, i32* %143, align 4, !tbaa !17
  %145 = icmp sgt i32 %144, %0
  br i1 %145, label %152, label %146

146:                                              ; preds = %140
  %147 = icmp slt i32 %144, %0
  br i1 %147, label %160, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %142, i64 0, i32 1
  %150 = load i32, i32* %149, align 4, !tbaa !20
  %151 = icmp sgt i32 %150, %1
  br i1 %151, label %152, label %160

152:                                              ; preds = %15, %148, %140, %138, %109
  %153 = phi %struct.T* [ %111, %148 ], [ %111, %138 ], [ %111, %109 ], [ %111, %140 ], [ %17, %15 ]
  %154 = phi %"struct.std::_Rb_tree_node_base"* [ %133, %148 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %138 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %109 ], [ %133, %140 ], [ bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to %"struct.std::_Rb_tree_node_base"*), %15 ]
  %155 = bitcast %"class.std::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #18
  %156 = bitcast %"class.std::tuple"* %3 to i64**
  store i64* %8, i64** %156, align 8, !tbaa !16, !alias.scope !26
  %157 = getelementptr inbounds %"class.std::tuple.3", %"class.std::tuple.3"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %157) #18
  %158 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEESt17_Rb_tree_iteratorIS5_ESt23_Rb_tree_const_iteratorIS5_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0), %"struct.std::_Rb_tree_node_base"* %154, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* nonnull align 8 dereferenceable(8) %3, %"class.std::tuple.3"* nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %157) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #18
  %159 = load %struct.T*, %struct.T** @ff, align 8, !tbaa !16
  br label %160

160:                                              ; preds = %146, %148, %152
  %161 = phi %struct.T* [ %153, %152 ], [ %111, %148 ], [ %111, %146 ]
  %162 = phi %struct.T* [ %159, %152 ], [ %111, %148 ], [ %111, %146 ]
  %163 = phi %"struct.std::_Rb_tree_node_base"* [ %158, %152 ], [ %133, %148 ], [ %133, %146 ]
  %164 = bitcast i64* %8 to i8*
  %165 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %163, i64 1, i32 1
  %166 = bitcast %"struct.std::_Rb_tree_node_base"** %165 to %struct.T**
  store %struct.T* %161, %struct.T** %166, align 8, !tbaa !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #18
  %167 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %168 = getelementptr inbounds %struct.T, %struct.T* %162, i64 0, i32 2
  store %struct.T* %167, %struct.T** %168, align 8, !tbaa !29
  %169 = getelementptr inbounds %struct.T, %struct.T* %162, i64 0, i32 3
  store %struct.T* %167, %struct.T** %169, align 8, !tbaa !32
  %170 = getelementptr inbounds %struct.T, %struct.T* %162, i64 0, i32 1, i64 1
  store %struct.T* %167, %struct.T** %170, align 8, !tbaa !16
  %171 = getelementptr inbounds %struct.T, %struct.T* %162, i64 0, i32 1, i64 0
  store %struct.T* %167, %struct.T** %171, align 8, !tbaa !16
  %172 = getelementptr inbounds %struct.T, %struct.T* %162, i64 0, i32 0
  store i8 0, i8* %172, align 8, !tbaa !33
  %173 = getelementptr inbounds %struct.T, %struct.T* %162, i64 0, i32 5
  store i32 0, i32* %173, align 4, !tbaa !34
  %174 = getelementptr inbounds %struct.T, %struct.T* %162, i64 0, i32 4
  store i32 1, i32* %174, align 8, !tbaa !35
  br label %175

175:                                              ; preds = %160, %104
  %176 = phi %struct.T* [ %108, %104 ], [ %162, %160 ]
  ret %struct.T* %176
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z8downdateP1T(%struct.T* nocapture %0) local_unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !tbaa !33, !range !36
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 0
  %7 = load %struct.T*, %struct.T** %6, align 8, !tbaa !16
  %8 = getelementptr inbounds %struct.T, %struct.T* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 8, !tbaa !33, !range !36
  %10 = xor i8 %9, 1
  store i8 %10, i8* %8, align 8, !tbaa !33
  %11 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 1
  %12 = load %struct.T*, %struct.T** %11, align 8, !tbaa !16
  %13 = getelementptr inbounds %struct.T, %struct.T* %12, i64 0, i32 0
  %14 = load i8, i8* %13, align 8, !tbaa !33, !range !36
  %15 = xor i8 %14, 1
  store i8 %15, i8* %13, align 8, !tbaa !33
  store %struct.T* %12, %struct.T** %6, align 8, !tbaa !16
  store %struct.T* %7, %struct.T** %11, align 8, !tbaa !16
  store i8 0, i8* %2, align 8, !tbaa !33
  br label %16

16:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z6updateP1T(%struct.T* nocapture %0) local_unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 0
  %3 = load %struct.T*, %struct.T** %2, align 8, !tbaa !16
  %4 = getelementptr inbounds %struct.T, %struct.T* %3, i64 0, i32 4
  %5 = load i32, i32* %4, align 8, !tbaa !35
  %6 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 1
  %7 = load %struct.T*, %struct.T** %6, align 8, !tbaa !16
  %8 = getelementptr inbounds %struct.T, %struct.T* %7, i64 0, i32 4
  %9 = load i32, i32* %8, align 8, !tbaa !35
  %10 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 4, !tbaa !34
  %12 = add i32 %5, 1
  %13 = add i32 %12, %9
  %14 = add i32 %13, %11
  %15 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 4
  store i32 %14, i32* %15, align 8, !tbaa !35
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @_Z6rotateP1Tb(%struct.T* %0, i1 zeroext %1) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 3
  %4 = load %struct.T*, %struct.T** %3, align 8, !tbaa !32
  %5 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 3
  %6 = load %struct.T*, %struct.T** %5, align 8, !tbaa !32
  %7 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %8 = icmp eq %struct.T* %6, %7
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.T, %struct.T* %6, i64 0, i32 1, i64 1
  %11 = load %struct.T*, %struct.T** %10, align 8, !tbaa !16
  %12 = icmp eq %struct.T* %11, %4
  %13 = zext i1 %12 to i64
  %14 = getelementptr inbounds %struct.T, %struct.T* %6, i64 0, i32 1, i64 %13
  store %struct.T* %0, %struct.T** %14, align 8, !tbaa !16
  br label %15

15:                                               ; preds = %9, %2
  store %struct.T* %6, %struct.T** %3, align 8, !tbaa !32
  %16 = xor i1 %1, true
  %17 = zext i1 %16 to i64
  %18 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 %17
  %19 = load %struct.T*, %struct.T** %18, align 8, !tbaa !16
  %20 = zext i1 %1 to i64
  %21 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 1, i64 %20
  store %struct.T* %19, %struct.T** %21, align 8, !tbaa !16
  %22 = load %struct.T*, %struct.T** %18, align 8, !tbaa !16
  %23 = getelementptr inbounds %struct.T, %struct.T* %22, i64 0, i32 3
  store %struct.T* %4, %struct.T** %23, align 8, !tbaa !32
  store %struct.T* %4, %struct.T** %18, align 8, !tbaa !16
  store %struct.T* %0, %struct.T** %5, align 8, !tbaa !32
  %24 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 1, i64 0
  %25 = load %struct.T*, %struct.T** %24, align 8, !tbaa !16
  %26 = getelementptr inbounds %struct.T, %struct.T* %25, i64 0, i32 4
  %27 = load i32, i32* %26, align 8, !tbaa !35
  %28 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 1, i64 1
  %29 = load %struct.T*, %struct.T** %28, align 8, !tbaa !16
  %30 = getelementptr inbounds %struct.T, %struct.T* %29, i64 0, i32 4
  %31 = load i32, i32* %30, align 8, !tbaa !35
  %32 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 5
  %33 = load i32, i32* %32, align 4, !tbaa !34
  %34 = add i32 %27, 1
  %35 = add i32 %34, %31
  %36 = add i32 %35, %33
  %37 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 4
  store i32 %36, i32* %37, align 8, !tbaa !35
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local void @_Z4xiaoP1T(%struct.T* nocapture %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 3
  %3 = load %struct.T*, %struct.T** %2, align 8, !tbaa !32
  %4 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %5 = icmp eq %struct.T* %3, %4
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  tail call void @_Z4xiaoP1T(%struct.T* %3)
  %7 = load %struct.T*, %struct.T** %2, align 8, !tbaa !32
  %8 = getelementptr inbounds %struct.T, %struct.T* %7, i64 0, i32 2
  %9 = load %struct.T*, %struct.T** %8, align 8, !tbaa !29
  %10 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 2
  store %struct.T* %9, %struct.T** %10, align 8, !tbaa !29
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 0
  %13 = load i8, i8* %12, align 8, !tbaa !33, !range !36
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 0
  %17 = load %struct.T*, %struct.T** %16, align 8, !tbaa !16
  %18 = getelementptr inbounds %struct.T, %struct.T* %17, i64 0, i32 0
  %19 = load i8, i8* %18, align 8, !tbaa !33, !range !36
  %20 = xor i8 %19, 1
  store i8 %20, i8* %18, align 8, !tbaa !33
  %21 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 1
  %22 = load %struct.T*, %struct.T** %21, align 8, !tbaa !16
  %23 = getelementptr inbounds %struct.T, %struct.T* %22, i64 0, i32 0
  %24 = load i8, i8* %23, align 8, !tbaa !33, !range !36
  %25 = xor i8 %24, 1
  store i8 %25, i8* %23, align 8, !tbaa !33
  store %struct.T* %22, %struct.T** %16, align 8, !tbaa !16
  store %struct.T* %17, %struct.T** %21, align 8, !tbaa !16
  store i8 0, i8* %12, align 8, !tbaa !33
  br label %26

26:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local void @_Z5splayP1T(%struct.T* %0) local_unnamed_addr #9 {
  tail call void @_Z4xiaoP1T(%struct.T* %0)
  %2 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 3
  %3 = load %struct.T*, %struct.T** %2, align 8, !tbaa !32
  %4 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %5 = icmp eq %struct.T* %3, %4
  br i1 %5, label %152, label %6

6:                                                ; preds = %1, %135
  %7 = phi %struct.T* [ %150, %135 ], [ %4, %1 ]
  %8 = phi %struct.T* [ %149, %135 ], [ %3, %1 ]
  %9 = getelementptr inbounds %struct.T, %struct.T* %8, i64 0, i32 3
  %10 = load %struct.T*, %struct.T** %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %struct.T, %struct.T* %8, i64 0, i32 1, i64 1
  %12 = load %struct.T*, %struct.T** %11, align 8, !tbaa !16
  %13 = icmp eq %struct.T* %12, %0
  %14 = getelementptr inbounds %struct.T, %struct.T* %10, i64 0, i32 1, i64 1
  %15 = load %struct.T*, %struct.T** %14, align 8, !tbaa !16
  %16 = icmp eq %struct.T* %15, %8
  %17 = icmp eq %struct.T* %10, %7
  br i1 %17, label %123, label %18

18:                                               ; preds = %6
  %19 = xor i1 %13, %16
  br i1 %19, label %76, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.T, %struct.T* %10, i64 0, i32 3
  %22 = load %struct.T*, %struct.T** %21, align 8, !tbaa !32
  %23 = icmp eq %struct.T* %22, %7
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.T, %struct.T* %22, i64 0, i32 1, i64 1
  %26 = load %struct.T*, %struct.T** %25, align 8, !tbaa !16
  %27 = icmp eq %struct.T* %26, %10
  %28 = zext i1 %27 to i64
  %29 = getelementptr inbounds %struct.T, %struct.T* %22, i64 0, i32 1, i64 %28
  store %struct.T* %8, %struct.T** %29, align 8, !tbaa !16
  br label %30

30:                                               ; preds = %20, %24
  store %struct.T* %22, %struct.T** %9, align 8, !tbaa !32
  %31 = xor i1 %16, true
  %32 = zext i1 %31 to i64
  %33 = getelementptr inbounds %struct.T, %struct.T* %8, i64 0, i32 1, i64 %32
  %34 = load %struct.T*, %struct.T** %33, align 8, !tbaa !16
  %35 = zext i1 %16 to i64
  %36 = getelementptr inbounds %struct.T, %struct.T* %10, i64 0, i32 1, i64 %35
  store %struct.T* %34, %struct.T** %36, align 8, !tbaa !16
  %37 = load %struct.T*, %struct.T** %33, align 8, !tbaa !16
  %38 = getelementptr inbounds %struct.T, %struct.T* %37, i64 0, i32 3
  store %struct.T* %10, %struct.T** %38, align 8, !tbaa !32
  store %struct.T* %10, %struct.T** %33, align 8, !tbaa !16
  store %struct.T* %8, %struct.T** %21, align 8, !tbaa !32
  %39 = getelementptr inbounds %struct.T, %struct.T* %10, i64 0, i32 1, i64 0
  %40 = load %struct.T*, %struct.T** %39, align 8, !tbaa !16
  %41 = getelementptr inbounds %struct.T, %struct.T* %40, i64 0, i32 4
  %42 = load i32, i32* %41, align 8, !tbaa !35
  %43 = load %struct.T*, %struct.T** %14, align 8, !tbaa !16
  %44 = getelementptr inbounds %struct.T, %struct.T* %43, i64 0, i32 4
  %45 = load i32, i32* %44, align 8, !tbaa !35
  %46 = getelementptr inbounds %struct.T, %struct.T* %10, i64 0, i32 5
  %47 = load i32, i32* %46, align 4, !tbaa !34
  %48 = add i32 %42, 1
  %49 = add i32 %48, %45
  %50 = add i32 %49, %47
  %51 = getelementptr inbounds %struct.T, %struct.T* %10, i64 0, i32 4
  store i32 %50, i32* %51, align 8, !tbaa !35
  %52 = load %struct.T*, %struct.T** %2, align 8, !tbaa !32
  %53 = getelementptr inbounds %struct.T, %struct.T* %52, i64 0, i32 3
  %54 = load %struct.T*, %struct.T** %53, align 8, !tbaa !32
  %55 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %56 = icmp eq %struct.T* %54, %55
  br i1 %56, label %63, label %57

57:                                               ; preds = %30
  %58 = getelementptr inbounds %struct.T, %struct.T* %54, i64 0, i32 1, i64 1
  %59 = load %struct.T*, %struct.T** %58, align 8, !tbaa !16
  %60 = icmp eq %struct.T* %59, %52
  %61 = zext i1 %60 to i64
  %62 = getelementptr inbounds %struct.T, %struct.T* %54, i64 0, i32 1, i64 %61
  store %struct.T* %0, %struct.T** %62, align 8, !tbaa !16
  br label %63

63:                                               ; preds = %30, %57
  store %struct.T* %54, %struct.T** %2, align 8, !tbaa !32
  %64 = xor i1 %13, true
  %65 = zext i1 %64 to i64
  %66 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 %65
  %67 = load %struct.T*, %struct.T** %66, align 8, !tbaa !16
  %68 = zext i1 %13 to i64
  %69 = getelementptr inbounds %struct.T, %struct.T* %52, i64 0, i32 1, i64 %68
  store %struct.T* %67, %struct.T** %69, align 8, !tbaa !16
  %70 = load %struct.T*, %struct.T** %66, align 8, !tbaa !16
  %71 = getelementptr inbounds %struct.T, %struct.T* %70, i64 0, i32 3
  store %struct.T* %52, %struct.T** %71, align 8, !tbaa !32
  store %struct.T* %52, %struct.T** %66, align 8, !tbaa !16
  store %struct.T* %0, %struct.T** %53, align 8, !tbaa !32
  %72 = getelementptr inbounds %struct.T, %struct.T* %52, i64 0, i32 1, i64 0
  %73 = load %struct.T*, %struct.T** %72, align 8, !tbaa !16
  %74 = getelementptr inbounds %struct.T, %struct.T* %73, i64 0, i32 4
  %75 = getelementptr inbounds %struct.T, %struct.T* %52, i64 0, i32 1, i64 1
  br label %135

76:                                               ; preds = %18
  %77 = zext i1 %16 to i64
  %78 = getelementptr inbounds %struct.T, %struct.T* %10, i64 0, i32 1, i64 %77
  store %struct.T* %0, %struct.T** %78, align 8, !tbaa !16
  store %struct.T* %10, %struct.T** %2, align 8, !tbaa !32
  %79 = xor i1 %13, true
  %80 = zext i1 %79 to i64
  %81 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 %80
  %82 = load %struct.T*, %struct.T** %81, align 8, !tbaa !16
  %83 = zext i1 %13 to i64
  %84 = getelementptr inbounds %struct.T, %struct.T* %8, i64 0, i32 1, i64 %83
  store %struct.T* %82, %struct.T** %84, align 8, !tbaa !16
  %85 = load %struct.T*, %struct.T** %81, align 8, !tbaa !16
  %86 = getelementptr inbounds %struct.T, %struct.T* %85, i64 0, i32 3
  store %struct.T* %8, %struct.T** %86, align 8, !tbaa !32
  store %struct.T* %8, %struct.T** %81, align 8, !tbaa !16
  store %struct.T* %0, %struct.T** %9, align 8, !tbaa !32
  %87 = getelementptr inbounds %struct.T, %struct.T* %8, i64 0, i32 1, i64 0
  %88 = load %struct.T*, %struct.T** %87, align 8, !tbaa !16
  %89 = getelementptr inbounds %struct.T, %struct.T* %88, i64 0, i32 4
  %90 = load i32, i32* %89, align 8, !tbaa !35
  %91 = load %struct.T*, %struct.T** %11, align 8, !tbaa !16
  %92 = getelementptr inbounds %struct.T, %struct.T* %91, i64 0, i32 4
  %93 = load i32, i32* %92, align 8, !tbaa !35
  %94 = getelementptr inbounds %struct.T, %struct.T* %8, i64 0, i32 5
  %95 = load i32, i32* %94, align 4, !tbaa !34
  %96 = add i32 %90, 1
  %97 = add i32 %96, %93
  %98 = add i32 %97, %95
  %99 = getelementptr inbounds %struct.T, %struct.T* %8, i64 0, i32 4
  store i32 %98, i32* %99, align 8, !tbaa !35
  %100 = load %struct.T*, %struct.T** %2, align 8, !tbaa !32
  %101 = getelementptr inbounds %struct.T, %struct.T* %100, i64 0, i32 3
  %102 = load %struct.T*, %struct.T** %101, align 8, !tbaa !32
  %103 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %104 = icmp eq %struct.T* %102, %103
  br i1 %104, label %111, label %105

105:                                              ; preds = %76
  %106 = getelementptr inbounds %struct.T, %struct.T* %102, i64 0, i32 1, i64 1
  %107 = load %struct.T*, %struct.T** %106, align 8, !tbaa !16
  %108 = icmp eq %struct.T* %107, %100
  %109 = zext i1 %108 to i64
  %110 = getelementptr inbounds %struct.T, %struct.T* %102, i64 0, i32 1, i64 %109
  store %struct.T* %0, %struct.T** %110, align 8, !tbaa !16
  br label %111

111:                                              ; preds = %76, %105
  store %struct.T* %102, %struct.T** %2, align 8, !tbaa !32
  %112 = xor i1 %16, true
  %113 = zext i1 %112 to i64
  %114 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 %113
  %115 = load %struct.T*, %struct.T** %114, align 8, !tbaa !16
  %116 = getelementptr inbounds %struct.T, %struct.T* %100, i64 0, i32 1, i64 %77
  store %struct.T* %115, %struct.T** %116, align 8, !tbaa !16
  %117 = load %struct.T*, %struct.T** %114, align 8, !tbaa !16
  %118 = getelementptr inbounds %struct.T, %struct.T* %117, i64 0, i32 3
  store %struct.T* %100, %struct.T** %118, align 8, !tbaa !32
  store %struct.T* %100, %struct.T** %114, align 8, !tbaa !16
  store %struct.T* %0, %struct.T** %101, align 8, !tbaa !32
  %119 = getelementptr inbounds %struct.T, %struct.T* %100, i64 0, i32 1, i64 0
  %120 = load %struct.T*, %struct.T** %119, align 8, !tbaa !16
  %121 = getelementptr inbounds %struct.T, %struct.T* %120, i64 0, i32 4
  %122 = getelementptr inbounds %struct.T, %struct.T* %100, i64 0, i32 1, i64 1
  br label %135

123:                                              ; preds = %6
  store %struct.T* %7, %struct.T** %2, align 8, !tbaa !32
  %124 = xor i1 %13, true
  %125 = zext i1 %124 to i64
  %126 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 %125
  %127 = load %struct.T*, %struct.T** %126, align 8, !tbaa !16
  %128 = zext i1 %13 to i64
  %129 = getelementptr inbounds %struct.T, %struct.T* %8, i64 0, i32 1, i64 %128
  store %struct.T* %127, %struct.T** %129, align 8, !tbaa !16
  %130 = load %struct.T*, %struct.T** %126, align 8, !tbaa !16
  %131 = getelementptr inbounds %struct.T, %struct.T* %130, i64 0, i32 3
  store %struct.T* %8, %struct.T** %131, align 8, !tbaa !32
  store %struct.T* %8, %struct.T** %126, align 8, !tbaa !16
  store %struct.T* %0, %struct.T** %9, align 8, !tbaa !32
  %132 = getelementptr inbounds %struct.T, %struct.T* %8, i64 0, i32 1, i64 0
  %133 = load %struct.T*, %struct.T** %132, align 8, !tbaa !16
  %134 = getelementptr inbounds %struct.T, %struct.T* %133, i64 0, i32 4
  br label %135

135:                                              ; preds = %63, %111, %123
  %136 = phi %struct.T** [ %75, %63 ], [ %122, %111 ], [ %11, %123 ]
  %137 = phi %struct.T* [ %52, %63 ], [ %100, %111 ], [ %8, %123 ]
  %138 = phi i32* [ %74, %63 ], [ %121, %111 ], [ %134, %123 ]
  %139 = load i32, i32* %138, align 8, !tbaa !35
  %140 = load %struct.T*, %struct.T** %136, align 8, !tbaa !16
  %141 = getelementptr inbounds %struct.T, %struct.T* %140, i64 0, i32 4
  %142 = load i32, i32* %141, align 8, !tbaa !35
  %143 = getelementptr inbounds %struct.T, %struct.T* %137, i64 0, i32 5
  %144 = load i32, i32* %143, align 4, !tbaa !34
  %145 = add i32 %139, 1
  %146 = add i32 %145, %142
  %147 = add i32 %146, %144
  %148 = getelementptr inbounds %struct.T, %struct.T* %137, i64 0, i32 4
  store i32 %147, i32* %148, align 8, !tbaa !35
  %149 = load %struct.T*, %struct.T** %2, align 8, !tbaa !32
  %150 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %151 = icmp eq %struct.T* %149, %150
  br i1 %151, label %152, label %6, !llvm.loop !37

152:                                              ; preds = %135, %1
  %153 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 0
  %154 = load %struct.T*, %struct.T** %153, align 8, !tbaa !16
  %155 = getelementptr inbounds %struct.T, %struct.T* %154, i64 0, i32 4
  %156 = load i32, i32* %155, align 8, !tbaa !35
  %157 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 1
  %158 = load %struct.T*, %struct.T** %157, align 8, !tbaa !16
  %159 = getelementptr inbounds %struct.T, %struct.T* %158, i64 0, i32 4
  %160 = load i32, i32* %159, align 8, !tbaa !35
  %161 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 5
  %162 = load i32, i32* %161, align 4, !tbaa !34
  %163 = add i32 %156, 1
  %164 = add i32 %163, %160
  %165 = add i32 %164, %162
  %166 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 4
  store i32 %165, i32* %166, align 8, !tbaa !35
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind uwtable
define dso_local void @_Z6accessP1T(%struct.T* %0) local_unnamed_addr #9 {
  tail call void @_Z5splayP1T(%struct.T* %0)
  %2 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 1
  %3 = load %struct.T*, %struct.T** %2, align 8, !tbaa !16
  %4 = getelementptr inbounds %struct.T, %struct.T* %3, i64 0, i32 2
  store %struct.T* %0, %struct.T** %4, align 8, !tbaa !29
  %5 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %6 = load %struct.T*, %struct.T** %2, align 8, !tbaa !16
  %7 = getelementptr inbounds %struct.T, %struct.T* %6, i64 0, i32 3
  store %struct.T* %5, %struct.T** %7, align 8, !tbaa !32
  %8 = load %struct.T*, %struct.T** %2, align 8, !tbaa !16
  %9 = getelementptr inbounds %struct.T, %struct.T* %8, i64 0, i32 4
  %10 = load i32, i32* %9, align 8, !tbaa !35
  %11 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 4, !tbaa !34
  %13 = add nsw i32 %12, %10
  store i32 %13, i32* %11, align 4, !tbaa !34
  store %struct.T* %5, %struct.T** %2, align 8, !tbaa !16
  %14 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 1, i64 0
  %15 = load %struct.T*, %struct.T** %14, align 8, !tbaa !16
  %16 = getelementptr inbounds %struct.T, %struct.T* %15, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !tbaa !35
  %18 = getelementptr inbounds %struct.T, %struct.T* %5, i64 0, i32 4
  %19 = load i32, i32* %18, align 8, !tbaa !35
  %20 = add i32 %13, 1
  %21 = add i32 %20, %17
  %22 = add i32 %21, %19
  %23 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8, !tbaa !35
  %24 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 2
  %25 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 3
  %26 = load %struct.T*, %struct.T** %24, align 8, !tbaa !29
  %27 = icmp eq %struct.T* %26, %5
  br i1 %27, label %50, label %28

28:                                               ; preds = %1, %28
  %29 = phi %struct.T* [ %47, %28 ], [ %26, %1 ]
  tail call void @_Z5splayP1T(%struct.T* %29)
  %30 = load %struct.T*, %struct.T** %24, align 8, !tbaa !29
  %31 = getelementptr inbounds %struct.T, %struct.T* %30, i64 0, i32 1, i64 1
  %32 = load %struct.T*, %struct.T** %31, align 8, !tbaa !16
  %33 = getelementptr inbounds %struct.T, %struct.T* %32, i64 0, i32 2
  store %struct.T* %30, %struct.T** %33, align 8, !tbaa !29
  %34 = load %struct.T*, %struct.T** %24, align 8, !tbaa !29
  %35 = getelementptr inbounds %struct.T, %struct.T* %34, i64 0, i32 1, i64 1
  %36 = load %struct.T*, %struct.T** %35, align 8, !tbaa !16
  %37 = getelementptr inbounds %struct.T, %struct.T* %36, i64 0, i32 4
  %38 = load i32, i32* %37, align 8, !tbaa !35
  %39 = getelementptr inbounds %struct.T, %struct.T* %34, i64 0, i32 5
  %40 = load i32, i32* %39, align 4, !tbaa !34
  %41 = add nsw i32 %40, %38
  %42 = load i32, i32* %23, align 8, !tbaa !35
  %43 = sub nsw i32 %41, %42
  store i32 %43, i32* %39, align 4, !tbaa !34
  %44 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %45 = getelementptr inbounds %struct.T, %struct.T* %36, i64 0, i32 3
  store %struct.T* %44, %struct.T** %45, align 8, !tbaa !32
  store %struct.T* %0, %struct.T** %35, align 8, !tbaa !16
  %46 = load %struct.T*, %struct.T** %24, align 8, !tbaa !29
  store %struct.T* %46, %struct.T** %25, align 8, !tbaa !32
  tail call void @_Z5splayP1T(%struct.T* nonnull %0)
  %47 = load %struct.T*, %struct.T** %24, align 8, !tbaa !29
  %48 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %49 = icmp eq %struct.T* %47, %48
  br i1 %49, label %50, label %28, !llvm.loop !38

50:                                               ; preds = %28, %1
  %51 = getelementptr inbounds %struct.T, %struct.T* %0, i64 0, i32 0
  store i8 1, i8* %51, align 8, !tbaa !33
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z3Cutiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #10 {
  %4 = tail call %struct.T* @_Z3getii(i32 %0, i32 %2)
  %5 = tail call %struct.T* @_Z3getii(i32 %1, i32 %2)
  tail call void @_Z6accessP1T(%struct.T* %4)
  tail call void @_Z6accessP1T(%struct.T* %5)
  %6 = getelementptr inbounds %struct.T, %struct.T* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !tbaa !33, !range !36
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.T, %struct.T* %5, i64 0, i32 1, i64 0
  %11 = load %struct.T*, %struct.T** %10, align 8, !tbaa !16
  %12 = getelementptr inbounds %struct.T, %struct.T* %11, i64 0, i32 0
  %13 = load i8, i8* %12, align 8, !tbaa !33, !range !36
  %14 = xor i8 %13, 1
  store i8 %14, i8* %12, align 8, !tbaa !33
  %15 = getelementptr inbounds %struct.T, %struct.T* %5, i64 0, i32 1, i64 1
  %16 = load %struct.T*, %struct.T** %15, align 8, !tbaa !16
  %17 = getelementptr inbounds %struct.T, %struct.T* %16, i64 0, i32 0
  %18 = load i8, i8* %17, align 8, !tbaa !33, !range !36
  %19 = xor i8 %18, 1
  store i8 %19, i8* %17, align 8, !tbaa !33
  store %struct.T* %16, %struct.T** %10, align 8, !tbaa !16
  store %struct.T* %11, %struct.T** %15, align 8, !tbaa !16
  store i8 0, i8* %6, align 8, !tbaa !33
  br label %20

20:                                               ; preds = %3, %9
  %21 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 0
  %22 = load i8, i8* %21, align 8, !tbaa !33, !range !36
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 1, i64 0
  %26 = load %struct.T*, %struct.T** %25, align 8, !tbaa !16
  %27 = getelementptr inbounds %struct.T, %struct.T* %26, i64 0, i32 0
  %28 = load i8, i8* %27, align 8, !tbaa !33, !range !36
  %29 = xor i8 %28, 1
  store i8 %29, i8* %27, align 8, !tbaa !33
  %30 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 1, i64 1
  %31 = load %struct.T*, %struct.T** %30, align 8, !tbaa !16
  %32 = getelementptr inbounds %struct.T, %struct.T* %31, i64 0, i32 0
  %33 = load i8, i8* %32, align 8, !tbaa !33, !range !36
  %34 = xor i8 %33, 1
  store i8 %34, i8* %32, align 8, !tbaa !33
  store %struct.T* %31, %struct.T** %25, align 8, !tbaa !16
  store %struct.T* %26, %struct.T** %30, align 8, !tbaa !16
  store i8 0, i8* %21, align 8, !tbaa !33
  br label %35

35:                                               ; preds = %20, %24
  %36 = load %struct.T*, %struct.T** @null, align 8, !tbaa !16
  %37 = getelementptr inbounds %struct.T, %struct.T* %5, i64 0, i32 1, i64 1
  store %struct.T* %36, %struct.T** %37, align 8, !tbaa !16
  %38 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 4
  %39 = load i32, i32* %38, align 8, !tbaa !35
  %40 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 2
  %41 = load %struct.T*, %struct.T** %40, align 8, !tbaa !29
  %42 = getelementptr inbounds %struct.T, %struct.T* %41, i64 0, i32 5
  %43 = load i32, i32* %42, align 4, !tbaa !34
  %44 = sub nsw i32 %43, %39
  store i32 %44, i32* %42, align 4, !tbaa !34
  store %struct.T* %36, %struct.T** %40, align 8, !tbaa !29
  %45 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 3
  store %struct.T* %36, %struct.T** %45, align 8, !tbaa !32
  %46 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 1, i64 0
  %47 = load %struct.T*, %struct.T** %46, align 8, !tbaa !16
  %48 = getelementptr inbounds %struct.T, %struct.T* %47, i64 0, i32 4
  %49 = load i32, i32* %48, align 8, !tbaa !35
  %50 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 1, i64 1
  %51 = load %struct.T*, %struct.T** %50, align 8, !tbaa !16
  %52 = getelementptr inbounds %struct.T, %struct.T* %51, i64 0, i32 4
  %53 = load i32, i32* %52, align 8, !tbaa !35
  %54 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 5
  %55 = load i32, i32* %54, align 4, !tbaa !34
  %56 = add i32 %49, 1
  %57 = add i32 %56, %53
  %58 = add i32 %57, %55
  store i32 %58, i32* %38, align 8, !tbaa !35
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.T, %struct.T* %5, i64 0, i32 4
  %61 = load i32, i32* %60, align 8, !tbaa !35
  %62 = sext i32 %61 to i64
  %63 = mul nsw i64 %62, %59
  %64 = icmp slt i32 %2, 1000001
  br i1 %64, label %65, label %75

65:                                               ; preds = %35, %65
  %66 = phi i32 [ %73, %65 ], [ %2, %35 ]
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [1100000 x i64], [1100000 x i64]* @B, i64 0, i64 %67
  %69 = load i64, i64* %68, align 8, !tbaa !11
  %70 = sub i64 %69, %63
  store i64 %70, i64* %68, align 8, !tbaa !11
  %71 = sub nsw i32 0, %66
  %72 = and i32 %66, %71
  %73 = add nsw i32 %72, %66
  %74 = icmp slt i32 %73, 1000001
  br i1 %74, label %65, label %75, !llvm.loop !13

75:                                               ; preds = %65, %35
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z4Linkiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #10 {
  %4 = tail call %struct.T* @_Z3getii(i32 %0, i32 %2)
  %5 = tail call %struct.T* @_Z3getii(i32 %1, i32 %2)
  tail call void @_Z6accessP1T(%struct.T* %4)
  tail call void @_Z6accessP1T(%struct.T* %5)
  %6 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 4
  %7 = load i32, i32* %6, align 8, !tbaa !35
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.T, %struct.T* %5, i64 0, i32 4
  %10 = load i32, i32* %9, align 8, !tbaa !35
  %11 = sext i32 %10 to i64
  %12 = mul nsw i64 %11, %8
  %13 = icmp slt i32 %2, 1000001
  br i1 %13, label %14, label %24

14:                                               ; preds = %3, %14
  %15 = phi i32 [ %22, %14 ], [ %2, %3 ]
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [1100000 x i64], [1100000 x i64]* @B, i64 0, i64 %16
  %18 = load i64, i64* %17, align 8, !tbaa !11
  %19 = add nsw i64 %18, %12
  store i64 %19, i64* %17, align 8, !tbaa !11
  %20 = sub nsw i32 0, %15
  %21 = and i32 %15, %20
  %22 = add nsw i32 %21, %15
  %23 = icmp slt i32 %22, 1000001
  br i1 %23, label %14, label %24, !llvm.loop !13

24:                                               ; preds = %14, %3
  %25 = getelementptr inbounds %struct.T, %struct.T* %4, i64 0, i32 2
  store %struct.T* %5, %struct.T** %25, align 8, !tbaa !29
  %26 = getelementptr inbounds %struct.T, %struct.T* %5, i64 0, i32 5
  %27 = load i32, i32* %26, align 4, !tbaa !34
  %28 = add nsw i32 %27, %7
  store i32 %28, i32* %26, align 4, !tbaa !34
  %29 = getelementptr inbounds %struct.T, %struct.T* %5, i64 0, i32 1, i64 0
  %30 = load %struct.T*, %struct.T** %29, align 8, !tbaa !16
  %31 = getelementptr inbounds %struct.T, %struct.T* %30, i64 0, i32 4
  %32 = load i32, i32* %31, align 8, !tbaa !35
  %33 = getelementptr inbounds %struct.T, %struct.T* %5, i64 0, i32 1, i64 1
  %34 = load %struct.T*, %struct.T** %33, align 8, !tbaa !16
  %35 = getelementptr inbounds %struct.T, %struct.T* %34, i64 0, i32 4
  %36 = load i32, i32* %35, align 8, !tbaa !35
  %37 = add i32 %28, 1
  %38 = add i32 %37, %32
  %39 = add i32 %38, %36
  store i32 %39, i32* %9, align 8, !tbaa !35
  ret void
}

; Function Attrs: mustprogress norecurse uwtable
define dso_local i32 @main() local_unnamed_addr #11 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !16
  %8 = tail call %struct._IO_FILE* @freopen(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %7)
  %9 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull @n)
  %10 = tail call noalias nonnull dereferenceable(48) i8* @_Znwm(i64 48) #19
  %11 = bitcast i8* %10 to %struct.T*
  store i8* %10, i8** bitcast (%struct.T** @null to i8**), align 8, !tbaa !16
  %12 = getelementptr inbounds %struct.T, %struct.T* %11, i64 0, i32 2
  %13 = bitcast %struct.T** %12 to i8**
  store i8* %10, i8** %13, align 8, !tbaa !29
  %14 = getelementptr inbounds %struct.T, %struct.T* %11, i64 0, i32 3
  %15 = bitcast %struct.T** %14 to i8**
  store i8* %10, i8** %15, align 8, !tbaa !32
  %16 = getelementptr inbounds %struct.T, %struct.T* %11, i64 0, i32 1, i64 1
  %17 = bitcast %struct.T** %16 to i8**
  store i8* %10, i8** %17, align 8, !tbaa !16
  %18 = getelementptr inbounds %struct.T, %struct.T* %11, i64 0, i32 1, i64 0
  %19 = bitcast %struct.T** %18 to i8**
  store i8* %10, i8** %19, align 8, !tbaa !16
  %20 = getelementptr inbounds %struct.T, %struct.T* %11, i64 0, i32 4
  store i32 0, i32* %20, align 8, !tbaa !35
  %21 = getelementptr inbounds %struct.T, %struct.T* %11, i64 0, i32 5
  store i32 0, i32* %21, align 4, !tbaa !34
  %22 = load i32, i32* @n, align 4, !tbaa !39
  %23 = icmp sgt i32 %22, 1
  br i1 %23, label %35, label %24

24:                                               ; preds = %64, %0
  %25 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull @q)
  %26 = bitcast i32* %1 to i8*
  %27 = bitcast i32* %4 to i8*
  %28 = bitcast i32* %5 to i8*
  %29 = bitcast i32* %2 to i8*
  %30 = bitcast i32* %3 to i8*
  %31 = bitcast i32* %6 to i8*
  %32 = load i32, i32* @q, align 4, !tbaa !39
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* @q, align 4, !tbaa !39
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %195, label %84

35:                                               ; preds = %0, %64
  %36 = phi i64 [ %80, %64 ], [ 1, %0 ]
  %37 = getelementptr inbounds [800000 x i32], [800000 x i32]* @a, i64 0, i64 %36
  %38 = getelementptr inbounds [800000 x i32], [800000 x i32]* @b, i64 0, i64 %36
  %39 = getelementptr inbounds [800000 x i32], [800000 x i32]* @c, i64 0, i64 %36
  %40 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i32* nonnull %37, i32* nonnull %38, i32* nonnull %39)
  %41 = load i32, i32* %37, align 4, !tbaa !39
  %42 = load i32, i32* %38, align 4, !tbaa !39
  %43 = load i32, i32* %39, align 4, !tbaa !39
  %44 = tail call %struct.T* @_Z3getii(i32 %41, i32 %43)
  %45 = tail call %struct.T* @_Z3getii(i32 %42, i32 %43)
  tail call void @_Z6accessP1T(%struct.T* %44)
  tail call void @_Z6accessP1T(%struct.T* %45)
  %46 = getelementptr inbounds %struct.T, %struct.T* %44, i64 0, i32 4
  %47 = load i32, i32* %46, align 8, !tbaa !35
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.T, %struct.T* %45, i64 0, i32 4
  %50 = load i32, i32* %49, align 8, !tbaa !35
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %51, %48
  %53 = icmp slt i32 %43, 1000001
  br i1 %53, label %54, label %64

54:                                               ; preds = %35, %54
  %55 = phi i32 [ %62, %54 ], [ %43, %35 ]
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [1100000 x i64], [1100000 x i64]* @B, i64 0, i64 %56
  %58 = load i64, i64* %57, align 8, !tbaa !11
  %59 = add nsw i64 %58, %52
  store i64 %59, i64* %57, align 8, !tbaa !11
  %60 = sub nsw i32 0, %55
  %61 = and i32 %55, %60
  %62 = add nsw i32 %61, %55
  %63 = icmp slt i32 %62, 1000001
  br i1 %63, label %54, label %64, !llvm.loop !13

64:                                               ; preds = %54, %35
  %65 = getelementptr inbounds %struct.T, %struct.T* %44, i64 0, i32 2
  store %struct.T* %45, %struct.T** %65, align 8, !tbaa !29
  %66 = getelementptr inbounds %struct.T, %struct.T* %45, i64 0, i32 5
  %67 = load i32, i32* %66, align 4, !tbaa !34
  %68 = add nsw i32 %67, %47
  store i32 %68, i32* %66, align 4, !tbaa !34
  %69 = getelementptr inbounds %struct.T, %struct.T* %45, i64 0, i32 1, i64 0
  %70 = load %struct.T*, %struct.T** %69, align 8, !tbaa !16
  %71 = getelementptr inbounds %struct.T, %struct.T* %70, i64 0, i32 4
  %72 = load i32, i32* %71, align 8, !tbaa !35
  %73 = getelementptr inbounds %struct.T, %struct.T* %45, i64 0, i32 1, i64 1
  %74 = load %struct.T*, %struct.T** %73, align 8, !tbaa !16
  %75 = getelementptr inbounds %struct.T, %struct.T* %74, i64 0, i32 4
  %76 = load i32, i32* %75, align 8, !tbaa !35
  %77 = add i32 %68, 1
  %78 = add i32 %77, %72
  %79 = add i32 %78, %76
  store i32 %79, i32* %49, align 8, !tbaa !35
  %80 = add nuw nsw i64 %36, 1
  %81 = load i32, i32* @n, align 4, !tbaa !39
  %82 = sext i32 %81 to i64
  %83 = icmp slt i64 %80, %82
  br i1 %83, label %35, label %24, !llvm.loop !40

84:                                               ; preds = %24, %191
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #18
  %85 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %1)
  %86 = load i32, i32* %1, align 4, !tbaa !39
  switch i32 %86, label %174 [
    i32 1, label %87
    i32 2, label %141
  ]

87:                                               ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #18
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #18
  %88 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32* nonnull %2, i32* nonnull %3)
  %89 = load i32, i32* %2, align 4, !tbaa !39
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [800000 x i32], [800000 x i32]* @a, i64 0, i64 %90
  %92 = load i32, i32* %91, align 4, !tbaa !39
  %93 = getelementptr inbounds [800000 x i32], [800000 x i32]* @b, i64 0, i64 %90
  %94 = load i32, i32* %93, align 4, !tbaa !39
  %95 = getelementptr inbounds [800000 x i32], [800000 x i32]* @c, i64 0, i64 %90
  %96 = load i32, i32* %95, align 4, !tbaa !39
  call void @_Z3Cutiii(i32 %92, i32 %94, i32 %96)
  %97 = load i32, i32* %3, align 4, !tbaa !39
  %98 = load i32, i32* %2, align 4, !tbaa !39
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [800000 x i32], [800000 x i32]* @c, i64 0, i64 %99
  store i32 %97, i32* %100, align 4, !tbaa !39
  %101 = getelementptr inbounds [800000 x i32], [800000 x i32]* @a, i64 0, i64 %99
  %102 = load i32, i32* %101, align 4, !tbaa !39
  %103 = getelementptr inbounds [800000 x i32], [800000 x i32]* @b, i64 0, i64 %99
  %104 = load i32, i32* %103, align 4, !tbaa !39
  %105 = call %struct.T* @_Z3getii(i32 %102, i32 %97)
  %106 = call %struct.T* @_Z3getii(i32 %104, i32 %97)
  call void @_Z6accessP1T(%struct.T* %105)
  call void @_Z6accessP1T(%struct.T* %106)
  %107 = getelementptr inbounds %struct.T, %struct.T* %105, i64 0, i32 4
  %108 = load i32, i32* %107, align 8, !tbaa !35
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds %struct.T, %struct.T* %106, i64 0, i32 4
  %111 = load i32, i32* %110, align 8, !tbaa !35
  %112 = sext i32 %111 to i64
  %113 = mul nsw i64 %112, %109
  %114 = icmp slt i32 %97, 1000001
  br i1 %114, label %115, label %125

115:                                              ; preds = %87, %115
  %116 = phi i32 [ %123, %115 ], [ %97, %87 ]
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [1100000 x i64], [1100000 x i64]* @B, i64 0, i64 %117
  %119 = load i64, i64* %118, align 8, !tbaa !11
  %120 = add nsw i64 %119, %113
  store i64 %120, i64* %118, align 8, !tbaa !11
  %121 = sub nsw i32 0, %116
  %122 = and i32 %116, %121
  %123 = add nsw i32 %122, %116
  %124 = icmp slt i32 %123, 1000001
  br i1 %124, label %115, label %125, !llvm.loop !13

125:                                              ; preds = %115, %87
  %126 = getelementptr inbounds %struct.T, %struct.T* %105, i64 0, i32 2
  store %struct.T* %106, %struct.T** %126, align 8, !tbaa !29
  %127 = getelementptr inbounds %struct.T, %struct.T* %106, i64 0, i32 5
  %128 = load i32, i32* %127, align 4, !tbaa !34
  %129 = add nsw i32 %128, %108
  store i32 %129, i32* %127, align 4, !tbaa !34
  %130 = getelementptr inbounds %struct.T, %struct.T* %106, i64 0, i32 1, i64 0
  %131 = load %struct.T*, %struct.T** %130, align 8, !tbaa !16
  %132 = getelementptr inbounds %struct.T, %struct.T* %131, i64 0, i32 4
  %133 = load i32, i32* %132, align 8, !tbaa !35
  %134 = getelementptr inbounds %struct.T, %struct.T* %106, i64 0, i32 1, i64 1
  %135 = load %struct.T*, %struct.T** %134, align 8, !tbaa !16
  %136 = getelementptr inbounds %struct.T, %struct.T* %135, i64 0, i32 4
  %137 = load i32, i32* %136, align 8, !tbaa !35
  %138 = add i32 %129, 1
  %139 = add i32 %138, %133
  %140 = add i32 %139, %137
  store i32 %140, i32* %110, align 8, !tbaa !35
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #18
  br label %191

141:                                              ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #18
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #18
  %142 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32* nonnull %4, i32* nonnull %5)
  %143 = load i32, i32* %5, align 4, !tbaa !39
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %155, label %145

145:                                              ; preds = %141, %145
  %146 = phi i64 [ %151, %145 ], [ 0, %141 ]
  %147 = phi i32 [ %153, %145 ], [ %143, %141 ]
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [1100000 x i64], [1100000 x i64]* @B, i64 0, i64 %148
  %150 = load i64, i64* %149, align 8, !tbaa !11
  %151 = add nsw i64 %150, %146
  %152 = add i32 %147, -1
  %153 = and i32 %152, %147
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %145, !llvm.loop !15

155:                                              ; preds = %145, %141
  %156 = phi i64 [ 0, %141 ], [ %151, %145 ]
  %157 = load i32, i32* %4, align 4, !tbaa !39
  %158 = add nsw i32 %157, -1
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %170, label %160

160:                                              ; preds = %155, %160
  %161 = phi i64 [ %166, %160 ], [ 0, %155 ]
  %162 = phi i32 [ %168, %160 ], [ %158, %155 ]
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [1100000 x i64], [1100000 x i64]* @B, i64 0, i64 %163
  %165 = load i64, i64* %164, align 8, !tbaa !11
  %166 = add nsw i64 %165, %161
  %167 = add i32 %162, -1
  %168 = and i32 %167, %162
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %160, !llvm.loop !15

170:                                              ; preds = %160, %155
  %171 = phi i64 [ 0, %155 ], [ %166, %160 ]
  %172 = sub nsw i64 %156, %171
  %173 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i64 %172)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #18
  br label %191

174:                                              ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #18
  %175 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %6)
  %176 = load i32, i32* %6, align 4, !tbaa !39
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [800000 x i32], [800000 x i32]* @a, i64 0, i64 %177
  %179 = load i32, i32* %178, align 4, !tbaa !39
  %180 = getelementptr inbounds [800000 x i32], [800000 x i32]* @c, i64 0, i64 %177
  %181 = load i32, i32* %180, align 4, !tbaa !39
  %182 = call %struct.T* @_Z3getii(i32 %179, i32 %181)
  call void @_Z6accessP1T(%struct.T* %182)
  %183 = getelementptr inbounds %struct.T, %struct.T* %182, i64 0, i32 4
  %184 = load i32, i32* %183, align 8, !tbaa !35
  %185 = sext i32 %184 to i64
  %186 = add nsw i32 %184, -1
  %187 = sext i32 %186 to i64
  %188 = mul nsw i64 %187, %185
  %189 = sdiv i64 %188, 2
  %190 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i64 %189)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #18
  br label %191

191:                                              ; preds = %170, %174, %125
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #18
  %192 = load i32, i32* @q, align 4, !tbaa !39
  %193 = add nsw i32 %192, -1
  store i32 %193, i32* @q, align 4, !tbaa !39
  %194 = icmp eq i32 %192, 0
  br i1 %194, label %195, label %84, !llvm.loop !41

195:                                              ; preds = %191, %24
  ret i32 0
}

declare dso_local %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #12

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #12

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #14 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #18
  tail call void @_ZSt9terminatev() #17
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %1) local_unnamed_addr #10 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp eq %"struct.std::_Rb_tree_node"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"struct.std::_Rb_tree_node"* [ %11, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 3
  %7 = bitcast %"struct.std::_Rb_tree_node_base"** %6 to %"struct.std::_Rb_tree_node"**
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8, !tbaa !42
  tail call void @_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node"* %8)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %5, i64 0, i32 0, i32 2
  %10 = bitcast %"struct.std::_Rb_tree_node_base"** %9 to %"struct.std::_Rb_tree_node"**
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8, !tbaa !43
  %12 = bitcast %"struct.std::_Rb_tree_node"* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %12) #18
  %13 = icmp eq %"struct.std::_Rb_tree_node"* %11, null
  br i1 %13, label %14, label %4, !llvm.loop !44

14:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #15

; Function Attrs: uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEESt17_Rb_tree_iteratorIS5_ESt23_Rb_tree_const_iteratorIS5_EDpOT_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::piecewise_construct_t"* nonnull align 1 dereferenceable(1) %2, %"class.std::tuple"* nonnull align 8 dereferenceable(8) %3, %"class.std::tuple.3"* nonnull align 1 dereferenceable(1) %4) local_unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = tail call noalias nonnull i8* @_Znwm(i64 48) #20
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  %8 = bitcast %"class.std::tuple"* %3 to i64**
  %9 = load i64*, i64** %8, align 8, !tbaa !45
  %10 = bitcast i8* %7 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 40
  %13 = bitcast i8* %12 to %struct.T**
  store %struct.T* null, %struct.T** %13, align 8, !tbaa !47
  %14 = bitcast i8* %7 to %"struct.std::pair"*
  %15 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS2_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::pair"* nonnull align 4 dereferenceable(8) %14)
          to label %16 unwind label %54

16:                                               ; preds = %5
  %17 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %15, 0
  %18 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %15, 1
  %19 = icmp eq %"struct.std::_Rb_tree_node_base"* %18, null
  br i1 %19, label %58, label %20

20:                                               ; preds = %16
  %21 = icmp eq %"struct.std::_Rb_tree_node_base"* %17, null
  br i1 %21, label %22, label %44

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to %"struct.std::_Rb_tree_node_base"*
  %26 = icmp eq %"struct.std::_Rb_tree_node_base"* %18, %25
  br i1 %26, label %44, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %18, i64 1
  %29 = bitcast %"struct.std::_Rb_tree_node_base"* %28 to %"struct.std::pair"*
  %30 = bitcast i8* %7 to i32*
  %31 = load i32, i32* %30, align 4, !tbaa !17
  %32 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %28, i64 0, i32 0
  %33 = load i32, i32* %32, align 4, !tbaa !17
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %44, label %35

35:                                               ; preds = %27
  %36 = icmp slt i32 %33, %31
  br i1 %36, label %44, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds i8, i8* %6, i64 36
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 4, !tbaa !20
  %41 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %29, i64 0, i32 1
  %42 = load i32, i32* %41, align 4, !tbaa !20
  %43 = icmp slt i32 %40, %42
  br label %44

44:                                               ; preds = %20, %37, %35, %27, %22
  %45 = phi i1 [ true, %22 ], [ true, %27 ], [ false, %35 ], [ %43, %37 ], [ true, %20 ]
  %46 = bitcast i8* %6 to %"struct.std::_Rb_tree_node_base"*
  %47 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to %"struct.std::_Rb_tree_node_base"*
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %45, %"struct.std::_Rb_tree_node_base"* nonnull %46, %"struct.std::_Rb_tree_node_base"* nonnull %18, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32) %49) #18
  %50 = getelementptr inbounds i8, i8* %47, i64 40
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8, !tbaa !49
  %53 = add i64 %52, 1
  store i64 %53, i64* %51, align 8, !tbaa !49
  br label %59

54:                                               ; preds = %5
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  %57 = tail call i8* @__cxa_begin_catch(i8* %56) #18
  tail call void @_ZdlPv(i8* nonnull %6) #18
  invoke void @__cxa_rethrow() #21
          to label %67 unwind label %61

58:                                               ; preds = %16
  tail call void @_ZdlPv(i8* nonnull %6) #18
  br label %59

59:                                               ; preds = %58, %44
  %60 = phi %"struct.std::_Rb_tree_node_base"* [ %17, %58 ], [ %46, %44 ]
  ret %"struct.std::_Rb_tree_node_base"* %60

61:                                               ; preds = %54
  %62 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %63 unwind label %64

63:                                               ; preds = %61
  resume { i8*, i32 } %62

64:                                               ; preds = %61
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  tail call void @__clang_call_terminate(i8* %66) #17
  unreachable

67:                                               ; preds = %54
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeISt4pairIiiES0_IKS1_P1TESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS2_(%"class.std::_Rb_tree"* nonnull align 8 dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::pair"* nonnull align 4 dereferenceable(8) %2) local_unnamed_addr #7 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Rb_tree_node_base"*
  %7 = icmp eq %"struct.std::_Rb_tree_node_base"* %6, %1
  br i1 %7, label %8, label %95

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %4, i64 40
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !49
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br label %35

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %4, i64 32
  %18 = bitcast i8* %17 to %"struct.std::_Rb_tree_node_base"**
  %19 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %18, align 8, !tbaa !16
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %19, i64 1
  %21 = bitcast %"struct.std::_Rb_tree_node_base"* %20 to %"struct.std::pair"*
  %22 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %20, i64 0, i32 0
  %23 = load i32, i32* %22, align 4, !tbaa !17
  %24 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !tbaa !17
  %26 = icmp slt i32 %23, %25
  br i1 %26, label %286, label %27

27:                                               ; preds = %16
  %28 = icmp slt i32 %25, %23
  br i1 %28, label %35, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %21, i64 0, i32 1
  %31 = load i32, i32* %30, align 4, !tbaa !20
  %32 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1
  %33 = load i32, i32* %32, align 4, !tbaa !20
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %286, label %35

35:                                               ; preds = %13, %27, %29
  %36 = phi i32 [ %15, %13 ], [ %25, %27 ], [ %25, %29 ]
  %37 = getelementptr inbounds i8, i8* %4, i64 16
  %38 = bitcast i8* %37 to %"struct.std::_Rb_tree_node"**
  %39 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %38, align 8, !tbaa !16
  %42 = icmp eq %"struct.std::_Rb_tree_node"* %41, null
  br i1 %42, label %72, label %43

43:                                               ; preds = %35, %66
  %44 = phi %"struct.std::_Rb_tree_node"* [ %67, %66 ], [ %41, %35 ]
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %44, i64 0, i32 1
  %46 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %45 to i32*
  %47 = load i32, i32* %46, align 4, !tbaa !17
  %48 = icmp slt i32 %36, %47
  br i1 %48, label %56, label %49

49:                                               ; preds = %43
  %50 = icmp slt i32 %47, %36
  br i1 %50, label %61, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %44, i64 0, i32 1, i32 0, i64 4
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4, !tbaa !20
  %55 = icmp slt i32 %40, %54
  br i1 %55, label %56, label %61

56:                                               ; preds = %51, %43
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %44, i64 0, i32 0, i32 2
  %58 = bitcast %"struct.std::_Rb_tree_node_base"** %57 to %"struct.std::_Rb_tree_node"**
  %59 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %58, align 8, !tbaa !16
  %60 = icmp eq %"struct.std::_Rb_tree_node"* %59, null
  br i1 %60, label %70, label %66

61:                                               ; preds = %51, %49
  %62 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %44, i64 0, i32 0, i32 3
  %63 = bitcast %"struct.std::_Rb_tree_node_base"** %62 to %"struct.std::_Rb_tree_node"**
  %64 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %63, align 8, !tbaa !16
  %65 = icmp eq %"struct.std::_Rb_tree_node"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %61, %56
  %67 = phi %"struct.std::_Rb_tree_node"* [ %59, %56 ], [ %64, %61 ]
  br label %43, !llvm.loop !50

68:                                               ; preds = %61
  %69 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %44, i64 0, i32 0
  br label %80

70:                                               ; preds = %56
  %71 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %44, i64 0, i32 0
  br label %72

72:                                               ; preds = %70, %35
  %73 = phi %"struct.std::_Rb_tree_node_base"* [ %71, %70 ], [ %1, %35 ]
  %74 = getelementptr inbounds i8, i8* %4, i64 24
  %75 = bitcast i8* %74 to %"struct.std::_Rb_tree_node_base"**
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8, !tbaa !51
  %77 = icmp eq %"struct.std::_Rb_tree_node_base"* %73, %76
  br i1 %77, label %286, label %78

78:                                               ; preds = %72
  %79 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %73) #22
  br label %80

80:                                               ; preds = %78, %68
  %81 = phi %"struct.std::_Rb_tree_node_base"* [ %73, %78 ], [ %69, %68 ]
  %82 = phi %"struct.std::_Rb_tree_node_base"* [ %79, %78 ], [ %69, %68 ]
  %83 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %82, i64 1
  %84 = bitcast %"struct.std::_Rb_tree_node_base"* %83 to %"struct.std::pair"*
  %85 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %83, i64 0, i32 0
  %86 = load i32, i32* %85, align 4, !tbaa !17
  %87 = icmp slt i32 %86, %36
  br i1 %87, label %94, label %88

88:                                               ; preds = %80
  %89 = icmp slt i32 %36, %86
  br i1 %89, label %286, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %84, i64 0, i32 1
  %92 = load i32, i32* %91, align 4, !tbaa !20
  %93 = icmp slt i32 %92, %40
  br i1 %93, label %94, label %286

94:                                               ; preds = %90, %80
  br label %286

95:                                               ; preds = %3
  %96 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %1, i64 1
  %97 = bitcast %"struct.std::_Rb_tree_node_base"* %96 to %"struct.std::pair"*
  %98 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 0
  %99 = load i32, i32* %98, align 4, !tbaa !17
  %100 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %96, i64 0, i32 0
  %101 = load i32, i32* %100, align 4, !tbaa !17
  %102 = icmp slt i32 %99, %101
  br i1 %102, label %111, label %103

103:                                              ; preds = %95
  %104 = icmp slt i32 %101, %99
  br i1 %104, label %202, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1
  %107 = load i32, i32* %106, align 4, !tbaa !20
  %108 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i64 0, i32 1
  %109 = load i32, i32* %108, align 4, !tbaa !20
  %110 = icmp slt i32 %107, %109
  br i1 %110, label %111, label %196

111:                                              ; preds = %95, %105
  %112 = getelementptr inbounds i8, i8* %4, i64 24
  %113 = bitcast i8* %112 to %"struct.std::_Rb_tree_node_base"**
  %114 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %113, align 8, !tbaa !16
  %115 = icmp eq %"struct.std::_Rb_tree_node_base"* %114, %1
  br i1 %115, label %286, label %116

116:                                              ; preds = %111
  %117 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* nonnull %1) #22
  %118 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %117, i64 1
  %119 = bitcast %"struct.std::_Rb_tree_node_base"* %118 to %"struct.std::pair"*
  %120 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %118, i64 0, i32 0
  %121 = load i32, i32* %120, align 4, !tbaa !17
  %122 = icmp slt i32 %121, %99
  br i1 %122, label %134, label %123

123:                                              ; preds = %116
  %124 = icmp slt i32 %99, %121
  br i1 %124, label %125, label %128

125:                                              ; preds = %123
  %126 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1
  %127 = load i32, i32* %126, align 4
  br label %141

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %119, i64 0, i32 1
  %130 = load i32, i32* %129, align 4, !tbaa !20
  %131 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1
  %132 = load i32, i32* %131, align 4, !tbaa !20
  %133 = icmp slt i32 %130, %132
  br i1 %133, label %134, label %141

134:                                              ; preds = %116, %128
  %135 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %117, i64 0, i32 3
  %136 = bitcast %"struct.std::_Rb_tree_node_base"** %135 to %"struct.std::_Rb_tree_node"**
  %137 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %136, align 8, !tbaa !42
  %138 = icmp eq %"struct.std::_Rb_tree_node"* %137, null
  %139 = select i1 %138, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %1
  %140 = select i1 %138, %"struct.std::_Rb_tree_node_base"* %117, %"struct.std::_Rb_tree_node_base"* %1
  br label %286

141:                                              ; preds = %125, %128
  %142 = phi i32 [ %127, %125 ], [ %132, %128 ]
  %143 = getelementptr inbounds i8, i8* %4, i64 16
  %144 = bitcast i8* %143 to %"struct.std::_Rb_tree_node"**
  %145 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %144, align 8, !tbaa !16
  %146 = icmp eq %"struct.std::_Rb_tree_node"* %145, null
  br i1 %146, label %176, label %147

147:                                              ; preds = %141, %170
  %148 = phi %"struct.std::_Rb_tree_node"* [ %171, %170 ], [ %145, %141 ]
  %149 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %148, i64 0, i32 1
  %150 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %149 to i32*
  %151 = load i32, i32* %150, align 4, !tbaa !17
  %152 = icmp slt i32 %99, %151
  br i1 %152, label %160, label %153

153:                                              ; preds = %147
  %154 = icmp slt i32 %151, %99
  br i1 %154, label %165, label %155

155:                                              ; preds = %153
  %156 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %148, i64 0, i32 1, i32 0, i64 4
  %157 = bitcast i8* %156 to i32*
  %158 = load i32, i32* %157, align 4, !tbaa !20
  %159 = icmp slt i32 %142, %158
  br i1 %159, label %160, label %165

160:                                              ; preds = %155, %147
  %161 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %148, i64 0, i32 0, i32 2
  %162 = bitcast %"struct.std::_Rb_tree_node_base"** %161 to %"struct.std::_Rb_tree_node"**
  %163 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %162, align 8, !tbaa !16
  %164 = icmp eq %"struct.std::_Rb_tree_node"* %163, null
  br i1 %164, label %174, label %170

165:                                              ; preds = %155, %153
  %166 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %148, i64 0, i32 0, i32 3
  %167 = bitcast %"struct.std::_Rb_tree_node_base"** %166 to %"struct.std::_Rb_tree_node"**
  %168 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %167, align 8, !tbaa !16
  %169 = icmp eq %"struct.std::_Rb_tree_node"* %168, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %165, %160
  %171 = phi %"struct.std::_Rb_tree_node"* [ %163, %160 ], [ %168, %165 ]
  br label %147, !llvm.loop !50

172:                                              ; preds = %165
  %173 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %148, i64 0, i32 0
  br label %181

174:                                              ; preds = %160
  %175 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %148, i64 0, i32 0
  br label %176

176:                                              ; preds = %174, %141
  %177 = phi %"struct.std::_Rb_tree_node_base"* [ %175, %174 ], [ %6, %141 ]
  %178 = icmp eq %"struct.std::_Rb_tree_node_base"* %177, %114
  br i1 %178, label %286, label %179

179:                                              ; preds = %176
  %180 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %177) #22
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi %"struct.std::_Rb_tree_node_base"* [ %177, %179 ], [ %173, %172 ]
  %183 = phi %"struct.std::_Rb_tree_node_base"* [ %180, %179 ], [ %173, %172 ]
  %184 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %183, i64 1
  %185 = bitcast %"struct.std::_Rb_tree_node_base"* %184 to %"struct.std::pair"*
  %186 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %184, i64 0, i32 0
  %187 = load i32, i32* %186, align 4, !tbaa !17
  %188 = icmp slt i32 %187, %99
  br i1 %188, label %195, label %189

189:                                              ; preds = %181
  %190 = icmp slt i32 %99, %187
  br i1 %190, label %286, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %185, i64 0, i32 1
  %193 = load i32, i32* %192, align 4, !tbaa !20
  %194 = icmp slt i32 %193, %142
  br i1 %194, label %195, label %286

195:                                              ; preds = %191, %181
  br label %286

196:                                              ; preds = %105
  %197 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i64 0, i32 1
  %198 = load i32, i32* %197, align 4, !tbaa !20
  %199 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1
  %200 = load i32, i32* %199, align 4, !tbaa !20
  %201 = icmp slt i32 %198, %200
  br i1 %201, label %202, label %286

202:                                              ; preds = %103, %196
  %203 = getelementptr inbounds i8, i8* %4, i64 32
  %204 = bitcast i8* %203 to %"struct.std::_Rb_tree_node_base"**
  %205 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %204, align 8, !tbaa !16
  %206 = icmp eq %"struct.std::_Rb_tree_node_base"* %205, %1
  br i1 %206, label %286, label %207

207:                                              ; preds = %202
  %208 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* nonnull %1) #22
  %209 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %208, i64 1
  %210 = bitcast %"struct.std::_Rb_tree_node_base"* %209 to %"struct.std::pair"*
  %211 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %209, i64 0, i32 0
  %212 = load i32, i32* %211, align 4, !tbaa !17
  %213 = icmp slt i32 %99, %212
  br i1 %213, label %222, label %214

214:                                              ; preds = %207
  %215 = icmp slt i32 %212, %99
  %216 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %2, i64 0, i32 1
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %229, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %210, i64 0, i32 1
  %220 = load i32, i32* %219, align 4, !tbaa !20
  %221 = icmp slt i32 %217, %220
  br i1 %221, label %222, label %229

222:                                              ; preds = %207, %218
  %223 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %1, i64 0, i32 3
  %224 = bitcast %"struct.std::_Rb_tree_node_base"** %223 to %"struct.std::_Rb_tree_node"**
  %225 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %224, align 8, !tbaa !42
  %226 = icmp eq %"struct.std::_Rb_tree_node"* %225, null
  %227 = select i1 %226, %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"* %208
  %228 = select i1 %226, %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"* %208
  br label %286

229:                                              ; preds = %214, %218
  %230 = getelementptr inbounds i8, i8* %4, i64 16
  %231 = bitcast i8* %230 to %"struct.std::_Rb_tree_node"**
  %232 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %231, align 8, !tbaa !16
  %233 = icmp eq %"struct.std::_Rb_tree_node"* %232, null
  br i1 %233, label %263, label %234

234:                                              ; preds = %229, %257
  %235 = phi %"struct.std::_Rb_tree_node"* [ %258, %257 ], [ %232, %229 ]
  %236 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %235, i64 0, i32 1
  %237 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %236 to i32*
  %238 = load i32, i32* %237, align 4, !tbaa !17
  %239 = icmp slt i32 %99, %238
  br i1 %239, label %247, label %240

240:                                              ; preds = %234
  %241 = icmp slt i32 %238, %99
  br i1 %241, label %252, label %242

242:                                              ; preds = %240
  %243 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %235, i64 0, i32 1, i32 0, i64 4
  %244 = bitcast i8* %243 to i32*
  %245 = load i32, i32* %244, align 4, !tbaa !20
  %246 = icmp slt i32 %217, %245
  br i1 %246, label %247, label %252

247:                                              ; preds = %242, %234
  %248 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %235, i64 0, i32 0, i32 2
  %249 = bitcast %"struct.std::_Rb_tree_node_base"** %248 to %"struct.std::_Rb_tree_node"**
  %250 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %249, align 8, !tbaa !16
  %251 = icmp eq %"struct.std::_Rb_tree_node"* %250, null
  br i1 %251, label %261, label %257

252:                                              ; preds = %242, %240
  %253 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %235, i64 0, i32 0, i32 3
  %254 = bitcast %"struct.std::_Rb_tree_node_base"** %253 to %"struct.std::_Rb_tree_node"**
  %255 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %254, align 8, !tbaa !16
  %256 = icmp eq %"struct.std::_Rb_tree_node"* %255, null
  br i1 %256, label %259, label %257

257:                                              ; preds = %252, %247
  %258 = phi %"struct.std::_Rb_tree_node"* [ %250, %247 ], [ %255, %252 ]
  br label %234, !llvm.loop !50

259:                                              ; preds = %252
  %260 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %235, i64 0, i32 0
  br label %271

261:                                              ; preds = %247
  %262 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %235, i64 0, i32 0
  br label %263

263:                                              ; preds = %261, %229
  %264 = phi %"struct.std::_Rb_tree_node_base"* [ %262, %261 ], [ %6, %229 ]
  %265 = getelementptr inbounds i8, i8* %4, i64 24
  %266 = bitcast i8* %265 to %"struct.std::_Rb_tree_node_base"**
  %267 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %266, align 8, !tbaa !51
  %268 = icmp eq %"struct.std::_Rb_tree_node_base"* %264, %267
  br i1 %268, label %286, label %269

269:                                              ; preds = %263
  %270 = tail call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %264) #22
  br label %271

271:                                              ; preds = %269, %259
  %272 = phi %"struct.std::_Rb_tree_node_base"* [ %264, %269 ], [ %260, %259 ]
  %273 = phi %"struct.std::_Rb_tree_node_base"* [ %270, %269 ], [ %260, %259 ]
  %274 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %273, i64 1
  %275 = bitcast %"struct.std::_Rb_tree_node_base"* %274 to %"struct.std::pair"*
  %276 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %274, i64 0, i32 0
  %277 = load i32, i32* %276, align 4, !tbaa !17
  %278 = icmp slt i32 %277, %99
  br i1 %278, label %285, label %279

279:                                              ; preds = %271
  %280 = icmp slt i32 %99, %277
  br i1 %280, label %286, label %281

281:                                              ; preds = %279
  %282 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %275, i64 0, i32 1
  %283 = load i32, i32* %282, align 4, !tbaa !20
  %284 = icmp slt i32 %283, %217
  br i1 %284, label %285, label %286

285:                                              ; preds = %281, %271
  br label %286

286:                                              ; preds = %285, %281, %279, %263, %195, %191, %189, %176, %94, %90, %88, %72, %222, %134, %16, %196, %202, %111, %29
  %287 = phi %"struct.std::_Rb_tree_node_base"* [ null, %29 ], [ %1, %111 ], [ null, %202 ], [ %1, %196 ], [ null, %16 ], [ %139, %134 ], [ %227, %222 ], [ null, %94 ], [ %82, %90 ], [ %82, %88 ], [ null, %72 ], [ null, %195 ], [ %183, %191 ], [ %183, %189 ], [ null, %176 ], [ null, %285 ], [ %273, %281 ], [ %273, %279 ], [ null, %263 ]
  %288 = phi %"struct.std::_Rb_tree_node_base"* [ %19, %29 ], [ %1, %111 ], [ %1, %202 ], [ null, %196 ], [ %19, %16 ], [ %140, %134 ], [ %228, %222 ], [ %81, %94 ], [ null, %90 ], [ null, %88 ], [ %73, %72 ], [ %182, %195 ], [ null, %191 ], [ null, %189 ], [ %114, %176 ], [ %272, %285 ], [ null, %281 ], [ null, %279 ], [ %264, %263 ]
  %289 = insertvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } undef, %"struct.std::_Rb_tree_node_base"* %287, 0
  %290 = insertvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %289, %"struct.std::_Rb_tree_node_base"* %288, 1
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %290
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #16

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) local_unnamed_addr #16

; Function Attrs: nounwind
declare dso_local void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_SimpleTreeCounting.cpp() #7 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #18
  store i32 0, i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0), align 8, !tbaa !52
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1), align 8, !tbaa !3
  store i8* bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to i8*), i8** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2) to i8**), align 8, !tbaa !51
  store i8* bitcast (i32* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0) to i8*), i8** bitcast (%"struct.std::_Rb_tree_node_base"** getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 0, i32 3) to i8**), align 8, !tbaa !53
  store i64 0, i64* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 1, i32 1), align 8, !tbaa !49
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::map"*)* @_ZNSt3mapISt4pairIiiEP1TSt4lessIS1_ESaIS0_IKS1_S3_EEED2Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::map", %"class.std::map"* @Map, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i8* nonnull @__dso_handle) #18
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #7 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { noinline noreturn nounwind }
attributes #15 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind }
attributes #19 = { builtin allocsize(0) }
attributes #20 = { allocsize(0) }
attributes #21 = { noreturn }
attributes #22 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project.git d7b669b3a30345cfcdb2fde2af6f48aa4b94845d)"}
!3 = !{!4, !9, i64 8}
!4 = !{!"_ZTSSt15_Rb_tree_header", !5, i64 0, !10, i64 32}
!5 = !{!"_ZTSSt18_Rb_tree_node_base", !6, i64 0, !9, i64 8, !9, i64 16, !9, i64 24}
!6 = !{!"_ZTSSt14_Rb_tree_color", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"any pointer", !7, i64 0}
!10 = !{!"long", !7, i64 0}
!11 = !{!12, !12, i64 0}
!12 = !{!"long long", !7, i64 0}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.mustprogress"}
!15 = distinct !{!15, !14}
!16 = !{!9, !9, i64 0}
!17 = !{!18, !19, i64 0}
!18 = !{!"_ZTSSt4pairIiiE", !19, i64 0, !19, i64 4}
!19 = !{!"int", !7, i64 0}
!20 = !{!18, !19, i64 4}
!21 = distinct !{!21, !14}
!22 = distinct !{!22, !14}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZSt16forward_as_tupleIJSt4pairIiiEEESt5tupleIJDpOT_EES5_: argument 0"}
!25 = distinct !{!25, !"_ZSt16forward_as_tupleIJSt4pairIiiEEESt5tupleIJDpOT_EES5_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZSt16forward_as_tupleIJSt4pairIiiEEESt5tupleIJDpOT_EES5_: argument 0"}
!28 = distinct !{!28, !"_ZSt16forward_as_tupleIJSt4pairIiiEEESt5tupleIJDpOT_EES5_"}
!29 = !{!30, !9, i64 24}
!30 = !{!"_ZTS1T", !31, i64 0, !7, i64 8, !9, i64 24, !9, i64 32, !19, i64 40, !19, i64 44}
!31 = !{!"bool", !7, i64 0}
!32 = !{!30, !9, i64 32}
!33 = !{!30, !31, i64 0}
!34 = !{!30, !19, i64 44}
!35 = !{!30, !19, i64 40}
!36 = !{i8 0, i8 2}
!37 = distinct !{!37, !14}
!38 = distinct !{!38, !14}
!39 = !{!19, !19, i64 0}
!40 = distinct !{!40, !14}
!41 = distinct !{!41, !14}
!42 = !{!5, !9, i64 24}
!43 = !{!5, !9, i64 16}
!44 = distinct !{!44, !14}
!45 = !{!46, !9, i64 0}
!46 = !{!"_ZTSSt10_Head_baseILm0EOSt4pairIiiELb0EE", !9, i64 0}
!47 = !{!48, !9, i64 8}
!48 = !{!"_ZTSSt4pairIKS_IiiEP1TE", !18, i64 0, !9, i64 8}
!49 = !{!4, !10, i64 32}
!50 = distinct !{!50, !14}
!51 = !{!4, !9, i64 16}
!52 = !{!4, !6, i64 0}
!53 = !{!4, !9, i64 24}
