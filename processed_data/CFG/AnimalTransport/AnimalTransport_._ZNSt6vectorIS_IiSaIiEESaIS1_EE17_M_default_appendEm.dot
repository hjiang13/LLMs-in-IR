digraph "CFG for '_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm' function" {
	label="CFG for '_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm' function";

	Node0x564907f4c3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%2:\l  %3 = icmp eq i64 %1, 0\l  br i1 %3, label %75, label %4\l|{<s0>T|<s1>F}}"];
	Node0x564907f4c3c0:s0 -> Node0x564907f4c410;
	Node0x564907f4c3c0:s1 -> Node0x564907f4c460;
	Node0x564907f4c460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%4:\l4:                                                \l  %5 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 1\l  %6 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** %5, align 8,\l... !tbaa !3\l  %7 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 0\l  %8 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** %7, align 8,\l... !tbaa !8\l  %9 = ptrtoint %\"class.std::vector.0\"* %6 to i64\l  %10 = ptrtoint %\"class.std::vector.0\"* %8 to i64\l  %11 = sub i64 %9, %10\l  %12 = sdiv exact i64 %11, 24\l  %13 = getelementptr inbounds %\"class.std::vector\", %\"class.std::vector\"* %0,\l... i64 0, i32 0, i32 0, i32 0, i32 2\l  %14 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** %13, align 8,\l... !tbaa !9\l  %15 = ptrtoint %\"class.std::vector.0\"* %14 to i64\l  %16 = sub i64 %15, %9\l  %17 = sdiv exact i64 %16, 24\l  %18 = icmp ult i64 %12, 384307168202282326\l  tail call void @llvm.assume(i1 %18)\l  %19 = sub nuw nsw i64 384307168202282325, %12\l  %20 = icmp ule i64 %17, %19\l  tail call void @llvm.assume(i1 %20)\l  %21 = icmp ult i64 %17, %1\l  br i1 %21, label %26, label %22\l|{<s0>T|<s1>F}}"];
	Node0x564907f4c460:s0 -> Node0x564907f4f6d0;
	Node0x564907f4c460:s1 -> Node0x564907f4f720;
	Node0x564907f4f720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%22:\l22:                                               \l  %23 = bitcast %\"class.std::vector.0\"* %6 to i8*\l  %24 = mul nuw i64 %1, 24\l  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 %24, i1\l... false)\l  %25 = getelementptr %\"class.std::vector.0\", %\"class.std::vector.0\"* %6, i64\l... %1\l  store %\"class.std::vector.0\"* %25, %\"class.std::vector.0\"** %5, align 8,\l... !tbaa !3\l  br label %75\l}"];
	Node0x564907f4f720 -> Node0x564907f4c410;
	Node0x564907f4f6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%26:\l26:                                               \l  %27 = icmp ult i64 %19, %1\l  br i1 %27, label %28, label %29\l|{<s0>T|<s1>F}}"];
	Node0x564907f4f6d0:s0 -> Node0x564907f4fd60;
	Node0x564907f4f6d0:s1 -> Node0x564907f4fdb0;
	Node0x564907f4fd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%28:\l28:                                               \l  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds\l... ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)) #16\l  unreachable\l}"];
	Node0x564907f4fdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%29:\l29:                                               \l  %30 = icmp ult i64 %12, %1\l  %31 = select i1 %30, i64 %1, i64 %12\l  %32 = add i64 %31, %12\l  %33 = icmp ult i64 %32, %12\l  %34 = icmp ugt i64 %32, 384307168202282325\l  %35 = or i1 %33, %34\l  %36 = select i1 %35, i64 384307168202282325, i64 %32\l  %37 = icmp eq i64 %36, 0\l  br i1 %37, label %44, label %38\l|{<s0>T|<s1>F}}"];
	Node0x564907f4fdb0:s0 -> Node0x564907f50580;
	Node0x564907f4fdb0:s1 -> Node0x564907f505d0;
	Node0x564907f505d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%38:\l38:                                               \l  %39 = mul nuw nsw i64 %36, 24\l  %40 = tail call noalias nonnull i8* @_Znwm(i64 %39) #17\l  %41 = bitcast i8* %40 to %\"class.std::vector.0\"*\l  %42 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** %7, align 8,\l... !tbaa !8\l  %43 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** %5, align 8,\l... !tbaa !3\l  br label %44\l}"];
	Node0x564907f505d0 -> Node0x564907f50580;
	Node0x564907f50580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%44:\l44:                                               \l  %45 = phi %\"class.std::vector.0\"* [ %43, %38 ], [ %6, %29 ]\l  %46 = phi %\"class.std::vector.0\"* [ %42, %38 ], [ %8, %29 ]\l  %47 = phi %\"class.std::vector.0\"* [ %41, %38 ], [ null, %29 ]\l  %48 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %47, i64 %12\l  %49 = bitcast %\"class.std::vector.0\"* %48 to i8*\l  %50 = mul nuw i64 %1, 24\l  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 %50, i1\l... false)\l  %51 = icmp eq %\"class.std::vector.0\"* %46, %45\l  br i1 %51, label %67, label %52\l|{<s0>T|<s1>F}}"];
	Node0x564907f50580:s0 -> Node0x564907f50ec0;
	Node0x564907f50580:s1 -> Node0x564907f50f10;
	Node0x564907f50f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi %\"class.std::vector.0\"* [ %63, %52 ], [ %47, %44 ]\l  %54 = phi %\"class.std::vector.0\"* [ %62, %52 ], [ %46, %44 ]\l  %55 = bitcast %\"class.std::vector.0\"* %54 to \<2 x i32*\>*\l  %56 = load \<2 x i32*\>, \<2 x i32*\>* %55, align 8, !tbaa !10\l  %57 = bitcast %\"class.std::vector.0\"* %53 to \<2 x i32*\>*\l  store \<2 x i32*\> %56, \<2 x i32*\>* %57, align 8, !tbaa !10\l  %58 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %53, i64 0, i32 0, i32 0, i32 0, i32 2\l  %59 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %54, i64 0, i32 0, i32 0, i32 0, i32 2\l  %60 = load i32*, i32** %59, align 8, !tbaa !11\l  store i32* %60, i32** %58, align 8, !tbaa !11\l  %61 = bitcast %\"class.std::vector.0\"* %54 to i8*\l  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(24) %61, i8 0, i64 24, i1 false) #18\l  %62 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %54, i64 1\l  %63 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %53, i64 1\l  %64 = icmp eq %\"class.std::vector.0\"* %62, %45\l  br i1 %64, label %65, label %52, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x564907f50f10:s0 -> Node0x564907f52090;
	Node0x564907f50f10:s1 -> Node0x564907f50f10;
	Node0x564907f52090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%65:\l65:                                               \l  %66 = load %\"class.std::vector.0\"*, %\"class.std::vector.0\"** %7, align 8,\l... !tbaa !8\l  br label %67\l}"];
	Node0x564907f52090 -> Node0x564907f50ec0;
	Node0x564907f50ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%67:\l67:                                               \l  %68 = phi %\"class.std::vector.0\"* [ %66, %65 ], [ %45, %44 ]\l  %69 = icmp eq %\"class.std::vector.0\"* %68, null\l  br i1 %69, label %72, label %70\l|{<s0>T|<s1>F}}"];
	Node0x564907f50ec0:s0 -> Node0x564907f52470;
	Node0x564907f50ec0:s1 -> Node0x564907f524c0;
	Node0x564907f524c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%70:\l70:                                               \l  %71 = bitcast %\"class.std::vector.0\"* %68 to i8*\l  tail call void @_ZdlPv(i8* nonnull %71) #18\l  br label %72\l}"];
	Node0x564907f524c0 -> Node0x564907f52470;
	Node0x564907f52470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%72:\l72:                                               \l  store %\"class.std::vector.0\"* %47, %\"class.std::vector.0\"** %7, align 8,\l... !tbaa !8\l  %73 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %48, i64 %1\l  store %\"class.std::vector.0\"* %73, %\"class.std::vector.0\"** %5, align 8,\l... !tbaa !3\l  %74 = getelementptr inbounds %\"class.std::vector.0\", %\"class.std::vector.0\"*\l... %47, i64 %36\l  store %\"class.std::vector.0\"* %74, %\"class.std::vector.0\"** %13, align 8,\l... !tbaa !9\l  br label %75\l}"];
	Node0x564907f52470 -> Node0x564907f4c410;
	Node0x564907f4c410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%75:\l75:                                               \l  ret void\l}"];
}
